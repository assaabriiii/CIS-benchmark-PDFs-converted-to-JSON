{
    "custom_item_1": {
        "description": "2.2 Ensure 'Protect RE' Firewall Filter includes explicit terms for all Management Services",
        "info": "The Firewall Filter used to protect the Junos Device should include explicit terms for all Management, Automation and Monitoring Services used\n\nRationale:\n\nJunos supports a wide range of Management, Monitoring and Automation Services, making it an extremely flexible and adaptable platform. However, as with any computer system, the more services that are offered and the more hosts to which they are available, the wider attack surface is offered to a potential attacker.\n\nBecause Management Services provide users the ability to remotely configure, monitor or otherwise control the Junos Device, it is important to restrict access to just trusted hosts for each individual service.\n\nExamples of Junos Management Services include (but are not limited to):\n\nTelnet (which should not be used, as described elsewhere)\n\nSSH (a secure alternative to Telnet)\n\nJWeb GUI (a web based interface over HTTP or HTTPS)\n\nSNMP (Simple Network Management Protocol, typically used for monitoring)\n\nNETCONF (an XML-RPC based automation standard)\n\ngRPC (a Remote Procedure Call based automation interface)\n\nREST API (an HTTP/S based automation interface)\n\nDMI (Device Management Interface - used by Network Management Systems, including Junos Space)\n\nUnused services should ideally not be running at all - for example, if you do not use the JWeb GUI to manage your device, the service should be disabled under the [edit system services] configuration hierarchy as described elsewhere in this Benchmark.\n\nService's which are in use to manage your network should be appropriately secured using recommendations elsewhere in this Benchmark and have access restricted to trusted hosts for that service, using explicit terms in the 'Protect RE' Firewall Filter discussed in Recommendation 2.1 Ensure 'Protect RE' Firewall Filter is set for inbound traffic to the Routing Engine.\n\nA full discussion of Firewall Filter design and evaluation is beyond the scope of this Benchmark, but is covered in more detail in Chapter 4 of the Juniper DayOne book Hardening Junos Devices 2nd Edition, available for free from the Juniper DayOne Tech Libary.\n\nImpact:\n\nFirewall Filters should be carefully tested before implementation on production systems as incorrect configuration may prevent normal services functioning.\n\nIt is strongly recommended that changes to Firewall Filters are applied using commit confirmed so that changes will be automatically rolled back should they prevent the administrator from connecting to the Junos Device.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "A full discussion of Firewall Filters is beyond the scope of this Benchmark.\nIt is important to ensure that Firewall Filters include terms to match and accept all of your required Routing Protocols, Management Services and any other services used on your Junos Device. As noted elsewhere, it is strongly recommended that changes to Firewall Filters applied to the Loopback interface always be applied using commit confirmed so that the change will be automatically rolled back should the administrator lose connection after committing the change.\nTo create a IPv4 firewall filter enter the following command from the [edit firewall] hierarchy.\n\n[edit firewall]\nuser@host#edit family inet\n[edit firewall family inet]\nuser@host#edit filter[edit firewall family inet filter]\nuser@host#edit term[edit firewall family inet filterterm]\nuser@host#set fromuser@host#set thenAn IPv6 firewall filter, if required, can be configured under the family inet6 from the same hierarchy.\nOnce a suitable filter has been configured, it must be applied to the Loopback interface, using the following command from the [edit] hierarchy:\n\n[edit]\nuser@host#set interface lo0 unit 0 family inet filter inputIf additional Loopback Interface Units are configured (in other Routing Instances), the filter should also be applied to these.\nIf IPv6 filters are also required, the same command is used but applying to family inet6.\nTo configure the CIS-Example-IPv4 shown previously in the Audit Procedure, we opted to first configure a prefix-list each for our management-hosts and snmp-servers using the following commands from the [edit policy-options] heirachy:\n\n[edit policy-options]\nmwhite@SRX1# set prefix-list management-hosts 172.16.10.0/24\nmwhite@SRX1# set prefix-list management-hosts 192.168.17.0/24\nmwhite@SRX1# set prefix-list snmp-servers apply-path 'snmp community <*> clients <*>'\n\nThe management-hosts prefix-list is a manual list of IP subnets which can be used in multiple policies or terms. If we add or remote IPs on the list, it will cause all of the terms to be updated, rather than having to manually update our management hosts in multiple locations.\nThe snmp-servers prefix-list used an apply-path to return all configured SNMP Clients (the Network Management Servers (NMS) which will be permitted to poll this Junos Device using Simple Network Management Protocol) from elsewhere in the configuration. The same technique can be used to create a list of all configured NTP Servers, BGP Peers and so on. Lists created using an apply-path will automatically update when the source does, so if we add a new SNMP Client, the prefix-list updated automatically.\nWe then created an IPv4 firewall filter from the [edit firewall] hierarchy:\n\n[edit firewall]\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetSSH from source-prefix-list management-hosts\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetSSH from destination-port ssh\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetSSH then count SSH-Allowed\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetSSH then log\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetSSH then syslog\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetSSH then accept\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptHTTPS from source-prefix-list management-hosts\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptHTTPS from destination-port https\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptHTTPS then count HTTPS-Allowed\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptHTTPS then log\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptHTTPS then syslog\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptHTTPS then accept\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptSNMP from source-prefix-list snmp-servers\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptSNMP from destination-port snmp\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptSNMP then count SNMP-Poll-Allowed\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptSNMP then accept\n\nThe first two terms AcceptSSH and AcceptHTTPS accept SSH and HTTPS traffic respectively from any host listed in the the management-hosts prefix-list. Traffic matching these terms is also logged and separate counters incremented each time the term is hit.\nTerm 3, AcceptSNMP accepts SNMP Polling from SNMP Clients (SNMP Servers) which were automatically added to the snmp-servers prefix-list. As polling could be frequent, no logging is used, but a counter is incremented.\nThe filter can now be applied to the Loopback interface, using the following command from the [edit interfaces] hierarchy:\n\n[edit interfaces]\nmwhite@SRX1# set unit 0 family inet filter input CIS-Example-IPv4\n\nNote - The example filter above not complete and may not be suitable for all environments - all other traffic to the Junos Device will be discarded.\nYour filters should include terms for all of the Management, Monitoring and Automation services, as well as any Routing Protocols or other services such as IPSEC or BFD in use in your network.\n\nDefault Value:\n\nNo firewall filters are configured by default.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-53|CM-7b.,800-53|SC-7(12),800-53r5|CM-7b.,800-53r5|SC-7(12),CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CN-L3|8.1.10.6(j),CSCv7|9,CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|CM-7a.,ITSG-33|SC-7(12),LEVEL|2M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13b,NIAv2|SS13d,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS26,PCI-DSSv3.2.1|1.4,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|1.5.1,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.3,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set firewall .+"
    },
    "custom_item_2": {
        "description": "2.3 Ensure 'Protect RE' Firewall filter includes Rate-Limiting for Management Services terms",
        "info": "Policers should be applied to Management Services\n\nRationale:\n\nJunos supports a wide range of Management, Monitoring and Automation Services, making it an extremely flexible and adaptable platform. However, as with any computer system, the more services that are offered and the more hosts to which they are available, the wider attack surface is offered to a potential attacker.\n\nAn attacker, or a misconfigured or failing management server, might flood a service on the Junos device with excessive traffic in a Denial of Service (or DoS) attack; resulting in increased load and potentially even a failure of the service or targeted device.\n\nTo prevent this Rate-limiting can be applied to the Firewall Filter Terms already configured for Management Services in Recommendation 2.1 - Ensure 'Protect RE' Firewall Filter includes explicit terms for all Management Services by configuring a policer as appropriate for the service.\n\nIn some environments, it may also be appropriate to configure policers for Routing Protocols or other Services, although this is less common practice and can lead to unstable network conditions without careful design and testing.\n\nA full discussion of how Rate-limiting is configured and implemented in Junos, and across different specific chipsets and platforms, is beyond the scope of this Benchmark. The Junos DayOne books Deploying Basic QoS and Hardening Junos Devices, 2nd Edition are available for Free from the Juniper website and provide excellent coverage of QoS/CoS techniques and the application of Rate-limiting to Firewall Filters respectively.\n\nImpact:\n\nFirewall Filters should be carefully tested before implementation on production systems as incorrect configuration may prevent normal services functioning.\n\nIt is strongly recommended that changes to Firewall Filters are applied using commit confirmed so that changes will be automatically rolled back should they prevent the administrator from connecting to the Junos Device.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "A full discussion of Firewall Filters is beyond the scope of this Benchmark.\nIt is important to ensure that Firewall Filters include terms to match and accept all of your required Routing Protocols, Management Services and any other services used on your Junos Device. As noted elsewhere, it is strongly recommended that changes to Firewall Filters applied to the Loopback interface always be applied using commit confirmed so that the change will be automatically rolled back should the administrator lose connection after committing the change.\nIn this example we will add Rate-Limiting to the Management Services terms configured in Recommendation 2.2 Ensure 'Protect RE' Firewall Filter includes explicit terms for all Management Services Draft using the following commands from the [edit firewall] hierarchy:\nFirst we need to create the two 'policer' definitions, which can be re-used in multiple terms of filters.\n\n[edit firewall]\nmwhite@SRX1# set policer limit-10m if-exceeding bandwidth-limit 10m\nmwhite@SRX1# set policer limit-10m if-exceeding burst-size-limit 625k\nmwhite@SRX1# set policer limit-10m then discard\nmwhite@SRX1# set policer limit-1m if-exceeding bandwidth-limit 1m\nmwhite@SRX1# set policer limit-1m if-exceeding burst-size-limit 15k\nmwhite@SRX1# set policer limit-1m then discard\n\nThese policers set a bandwidth-limit of 10Mb/s and 1Mb/s respectively, with an appropriate burst-size set on each proportional to the configured limit to allow bursts to briefly exceed the limit and smooth the impact of the policer on the service.\nThe limit-10m policer is then applied to both the AcceptSSH and AcceptHTTPS terms in the CIS-Example-IPv4 configured previously. The policer applies separately for each term, so SSH and HTTPS can receive 10Mb/s of traffic each, not a combined 10Mb/s between them.\n\n[edit firewall]\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptSSH then policer limit-10m\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptHTTPS then policer limit-10m\n\nFinally, we apply the lower 'limit-1m' 1Mb/s policer to the existing AcceptSNMP term:\n\n[edit firewall]\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptSNMP then policer limit-1m\n\nIf it is not already, the filter can now be applied to the Loopback interface, using the following command from the [edit interfaces] hierarchy:\n\n[edit interfaces]\nmwhite@SRX1# set unit 0 family inet filter input CIS-Example-IPv4\n\nNote - The example filter above not complete and may not be suitable for all environments - all other traffic to the Junos Device will be discarded.\nYour filters should include terms for all of the Management, Monitoring and Automation services, as well as any Routing Protocols or other services such as IPSEC or BFD in use in your network.\n\nDefault Value:\n\nNo firewall filters are configured by default.",
        "reference": "800-171|3.13.1,800-53|SC-7(12),800-53r5|SC-7(12),CN-L3|8.1.10.6(j),CSCv6|9,CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|2M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.2.1|1.4,PCI-DSSv4.0|1.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set firewall .+"
    },
    "custom_item_3": {
        "description": "2.4 Ensure 'Protect RE' Firewall Filter includes explicit terms for all Protocols",
        "info": "Routing and Switching Protocol traffic should be filtered\n\nRationale:\n\nJunos devices support a vast range of Routing Protocols to enable flexible services to be deployed. However, as with any computer system, the more services that are offered and the more hosts to which they are available, the wider attack surface is offered to a potential attacker.\n\nIn addition, an attacker may seek to connect to Routing Protocols in an attempt to gain knowledge of the network, re-route traffic to perform Man in the Middle (MITM) attacks or disrupt the network to perform a Denial of Service (DoS) attack.\n\nLimiting the devices able to connect to these sensitive protocols, on a per protocol basis, greatly enhances the security of the device. These protocols might include (but are not limited to):\n\nOSPF\n\nIS-IS\n\nBGP\n\nRIP\n\nA full discussion of Firewall Filter design and evaluation is beyond the scope of this Benchmark, but is covered in more detail in Chapter 4 of the Juniper DayOne book Hardening Junos Devices 2nd Edition, available for free from the Juniper DayOne Tech Libary.\n\nImpact:\n\nFirewall Filters should be carefully tested before implementation on production systems as incorrect configuration may prevent normal services functioning.\n\nIt is strongly recommended that changes to Firewall Filters are applied using commit confirmed so that changes will be automatically rolled back should they prevent the administrator from connecting to the Junos Device.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "A full discussion of Firewall Filters is beyond the scope of this Benchmark.\nIt is important to ensure that Firewall Filters include terms to match and accept all of your required Routing Protocols, Management Services and any other services used on your Junos Device. As noted elsewhere, it is strongly recommended that changes to Firewall Filters applied to the Loopback interface always be applied using commit confirmed so that the change will be automatically rolled back should the administrator lose connection after committing the change.\nTo create a IPv4 firewall filter enter the following command from the [edit firewall] hierarchy.\n\n[edit firewall]\nuser@host#edit family inet\n[edit firewall family inet]\nuser@host#edit filter[edit firewall family inet filter]\nuser@host#edit term[edit firewall family inet filterterm]\nuser@host#set fromuser@host#set thenAn IPv6 firewall filter, if required, can be configured under the family inet6 from the same hierarchy.\nOnce a suitable filter has been configured, it must be applied to the Loopback interface, using the following command from the [edit] hierarchy:\n\n[edit]\nuser@host#set interface lo0 unit 0 family inet filter inputIf additional Loopback Interface Units are configured (in other Routing Instances), the filter should also be applied to these.\nIf IPv6 filters are also required, the same command is used but applying to family inet6.\nIn the example below, we add a new term AcceptBGP to the CIS-Example-IPv4 shown previously in the Audit Procedure. We opted to first configure a prefix-list each for our bgp-neighbors using the following command from the [edit policy-options] hierarchy:\n\n[edit policy-options]\nmwhite@SRX1# set prefix-list bgp-neighbors apply-path 'protocols bgp group <*> neighbor <*>'\n\nThe bgp-neighbors prefix-list used an apply-path to return all configured BGP Neighbors configured for any group under the [edit protocols bgp] configuration. The same technique can be used to create a list of all configured NTP Servers, SNMP Servers and so on. Lists created using an apply-path will automatically update when the source configuration does, so if we add a new BGP Neighbor, the prefix-list is updated automatically.\nNOTE - If you are running protocols in multiple Routing Instances, Logical Systems or similar features, you may need to adjust your prefix-list and apply-path to reflect these additional locations.\nWe can then add a new term to the existing CIS-Example-IPv4 firewall filter with the following commands from the [edit firewall] hierarchy:\n\n[edit firewall]\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetBGPfrom source-prefix-list bgp-neighbors\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetBGP from protocol tcp\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetBGP from destination-port bgp\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AccpetBGP then count BGP-Allowed\nmwhite@SRX1# set family inet filter CIS-Example-IPv4 term AcceptBGP then accept\n\nThis filter matches traffic coming from any configured BGP Neighbor to TCP Port 179 and accepts it, incrementing a named counter BGP-Allowed, which helps us with troubleshooting and monitoring.\nIf it is not already, the filter can now be applied to the Loopback interface, using the following command from the [edit interfaces] hierarchy:\n\n[edit interfaces]\nmwhite@SRX1# set unit 0 family inet filter input CIS-Example-IPv4\n\nNote - The example filter above not complete and may not be suitable for all environments - all other traffic to the Junos Device will be discarded.\nYour filters should include terms for all of the Management, Monitoring and Automation services, as well as any Routing Protocols or other services such as IPSEC or BFD in use in your network.\n\nDefault Value:\n\nNo firewall filters are configured by default.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-53|CM-7b.,800-53|SC-7(12),800-53r5|CM-7b.,800-53r5|SC-7(12),CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CN-L3|8.1.10.6(j),CSCv7|9,CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|CM-7a.,ITSG-33|SC-7(12),LEVEL|2M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13b,NIAv2|SS13d,NIAv2|SS14a,NIAv2|SS14c,NIAv2|SS26,PCI-DSSv3.2.1|1.4,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|1.5.1,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.3,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set firewall .+"
    },
    "custom_item_4": {
        "description": "2.5 Ensure firewall filters contain explicit deny and log term",
        "info": "Flood Attack protection should be included in the 'Protect RE' Filter\n\nRationale:\n\nAs with any computer system connected to a network, an attacker may attempt to overwhelm the resources of a Junos device by flooding it with unwanted traffic, consuming resources and potentially resulting in a Denial of Service (or DoS) Attack.\n\nFiltering traffic sources and the available services using a 'Protect RE' filter as discussed elsewhere in this section helps to limit the scope for an attack, but flood attacks using TCP SYN packets, ICMP or other protocols may still be possible.\n\nTo prevent this Rate-limiting can be applied to the Firewall Filter by configuring a policer to new terms matching the potential attack traffic.\n\nA full discussion of how Rate-limiting is configured and implemented in Junos, and across different specific chipsets and platforms, is beyond the scope of this Benchmark. The Junos DayOne books Deploying Basic QoS and Hardening Junos Devices, 2nd Edition are available for Free from the Juniper website and provide excellent coverage of QoS/CoS techniques and the application of Rate-limiting to Firewall Filters respectively.\n\nImpact:\n\nFirewall Filters should be carefully tested before implementation on production systems as incorrect configuration may prevent normal services functioning.\n\nIt is strongly recommended that changes to Firewall Filters are applied using commit confirmed so that changes will be automatically rolled back should they prevent the administrator from connecting to the Junos Device.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "A full discussion of Firewall Filters is beyond the scope of this Benchmark.\nIt is important to ensure that Firewall Filters include terms to match and accept all of your required Routing Protocols, Management Services and any other services used on your Junos Device. As noted elsewhere, it is strongly recommended that changes to Firewall Filters applied to the Loopback interface always be applied using commit confirmed so that the change will be automatically rolled back should the administrator lose connection after committing the change.\nIn this example, we will add the new Flood Protection terms seen in the audit procedure to our existing Firewall Filter from Recommendation 2.3 Ensure 'Protect RE' Firewall filter includes Rate-Limiting for Management Services terms using the following commands from the [edit firewall] hierachy:\nFirst we need to create an additional 'policer' definition, which can be re-used in multiple terms of filters.\n\n[edit firewall]\nmwhite@SRX1# set if-exceeding bandwidth-limit 100k\nmwhite@SRX1# set if-exceeding burst-size-limit 15k\nmwhite@SRX1# set then discard\n\nThis new policer enforces a bandwidth-limit of 100kb/s, with a burst-size proportional to the configured limit to allow bursts to briefly exceed the limit and smooth the impact of the policer on the service.\nThe new limit-100k policer is used in the new Limit-SYNFlood term, while the other new terms re-use the limit-1m and limit-10m configured previously. A policer applies separately for each term, so SSH, HTTPS and new terms re-using these policers can receive 10Mb/s of traffic each, not a combined 10Mb/s between them.\n\n[edit firewall]\nmwhite@SRX1# set term Limit-SYNFlood from source-prefix-list management-hosts\nmwhite@SRX1# set term Limit-SYNFlood from protocol tcp\nmwhite@SRX1# set term Limit-SYNFlood from tcp-flags '(syn & !ack) | fin | rst'\nmwhite@SRX1# set term Limit-SYNFlood then policer limit-100k\nmwhite@SRX1# set term AcceptICMP from icmp-type echo-request\nmwhite@SRX1# set term AcceptICMP from icmp-type echo-reply\nmwhite@SRX1# set term AcceptICMP from icmp-type unreachable\nmwhite@SRX1# set term AcceptICMP from icmp-type time-exceeded\nmwhite@SRX1# set term AcceptICMP then policer limit-1m\nmwhite@SRX1# set term AcceptICMP then accept\nmwhite@SRX1# set term AcceptTCP-Established from source-port ssh\nmwhite@SRX1# set term AcceptTCP-Established from tcp-established\nmwhite@SRX1# set term AcceptTCP-Established then policer limit-10m\nmwhite@SRX1# set term AcceptTCP-Established then accept\nmwhite@SRX1# set term AcceptTraceroute from protocol udp\nmwhite@SRX1# set term AcceptTraceroute from destination-port 33434-33523\nmwhite@SRX1# set term AcceptTraceroute then policer limit-1m\nmwhite@SRX1# set term AcceptTraceroute then accept\n\nBecause the Limit-SYNFlood term needs to be executed before any TCP Services like SSH, HTTPS or BGP, we will move the term ahead of the AcceptSSH term configured previously:\n\n[edit firewall]\nmwhite@SRX1# insert family inet filter CIS-Example-IPv4 term Limit-SYNFlood before term AcceptSSH\n\nIf it is not already, the filter can now be applied to the Loopback interface, using the following command from the [edit interfaces] hierarchy:\n\n[edit interfaces]\nmwhite@SRX1# set unit 0 family inet filter input CIS-Example-IPv4\n\nNote - The example filter above not complete and may not be suitable for all environments - all other traffic to the Junos Device will be discarded.\nYour filters should include terms for all of the Management, Monitoring and Automation services, as well as any Routing Protocols or other services such as IPSEC or BFD in use in your network.\n\nDefault Value:\n\nNo firewall filters are configured by default.",
        "reference": "800-171|3.13.1,800-53|SC-7(12),800-53r5|SC-7(12),CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|2M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.2.1|1.4,PCI-DSSv4.0|1.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set firewall .+ (discard|syslog|log)"
    },
    "custom_item_5": {
        "description": "2.6 Ensure firewall filters contain explicit deny and log term",
        "info": "Filters should include a final Deny and Log term.\n\nRationale:\n\nFirewall filters are built up of one or more terms, which are evaluated in order until either one is matched (at which point the terms then action is taken) or the final term has been evaluated, at which point the default action is to discard the packet.\n\nIt is important to log packets which are denied by the firewall filter, these may indicate an attempted attack or could suggest a problem in the network or with the firewall filter itself.\n\nA term should be added to the end of the each firewall filter which logs the packet header information and blocks the packet. The discard method is used to block the packet silently, with no message sent back to the source, denying the attacker information and limiting resource usage on the router.\n\nImpact:\n\nFirewall Filters should be carefully tested before implementation on production systems as incorrect configuration may prevent normal services functioning.\n\nIt is strongly recommended that changes to Firewall Filters are applied using commit confirmed so that changes will be automatically rolled back should they prevent the administrator from connecting to the Junos Device.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "To create a firewall filter term enter the following command from the [edit firewall familyfilter] hierarchy.\n\n[edit firewall family inet filter]\nuser@host#set termthen discard\nuser@host#set termthen syslog\nuser@host#set termthen log\n\nDefault Value:\n\nNo firewall filters are configured by default.",
        "reference": "800-171|3.13.1,800-53|SC-7(12),800-53r5|SC-7(12),CN-L3|8.1.10.6(j),CSCv7|9.4,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|2M,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.2.1|1.4,PCI-DSSv4.0|1.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set firewall .+"
    },
    "custom_item_6": {
        "description": "2.7 Ensure internal sources are blocked on external networks",
        "info": "Deny traffic with an internal source or reserved IP address from external source.\n\nRationale:\n\nAn attacker may attempt to bypass security controls and Intrusion Detection Systems (IDS) by using the source address of a trusted (generally internal) host, a technique known as spoofing. Packets arriving on external networks should never have a source address from your internal network ranges, especially where the internal networks use RFC1918 private address space or invalid addresses.\n\nAny traffic with an internal source arriving on an external interface is certain to be an attack and should be blocked.\n\nA Firewall Filter should be applied to all external network interfaces and include a term to deny internal address ranges.\n\nThe discard method is used to block the packet silently, with no message sent back to the source. This traffic should also be logged to the local routing engine and SYSLOG, allowing attacks to be detected and record kept.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "To create a firewall filter term enter the following command from the [edit firewall familyfilter] hierarchy.\n\n[edit firewall family inet filter]\nuser@host#edit term[edit firewall family inet filterterm]\nuser@host#set from source-address 127.0.0.0/8\nuser@host#set from source-address 10.0.0.0/8\nuser@host#set from source-address 0.0.0.0/32\nuser@host#set from source-address 172.16.0.0/12\nuser@host#set from source-address 192.168.0.0/16\nuser@host#set from source-address 192.0.2.0/24\nuser@host#set from source-address 169.254.0.0/16\nuser@host#set from source-address 198.18.0.0/15\nuser@host#set from source-address 198.51.100.0/24\nuser@host#set from source-address 203.0.113.0/24\nuser@host#set from source-address 224.0.0.0/8\nuser@host#set from source-address 255.255.255.255/32\nuser@host#set from source-address\nuser@host#set then discard\nuser@host#set then syslog\nuser@host#set then log\n\nNOTE - At least one further term must be included in this firewall filter to allow legitimate traffic.\n\nDefault Value:\n\nNo firewall filters are configured by default.\n\nReferences:\n\nCisco IOS Benchmark Version 2.2, Requirement 2.3.1.1, Center for Internet Security\n\n[Firewall Filter Overview, JUNOS Software Policy Framework Configuration Guide, Juniper Networks](http://www.juniper.net/techpubs/software/junos/junos94/swconfig-policy/firewall-filter-overview.html)",
        "reference": "800-171|3.13.1,800-171|3.14.6,800-171|3.14.7,800-53|SC-7(11),800-53|SI-4,800-53r5|SC-7(11),800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CN-L3|8.1.10.6(j),CSCv7|12.2,CSCv7|12.3,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.IP-8,CSF|PR.PT-4,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(11),ITSG-33|SI-4,LEVEL|2M,NESA|M1.2.2,NESA|T4.5.4,NIAv2|GS7c,PCI-DSSv3.2.1|1.3.1,PCI-DSSv3.2.1|1.3.2,PCI-DSSv3.2.1|1.3.3,PCI-DSSv3.2.1|1.3.5,PCI-DSSv4.0|1.3.1,PCI-DSSv4.0|1.4.2,PCI-DSSv4.0|1.4.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,TBA-FIISB|31.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set firewall .+"
    },
    "custom_item_7": {
        "description": "3.5 Ensure proxy-arp is disabled",
        "info": "Do not use Proxy ARP.\n\nRationale:\n\nAddress Resolution Protocol (ARP) provides resolution between IP and MAC Addresses (or other Network and Link Layer addresses on none IP networks) within a Layer 2 network.\n\nProxy ARP is a service where a device connected to one network (in this case the JUNOS router) answers ARP Requests which are addressed to a host on another network, replying with its own MAC Address and forwarding the traffic on to the intended host.\n\nSometimes used for extending broadcast domains across WAN links, in most cases Proxy ARP on enterprise networks is used to enable communication for hosts with mis-configured subnet masks, a situation which should no longer be a common problem.\n\nProxy ARP effectively breaks the LAN Security Perimeter, extending a network across multiple Layer 2 segments. Using Proxy ARP can also allow other security controls such as PVLAN to be bypassed.",
        "solution": "To disable Proxy ARP enter the following command from the [edit interfacesunit] hierarchy:\n\n[edit interfacesunit]\nuser@host#delete proxy-arp\n\nDefault Value:\n\nProxy ARP is disabled by default on most JUNOS routers.",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSCv7|12,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|2A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set interfaces .+",
        "not_expect": "proxy-arp"
    },
    "custom_item_8": {
        "description": "3.8 Ensure Loopback interface address is set",
        "info": "Configure a Loopback address.\n\nRationale:\n\nWhen a router needs to initiate connections to remote hosts, for example for SYSLOG or NTP, it will use the nearest interface for the packets source address. This can cause issues due to the possible variation in source, potentially causing packets to be denied by intervening firewalls or handled incorrectly by the receiving host.\n\nTo prevent these problems the router should be configured with a Loopback interface and any services should be bound to this address.",
        "solution": "To create a loopback interface enter the following command from the [edit interfaces] hierarchy:\n\n[edit interfaces]\nuser@host#set lo0 unit 0 family inet addressDefault Value:\n\nNo Loopback Address is configured by default.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set interfaces .+",
        "expect": "set interfaces lo[0-9]+ .+ inet address .+"
    },
    "custom_item_9": {
        "description": "3.10 Ensure inbound firewall filter is set for Loopback interface",
        "info": "A Firewall Filter should be applied to lo0.\n\nRationale:\n\nJUNOS routers can provide a wide range of services to the network and, as with any computer system, the more services that are offered and the more hosts they are available to, the wider attack surface is offered to a potential attacker.\n\nTo protect the router from attack a Firewall Filter should be applied to all inbound traffic to the Routing Engine which limits the hosts able to connect to the router and the services on which they are permitted to connect.\n\nIf applied to the lo0 interface the filter will apply to all traffic sent to the Routing Engine rather than to traffic traversing the router. Where IPv6 traffic is also handled by the router a firewall filter will also need to be applied for family inet 6.\n\nSee the Firewall section for details of how to configure Firewall Filters.\n\nNOTE : The Firewall Filter applies to ALL traffic sent to the Routing Engine, including traffic sent to the routers interface addresses. Ensure your firewall filter allows all of the Routing, Management and other protocols which are required for normal operation prior to applying the filter.",
        "solution": "To apply a firewall filter to the loopback interface enter the following command from the [edit interfaces] hierarchy:\n\n[edit interfaces]\nuser@host#set lo0 unit 0 family inet filter inputDefault Value:\n\nNo firewall filters are configured by default.",
        "reference": "800-171|3.4.1,800-53|CM-8,800-53r5|CM-8,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|9.1,CSF|DE.CM-7,CSF|ID.AM-1,CSF|ID.AM-2,CSF|PR.DS-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-8,LEVEL|2A,NESA|T1.2.1,NESA|T1.2.2",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set interfaces lo[0-9]+",
        "expect": "set interfaces lo[0-9]+ .+ inet filter input .+"
    },
    "custom_item_10": {
        "description": "Check for dialer interfaces",
        "regex": "set interfaces dl[0-9]",
        "number_of_lines": "^([1-9]|[1-9][0-9]+)$"
    },
    "custom_item_11": {
        "description": "Check for no 3G/LTE dialer interfaces",
        "regex": ".*backup-options interface dl.*",
        "number_of_lines": "^0$"
    },
    "custom_item_12": {
        "description": "3.1.3 Forbid Dial in Access",
        "info": "Dial in access should not be used on sensitive routers.\n\nRationale:\n\nSome JUNOS routers support the use of a dial in modem connection for Telnet/SSH administration of the router from a remote connection over the telephone network.\n\nThis can provide a useful out of band management channel, allowing access to a customer router at a remote site when the primary circuit has failed for example, but also creates a new route for attack, allowing a malicious user to bypass firewalls and other defenses.\n\nEven when the phone number for the modem is kept secret, attackers may still discover it through war dialing, possibly narrowing targets by researching the number ranges used by your organization.\n\nFor sensitive routers, such as those in a PCI DSS Cardholder Data Environment, the protective measures available for dial in access are insufficient and no dial in access should be used. If not required for other services the modem should be physically removed from the router.",
        "solution": "If you have configured a dialer interface to accept incoming calls, you should disable it using the following commands from the [edit interfaces] hierarchy (where n indicates the interface number);\n\n[edit interfaces]\nuser@host#delete interface dl",
        "reference": "800-171|3.5.3,800-171|3.14.6,800-171|3.14.7,800-53|IA-2(1),800-53|SI-4,800-53r5|IA-2(1),800-53r5|SI-4,CN-L3|7.1.2.7(b),CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSCv7|11.5,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.AC-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(b),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set interfaces dl[0-9]",
        "number_of_lines": "0"
    },
    "custom_item_13": {
        "description": "3.2.1 Ensure VRRP authentication-key is set",
        "info": "VRRP authentication should be used where other security mechanisms are not in place.\n\nRationale:\n\nVRRP provides resilience for a routers interfaces, allowing another router to act as backup in the event of a partial or complete failure of the primary router and increasing the availability network resources as well as resilience to DoS attack.\n\nRouters configured to share a Virtual IP Address using VRRP communicate their status to their peer on a regular basis using a multicast packet, allowing a Master for the VIP to be elected. It is the Master that deals with packets destined for the VIP address.\n\nIf no authentication is used an attacker could potentially disrupt the VRRP Master Election process, causing neither router to handle packets destined for the VIP and resulting a DoS.\n\nAn authentication key can be configured for all VRRP Groups used on the device to help protect against this.",
        "solution": "If you have configured VRRP on one or more interfaces you should configure authentication using the following commands from the [edit interfacesunitfamily inet address] hierarchy;\n\n[edit interfaces 'unitfamily inet address']\nuser@host#set vrrp-groupauthentication-keyDefault Value:\n\nVRRP is not configured by default",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set interfaces .+ vrrp-group .+ authentication-key",
        "number_of_lines": "^[0-9]+$"
    },
    "custom_item_14": {
        "description": "3.2.2 Ensure authentication-type is set to MD5",
        "info": "Any VRRP authentication should use MD5 HMAC\n\nRationale:\n\nVRRP provides resilience for a routers interfaces, allowing another router to act as backup in the event of a partial or complete failure of the primary router and increasing the availability network resources as well as resilience to DoS attack.\n\nRouters configured to share a Virtual IP Address using VRRP communicate their status to their peer on a regular basis using a multicast packet, allowing a Master for the VIP to be elected. It is the Master that deals with packets destined for the VIP address.\n\nIf no authentication is used an attacker could potentially disrupt the VRRP Master Election process, causing neither router to handle packets destined for the VIP and resulting a DoS.\n\nVRRP supports simple authentication and MD5. Simple authentication transmits the password in plain text so should not be used. MD5 authentication uses a Keyed Hash Authentication Message Code (HMAC), a techniques which uses a key combined with a cryptographic hash algorithm to verify the authenticity and integrity of the received packet.",
        "solution": "If you have configured VRRP on one or more interfaces you can configure authentication using MD5-HMAC with the following commands from the [edit interfacesunitfamily inet address] hierarchy;\n\n[edit interfacesunitfamily inet address]\nuser@host#set vrrp-groupauthentication-type md5\n\nDefault Value:\n\nVRRP authentication is not enabled by default",
        "reference": "800-171|3.5.2,800-53|IA-5,800-53|IA-5(1),800-53r5|IA-5,800-53r5|IA-5(1),CSCv7|16.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "hierarchy": "detail",
        "match": "Authentication type: md5",
        "number_of_lines": "^([1-9]|[1-9][0-9]+)$",
        "property": "vrrp"
    },
    "custom_item_15": {
        "description": "Check for BGP",
        "expect": "set protocols bgp .+"
    },
    "custom_item_16": {
        "description": "4.1.2 Ensure peer authentication is set to IPSEC SA",
        "info": "BGP Neighbors should be strongly authenticated.\n\nRationale:\n\nWhere it is deployed, BGP routing is vital for normal operation of an organization's network infrastructure. Correct route information is required for routers to correctly direct traffic through the network.\n\nAn attacker posing as one of the target routers BGP neighbors may inject incorrect information into the route table resulting in DoS attack or loss of confidential data through a Man in the Middle attack. As well as MD5 hash based authentication, JUNOS routers can also authenticate BGP neighbors using IPSEC Security Associations. This allows more robust authentication mechanisms to be used and is recommended as an alternative to MD5 HMAC in high security environments.\n\nAlthough M, T and MX series devices normally require a Services PIC or DPC installed to use IPSEC tunnels, no additional hardware is required for IPSEC SA based authentication of BGP neighbors. As with MD5 HMAC, IPSEC SA based Authentication can be configured Globally, at the Group Level or at the Neighbor Level, with more specific settings overriding less specific settings.\n\nBecause IPSEC SA Authentication is intended for use in high security environments, it is recommended that different parameters are configured for each neighbor, particularly where eBGP is used.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "To setup IPSEC SA based authentication, first configure a Security Association at the [edit security ipsec] hierarchy;\n\n[edit security ipsec]\nedit security-associationset descriptionset mode transport\nset manual direction bidirectional protocol ah\nset manual direction bidirectional authentication algorithmset manual direction bidirectional authentication keyThe SA must be bi-directional and must be configured with the same parameters on all neighbors reachable on the intended interface. Note that only Authenticated Header is configured in this example which provides mutual authentication but does not encrypt BGP protocol messages in transit.\nTo configure IPSEC SA based authentication globally for BGP, issue the following command from the [edit protocols bgp] hierarchy;\n\n[edit protocols bgp]\nuser@host#set ipsec-sa\n\nTo configure IPSEC SA based authentication for a group, issue the following command from the [edit protocols bgp group] hierarchy;\n\n[edit protocols bgp group]\nuser@host#set ipsec-saTo configure IPSEC SA based authentication for a neighbor, issue the following command from the [edit protocols bgp groupneighbor] hierarchy;\n\n[edit protocols bgp groupneighbor]\nuser@host#set ipsec-saDefault Value:\n\nNo BGP routing is configured by default.",
        "reference": "800-171|3.5.2,800-53|IA-5,800-53|IA-5(1),800-53r5|IA-5,800-53r5|IA-5(1),CSCv7|16.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set protocols bgp .+ ipsec-sa"
    },
    "custom_item_17": {
        "description": "4.1.6 Ensure RPKI is set for Origin Validation of EBGP peers",
        "info": "Use RPKI for Origin Validation on Public BGP Peering\n\nRationale:\n\nIn addition to filtering Bogon and Maritan routes JUNOS routers peering with eBGP neighbors should also apply Ingress Filtering to prevent the router processing bad updates sent from the neighbor router, either maliciously or by accident.\n\nTraditional Ingress Filtering, outlined in Recommendation 4.1.5 Ensure Ingress Filtering is set for EBGP peers, uses manually administrated Routing Policy configured on individual routers to validate prefixes being received from BGP Neighbours in Peer Autonomous Systems (ASs) based on Internet Routing Registry (IRR) entries.\n\nThis technique is maintenance intensive and prone to errors, although semi automated tools do exist to help. It is also not readily enforceable on Transit Connections, where the router does not connect directly to the Origin AS, but instead receives their routes via a Transit Service Provider. The receiving AS has no option but to trust that their upstream provider/s are correctly implementing filtering, with no way to validate the routing information they receive independently.\n\nThis leaves BGP Routing prone to Hijack Attacks, with numerous incidents in recent years causing issues both with reachability for some prefixes/ASs and with theft of information, after traffic is re-routed to fake destinations.\n\nTo combat this the Resource Public Key Infrastructure (RPKI) framework was created to allow Public ASs to sign their Resources (IPv4 and IPv6 Prefixes they will originate) by creating a Route Origination Authorizations (ROA) Certificate, through their Regional Internet Registry (RIR) (AFRINIC, ARIN, APNIC, LACNIC or RIPE NCC).\n\nPublic ASs can perform Origin Validation on the routes received through BGP, whether from direct Peer networks or through a Transit Provider. The Junos Router does this by checking the route information it receives through BGP with a RPKI Validator Server (sometimes called an RPKI Cache Server) through the RPKI-RTR Protocol defined in RFC 8210. The RPKI Validator maintains a cache of ROAs distributed by the RIRs and returns a verdict to the Router, which may be either:\n\nValid - The AS, Prefix and Prefix Length all match a valid ROA\n\nInvalid - A matching ROA exists for the Prefix, but either the Origin AS or the Prefix Length does not match\n\nUnknown or Not Found - No matching ROA exists, most likely the Resource Owner has not created an RPKI with their RIR\n\nRouting Policy on the Junos device is configured to determine whether routes should be accepted based on results returned by the RPKI Validator. Most commonly Valid and Unknown/Not Found routes will be accepted and Invalid rejected, but this should be determined by the policy of each individual AS.\n\nA full discussion of RPKI is beyond the scope of this Benchmark, but is covered in detail in the Juniper TechLibary BGP Origin Validation Using Resource Public Key Infrastructure, available for free from the Juniper website.\n\nRIPE NCC, one of the RIRs, provide detailed instructions for installing several common RPKI Validators (including their own) in How to Install an RPKI Validator.\n\nImpact:\n\nIncorrect configuration of any Route Filtering may impact on reachability\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configuration and deployment of an RPKI Validator and a full discussion of all configuration options is beyond the scope of this Benchmark.\nTo configure an RPKI Validator Server, issue following commands from the [edit routing-options] configuration hierarchy:\n\n[edit routing-options]\nuser@host# set validation groupsessionportlocal-addressWhere:is a descriptive name chosen for the RPKI Serveris the IP address used on the RPKI Validator for the RPKI-RTR protocolis the port configured on RPKI Validator for the RPKI-RTR protocolis a Local Interface address that the Router should use as the source for RPKI-RTR sessions\n\n**Note ** - If multiple Logical Systems are configured, RPKI Validation will need to be configured separately for all LSYS being used for Public BGP Peering.\nNext create a Routing Policy to accept or reject routes based on the RPKI Validation Database, using the following commands for each term from the [edit policy-options] heirachy:\n\n[edit policy-options]\nuser@host# set policy-statementtermfrom protocol bgp\nuser@host# set policy-statementtermfrom validation-databaseuser@host# set policy-statementtermthen validation-stateuser@host# set policy-statementtermthenWhere:is a descriptive name for the Routing Policyis a descriptive name for the Termis the result returned by the RPKI Validatoris the RPKI State to be recorded locally for the route (normally the same as the RPKI Validator result)is a Routing Policy action such as to accept or reject the route\n\nThese steps can be repeated until all of your required terms and actions are configured.\nHere we create the rpki-validation Routing Policy given in the Audit Procedure example:\n\n[edit policy-options]\nuser@host# set policy-statement rpki-validation term valid from protocol bgp\nuser@host# set policy-statement rpki-validation term valid from validation-database valid\nuser@host# set policy-statement rpki-validation term valid then validation-state valid\nuser@host# set policy-statement rpki-validation term valid then accept\nuser@host# set policy-statement rpki-validation term invalid from protocol bgp\nuser@host# set policy-statement rpki-validation term invalid from validation-database invalid\nuser@host# set policy-statement rpki-validation term invalid then validation-state invalid\nuser@host# set policy-statement rpki-validation term invalid then reject\nuser@host# set policy-statement rpki-validation term unknown from protocol bgp\nuser@host# set policy-statement rpki-validation term unknown then validation-state unknown\nuser@host# set policy-statement rpki-validation term unknown then accept\n\nThe final term matches on all BGP Routes which do not return either valid or invalid from the RPKI Server, so does not require the additional match condition on the validation-database result.\nThe RPKI Routing Policy should now be applied to all BGP Neighbours or Groups used for Public BGP peering using the following commands from the [edit protocols bgp] configuration heirachy:\n\n[edit protocols bgp]\nuser@host# set groupimportOR\n\n[edit protocols bgp]\nuser@host# set neighborimportWhere:\n\nis the name of the BGP Group\n\nis the Routing Policy configured in the previous step\n\nis the IP Address of the individual neighbor to which policy will be applied\n\nNote - Other BGP Import policies may already be applied, it is important to ensure all policy is applied correctly and in the correct order to prevent disruption to the network.\n\nDefault Value:\n\nBGP Origin Validation is not configured by default",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-53|SC-7,800-53r5|SC-7,CN-L3|8.1.10.6(j),CSCv7|12,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|2M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "hierarchy": "routing-options validation"
    },
    "custom_item_18": {
        "description": "Check for IS-IS",
        "expect": "set protocols isis .+"
    },
    "custom_item_19": {
        "description": "4.2.2 Ensure IS-IS neighbor authentication is set to SHA1",
        "info": "IS-IS Neighbors should be authenticated with stronger SHA1 HMAC mechanism, where supported.\n\nRationale:\n\nWhere it is deployed, IS-IS routing is vital for normal operation of an organization's network infrastructure. Correct route information is required for routers to correctly direct traffic through the network. An attacker posing as one of the target routers IS-IS neighbors may inject incorrect information into the route table resulting in DoS attack or loss of confidential data through a Man in the Middle attack.\n\nOn Juniper routers (as well as routers from some other manufacturers such as Cisco or Brocade) it is possible to authenticate neighbors using an SHA1 digest of elements in PDU combined with a sequence number to protect against Replay attacks.\n\nSHA1 provides a stronger algorithm than the older MD5 standard, but is not so widely supported on none Juniper platforms so should only be deployed once you are certain that all of the devices with which IS-IS Adjacencies will be formed support SHA1-HMAC authentication.\n\nSHA1 authentication is configured differently than either Simple (which sends the password cleartext and should never be used) or MD5 authentication methods. Instead of configuring the key directly at the IS-IS protocol, area or interface level, support for SHA1 authentication is added via the Hitless Key Rollover extensions. This provides the added benefit of introducing mechanisms to coordinate regular changes to authentication keys and make changes to authentication settings without the need to reset IS-IS adjacencies.",
        "solution": "If you have deployed IS-IS in your network you should consider configuring Hitless Key Rollover with SHA1 authentication for all neighbors at each IS-IS Level configured.\nFirst a key-chain must be configured. The same key-chain may be used for multiple levels or separate key-chains used for each level (or even for individual interfaces where required). From the [edit security authentication-key-chains] hierarchy issue the following commands:\n\n[edit security authentication-key-chains]\nuser@host#set key-chainkeysecret ''\nuser@host#set key-chainkeystart-time ''\nuser@host#set key-chainkeyalgorithm hmac-sha-1\nuser@host#set key-chainkeyoptions isis-enhanced\n\nThe start-time must be provided for all keys and provides the mechanism for controlled key rollover. Keys with a start time in the future can be configured across all of the devices in advance, when the time is reached all of the devices will hitlessly rollover to the new keys without disruption to IS-IS Adjacencies.\nNext the key should be set for all Levels at which SHA1 HMAC authentication will be used. From the [edit protocols isis] hierarchy, issue the following command:\n\n[edit protocols isis]\nuser@host#set levelauthentication-key-chainWhere a different key is required for a specific area or interface, the key-chain used at the Level can be overridden on a per interface per level basis using the following command from the '[edit protocols isis]' hierarchy:\n\n[edit protocols isis]\nuser@host#set interfacelevelhello-authentication-key-chainNote - Only the setting of the authentication-key-chain on a per level basis is included in the audit procedure for scoring this recommendation, the per interface override is included as additional information only.\n\nDefault Value:\n\nNo IS-IS routing is configured by default.",
        "reference": "800-171|3.5.2,800-53|IA-5,800-53|IA-5(1),800-53r5|IA-5,800-53r5|IA-5(1),CSCv7|16.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set security authentication-key-chains key-chain .+ key .+ algorithm .+",
        "expect": "hmac-sha-1"
    },
    "custom_item_20": {
        "description": "Check for OSPF",
        "expect": "set protocols ospf .+"
    },
    "custom_item_21": {
        "description": "4.3.2 Ensure OSPF authentication is set to IPSEC SA with SHA",
        "info": "OSPF Neighbors should be strongly authenticated.\n\nRationale:\n\nWhere it is deployed, OSPF routing is vital for normal operation of an organization's network infrastructure. Correct route information is required for routers to correctly direct traffic through the network.\n\nAn attacker posing as one of the target routers OSPF neighbors may inject incorrect information into the route table resulting in DoS attack or loss of confidential data through a Man in the Middle attack.\n\nIn addition to MD5 hash based authentication, JUNOS routers can also authenticate OSPF neighbors using IPSEC Security Associations. This allows more robust authentication mechanisms to be used and is recommended as an alternative to MD5 HMAC in high security environments. Support for IPSEC based authentication with other vendors is not universal, so ensure all of your devices are able to support this method before proceeding.\n\nA Manual IPSEC Security Association is formed between neighbors, using Authenticated Header (IP Protocol 51) with the stronger HMAC-SHA1 or HMAC-SHA2 (SHA2 is not available on all platforms) methods to ensure that the updates were sent by trusted neighbors and were not changed in transit. Only AH is used to avoid the added overhead required to encrypt and decrypt the packets contents which ESP would entail. It is possible to use ESP in place of AH if encryption of routing information across an untrusted segment is required, but this can have a significant performance cost.\n\nIn 'dual stack' IPv4/IPv6 environments running both OSPFv2 for IPv4 routing and OSPFv3 for IPv6, it is common to use a single SA on a segment to provide authentication both protocols.\n\nNOTE - Although M, T and MX series devices normally require a Services PIC or DPC installed to provide IPSEC VPNs, no additional hardware is required for IPSEC SA based authentication of OSPF neighbors.",
        "solution": "To setup IPSEC SA based authentication, first configure a Security Association at the [edit security ipsec] hierarchy;\n\n[edit security ipsec]\nedit security-associationset descriptionset mode transport\nset manual direction bidirectional protocol ah\nset manual direction bidirectional algorithm hmac-sha1-96\nset manual direction bidirectional authentication keyThe SA must be bi-directional and must be configured with the same parameters on all neighbors reachable on the intended interface.\nNote that only Authenticated Header is configured in this example which provides mutual authentication but does not encrypt OSPF protocol messages in transit.\nNext configure IPSEC SA based authentication for one or more interfaces which OSPF will be run over from the [edit protocols ospf] hierarchy;\n\n[edit protocols ospf]\nuser@host#set areainterfaceipsec-saDefault Value:\n\nNo OSPF routing is configured by default.",
        "reference": "800-171|3.5.2,800-53|IA-5,800-53|IA-5(1),800-53r5|IA-5,800-53r5|IA-5(1),CSCv7|16.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set protocols ospf security ipsec security association .+",
        "not_expect": "md5"
    },
    "custom_item_22": {
        "description": "Check for BFD",
        "regex": ".*bfd-live.*",
        "expect": ".*bfd-live.*"
    },
    "custom_item_23": {
        "description": "4.6.1 Ensure BFD Authentication is Set",
        "info": "BFD Peers should be authenticated.\n\nRationale:\n\nBidirectional Forwarding Detection (BFD) is a Forwarding Plane feature which allows more rapid detection of a failed neighbor then can be achieved through a routing protocols' normal detection mechanisms, providing faster reconvergence.\n\nIf no authentication was used an attacker may replay or spoof BFD messages to destabilize a network and/or prevent proper reconvergence resulting in a Denial of Service. Several authentication mechanisms are supported for BFD ranging from plain text password, which should not be used, to meticulously keyed SHA1.\n\nThe latter provides the strongest hashing algorithm and best replay protection, with the sequence number being updated on each packet, and it is this mechanism that should be used in most cases.\n\nHowever, if None Stop Routing (NSR) features are required; meticulously keyed SHA1 or MD5 should not be used as the BFD Sessions using these algorithms may fail when switching to the Backup Routing Engine.\n\nBoth BFD peers must be configured with the same keys and method, otherwise the BFD link may be declared down resulting in a reconvergence. Because it is not possible to configure both ends of an existing BFD link simultaneously you may need to use Loose Authentication Checking as a transitional step by configuring the loose-check option.\n\nImpact:\n\nBFD Authentication must be configured to use the same Key and Algorithm on all neighbors/peers with which the session will be used. A mismatch will result in the BFD session failing and related routes being declared unreachable.\n\nBFD Authentication with meticulous-keyed-sha-1 and meticulous-keyed-md5 algorithms should not be used in conjunction with NSR and GRES. Fail over between Routing Engines will cause Authentication to fail.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If you have deployed BFD, authentication can be configured by issuing the following commands.\nFirst set the authentication algorithm and keychain from the appropriate [.* bfd-liveness-detection] hierarchy, in this example we are configuring BFD Authentication for OSPF Neighbors on Interface Ge-0/0/0.0:\n\n[edit protocols ospf interface ge-0/0/0.0 bfd-liveness-detection]\nuser@host#set authentication algorithmuser@host#set authentication key-chainWhere:is either keyed-md5, keyed-sha-1, meticulous-keyed-md5 or meticulous-keyed-sha-1, which is preferred but is not compatible with NSR and other failover options.is the name of a configured key-chain (see below).\n\nIf a Key Chain is not already defined, you should create one by issuing the following command at the [edit security authentication-key-chains] hierarchy:\n\n[edit security authentication-key-chains]\nuser@host#set key-chainkeysecretWhere:is the name of the key-chain already configured for the BFD sessionis the number to identify this key, used for key rolloveris the Shared Secret Key\n\nTheandmust be the same on all devices which will use the BFD session being configured.\nIf the BFD Session is already in use, setting Authentication on one side before the other will cause the BFD Session (and the associated routes or adjacencies) to be declared down resulting in loss of traffic. To aide in rollout of BFD Authentication, JUNOS Devices can operate in a 'Loos Authentication Check' mode, whereby they will send Authentication information, but will not reject unauthenticated messages.\nThis should be used in transition only and can be configured with the following command from the same [.* bfd-liveness-detection] hierarchy:\n\n[edit protocols ospf interface ge-0/0/0.0 bfd-liveness-detection]\nuser@host#set authentication loose-check\n\nBFD may be configured at a wide variety of configuration hierarchies, for different Protocols, Routing Instances or even for Static Routes. The bfd-liveness-detection hierarchy is the same at each level it is used, so the Remediation Process is the same and should be applied at each hierarchy indicated in the Audit Procedure.\n\nDefault Value:\n\nNo BFD is configured by default.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": ".*bfd-live.*authentication.*"
    },
    "custom_item_24": {
        "description": "4.6.2 Ensure BFD Authentication is Not Set to Loose-Check",
        "info": "BFD Peers should be authenticated.\n\nRationale:\n\nBidirectional Forwarding Detection (BFD) is a Forwarding Plane feature which allows more rapid detection of a failed neighbor then can be achieved through a routing protocols' normal detection mechanisms, providing faster reconvergence.\n\nIf no authentication was used an attacker may replay or spoof BFD messages to destabilize a network and/or prevent proper reconvergence resulting in a Denial of Service.\n\nJUNOS supports a Loose Authentication Check mechanism, which is intended for use when transitioning from unauthenticated BFD to authenticated BFD implementations or when changing Shared Secret Keys.\n\nWhen Loose Authentication Checking is enabled, the JUNOS Device will produce authenticated BFD packets, but will not check the authentication of packets it receives from its peer. When enabled the JUNOS Device is effectively as unprotected as when authentication is not configured at all.\n\nBFD Sessions should never be configured with the authentication loose-check option in a production network, with the exception of short transition periods while updating/replacing keys.\n\nImpact:\n\nBFD Authentication must be configured to use the same Key and Algorithm on all neighbors/peers with which the session will be used. A mismatch will result in the BFD session failing and related routes being declared unreachable.\n\nBFD Authentication with meticulous-keyed-sha-1 and meticulous-keyed-md5 algorithms should not be used in conjunction with NSR and GRES. Fail over between Routing Engines will cause Authentication to fail.",
        "solution": "If you have deployed BFD with Loose Authentication Checking, it can be disabled by issuing the appropriate [.* bfd-liveness-detection] hierarchy, in this example we are configuring BFD Authentication for BGP:\n\n[edit protocols bgp bfd-liveness-detection]\nuser@host# delete authentication loose-check\n\nBFD may be configured at a wide variety of configuration hierarchies, for different Protocols, Routing Instances or even for Static Routes. The bfd-liveness-detection hierarchy is the same at each level it is used, so the Remediation Process is the same and should be applied at each hierarchy indicated in the Audit Procedure.\n\nDefault Value:\n\nNo BFD is configured by default",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": ".*bfd-live.*authentication.*",
        "not_expect": "loose"
    },
    "custom_item_25": {
        "description": "Check for LDP",
        "expect": "set protocols ldp .+"
    },
    "custom_item_26": {
        "description": "4.7.2 Ensure authentication is set to AES-CMAC",
        "info": "LDP peers should be strongly authenticated.\n\nRationale:\n\nWhere it is deployed, LDP is vital for normal operation of an MPLS network. LDP is used to determine Label mapping and populate the routers Forwarding Information Base (FIB). An attacker posing as one of the target routers LDP peers may attempt to inject incorrect label information or exploit a vulnerability in the routers LDP implementation to cause an information disclosure or denial of service.\n\nOn Juniper routers (as well as routers from some other vendors) it is possible to authenticate LDP sessions using a Cipher-based Message Authentication Code method with the AES encryption algorithm.\n\nAES-128-CMAC-96 is significantly more robust than the MD5-HMAC method, which has traditionally been used for LDP session authentication, and should be used wherever both LSRs support it (such as in an all Juniper deployment).\n\nWhere support for AES-128-CMAC-96 is not available; SHA1-HMAC, while not as strong as the AES method, should be strongly preferred over MD5-HMAC which is considerably weaker.\n\nStrong LDP Session Authentication is configured on a per session-group basis, allowing you to easily support different algorithms with different groups if necessary.",
        "solution": "If you have deployed LDP in your network you should use strong authentication for all neighbors.\nBoth AES-CMAC and SHA1-HMAC authentication require a keychain to be configured on the device under the [edit security authentication-key-chains] hierarchy with at least one key which has a start time in the past.\n\n[edit security authentication-key-chains]\nuser@host#set key-chainkeystart-timeuser@host#set key-chainkeysecretThe chosen algorithm and keychain should then be configured for all session groups from the [edit protocols ldp] hierarchy:\n\n[edit protocols ldp]\nuser@host#set session-groupauthentication-algorithm aes-128-cmac-96\nuser@host#set session-groupauthentication-key-chainor for SHA1 :\n\n[edit protocols ldp]\nuser@host#set session-groupauthentication-algorithm hmac-sha-1-96\nuser@host#set session-groupauthentication-key-chainDefault Value:\n\nLDP is not configured by default.\n\nWhen LDP is configured with an authentication-key, MD5 is the default authentication-algorithm.",
        "reference": "800-171|3.5.2,800-53|IA-5,800-53|IA-5(1),800-53r5|IA-5,800-53r5|IA-5(1),CSCv7|16.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set protocols ldp session-group .+",
        "expect": "set protocols ldp session-group .+ authentication-algorithm (aes-128-cmac-96|hmac-sha-1-96)"
    },
    "custom_item_27": {
        "description": "Check for IPv6 configured on any interface",
        "regex": "set interfaces .+ inet6 address .+",
        "number_of_lines": "^([1-9]|[1-9][0-9])+$"
    },
    "custom_item_28": {
        "description": "4.9.1 Ensure Secure Neighbor Discovery is configured",
        "info": "NDP should be protected.\n\nRationale:\n\nOne of the primary functions of NDP is to resolve Network Layer (IP) addresses to Link Layer (eg Ethernet) addresses, a function performed in IPv4 by ARP. An attacker who has access to the broadcast segment may abuse NDP or ARP to trick hosts into sending the attacker traffic destined for someone else, a technique known as ARP Poisoning.\n\nTo protect IPv6 networks against this, and other attacks against NDP functions, Secure Neighbor Discovery (SEND) should be deployed where preventing access to the broadcast segment may not be possible or in sensitive environments with a requirement for increased protection.\n\nSupport for SEND was added to JUNOS in version 9.3. SEND utilizes public/private RSA key pairs to produce Cryptographically Generated Addresses (as defined in RFC3972), which ensures that the claimed source of an NDP message is the owner of the claimed address.",
        "solution": "If you have deployed IPv6 you can configure SEND by issuing the following commands from the [edit protocols neighbor-discovery] hierarchy: If you have not already done so, you will need to generate or install an RSA key pair, to generate a new pair enter the following command:\n\nuser@host>request pki generate-key-pairNext, set the security level to define how unsecure NDP messages should be handled. If only a subset of devices will be configured to use SEND, then use the default option. If all nodes on the segment require protection, which is recommended, use the secure-messages-only option:\n\n[edit protocols neighbor-discovery]\nuser@host#set secure security-level secure-messages-only\n\nFinally, specify the key pair and details you generated/installed earlier:\n\n[edit protocols neighbor-discovery]\nuser@host#set secure cryptographic-address key-pairuser@host#set secure cryptographic-address key-lengthFor more details on configuring Public/Private Key Pairs in JUNOS please refer to: Generating a Public-Private Key Pair, JUNOS Software Security Configuration Guide, Juniper Networks\n\nDefault Value:\n\nSEND is not configured by default.",
        "reference": "800-171|3.5.2,800-53|IA-5,800-53|IA-5(1),800-53r5|IA-5,800-53r5|IA-5(1),CSCv7|16.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set protocols neighbor-discovery secure cryptographic-address .+",
        "number_of_lines": "^2$"
    },
    "custom_item_29": {
        "description": "4.12.1 Ensure LLDP is Disabled if not Required",
        "info": "LLDP should be disabled when not required\n\nRationale:\n\nThe Link Layer Discovery Protocol (LLDP) is a vendor-neutral and widely supported standard used for network devices to advertise information about their capabilities, identity, software and management details to other network devices on the LAN. LLDP is specified in the IEEE 802.1AB-2005 standard.\n\nIt is broadly similar in purpose and application to the older, proprietary Cisco Discovery Protocol (CDP) which is still widely used in Cisco networks, but less widely in multivendor environments (and is not supported on Junos).\n\nDevices configured for LLDP advertise information on all chosen Ethernet interfaces by sending an Ethernet Frame containing an LLDPDU to a Multicast Address (several address options existing, including Unicast) which 802.1D compliant switches should not forward further. This information is specified in a sequence of Type-Length-Value (TLV) data structures, which may include:\n\nSystem hostname and description (system-name and system-description TLVs)\n\nPort details and description for the sending interface (mac-phy-config-status, port-description)\n\nVLAN name and description for the sending interface (vlan-name, port-vid)\n\nManagement IP address for the Junos device (management-address)\n\nDevice capabilities (such as Switch or Router) (system-capabilities, preformatted based on model)\n\nLAGP Link Aggregation information (link-aggregation)\n\nDevice Serial Number (jnpr-chassis-serial)\n\nFurther information and additional TLVs\n\nThis information can be extremely useful when documenting or troubleshooting a network, but is also extremely useful to a potential attacker, either directly connected to the device or having compromised a neighbouring device.\n\nTo reduce the information given to a potential attacker, in high security environments LLDP should be disabled where it is not absolutely required for normal operation. LLDP can either be disabled globally, or on a per interface basis (for example, leaving LLDP enabled on access ports where it may be used for PoE or VoIP applications, but disabling it on infrastructure links or connections to untrusted networks).\n\nImpact:\n\nLLDP is commonly used to support VoIP and devices such as Wireless APs or Access Control systems which make use of PoE for power - disabling LLDP or LLDP-MED for these interfaces may result in service disruption.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "To turn off LLDP globally for all interfaces, issue the following command from the [edit protocols] configuration hierarchy:\n\n[edit protocols]\nuser@host# set lldp disable\n\nSending of LLDPDUs will be disabled, while any LLDP related configuration will be retained (but ignored).\nAlternatively, you may wish to disable LLDP on a per-interface basis by issuing the following command from the [edit protocols] configuration hierarchy:\nTo disable LLDP for a specific interface, leaving LLDP enabled for all others:\n\n[edit protocols]\nuser@host# set lldp interfacedisable\n\nOr to disable LLDP for all interfaces and allow only for specific ports:\n\n[edit protocols]\nuser@host# delete lldp interface all\nuser@host# set lldp interfaceThis procedure should be repeated for all Routing Instances/Logical Systems where LLDP is configured but not required.\n\nDefault Value:\n\nLLDP is disabled by default",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set protocols lldp .+"
    },
    "custom_item_30": {
        "description": "4.12.2 Ensure LLDP-MED is Disabled if not Required",
        "info": "LLDP-MED should be disabled when not required\n\nRationale:\n\nThe Link Layer Discovery Protocol (LLDP) is a vendor-neutral and widely supported standard used for network devices to advertise information about their capabilities, identity, software and management details to other network devices on the LAN. LLDP is specified in the IEEE 802.1AB-2005 standard.\n\nLink Layer Discovery Protocol - Media Endpoint Discovery (LLDP-MED) is an extension of LLDP published by the Telecommunications Industry Association (TIA) in the ANSI/TIA-1057 standard. LLDP-MED is primarily used to enable Voice over IP (VoIP) services by adding additional Type-Length-Value (TLV) data structures to the existing LLDPDU Ethernet Frames sent by LLDP. This information may include:\n\nDetailed information about Power Supply Type, Source and Priority (in the ext-power-via-mdi TLV)\n\nThe physical location of the endpoint (configured via Emergency Location Identification Number (ELIN) or Geographic Location, in the location-id TLV)\n\nThe Network Policy (VLAN configuration, DiffServ code points, in the network-policy TLV).\n\nThis information may be vital to provision of VoIP or other Media services, or when documenting/troubleshooting the network; but is also extremely useful to a potential attacker, either directly connected to the device or having compromised a neighbouring device.\n\nTo reduce the information given to a potential attacker, in high security environments LLDP-MED should be disabled where it is not absolutely required for normal operation. Like LLDP, LLDP-MED can either be disabled globally, or on a per interface basis (for example, leaving LLDP-MED enabled on access ports where it may be used for PoE or VoIP applications, but disabling it on infrastructure links or connections to untrusted networks).\n\nLLDP-MED is not supported on all Junos device types, as it is primarily concerned with communication with VoIP Phones at the Access Layer. At present LLDP-MED is supported on:\n\nEX Series Access Switches (2200, 2300, 3300, 3400, 4200, 4300) (LLDP-MED enabled for all ports by default)\n\nBranch/Mid-Range and Virtual SRX Firewalls (SRX100-650, SRX1500, vSRX) (LLDP-MED disabled by default)\n\nNFX150 Network Services Platform (Virtual CPE) (defaults not clear)\n\nImpact:\n\nLLDP-MED is commonly used to support VoIP devices - disabling LLDP or LLDP-MED for these interfaces may result in service disruption.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "To turn off LLDP-MED globally for all interfaces, issue the following command from the [edit protocols] configuration hierarchy:\n\n[edit protocols]\nuser@host# set lldp-med interface all disable\n\nSending of LLDPDUs will be disabled, while any other LLDP-MED related configuration will be retained (but ignored).\nAlternatively, you may wish to disable LLDP on a per-interface basis by issuing the following command from the [edit protocols] configuration hierarchy:\nTo disable LLDP-MED for a specific interface, leaving LLDP-MED enabled for all others:\n\n[edit protocols]\nuser@host# set lldp-med interfacedisable\n\nOr to disable LLDP-MED for all interfaces and allow only for specific ports:\n\n[edit protocols]\nuser@host# set lldp-med interface all disable\nuser@host# set lldp-med interfaceThis procedure should be repeated for all Routing Instances/Logical Systems where LLDP-MED is configured but not required.\n\nDefault Value:\n\nLLDP-MED is enabled by default on EX Series switches and disabled by default on other supported platforms",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSCv7|9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set protocols lldp-med .+"
    },
    "custom_item_31": {
        "description": "Check for SNMP",
        "expect": "set snmp .+"
    },
    "custom_item_32": {
        "description": "5.5 Ensure SNMP Write Access is not set",
        "info": "Do not allow Read-Write SNMP access.\n\nRationale:\n\nSNMP can be used to read and write configuration information from a router using your Network Management Systems; however the inherently insecure design of the older SNMP V1, V2 and V2C standards, which do not use encryption to protect community strings, make their use for setting configuration an open invitation to an attacker.\n\nEven the more recent SNMPv3, which introduces encryption, authentication and message integrity checking, does not provide support for centralized authentication, account lockout or other basic security measures applied to other methods to access the router. This leaves the router vulnerable to brute force attack. The use of UDP as the transport mechanism in SNMP also makes spoofing the source of an SNMP request far simpler, easing brute force or flooding attacks.",
        "solution": "If you have deployed SNMP below Version 3 on your router with Read-Write access, delete the associated community using the following command under the [edit snmp] hierarchy;\n\n[edit snmp]\nuser@host#delete communityAlternatively you can set the communities authorization level to Read Only with the following command from the [edit snmp] hierarchy;\n\n[edit snmp]\nuser@host#set communityauthorization read-only\n\nIf you have deployed SNMP Version 3 on your router with Write access, delete the write view using the following command under the [edit snmp v3 vacm access] hierarchy;\n\n[edit snmp v3 vacm access]\nuser@host#delete groupdefault-context-prefix security-modelsecurity-levelwrite-view\n\nComplete the sections in <> with the details configured for your group/s. This command will leave any read or notify views for the group in place. If only a write-view is configured, the group can be deleted instead.\n\nDefault Value:\n\nNo SNMP communities are set by default on most platforms.",
        "reference": "800-171|3.1.1,800-171|3.13.8,800-53|AC-2,800-53|SC-8,800-53r5|AC-2,800-53r5|SC-8,CN-L3|7.1.3.2(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|4,CSCv7|14.4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|SC-8,ITSG-33|SC-8a.,LEVEL|2A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM28,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5j,NIAv2|NS29,NIAv2|SS14e,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set snmp .+",
        "not_expect": "set snmp .+ (read-write|write-view)"
    },
    "custom_item_33": {
        "description": "Check for SNMPv3",
        "expect": "set snmp v3 .+"
    },
    "custom_item_34": {
        "description": "5.6 Ensure AES128 is set for all SNMPv3 users",
        "info": "Do not allow plaintext SNMPv3 access.\n\nRationale:\n\nSNMPv3 provides much improved security over previous versions by offering options for Authentication and Encryption of messages.\n\nWhen configuring a user for SNMPv3 you have the option of using a range of encryption schemes, or no encryption at all, to protect messages in transit. The strongest scheme available is AES128 and this should be configured for all SNMPv3 'users' on all sensitive devices.",
        "solution": "For each SNMPv3 user created on your router add privacy options by issuing the following command from the [edit snmp v3 usm local-engine] hierarchy;\n\n[edit snmp v3 usm local-engine]\nuser@host#set userprivacy-aes128 privacy-passwordDefault Value:\n\nNo SNMP is configured by default on most platforms.",
        "reference": "800-171|3.13.8,800-53|SC-8,800-53r5|SC-8,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8,ITSG-33|SC-8a.,LEVEL|2A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set snmp v3 .+ user .+",
        "not_expect": "set snmp v3 .+ user .+ privacy-(3des|des|none) .+"
    },
    "custom_item_35": {
        "description": "5.7 Ensure SHA1 is set for SNMPv3 authentication",
        "info": "Do not allow unauthenticated SNMPv3 access.\n\nRationale:\n\nSNMPv3 provides much improved security over previous versions by offering options for Authentication and Encryption of messages. Authentication in SNMPv3 is performed using Keyed-Hash Message Authentication Code or HMAC. This technique uses a cryptographic hash function in combination with a secret key to authenticate and ensure the integrity of a given message.\n\nJUNOS supports the MD5 and SHA1 hash functions for use in SNMPv3 authentication. MD5 is an older protocol which has shown significant vulnerability in recent years, so the more recent and more trusted SHA1 should be used.",
        "solution": "For each SNMPv3 user created on your router add privacy options by issuing the following command from the [edit snmp v3 usm local-engine] hierarchy;\n\n[edit snmp v3 usm local-engine]\nuser@host#set userauthentication-sha authentication-passwordDefault Value:\n\nNo SNMP communities are set by default on most platforms.",
        "reference": "800-171|3.5.2,800-53|IA-5,800-53|IA-5(1),800-53r5|IA-5,800-53r5|IA-5(1),CSCv7|16.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set snmp v3 .+ user .+",
        "not_expect": "set snmp v3 .+ user .+ authentication-(md5|none) .+"
    },
    "custom_item_36": {
        "description": "Check for SNMP",
        "expect": "set snmp .+"
    },
    "custom_item_37": {
        "description": "5.9 Ensure SNMP is set to OOB management only",
        "info": "SNMP should only be configured on Out of Band management interfaces.\n\nRationale:\n\nBy default the SNMP service will listen for incoming connections on all interfaces which have an IP Address configured, exposing SNMP to users on all networks through which the router is reachable.\n\nIn higher security environments management services, such as SNMPv3, should be restricted such as to only be reachable through the Out of Band management port which is available on most JUNOS platforms.\n\nThe name of the Out of Band Management port varies considerably between platforms, typically:\n\nfxp[0-9] on most routing platforms and SRX firewalls\n\nme[0-9] on most EX and some QFX switches\n\nem[0-9] on some EX and QFX switches\n\njmgmt0 on NFX platforms",
        "solution": "To restrict SNMP to required interfaces issue the following command from the [edit snmp] hierarchy;\n\n[edit snmp]\nuser@host#set interfaceTo delete an existing interface from the list issue the following command from the [edit snmp] hierachy;\n\n[edit snmp]\nuser@host#delete interfaceDefault Value:\n\nBy default SNMP, when configured, is accessible over all configured interfaces.",
        "reference": "800-171|3.13.1,800-53|SC-7(15),800-53r5|SC-7(15),CN-L3|8.1.10.6(j),CSCv7|11.7,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(15),LEVEL|2A,NESA|T4.5.3,NIAv2|NS5c,NIAv2|NS6a,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set snmp interface .+",
        "expect": "set snmp interface (fxp|me|em|jmgt0|@SNMP_OOB_INTERFACE@)"
    },
    "custom_item_38": {
        "description": "6.7.2 Ensure Multiple External NTP Servers are set",
        "info": "At least 3 External NTP Servers should be set\n\nRationale:\n\nKeeping time settings consistent across a network is vital if log data is to be meaningful and usable in understanding faults and security incidents. Consistent time settings are also fundamental to the operation of some network protocols and services such as IPSec, PKI and 802.1x which may be critical to many networks.\n\nIn sensitive environments, to ensure that the time on your JUNOS devices is consistent with other devices in your network, at least three NTP Servers external to the device should be configured.\n\nAlthough NTP provides for a Peer to Peer type implementation, where individual time servers are not specified and methods such as broadcast and multicast are utilized to synchronize time between hosts, in almost all real world cases a Server / Client model should be used for network devices - even if multicast or broadcast methods are used for other types of hosts. Using specified time sources allows you to better secure, monitor and manage your NTP implementation; simplifying debugging and allowing tighter control of NTP traffic.\n\nIETF BCP 13 (Best Common Practice), suggests that 'Operators who are concerned with maintaining accurate time SHOULD use at least 4 independent, diverse sources of time. Four sources will provide sufficient backup in case one source goes down. If four sources are not available, operators MAY use fewer sources, subject to the risks outlined above.'\n\nOptions for NTP time sources may include Public NTP Servers, such as those provided by pool.ntp.org, Shared NTP Servers, such as those provided by many Internet Exchanges for use by members, or Private NTP Servers operated by your organisation for your own exclusive use and synchronised using MSF Radio, GPS or internal Crystal/Atomic Clocks.\n\nIt is Strongly Recommended that administrators of devices requiring Level 2 compliance consider the use of Private NTP Servers for some or all of the time sources within the NTP Architecture.\n\nUsing multiple NTP Servers, not only provides for a more reliable service, but also protects against 'Falsetickers' (compromised or untrustworthy time sources providing incorrect time). This is based on the rule of needing 2n+1 True clocks, where n is the number of true clocks.\n\nSo protection against 1 falseticker requires 4 upstream servers, against 2 falsetickers 5 upstream and 7 are needed to protect against 3 compromised sources. See SelectingOffsiteNTPServers at NTP.org for a more detailed discussion.\n\nImpact:\n\nIf time is not synchronised between devices, log messages cannot readily be correlated to allow administrators to understand events on the network. In addition, many services such as IPSEC, PKI or 802.1x which rely on Encryption may not function correctly if time and date settings are not properly maintained.",
        "solution": "Configure at least 3 External NTP Servers using the following commands under the [edit system] hierarchy;\n\n[edit system]\nuser@host#set ntp serverDefault Value:\n\nBy default Juniper routers do not have NTP servers configured and use locally managed time.",
        "reference": "800-171|3.3.7,800-53|AU-8,800-53r5|AU-8,CN-L3|8.1.4.3(b),CSCv6|6.1,CSCv7|6.1,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,LEVEL|2A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ntp server .+",
        "number_of_lines": "^([3-9]|[1-9][0-9]+)$"
    },
    "custom_item_39": {
        "description": "6.7.3 Ensure NTP Boot-Server is set",
        "info": "An NTP Boot-Server should be configured for the router to update its time on boot.\n\nRationale:\n\nWhen the router boots or when a new Routing Engine is installed its time may have drifted or be set beyond the maximum amount where periodic updates can return it to the correct time, resulting in the correct time never being set.\n\nTo prevent this situation; a Boot Server should be set from which the JUNOS device will obtain its time as it loads.\n\nBecause the ntpdate utility, which contacts the Boot Server, runs prior to many of the other core demons, such as rpd, the Boot Server should be reachable from the device's management interface (fxp0 on most routers, 'em0' or 'me0' on some other platforms) without any Routing Protocol learned routes or Tunnels being available.\n\nFor this reason, the Boot Server may often be a different NTP server to that used during normal operation, potentially just being the management interface of another router in the same management subnet.\n\nA Boot Server should be specified wherever possible, however, reachability of an NTP Server or another network device through Out of Band Management is not possible in all deployment scenarios; therefore this Recommendation is given at Level 2 as additional equipment or cost may be required for implementation.\n\nImpact:\n\nIf time is not synchronised between devices, log messages cannot readily be correlated to allow administrators to understand events on the network. In addition, many services such as IPSEC, PKI or 802.1x which rely on Encryption may not function correctly if time and date settings are not properly maintained.",
        "solution": "To configure an NTP Boot Server, enter the following command from the [edit system ntp] hierarchy;\n\n[edit system ntp]\nuser@host#set ntp boot-serverDefault Value:\n\nBy default Juniper routers do not have NTP servers configured and use locally managed time.",
        "reference": "800-171|3.3.7,800-53|AU-8,800-53r5|AU-8,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,LEVEL|2A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ntp .+",
        "expect": "set system ntp boot-server .+"
    },
    "custom_item_40": {
        "description": "6.7.5 Ensure Authentication Keys are used for all NTP Servers",
        "info": "Authentication keys should be set for NTP Servers\n\nRationale:\n\nHaving established the need for NTP, it is essential to ensure that the devices time is not manipulated by an attacker as this could allow DoS to services relying on accurate time as well as replay attacks and other malicious activity.\n\nNTP Version 3 introduced Authentication mechanisms for NTP messages using a Keyed Hash based Message Authentication Check (HMAC), where a hash of the message ensures both that the message is authentic and that it was not changed in transit. All JUNOS platforms support HMAC with NTP Versions 3 and 4 using MD5 and some platforms also support the more robust SHA1 and SHA2-256 algorithms.\n\nIt is strongly recommended that, as the MD5 and SHA1 algorithms are now considered deprecated, SHA2-256 based keys be used. In addition, to prevent compromise of one server leaking the keys for all NTP Servers, a different key should be used for each server. The use of SHA-256 and different keys per server are covered in separate Recommendations and not tested as part of the Audit Procedure for this Recommendation.\n\nNOTE - Both the keys and the algorithm must match on all NTP peers being configured.\n\nImpact:\n\nIf keys or algorithms do not match on NTP Servers and Client devices NTP will not be able to update and this could impact Logging, Authentication, Encryption/VPN or other services which rely on consistent time.",
        "solution": "Keys are configured on a key ring and identified by an ID number. To add a key enter the following command from the [edit system ntp] hierarchy;\n\n[edit system ntp]\nuser@host#set authentication-keytypevalueTheis an arbitrary 32-bit non-zero integer used to identify this key locally on the device. The may be set to MD5 (the default), SHA1 or SHA2-256 (with SHA1 and SHA2 only being supported on some devices).\nNext, for each server, configure the key to be used:\n\n[edit system ntp]\nuser@host#set server keyFinally configure the key as trusted so that the router will accept NTP traffic encrypted using it. This mechanism provides an easy method to retire keys in the event of compromise. Enter following command from the [edit system ntp] hierarchy;\n\n[edit system ntp]\nuser@host#set trusted-keyThewhich is trusted can be one key or several keys by enclosing the list in square brackets or repeating the command.\n\nDefault Value:\n\nBy default Juniper routers do not have NTP servers configured and use locally managed time.",
        "reference": "800-171|3.3.7,800-171|3.5.2,800-53|AU-8,800-53|IA-5,800-53|IA-5(1),800-53r5|AU-8,800-53r5|IA-5,800-53r5|IA-5(1),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv7|16.4,CSF|PR.AC-1,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(b),HIPAA|164.312(d),ITSG-33|AU-8,ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T3.6.2,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ntp server key .+",
        "number_of_lines": "^([2-9]|[1-9][0-9]+)$"
    },
    "custom_item_41": {
        "description": "6.7.6 Ensure Different Authentication Keys for each NTP Server",
        "info": "Different authentication keys should be set for each NTP Server\n\nRationale:\n\nHaving established the need for NTP, it is essential to ensure that the devices time is not manipulated by an attacker as this could allow DoS to services relying on accurate time as well as replay attacks and other malicious activity.\n\nNTP Version 3 introduced Authentication mechanisms for NTP messages using a Keyed Hash based Message Authentication Check (HMAC), where a hash of the message ensures both that the message is authentic and that it was not changed in transit. All JUNOS platforms support HMAC with NTP Versions 3 and 4 using MD5 and some platforms also support the more robust SHA1 and SHA2-256 algorithms.\n\nIn high security environments, prevent the compromise of a single server or key undermining your entire NTP infrastructure by using different keys for each NTP Server configured.\n\nThis is significant additional configuration, but does increase the difficulty for an attacker who would now need to compromise multiple keys or servers and also allows any compromise to be quickly responded to, with the affected server immediately removed from production and re-keyed while the network continues to use the remaining server/s.\n\nNOTE - Both the keys and the algorithm must match on all NTP peers being configured.\n\nImpact:\n\nIf keys or algorithms do not match on NTP Servers and Client devices NTP will not be able to update and this could impact Logging, Authentication, Encryption/VPN or other services which rely on consistent time.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Keys are configured on a key ring and identified by an ID number. To add a key enter the following commands from the [edit system ntp] hierarchy:\n\n[edit system ntp]\nuser@host#set authentication-keytypevalueuser@host#set trusted-keySet the keys for all configured NTP servers using the following commands under the [edit system ntp] hierarchy:\n\n[edit system ntp]\nuser@host#set serverkeyIf this device is operating as an NTP Server and has clients which use different keys or algorithms, these can be set with the peer option:\n\n[edit system ntp]\nuser@host#set peerkeyNOTE - The Key ID must also be listed in the trusted-key list to be accepted.\n\nDefault Value:\n\nBy default Juniper routers do not have NTP servers configured and use locally managed time.",
        "reference": "800-171|3.3.7,800-171|3.5.2,800-53|AU-8,800-53|IA-5,800-53|IA-5(1),800-53r5|AU-8,800-53r5|IA-5,800-53r5|IA-5(1),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv7|16.4,CSF|PR.AC-1,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(b),HIPAA|164.312(d),ITSG-33|AU-8,ITSG-33|IA-5,ITSG-33|IA-5(1),LEVEL|2A,NESA|T3.6.2,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ntp .+",
        "expect": "set system ntp authentication-key .+"
    },
    "custom_item_42": {
        "description": "6.7.7 Ensure Strong Authentication Methods are used for NTP Authentication",
        "info": "Strong authentication methods should be set for NTP Servers\n\nRationale:\n\nHaving established the need for NTP, it is essential to ensure that the devices time is not manipulated by an attacker as this could allow DoS to services relying on accurate time as well as replay attacks and other malicious activity.\n\nNTP Version 3 introduced Authentication mechanisms for NTP messages using a Keyed Hash based Message Authentication Check (HMAC), where a hash of the message ensures both that the message is authentic and that it was not changed in transit. All JUNOS platforms support HMAC with NTP Versions 3 and 4 using MD5 and some platforms also support the more robust SHA1 and SHA2-256 algorithms.\n\nMessage Digest 5 (MD5) is an older hashing mechanism dating back to the early 90's. Since 2004 an increasing number of collision vulnerabilities have been shown in MD5 and the algorithm is no longer considered suitable for authentication and integrity protection of sensitive material or X.509 certificates.\n\nWhile not supported across all devices, most JUNOS devices now support use of SHA1 and SHA2-256 HMAC for NTP message authentication. This feature is documented through Juniper Feature Explorer as Enhancement to NTP authentication method and is supported on most Junos devices from Junos OS 18.2R1 onward (though individual platform support varies).\n\nLike MD5, SHA1 is now considered deprecated due to the risk of collisions. As a result, in high security environments it is recommended that SHA2-256 be used for authentication of all NTP Servers or Peers (where this Junos device itself is acting as an NTP Server).\n\nNOTE - Both the keys and the algorithm must match on all NTP peers being configured.\n\nImpact:\n\nIf keys or algorithms do not match on NTP Servers and Client devices NTP will not be able to update and this could impact Logging, Authentication, Encryption/VPN or other services which rely on consistent time.",
        "solution": "Keys are configured on a key ring and identified by an ID number. To add a key enter the following command from the [edit system ntp] hierarchy;\n\n[edit system ntp]\nuser@host#set authentication-keytypevalueis an arbitrary 32-bit non-zero integer used to identify this key locally on the device. Thecan be set to MD5 (the default), SHA1 or SHA256 (with SHA1 and SHA256 only being supported on some devices) - for Strong Authentication Methods you should use sha256 only.\nConfigure the key as trusted so that the router will accept NTP traffic encrypted using it. This mechanism provides an easy method to retire keys in the event of compromise. Enter following command from the [edit system ntp] hierarchy;\n\n[edit system ntp]\nuser@host#set trusted-keyThewhich is trusted can be one key or several keys by enclosing the list in square brackets or repeating the command.\nFinally, update the keys for each NTP servers using the following command under the [edit system ntp] hierarchy:\n\n[edit system ntp]\nuser@host#set serverkeyDefault Value:\n\nNTP is not configured by default",
        "reference": "800-171|3.3.7,800-53|AU-8,800-53r5|AU-8,CN-L3|8.1.4.3(b),CSCv6|11.4,CSCv7|6.1,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,LEVEL|2A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ntp .+",
        "expect": "set system ntp authentication-key .+ type (sha1|sha2-256) .+"
    },
    "custom_item_43": {
        "description": "6.14 Ensure Configuration File Encryption is Set",
        "info": "Configuration files should be encrypted.\n\nRationale:\n\nOn many JUNOS platforms the configuration files are stored on a removal flash file system.\n\nA malicious user with even momentary physical access to the router could readily remove the flash card, gaining access to the device's configuration which is likely to contain extremely sensitive details.\n\nExposure to this type of attack increased in Branch Office or Customer Premises Equipment (CPE) installations or where devices are transported by third parties post configuration.\n\nTo prevent an attacker accessing the configuration files from flash, JUNOS Devices offer a facility to encrypt the /config and /var/db/config directories using AES or DES algorithms.\n\nNote - Export restrictions mean that AES is not available in all regions.\n\nImpact:\n\nThe configuration files will be encrypted on storage and the JUNOS Device will use the key stored in it's EEPROM to decrypt the configuration file at boot.\n\nAdding the unique option will cause the JUNOS Device to combine the device Serial Number with the entered key when creating the Encryption Key, meaning that the configuration can only be loaded by this JUNOS Device - even with the key being configured.",
        "solution": "To enable Configuration File Encryption, you must first set an encryption key by issuing the following command from Operational Mode:\n\nuser@host>request system set-encryption-key\n\nYou will be prompted to enter and then verify the key.\nThe preferred encryption algorithm may be specified by adding the algorithm option, or left as default. If the device is running the US/Domestic version of JUNOS the default algorithm will be AES. Devices running the Export version of JUNOS will default to the weaker DES standard and cannot be configured to support AES.\nOptionally, the unique option may be specified. This will cause JUNOS to combine the device's Serial Number as part of the Encryption Key, making the configuration unloadable on any other JUNOS device, even with the key set at the prompt.\nOnce a key has been set the following command should be issued from the [edit system] hierarchy:\n\n[edit system]\nuser@host# set encrypt-configuration-files\n\nThe encryption will not be carried out until the configuration is committed.\n\nDefault Value:\n\nConfiguration file encryption is disabled by default.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system .+",
        "expect": "set system encrypt-configuration-files"
    },
    "custom_item_44": {
        "description": "6.15 Ensure Multicast Echo is Set to Disabled",
        "info": "The Routing Engine should ignore Echo Requests sent to Multicast addresses.\n\nRationale:\n\nAn attacker may use multicast Echo Requests (pings) during recognizance of a network to obtain a list of network systems and what services they may be offering.\n\nAn example of this would be sending a ping to 224.0.0.18, hoping to discover routers in the network running VRRP.\n\nIn most environments it is not necessary for the Routing Engine to respond to Multicast Echo Requests to function correctly; however in some cases this will be required, such as for troubleshooting in environments with Multicast Routing support. Only disable this functionality if you are certain you do not need it.\n\nImpact:\n\nThe JUNOD Device will not respond to ICMP Echo Requests (pings) sent to Multicast Addresses used by the device.",
        "solution": "To ignore multicast Echo Requests, issue the following command from the [edit system] hierarchy;\n\n[edit system]\nuser@host#set no-multicast-echo\n\nDefault Value:\n\nBy default JUNOS Devices respond to multicast Echo Requests for multicast groups it is a member of.",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system .+",
        "expect": "set system no-multicast-echo"
    },
    "custom_item_45": {
        "description": "6.18 Ensure Time-Zone is Set to UTC",
        "info": "All devices should use the UTC time zone.\n\nRationale:\n\nWhen a network comprises of hosts across multiple countries or states, the use of local time zones can make analysis of log events confusing and error prone, particularly when localized 'Daylight Savings Time' or equivalent changes occur, affecting one area but not another.\n\nTo prevent confusion Coordinated Universal Time (UTC) should be used for all routers to allow consistent logging timestamps. UTC can be considered equivalent to GMT+0 for the purposes of setting time zones (it is actually GMT with added leap seconds defined by atomic clocks at the US Naval Observatory).\n\nBy having all Servers and Network Devices utilizing the same time-zone for logging; correlation and co-ordination is greatly simplified and Incident Response time is decreased.\n\nImpact:\n\nSystem time, for example viewed with the show system uptime command, and timestamps in log messages will be given in UTC.",
        "solution": "To configure the Time Zone, issue the following command from the [edit system] hierarchy;\n\n[edit system]\nuser@host#set time-zone UTC\n\nDefault Value:\n\nBy default the time-zone is set to UTC.",
        "reference": "800-171|3.3.7,800-53|AU-8,800-53r5|AU-8,CN-L3|8.1.4.3(b),CSCv7|6.1,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,LEVEL|2A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system time-zone.+",
        "expect": "set system time-zone UTC"
    },
    "custom_item_46": {
        "description": "6.20 Ensure Default Address Selection is Set",
        "info": "The primary address configured on the loopback should be used as the source in all JUNOS generated packets.\n\nRationale:\n\nTo ensure a consistent source address for traffic from the JUNOS Device, the Loopback address should be configured as the default source address for traffic generated by the Routing Engine. By default the primary address on the Routed or Management Interface from which the traffic will be sent will be used.\n\nWhen configured, packets for NTP, SNMP Traps, SSH, SYSLOG and other protocols initiated by the router will all use the Loopback address for the packets source unless explicitly configured to use a different address at a more specific hierarchy. This predictable source address makes it easier to configure strict Firewall filters on neighboring network devices.\n\nImpact:\n\nThe Primary Address configured on the device's loopback interface will be used as the source for all system generated traffic, unless a different address is specified elsewhere.",
        "solution": "To set the default source address to the loopback interface enter the following command from the [edit system] hierarchy:\n\n[edit system]\nuser@host#set default-address-selection\n\nEnsure that a loopback address has been configured for the device from the [edit interfaces lo0] hierarchy.\n\nDefault Value:\n\nNo Loopback Address is configured by default and the source address for system generated traffic will be that of the Routed or Management interface nearest the destination.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system .+",
        "expect": "set system default-address-selection"
    },
    "custom_item_47": {
        "description": "6.1.4 Recommend Accounting of Interactive Commands (where External AAA is used)",
        "info": "Where External AAA is used, Interactive Command Accounting Events should be sent to either TACACS+ or RADIUS.\n\nRationale:\n\nTo protect any asset, including a Juniper router, you have to have a record of who logged in or attempted to login as well as who made changes to the configuration and when. For additional security you should also keep records of all commands issued, who issued them and when.\n\nThis is not possible in all deployments due to the additional load, network traffic and storage requirements. For most scenarios the high resource use is outweighed by the benefits that the command history provides, particularly in responding to an incident or fault.\n\nJUNOS can log these events to RADIUS and/or TACACS+ servers to allow reliable, centralized records to be kept for all of the devices in your network.",
        "solution": "Configure Accounting of Logins and Configuration Changes by entering the following commands under the [edit system accounting] hierarchy;\n\n[edit system accounting]\nuser@host#set events [change-log interactive-commands login]\n\nThe interactive-commands should be selected at a minimum, although in many cases you may also wish to add change-log and login accounting.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system accounting events .+",
        "expect": "set system accounting events .*interactive-commands.*"
    },
    "custom_item_48": {
        "description": "6.2.1 Ensure Archive on Commit",
        "info": "The routers configuration should be archived whenever changes are committed.\n\nRationale:\n\nBefore changes made to a JUNOS router are applied they must be committed. Archiving the configuration to an external server on every commit creates a complete history of all changes allowing an effective 'post mortem' to be carried out following any breach and aiding recovery to security and other incidents.\n\nThe archive can also be used to alert administrators of unauthorized changes and identify what was changed by utilizing hashes or diff in scripts or systems like Tripwire.",
        "solution": "To enable Archival on commit issue the following commands from the [edit system] hierarchy;\n\n[edit system]\nuser@host#set archival configuration transfer-on-commit\n\nDefault Value:\n\nArchival is not configured by default.",
        "reference": "800-171|3.8.9,800-53|CP-9,800-53r5|CP-9,CSCv7|10.4,CSF|PR.IP-4,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,LEVEL|2A,NESA|M5.2.3,NESA|T2.2.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system archival .+",
        "expect": "set system archival configuration transfer-on-commit"
    },
    "custom_item_49": {
        "description": "6.2.2 Ensure at least one SCP Archive Site is configured",
        "info": "Configuration archival should use only secure transport over SCP.\n\nRationale:\n\nArchiving the configuration to an external server creates a history of changes allowing an effective 'post mortem' to be carried out following any breach and aiding recovery to security and other incidents.\n\nThe archive can also be used to alert administrators of unauthorized changes and identify what was changed by utilizing hashes or diff in scripts or systems like Tripwire.\n\nAt least one Secure Copy (SCP) Archive Site should be configured on the router. No other transport methods should be used.",
        "solution": "To enable a Secure Copy Archival Site on commit issue the following commands from the [edit system] hierarchy;\n\n[edit system]\nuser@host#set archival configuration archive-sitepasswordDefault Value:\n\nArchival is not configured by default",
        "reference": "800-171|3.8.9,800-53|CP-9,800-53r5|CP-9,CSCv7|10.1,CSCv7|10.4,CSF|PR.IP-4,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,LEVEL|2A,NESA|M5.2.3,NESA|T2.2.4",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system archival .+",
        "expect": "set system archival configuration archive-site .+ password .+"
    },
    "custom_item_50": {
        "description": "6.5.1 Ensure ICMPv4 rate-limit is Set",
        "info": "ICMPv4 traffic should be rate limited to protect the devices resources.\n\nRationale:\n\nMany Denial of Service attacks against network devices will attempt to overwhelm the target's processing, memory or bandwidth by barraging the router with malicious ICMP traffic which may be easily spoofed or generated in significant volumes.\n\nSome administrators simply block all ICMP traffic; however this can cause many problems such as the inability of hosts to perform Path MTU Discovery and preventing debugging through common tools such as Ping (ICMP Echo). Loss of these important ICMP functions can adversely affect the reliability or functionality of the network. By limiting the rate at which ICMP traffic can be sent or received by the Routing Engine, it is possible to limit the impact of many DoS attacks without losing the important functionality that ICMP provides to the network.\n\nThe limits are set using two parameters. The first, packet-rate, defines the number of ICMPv4 (of any type) packets allowed per second. Traffic below this rate will be allowed. Traffic above this rate will also be permitted so long as tokens remain in the 'token bucket' associated with the policer. Each packet above the configured packet-rate uses one token until the bucket is empty, at which point all ICMPv4 traffic will be denied. The second parameter, bucket-size, defines the rate at which the token bucket is refilled, controlling the amount by which burst traffic will be permitted..\n\nBy default, once configured, the packet-rate will be 1000 packets per second with a bucket-size of 5 seconds. This should be sufficient on most platforms to prevent serious DoS attacks, whilst being high enough not to interfere with normal operation.\n\nThe administrator should set the limits based on the normal level of ICMPv4 traffic that is handled by the router. Failure to do this could cause the router to become unreliable in some cases.\n\nThis requirement deals only with ICMPv4 Exception Traffic to or from the Routing Engine (the Control Plane of a JUNOS device) and has no effect on ICMPv4 Transit Traffic traversing the device.\n\nImpact:\n\nIf all accumulated packets in the bucket are used, rate limiting will drop all further ICMPv4 traffic to/from the RE until new packets have been added to the bucket at the rate defined by",
        "solution": "ICMPv4 Rate Limiting can be configured by issuing the following commands from the [edit system internet-options] hierarchy.\n\n[edit system internet-options]\nuser@host#set icmpv4-rate-limit bucket-sizepacket-limitWhere:is the size of the Rate Limit Bucket, in seconds (if not specified, defaults to 5 seconds)is the rate at which packets are added to the bucket, in packets per second (if not specified, defaults to 1000pps)\n\nDefault Value:\n\nBy default icmpv4-rate-limit is not configured.\n\nOnce configured the bucket-size defaults to 5 seconds and the packet-limit defaults to 1000 packets per second.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system internet-options .+",
        "expect": "set system internet-options icmpv4-rate-limit"
    },
    "custom_item_51": {
        "description": "Check for IPv6 configured on any interface",
        "regex": "set interfaces .+ inet6 address .+",
        "number_of_lines": "^([1-9]|[1-9][0-9])+$"
    },
    "custom_item_52": {
        "description": "6.5.2 Ensure ICMPv6 rate-limit is Set",
        "info": "ICMPv6 traffic should be rate limited to protect the devices resources.\n\nRationale:\n\nMany Denial of Service attacks against network devices will attempt to overwhelm the target's processing, memory or bandwidth by barraging the router with malicious ICMP traffic which may be easily spoofed or generated in significant volumes.\n\nSome administrators simply block all ICMP traffic; however this can cause many problems such as the inability of hosts to perform Path MTU Discovery and preventing debugging through common tools such as Ping (ICMP Echo). Loss of these important ICMP functions can adversely affect the reliability or functionality of the network. By limiting the rate at which ICMP traffic can be sent or received by the Routing Engine, it is possible to limit the impact of many DoS attacks without losing the important functionality that ICMP provides to the network.\n\nThe limits are set using two parameters. The first, packet-rate, defines the number of ICMPv6 (of any type) packets allowed per second. Traffic below this rate will be allowed. Traffic above this rate will also be permitted so long as tokens remain in the 'token bucket' associated with the policer. Each packet above the configured packet-rate uses one token until the bucket is empty, at which point all ICMPv6 traffic will be denied. The second parameter, bucket-size, defines the rate at which the token bucket is refilled, controlling the amount by which burst traffic will be permitted..\n\nBy default, once configured, the packet-rate will be 1000 packets per second with a bucket-size of 5 seconds. This should be sufficient on most platforms to prevent serious DoS attacks, whilst being high enough not to interfere with normal operation.\n\nThe administrator should set the limits based on the normal level of ICMPv6 traffic that is handled by the router. Failure to do this could cause the router to become unreliable in some cases.\n\nThis requirement deals only with ICMPv6 Exception Traffic to or from the Routing Engine (the Control Plane of a JUNOS device) and has no effect on ICMPv6 Transit Traffic traversing the device.\n\nImpact:\n\nIf all accumulated packets in the bucket are used, rate limiting will drop all further ICMPv6 traffic to/from the RE until new packets have been added to the bucket at the rate defined by",
        "solution": "ICMPv6 Rate Limiting can be configured by issuing the following commands from the [edit system internet-options] hierarchy.\n\n[edit system internet-options]\nuser@host#set icmpv6-rate-limit bucketlimitWhere:\n\nis the size of the Rate Limit Bucket, in seconds (if not specified, defaults to 5 seconds)\n\nis the rate at which packets are added to the bucket, in packets per second (if not specified, defaults to 1000pps)\n\nDefault Value:\n\nBy default icmpv6-rate-limit is not configured.\n\nOnce configured the bucket-size defaults to 5 seconds and the packet-limit defaults to 1000 packets per second",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|11,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system internet-options .+",
        "expect": "set system internet-options icmpv6-rate-limit"
    },
    "custom_item_53": {
        "description": "6.6.7 Ensure Remote Login Class for Authorization through External AAA - login class",
        "info": "External AAA servers should be utilized to provide Authorization via a single 'Remote' template account.\n\nRationale:\n\nJUNOS routers ship with 4 Predefined Login Classes for user Authorization, these are:\n\nsuper-user\n\nread-only\n\noperator\n\nunauthorized\n\nThese classes provide basic Authorization, restricting what users in each class can or cannot do, to allow organizations to get a router up and running, but do not provide fine grained control needed by all but very smallest organizations.\n\nThe built in classes also do not meet the other recommendations in this section. For example, the super-user class (which is the only built in class with read/write permissions) also has permission to start a Unix Shell and does not have an Idle Session Timeout.\n\nBecause of these limitations it is recommended that Custom Login Classes be defined following the principle of least privilege, where each class of users is granted only those permissions needed to complete their job role.\n\nHowever, defining and maintaining Custom Login Classes locally on each router, switch, firewall or other network device can quickly become difficult and error prone in a larger environment.\n\nFor larger networks JUNOS provides for extremely fine grained access control rules to be defined on an External AAA server running either RADIUS or TACACS+ through the use of Vendor Specific Attributes which map to the same permissions that can be set locally for a class.\n\nVendor Specific Attributes (or VSAs) are standards based extensions to the RADIUS and TACACS+ protocols and are supported on most implementations by defining an appropriate dictionary.\n\nWhen performing Authorization using External RADIUS or TACACS+ services, it is recommended that a single 'remote' user is configured on the device and mapped to a 'remote' class with minimal permissions set. The user should be named 'remote' where possible, as this name is reserved by JUNOS as the account to which users are mapped when authenticated through External AAA and for whom the Juniper-Local-User-Name VSA is not set.\n\nWhen a user is authenticated by RADIUS or TACACS+ the server can return a number of VSAs including:\n\nJuniper-Local-User-Name - Maps the user to a local user 'template account', if this is not specified the single 'remote' user account is used.\n\nJuniper-User-Permissions - Allows the server to set the same permissions as would be set in a login class locally. These permission are added to those of the remote user's configured class.\n\nJuniper-Allow-Commands - Uses an Extended Regular Expression to grant Operational Mode commands in addition to those allowed by the user's class.\n\nJuniper-Deny-Commands - Uses an Extended Regular Expression to deny Operational Mode commands which would otherwise be allowed by the user's class.\n\nJuniper-Allow-Configuration - As with the Allow Commands, but to grant Configuration Mode commands not normally allowed by the user's class.\n\nJuniper-Deny-Configuration - As with Deny Commands, but to deny Configuration Mode commands which would otherwise be allowed by the user's class.\n\nNOTE - This is not a complete list of all attributes and uses the RADIUS VSA naming convention. Equivalent TACACS+ VSAs match the above but with slightly different naming.\n\nBy combining the use of the above VSAs from either a RADIUS or TACACS+ server, it is possible to define granular access control equivalent to that which can be set using locally configured Login Classes, but without the need to configure and maintain consistent, granular AAA policy across all devices.\n\nWhere devices are primarily managed via Software Defined Networking or other centralized management and/or automation platforms rather than through the CLI or other local interfaces, then this may be sufficient to meet requirements for centralized AAA and/or allow for effective management of local template accounts without using external AAA.\n\nImpact:\n\nCareful configuration of permissions following the least privilege principle is essential for secure and reliable management of the network.\n\nWhen configuring remote AAA, it is recommended that a local Emergency Access Account also be configured to allow management of the device in the event that AAA services are unavailable.",
        "solution": "To create a new class you can issue the following commands from the [edit system login] hierarchy. In this example, we create a new class named 'remote', granting only view permissions, and assign the remote user to the new class. More detailed permissions will be added to these permissions\n\n[edit system login]\nuser@host#set class remote permissions [ view ]\n\n(this class should also have Idle timeouts and other options set in line with other recommendations in this section).\nTo change the class for a user account, use the following command under the [edit system login] hierarchy:\n\n[edit system login]\nuser@host#set user remote class remote\n\nA full discussion of RADIUS or TACACS+ configuration and options is beyond the scope of this guide, but a simple example of using a TACACS.net server running on Windows with AD integration for a remote user is shown below.\nThis example is taken from an anonymized real world deployment, so also includes sections to allow access to different groups of TACACS+ Clients and permissions for Cisco IOS and Netscreen devices. The most relevant section is thefor service=junos-exec, where the VSAs for TACACS+ Clients running JUNOS are defined, but the entire Authorization for this Class is given for context.GRP-NETOPSCORE-NETACCESS-NETFIREWALLSshow.*terminal.*get.*.*service=junos-execlocal-user-name=remoteallow-commands=show.*user-permissions=view-configurationuser-permissions=networkpriv-lvl=15Default Value:\n\nBy default all users are, in effect, members of the super-user class.",
        "reference": "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|2A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system login class .+",
        "not_expect": "(superuser|super-user|read-only|operator|unauthorized)"
    },
    "custom_item_54": {
        "description": "6.6.7 Ensure Remote Login Class for Authorization through External AAA - remote class",
        "info": "External AAA servers should be utilized to provide Authorization via a single 'Remote' template account.\n\nRationale:\n\nJUNOS routers ship with 4 Predefined Login Classes for user Authorization, these are:\n\nsuper-user\n\nread-only\n\noperator\n\nunauthorized\n\nThese classes provide basic Authorization, restricting what users in each class can or cannot do, to allow organizations to get a router up and running, but do not provide fine grained control needed by all but very smallest organizations.\n\nThe built in classes also do not meet the other recommendations in this section. For example, the super-user class (which is the only built in class with read/write permissions) also has permission to start a Unix Shell and does not have an Idle Session Timeout.\n\nBecause of these limitations it is recommended that Custom Login Classes be defined following the principle of least privilege, where each class of users is granted only those permissions needed to complete their job role.\n\nHowever, defining and maintaining Custom Login Classes locally on each router, switch, firewall or other network device can quickly become difficult and error prone in a larger environment.\n\nFor larger networks JUNOS provides for extremely fine grained access control rules to be defined on an External AAA server running either RADIUS or TACACS+ through the use of Vendor Specific Attributes which map to the same permissions that can be set locally for a class.\n\nVendor Specific Attributes (or VSAs) are standards based extensions to the RADIUS and TACACS+ protocols and are supported on most implementations by defining an appropriate dictionary.\n\nWhen performing Authorization using External RADIUS or TACACS+ services, it is recommended that a single 'remote' user is configured on the device and mapped to a 'remote' class with minimal permissions set. The user should be named 'remote' where possible, as this name is reserved by JUNOS as the account to which users are mapped when authenticated through External AAA and for whom the Juniper-Local-User-Name VSA is not set.\n\nWhen a user is authenticated by RADIUS or TACACS+ the server can return a number of VSAs including:\n\nJuniper-Local-User-Name - Maps the user to a local user 'template account', if this is not specified the single 'remote' user account is used.\n\nJuniper-User-Permissions - Allows the server to set the same permissions as would be set in a login class locally. These permission are added to those of the remote user's configured class.\n\nJuniper-Allow-Commands - Uses an Extended Regular Expression to grant Operational Mode commands in addition to those allowed by the user's class.\n\nJuniper-Deny-Commands - Uses an Extended Regular Expression to deny Operational Mode commands which would otherwise be allowed by the user's class.\n\nJuniper-Allow-Configuration - As with the Allow Commands, but to grant Configuration Mode commands not normally allowed by the user's class.\n\nJuniper-Deny-Configuration - As with Deny Commands, but to deny Configuration Mode commands which would otherwise be allowed by the user's class.\n\nNOTE - This is not a complete list of all attributes and uses the RADIUS VSA naming convention. Equivalent TACACS+ VSAs match the above but with slightly different naming.\n\nBy combining the use of the above VSAs from either a RADIUS or TACACS+ server, it is possible to define granular access control equivalent to that which can be set using locally configured Login Classes, but without the need to configure and maintain consistent, granular AAA policy across all devices.\n\nWhere devices are primarily managed via Software Defined Networking or other centralized management and/or automation platforms rather than through the CLI or other local interfaces, then this may be sufficient to meet requirements for centralized AAA and/or allow for effective management of local template accounts without using external AAA.\n\nImpact:\n\nCareful configuration of permissions following the least privilege principle is essential for secure and reliable management of the network.\n\nWhen configuring remote AAA, it is recommended that a local Emergency Access Account also be configured to allow management of the device in the event that AAA services are unavailable.",
        "solution": "To create a new class you can issue the following commands from the [edit system login] hierarchy. In this example, we create a new class named 'remote', granting only view permissions, and assign the remote user to the new class. More detailed permissions will be added to these permissions\n\n[edit system login]\nuser@host#set class remote permissions [ view ]\n\n(this class should also have Idle timeouts and other options set in line with other recommendations in this section).\nTo change the class for a user account, use the following command under the [edit system login] hierarchy:\n\n[edit system login]\nuser@host#set user remote class remote\n\nA full discussion of RADIUS or TACACS+ configuration and options is beyond the scope of this guide, but a simple example of using a TACACS.net server running on Windows with AD integration for a remote user is shown below.\nThis example is taken from an anonymized real world deployment, so also includes sections to allow access to different groups of TACACS+ Clients and permissions for Cisco IOS and Netscreen devices. The most relevant section is thefor service=junos-exec, where the VSAs for TACACS+ Clients running JUNOS are defined, but the entire Authorization for this Class is given for context.GRP-NETOPSCORE-NETACCESS-NETFIREWALLSshow.*terminal.*get.*.*service=junos-execlocal-user-name=remoteallow-commands=show.*user-permissions=view-configurationuser-permissions=networkpriv-lvl=15Default Value:\n\nBy default all users are, in effect, members of the super-user class.",
        "reference": "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|2A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system login user .+",
        "not_expect": "set system login user remote class remote"
    },
    "custom_item_55": {
        "description": "6.10.1.7 Ensure Only Suite B Ciphers are set for SSH - weak ciphers",
        "info": "SSH should be configured with Ciphers based on the Suite B Standard\n\nRationale:\n\nSSH (Secure Shell) is the defacto standard protocol used for remote administration of network devices and Unix servers, providing an encrypted and authenticated alternative to Telnet. However, this ubiquity and requirement to support a wide range of clients and deployment scenarios, as well as SSH's age, mean SSH needs to support a variety of Ciphers of varying strengths.\n\nBy default, for the widest range of client compatibility, JUNOS supports SSH Ciphers using older Encryption Algorithms such as Blowfish or RC4 which are no longer considered suitable for use to protect sensitive services like SSH.\n\nSSH is a vital tool for administering most JUNOS devices, providing privileged access and potentially transporting sensitive information including passwords. It is recommended that SSH sessions be protected by restricting JUNOS to using Ciphers recommended in the National Security Agency Suite B Standard.\n\nSuite B standards for Cryptographic functions are developed and distributed by the US National Security Agency as part of Cryptographic Modernization Programme for protection of US Government data, both unclassified and classified (to Secret). Suite B standards for SSH are set out in RFC6239 and restrict Ciphers to AES-128 and AES-256 in Galois Counter Mode only.\n\nWhen AES is used in Galois Counter Mode (AEAD_AES_128/256_GCM) for Confidentiality (Ciphers), it is also used to provide Integrity (replacing any Message Authentication Codes (MACs) which may be configured). For more details, please see RFC5647.\n\nNOTE - The OpenSSH implementation used in JUNOS is not fully compliant with Suite B SSH set out in RFC6239, but these standards have been used as guidance for setting the more restrictive Level 2 recommendation.\n\nImpact:\n\nSome SSH Clients or other management applications or automation platforms utilizing SSH may not support the stronger ciphers used in Suite B, so may be unable to connect.\n\nEnsure that all applications are fully tested before deploying this recommendation in a production environment.",
        "solution": "To remove a single insecure cipher, issue the following command from the [edit system services ssh] hierarchy;\n\n[edit system services ssh]\nuser@host#delete ciphersIf multiple insecure Ciphers were set, it will generally be easier to delete all the Cipher restrictions with the following command:\n\n[edit system services ssh]\nuser@host#delete ciphers\n\nOnce all insecure Ciphers have been removed, add one or more of the AES-GCM ciphers.\n\n[edit system services ssh]\nuser@host#set ciphers [ aes128-gcm@openssh.com aes256-gcm@openssh.com ]\n\nDefault Value:\n\nFor most platforms SSH access is enabled by default but ciphers are not restricted.\n\nNot all platforms or versions of JUNOS support AES in Galois/Counter Mode.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services ssh .+",
        "not_expect": "set system services ssh ciphers .*(cbc|ctr|arcfour|chacha).*"
    },
    "custom_item_56": {
        "description": "6.10.1.7 Ensure Only Suite B Ciphers are set for SSH - ciphers restriction",
        "info": "SSH should be configured with Ciphers based on the Suite B Standard\n\nRationale:\n\nSSH (Secure Shell) is the defacto standard protocol used for remote administration of network devices and Unix servers, providing an encrypted and authenticated alternative to Telnet. However, this ubiquity and requirement to support a wide range of clients and deployment scenarios, as well as SSH's age, mean SSH needs to support a variety of Ciphers of varying strengths.\n\nBy default, for the widest range of client compatibility, JUNOS supports SSH Ciphers using older Encryption Algorithms such as Blowfish or RC4 which are no longer considered suitable for use to protect sensitive services like SSH.\n\nSSH is a vital tool for administering most JUNOS devices, providing privileged access and potentially transporting sensitive information including passwords. It is recommended that SSH sessions be protected by restricting JUNOS to using Ciphers recommended in the National Security Agency Suite B Standard.\n\nSuite B standards for Cryptographic functions are developed and distributed by the US National Security Agency as part of Cryptographic Modernization Programme for protection of US Government data, both unclassified and classified (to Secret). Suite B standards for SSH are set out in RFC6239 and restrict Ciphers to AES-128 and AES-256 in Galois Counter Mode only.\n\nWhen AES is used in Galois Counter Mode (AEAD_AES_128/256_GCM) for Confidentiality (Ciphers), it is also used to provide Integrity (replacing any Message Authentication Codes (MACs) which may be configured). For more details, please see RFC5647.\n\nNOTE - The OpenSSH implementation used in JUNOS is not fully compliant with Suite B SSH set out in RFC6239, but these standards have been used as guidance for setting the more restrictive Level 2 recommendation.\n\nImpact:\n\nSome SSH Clients or other management applications or automation platforms utilizing SSH may not support the stronger ciphers used in Suite B, so may be unable to connect.\n\nEnsure that all applications are fully tested before deploying this recommendation in a production environment.",
        "solution": "To remove a single insecure cipher, issue the following command from the [edit system services ssh] hierarchy;\n\n[edit system services ssh]\nuser@host#delete ciphersIf multiple insecure Ciphers were set, it will generally be easier to delete all the Cipher restrictions with the following command:\n\n[edit system services ssh]\nuser@host#delete ciphers\n\nOnce all insecure Ciphers have been removed, add one or more of the AES-GCM ciphers.\n\n[edit system services ssh]\nuser@host#set ciphers [ aes128-gcm@openssh.com aes256-gcm@openssh.com ]\n\nDefault Value:\n\nFor most platforms SSH access is enabled by default but ciphers are not restricted.\n\nNot all platforms or versions of JUNOS support AES in Galois/Counter Mode.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services ssh .+",
        "expect": "set system services ssh ciphers .+"
    },
    "custom_item_57": {
        "description": "6.10.1.10 Ensure Only Suite B Key Exchange Methods are set for SSH - weak key-exchange",
        "info": "SSH should be configured to use only Suite B key exchange algorithms.\n\nRationale:\n\nSSH (Secure Shell) is the defacto standard protocol used for remote administration of network devices and Unix servers, providing an encrypted and authenticated alternative to Telnet. However, this ubiquity and requirement to support a wide range of clients and deployment scenarios, as well as SSH's age, mean SSH needs to support a variety of Ciphers of varying strengths.\n\nBy default, for the widest range of client compatibility, JUNOS supports SSH Key Exchange using older algorithms and methods such as Diffie-Hellman Group 1 with SHA1.\n\nSSH is a vital tool for administering most JUNOS devices, providing privileged access and potentially transporting sensitive information including passwords. It is recommended that SSH sessions be protected by restricting JUNOS to using stronger Key Exchange methods recommended in the National Security Agency Suite B Standard.\n\nSuite B standards for Cryptographic functions are developed and distributed by the US National Security Agency as part of Cryptographic Modernization Program for protection of US Government data, both unclassified and classified (to Secret). Suite B standards for SSH are set out in RFC6239 and restrict Key Exchange to Elliptic Curve Diffie Hellman with NIST P Values and SHA2 only.\n\nNOTE - The OpenSSH implementation used in JUNOS is not fully compliant with Suite B SSH set out in RFC6239, but these standards have been used as guidance for setting the more restrictive Level 2 recommendation.\n\nImpact:\n\nSome SSH Clients or other management applications or automation platforms utilizing SSH may not support the stronger Key Exchange Methods used in Suite B, so may be unable to connect.\n\nEnsure that all applications are fully tested before deploying this recommendation in a production environment.",
        "solution": "To remove a single non-Suite B Key Exchange method, issue the following command from the [edit system services ssh] hierarchy;\n\n[edit system services ssh]\nuser@host# delete key-exchangeIf multiple insecure Key Exchange methods were set, it will generally be easier to delete all the Key Exchange method restrictions with the following command:\n\n[edit system services ssh]\nuser@host# delete key-exchange\n\nOnce all insecure methods have been removed, add one or more stronger Key Exchange methods (in this example all Suite B methods available on most JUNOS devices are set in a single command)\n\n[edit system services ssh]\nuser@host# set key-exchange [ ecdh-sha2-nistp256 ecdh-sha2-nistp384  ecdh-sha2-nistp512 ]\n\nNOTE - The ecdh-sha2-nistp512 Key Exchange method is not cited specifically in RFC6239, but is acceptable in addition/in place of the other NIST Elliptic Curve Diffie Hellman exchange methods for the purposes of this recommendation.\nFinally, single Key Exchange methods or a smaller selection of these more secure methods may be selected on the user's discretion.\n\n[edit system services ssh]\nuser@host# set key-exchangeDefault Value:\n\nFor most platforms SSH access is enabled by default but key exchange methods are not restricted.\n\nOn FIPS releases the curve25519-sha256, dh-group1-sha1, group-exchange-sha & group-exchange-sha2 methods are not supported.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services ssh .+",
        "not_expect": "set system services ssh key-exchange .*(curve25519|dh-group|group-exchange).*"
    },
    "custom_item_58": {
        "description": "6.10.1.10 Ensure Only Suite B Key Exchange Methods are set for SSH - key-exchange restriction",
        "info": "SSH should be configured to use only Suite B key exchange algorithms.\n\nRationale:\n\nSSH (Secure Shell) is the defacto standard protocol used for remote administration of network devices and Unix servers, providing an encrypted and authenticated alternative to Telnet. However, this ubiquity and requirement to support a wide range of clients and deployment scenarios, as well as SSH's age, mean SSH needs to support a variety of Ciphers of varying strengths.\n\nBy default, for the widest range of client compatibility, JUNOS supports SSH Key Exchange using older algorithms and methods such as Diffie-Hellman Group 1 with SHA1.\n\nSSH is a vital tool for administering most JUNOS devices, providing privileged access and potentially transporting sensitive information including passwords. It is recommended that SSH sessions be protected by restricting JUNOS to using stronger Key Exchange methods recommended in the National Security Agency Suite B Standard.\n\nSuite B standards for Cryptographic functions are developed and distributed by the US National Security Agency as part of Cryptographic Modernization Program for protection of US Government data, both unclassified and classified (to Secret). Suite B standards for SSH are set out in RFC6239 and restrict Key Exchange to Elliptic Curve Diffie Hellman with NIST P Values and SHA2 only.\n\nNOTE - The OpenSSH implementation used in JUNOS is not fully compliant with Suite B SSH set out in RFC6239, but these standards have been used as guidance for setting the more restrictive Level 2 recommendation.\n\nImpact:\n\nSome SSH Clients or other management applications or automation platforms utilizing SSH may not support the stronger Key Exchange Methods used in Suite B, so may be unable to connect.\n\nEnsure that all applications are fully tested before deploying this recommendation in a production environment.",
        "solution": "To remove a single non-Suite B Key Exchange method, issue the following command from the [edit system services ssh] hierarchy;\n\n[edit system services ssh]\nuser@host# delete key-exchangeIf multiple insecure Key Exchange methods were set, it will generally be easier to delete all the Key Exchange method restrictions with the following command:\n\n[edit system services ssh]\nuser@host# delete key-exchange\n\nOnce all insecure methods have been removed, add one or more stronger Key Exchange methods (in this example all Suite B methods available on most JUNOS devices are set in a single command)\n\n[edit system services ssh]\nuser@host# set key-exchange [ ecdh-sha2-nistp256 ecdh-sha2-nistp384  ecdh-sha2-nistp512 ]\n\nNOTE - The ecdh-sha2-nistp512 Key Exchange method is not cited specifically in RFC6239, but is acceptable in addition/in place of the other NIST Elliptic Curve Diffie Hellman exchange methods for the purposes of this recommendation.\nFinally, single Key Exchange methods or a smaller selection of these more secure methods may be selected on the user's discretion.\n\n[edit system services ssh]\nuser@host# set key-exchangeDefault Value:\n\nFor most platforms SSH access is enabled by default but key exchange methods are not restricted.\n\nOn FIPS releases the curve25519-sha256, dh-group1-sha1, group-exchange-sha & group-exchange-sha2 methods are not supported.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services ssh .+",
        "expect": "set system services ssh key-exchange .+"
    },
    "custom_item_59": {
        "description": "6.10.1.12 Ensure Only Suite B Based Key Signing Algorithms are set for SSH - DSA keys",
        "info": "SSH should be configured with Suite B based key signing algorithms\n\nRationale:\n\nSSH (Secure Shell) is the defacto standard protocol used for remote administration of network devices and Unix servers, providing an encrypted and authenticated alternative to Telnet. However, this ubiquity and requirement to support a wide range of clients and deployment scenarios, as well as SSH's age, mean SSH needs to support a variety of Ciphers of varying strengths.\n\nBy default, for the widest range of client compatibility, JUNOS supports SSH Key Signing methods using older algorithms and methods such as 1024 bit DSA keys.\n\nSSH is a vital tool for administering most JUNOS devices, providing privileged access and potentially transporting sensitive information including passwords. It is recommended that SSH sessions be protected by restricting JUNOS to using stronger Key Signing methods based on National Security Agency Suite B Standards, while weaker signing methods are explicitly disabled.\n\nSuite B standards for Cryptographic functions are developed and distributed by the US National Security Agency as part of Cryptographic Modernization Programme for protection of US Government data, both unclassified and classified (to Secret). Suite B standards for SSH are set out in RFC6239 and restrict Key Signing to x509v3-ecdsa-sha2-nistp256 or x509v3-ecdsa-sha2-nistp384 only.\n\nNOTE - The OpenSSH implementation used in JUNOS is not fully compliant with Suite B SSH set out in RFC6239, but these standards have been used as guidance for setting the more restrictive Level 2 recommendation. In particular, at time of writing, JUNOS does not support SSH Authentication through the use of X.509 Certificates - so it is not possible to be fully compliant with the Suite B recommendations, however ECDSA based Key Signing is supported, including with the NIST P 256bit and 384bit P Values, for Public Keys.\n\nImpact:\n\nSome SSH Clients or other management applications or automation platforms utilizing SSH may not support the stronger ECDSA Key Signing standard, so may be unable to connect.\n\nEnsure that all applications are fully tested before deploying this recommendation in a production environment.",
        "solution": "To explicitly disable DSA, RSA and ED25519 signatures, type the following commands at the [edit system services ssh] hierarchy:\n\n[edit system services ssh]\nuser@host#set hostkey-algorithm no-ssh-dss\nuser@host#set hostkey-algorithm no-ssh-rsa\nuser@host#set hostkey-algorithm no-ssh-ed25519\n\nEnable ECDSA for SSH Public Keys using the following commands:\n\n[edit system services ssh]\nuser@host#set hostkey-algorithm ssh-ecdsa\n\nDefault Value:\n\nFor most platforms SSH-ECDSA, SSH-ED25519, SSH-DSS (1024 bit DSA keys) and SSH-RSA are permitted by default.\n\nSSH-DSS is not supported on JUNOS in FIPS Mode, so cannot be enabled in FIPS mode.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services ssh hostkey-algorithm no-ssh-(dss|rsa|ed25519)",
        "number_of_lines": "^3$"
    },
    "custom_item_60": {
        "description": "6.10.1.12 Ensure Only Suite B Based Key Signing Algorithms are set for SSH - ECDSA Key",
        "info": "SSH should be configured with Suite B based key signing algorithms\n\nRationale:\n\nSSH (Secure Shell) is the defacto standard protocol used for remote administration of network devices and Unix servers, providing an encrypted and authenticated alternative to Telnet. However, this ubiquity and requirement to support a wide range of clients and deployment scenarios, as well as SSH's age, mean SSH needs to support a variety of Ciphers of varying strengths.\n\nBy default, for the widest range of client compatibility, JUNOS supports SSH Key Signing methods using older algorithms and methods such as 1024 bit DSA keys.\n\nSSH is a vital tool for administering most JUNOS devices, providing privileged access and potentially transporting sensitive information including passwords. It is recommended that SSH sessions be protected by restricting JUNOS to using stronger Key Signing methods based on National Security Agency Suite B Standards, while weaker signing methods are explicitly disabled.\n\nSuite B standards for Cryptographic functions are developed and distributed by the US National Security Agency as part of Cryptographic Modernization Programme for protection of US Government data, both unclassified and classified (to Secret). Suite B standards for SSH are set out in RFC6239 and restrict Key Signing to x509v3-ecdsa-sha2-nistp256 or x509v3-ecdsa-sha2-nistp384 only.\n\nNOTE - The OpenSSH implementation used in JUNOS is not fully compliant with Suite B SSH set out in RFC6239, but these standards have been used as guidance for setting the more restrictive Level 2 recommendation. In particular, at time of writing, JUNOS does not support SSH Authentication through the use of X.509 Certificates - so it is not possible to be fully compliant with the Suite B recommendations, however ECDSA based Key Signing is supported, including with the NIST P 256bit and 384bit P Values, for Public Keys.\n\nImpact:\n\nSome SSH Clients or other management applications or automation platforms utilizing SSH may not support the stronger ECDSA Key Signing standard, so may be unable to connect.\n\nEnsure that all applications are fully tested before deploying this recommendation in a production environment.",
        "solution": "To explicitly disable DSA, RSA and ED25519 signatures, type the following commands at the [edit system services ssh] hierarchy:\n\n[edit system services ssh]\nuser@host#set hostkey-algorithm no-ssh-dss\nuser@host#set hostkey-algorithm no-ssh-rsa\nuser@host#set hostkey-algorithm no-ssh-ed25519\n\nEnable ECDSA for SSH Public Keys using the following commands:\n\n[edit system services ssh]\nuser@host#set hostkey-algorithm ssh-ecdsa\n\nDefault Value:\n\nFor most platforms SSH-ECDSA, SSH-ED25519, SSH-DSS (1024 bit DSA keys) and SSH-RSA are permitted by default.\n\nSSH-DSS is not supported on JUNOS in FIPS Mode, so cannot be enabled in FIPS mode.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services ssh .+",
        "expect": "set system services ssh hostkey-algorithm ssh-ecdsa"
    },
    "custom_item_61": {
        "description": "6.10.1.13 Ensure SSH Key Authentication is Disabled",
        "info": "SSH Key based Authentication should be disabled (if not used for automation)\n\nRationale:\n\nDue to the sensitive nature of SSH, potentially allowing full management of the targeted device, protecting SSH access using strong authentication methods is essential to the security of the device.\n\nOne method which is supported in SSH for stronger authentication is the use of Public/Private Encryption Key Pairs in place of a more traditional login prompt for a Username and Password. Instead, an administrator uploads the user's Public key to the JUNOS (or other) device to be managed.\n\nWhen the user connects, they will use their Private key to encrypt some session specific data. The JUNOS device can verify the Users identity by decrypting that data using the Public key configured previously and comparing it to an expected result. If the results match, then the user must have access to the Private key, so is considered valid.\n\nUnfortunately using SSH Keys to authenticate User Logins to JUNOS devices introduce a number of security issues:\n\nPublic Keys may only be configured locally on each JUNOS device\n\nPublic Keys are used instead of centralized AAA using TACACS+ or RADIUS as covered in Recommendation 6.8.1 Ensure External AAA Server is set\n\nThe use of SSH Keys means only a single Authentication Factor (the keys) can be used, preventing the use of Multi Factor Authentication as covered in 6.6.14 Ensure Multi-Factor is used with External AAA\n\nJUNOS does not provide any method to automate rollover or locking of keys. If keys are compromised/lost, they must be changed on every JUNOS device on which they are configured.\n\nSome SSH implementation support the use of X.509 PKI Certificates for managing SSH Keys, but JUNOS does not.\n\nBecause of these limitations and the difficulty in auditing and managing SSH Keys on JUNOS devices, this method should not be used for Authentication of User logins or for the Root User.\n\nDue to these limitations, it is recommended that SSH Key based Authentication be disabled when it is not required to support automation systems.\n\nIn some instances, such as when using PyEZ or NETCONF based automation over SSH, it may be preferable to authenticate a limited number of automation services using SSH Keys, rather than 'hard coding' user details into scripts. Where this is the case, then this recommendation should not be implemented as it disables all use of SSH Key based Authentication.\n\nWhen using SSH Keys for automation, it is imperative to have strong key management procedures in use to control and audit access to the Private Keys used and a process to allow for rollover and revocation of compromised keys. Consider using a Centralized SSH Key Management solution when trying to achieve this at scale.\n\nImpact:\n\nEnsure that SSH Key based Authentication is not required for automation systems and that any User Logins previously using SSH Keys have been configured with an alternative authentication methods before disabling SSH Key based Authentication.",
        "solution": "To disable the use of SSH Key based Authentication, issue the following command from the [edit system service ssh] hierarchy:\n\n[edit system services ssh]\nuser@host# set no-public-keys\n\nDefault Value:\n\nSSH Key based authentication is supported, but no keys are configured by default.",
        "reference": "800-171|3.5.1,800-171|3.5.3,800-53|IA-2,800-53|IA-2(1),800-53r5|IA-2,800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|11.5,CSCv7|16.2,CSCv7|16.3,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,ITSG-33|IA-2(1),LEVEL|2M,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services ssh .+",
        "expect": "set system services ssh no-public-keys"
    },
    "custom_item_62": {
        "description": "Check for web-management",
        "regex": "set system services .+",
        "expect": "set system services web-management"
    },
    "custom_item_63": {
        "description": "6.10.2.3 Ensure Web-Management is Set to use PKI Certificate for HTTPS",
        "info": "JWeb should only be accessed using HTTPS with a PKI Certificate\n\nRationale:\n\nJWeb can be configured to provide a Web GUI over either HTTP or HTTPS.\n\nWhen configured to use HTTPS X.509 Certificates are used to:\n\nShare Public Encryption Keys\n\nProvide Identity Information\n\nValidate the Web Server's Identity\n\nEnforce Encryption Key Rollover by limiting their validity period\n\nJWeb can be configured to use Self Signed 'System-Generated' X.509 Certificates, where the JUNOS device makes an identity claim, such as 'I am myrouter.myorg.com', without any external validation. When an administrator connects to JWeb their browser will generate a Security Error due to this lack of validation, which the user will need to accept in order to proceed to the interface.\n\nWithout validation from a trusted Certificate Authority (CA), either an Internal or Public CA, administrators may be unable to detect when a management session is being intercepted or impersonated by an attacker. Additionally, a Self Signed certificate cannot be centrally revoked should a compromise be detected, relying instead on each user manually removing trust for the compromised Certificate.\n\nA Certificate Authority is a Trusted Third Party which validates X.509 Certificates by signing them, using a secure Hashing algorithm and their own Private Key. A CA may be part of an organization's internal Public Key Infrastructure (PKI) or an Public CA service such as those provided by Verisign, Entrust or Microsoft.\n\nCommonly, for signing Certificates used for internal management and systems, Organizations will configure their own PKI rather than paying for Public CA Services - configuring their End Points to trust Certificates signed by their CA through Group Policy or similar methods.\n\nEither option is equally acceptable for use with JWeb, but Self Signed Certificates should not be used.\n\nIn addition, JUNOS offers two options for the storage and management of Certificates and their associated Private Keys:\n\nin the configuration under the [edit security certificates] hierarchy\n\nin a protected PKI store in memory\n\nWhile the keys are hashed when stored in the configuration file, they are still exposed through backups and management access to the device. Storing Certificates and Keys in the device's PKI store means that the Private Keys are never accessible and that additional protections to this restricted area of memory can be used.\n\nDue to these limitations PKI Certificates from a trusted Certificate Authority should always be used for JWeb Management and should always be stored in the device's PKI store rather than local configuration.\n\nImpact:\n\nEnsure an alternative method to manage the JUNOS device is configured and working prior to changing the Certificate used for HTTPS to ensure continued access in the event of any errors.",
        "solution": "To configure Web-Management with a PKI Certificate issue the following command from the [edit system service web-management] hierarchy:\n\n[edit system services web-management]\nuser@host# set https pki-local-certificateWhereis the name of a Certificate which has already been loaded to the devices PKI Store.\nTo create a new Public/Private Key Pair in the devices PKI Store and generate Certificate Signing Request issue the following commands from Operational Mode:\n\nuser@host> request security pki generate-key-pair certificate-idtypesizeuser@host> request security pki generate-certificate-request certificate-iddomain-namesubjectWhere:is the Name that will be used for this Certificate throughout configurationis the Encryption Algorithm to be used (this should be either RSA or ECC)is the number of Bits used for the keys (use at least 2048bits for RSA or 256bits for ECC)is the FQDN which will be used to manage the device and\n-is the Distinguished Name used to identify this device and certificate.\n\nOptionally, fields for email address, the device's IP Address and and output Filename for the PKCS#10 CSR which will be generated can be included.\nThe CSR should then be submitted to the Certificate Authority for review and signing.\nOnce the CA returns the Certificate it can be uploaded to the JUNOS device and imported with the following command from Operational Mode:\n\nuser@host> request security pki local-certificate load certificate-idfilenameDefault Value:\n\nVaries by platform. For some Branch and SME focused devices, like the SRX300 or EX2300, JWeb is enabled by default. For most larger Enterprise and SP devices JWeb is disabled by default.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services web-management .+",
        "expect": "set system services web-management https pki-local-certificate .+"
    },
    "custom_item_64": {
        "description": "6.10.2.7 Ensure Web-Management Interface Restriction is set to OOB Management",
        "info": "JWeb access should be restricted to trusted networks\n\nRationale:\n\nBy default, when configured, the JWeb service will listen for incoming connections on all interfaces which have an IP Address configured, exposing JWeb to users on all networks through which the device is reachable.\n\nBecause control of Network Systems can have a serious impact on the security of your environment, the JUNOS device should only be manageable using Out Of Band (OOB) Management networks reached through the devices' dedicated Management Interface (called FXP0.0 on most platforms).\n\nThis can be accomplished by limiting the interfaces on which the JWeb HTTPS service operates to only include the devices' OOB Interface. Firewall Filters or Security Policy (SRX) should also be used to further restrict management to authorized sources (see Recommendations in Section 2 - Firewall for further details).\n\nSome JUNOS devices do not have dedicated OOB Management ports. In some cases a 'revenue port' can be configured to act as a Management port, such as by defining a 'management' functional zone with a Branch/SME SRX Firewall. This type of restricted OOB Management Port is accepted as meeting this recommendation, but is not tested for under the audit procedure as a variety of ports might be used.\n\nImpact:\n\nEnsure that JWeb Management is operational and reachable using the selected interfaces before applying interface restrictions in a production environment.",
        "solution": "To apply JWEB Interface restrictions issue the following commands from the [edit system services web-management https] hierarchy:\nTo set a single Interface:\n\n[edit system services web-management https]\nuser@host#set interfaceOr to set multiple Interfaces:\n\n[edit system services web-management https]\nuser@host#set interface []\n\nInterfaces should only be fxp0.0, em0.0, me0.0 or jmgmt0.0 (dependent on platform) dedicated Out Of Band Management ports.\n\nDefault Value:\n\nVaries by platform. For some Branch and SME focused devices, like the SRX300 or EX2300, JWeb is enabled by default. For most larger Enterprise and SP devices JWeb is disabled by default.\n\nWhen configured, by default JWeb listens on all interfaces for Web Management sessions.",
        "reference": "800-171|3.13.1,800-53|SC-7(15),800-53r5|SC-7(15),CN-L3|8.1.10.6(j),CSCv7|11.7,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(15),LEVEL|2A,NESA|T4.5.3,NIAv2|NS5c,NIAv2|NS6a,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services web-management .+",
        "expect": "set system services web-management .+ interface (fxp0|em0|me0|jmgmt0|@JWEB_OOB_INTERFACE@)"
    },
    "custom_item_65": {
        "description": "Check for XNM/JunoScript",
        "regex": "set system services xnm-ssl",
        "expect": "set system services xnm-ssl"
    },
    "custom_item_66": {
        "description": "6.10.3.2 Ensure XNM-SSL Connection Limit is Set",
        "info": "If the XNM-SSL service is configured, connection limits should be set.\n\nRationale:\n\nJUNOScript can be configured to use SSL transport to prevent the exposure of sensitive data and authentication details on the network. If configured the XNM-SSL service will provide services on port TCP/3220.\n\nAn attacker may attempt to open a large number of sessions to the XNM-SSL service to exhaust the routers resources or an authorized user may do so accidently, especially given that the service is designed to allow a scripting and automation interface to JUNOS. To limit the impact of any such incident, the number of concurrent connections to the XNM-SSL service should explicitly limited.\n\nA relatively low value of 10 is recommended, but may not be appropriate for all environments so it is left to the administrator's discretion.\n\nImpact:\n\nIf the connection limit has been reached, additional JUNOScript sessions will be rejected until an existing session has ended.",
        "solution": "The XNM-SSL Connection Limit can be configured by issuing the following command from the [edit system services xnm-ssl] hierarchy;\n\n[edit system services xnm-ssl]\nuser@host#set connection-limitWhereis the permitted number of concurrent connections required.\n\nDefault Value:\n\nThe XNM-SSL Service is disabled by default.\n\nWhen it is first configured the default Connection Limit is 75.",
        "reference": "800-171|3.1.7,800-171|3.5.3,800-53|AC-6(10),800-53|IA-2(1),800-53r5|AC-6(10),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv7|11.5,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|AC-6,ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.2,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM36,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services xnm-ssl .+",
        "not_expect": "set system services xnm-ssl connection-limit @XNM_CONNECTION_LIMIT@"
    },
    "custom_item_67": {
        "description": "6.10.3.3 Ensure XNM-SSL Rate Limit is Set",
        "info": "If the XNM-SSL service is configured, the Rate Limit should be set.\n\nRationale:\n\nJUNOScript can be configured to use SSL transport to prevent the exposure of sensitive data and authentication details on the network. If configured the XNM-SSL service will provide services on port TCP/3220.\n\nAn attacker may attempt to open a large number of sessions to the XNM-SSL service to exhaust the routers resources or an authorized user may do so accidently, especially given that the service is designed to allow a scripting interface to JUNOS.\n\nTo limit the impact of any such incident, the rate at which new connections to the XNM-SSL service should explicitly limited. Rate Limits are set in terms of the number of connection attempts per minute. Established connections do not count towards this count. A relatively low value of 60 (the equivalent of one attempt per second, sustained over a minute) is recommended, but may not be appropriate for all environments so it is left to the administrator's discretion.\n\nImpact:\n\nIf the Rate Limit is exceeded, new connection attempts will be rejected until the new connection rate drops below the configured limit.",
        "solution": "The XNM-SSL Rate Limit can be configured by issuing the following command from the [edit system services xnm-ssl] hierarchy;\n\n[edit system services xnm-ssl]\nuser@host#set rate-limitWhereis the desired Rate Limit measured in Connection Attempts per Minute.\n\nDefault Value:\n\nThe XNM-SSL Service is disabled by default. When it is first configured the default Rate Limit is 150 connection attempts per second.",
        "reference": "800-171|3.1.7,800-171|3.5.3,800-53|AC-6(10),800-53|IA-2(1),800-53r5|AC-6(10),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv7|11.5,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|AC-6,ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.2,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM36,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services xnm-ssl .+",
        "not_expect": "set system services xnm-ssl connection-limit @XNM_RATE_LIMIT@"
    },
    "custom_item_68": {
        "description": "Check for REST",
        "regex": "set system services rest",
        "expect": "set system services rest"
    },
    "custom_item_69": {
        "description": "6.10.5.3 Ensure REST is Set to use PKI Certificate for HTTPS",
        "info": "The REST API should only be accessed using HTTPS with a PKI Certificate\n\nRationale:\n\nThe JUNOS REST API can be configured for access using either HTTP or HTTPS for connections.\n\nWhen configured to use HTTPS X.509 Certificates are used to:\n\nShare Public Encryption Keys\n\nProvide Identity Information\n\nValidate the Web Server's Identity\n\nEnforce Encryption Key Rollover by limiting their validity period\n\nJWeb can be configured to use Self Signed 'System-Generated' X.509 Certificates, where the JUNOS device makes an identity claim, such as 'I am myrouter.myorg.com', without any external validation. When an administrator connects to JWeb their browser will generate a Security Error due to this lack of validation, which the user will need to accept in order to proceed to the interface.\n\nWithout validation from a trusted Certificate Authority (CA), either an Internal or Public CA, administrators may be unable to detect when a management session is being intercepted or impersonated by an attacker. Additionally, a Self Signed certificate cannot be centrally revoked should a compromise be detected, relying instead on each user manually removing trust for the compromised Certificate.\n\nA Certificate Authority is a Trusted Third Party which validates X.509 Certificates by signing them, using a secure Hashing algorithm and their own Private Key. A CA may be part of an organization's internal Public Key Infrastructure (PKI) or a Public CA service such as those provided by Verisign, Entrust or Microsoft.\n\nCommonly, for signing Certificates used for internal management and systems, Organizations will configure their own PKI rather than paying for Public CA Services - configuring their End Points to trust Certificates signed by their CA through Group Policy or similar methods.\n\nEither option is equally acceptable for use with JWeb, but Self Signed Certificates should not be used.\n\nImpact:\n\nREST API Management may be lost if the Certificate is not valid or issued from a Certificate Authority which the Network Management/Automation Systems are not configured to trust.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "To configure REST over HTTPS, enter the following command from the [edit system services rest] hierarchy:\n\n[edit system services rest]\nuser@host# set https server-certificateWhereis the name of a Certificate which has already been loaded to the devices PKI Store.\nTo create a new Public/Private Key Pair in the devices PKI Store and generate Certificate Signing Request issue the following commands from Operational Mode:\n\nuser@host> request security pki generate-key-pair certificate-idtypesizeuser@host> request security pki generate-certificate-request certificate-iddomain-namesubjectWhere:is the Name that will be used for this Certificate throughout configurationis the Encryption Algorithm to be used (this should be either RSA or ECDSA)is the number of Bits used for the keys (use at least 2048bits for RSA or 256bits for ECDSA)is the FQDN which will be used to manage the device andis the Distinguished Name used to identify this device and certificate.\nOptionally, fields for email address, the device's IP Address and output Filename for the PKCS#10 CSR which will be generated can be included.\nThe CSR should then be submitted to the Certificate Authority for review and signing.\nOnce the CA returns the Certificate it can be uploaded to the JUNOS device and imported with the following command from Operational Mode:\n\nuser@host> request security pki local-certificate load certificate-idfilenameDefault Value:\n\nBy default the REST API is disabled.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services rest https server-certificate"
    },
    "custom_item_70": {
        "description": "6.10.5.4 Ensure REST HTTPS is Set to use Mutual Authentication",
        "info": "The REST HTTPS API should be configured for Mutual Authentication\n\nRationale:\n\nThe JUNOS REST API can be configured for access using either HTTP or HTTPS for connections.\n\nWhen configured to use HTTPS, X.509 Certificates are used to validate the JUNOS Devices identity to API Clients when they connect. Optionally, TLS Mutual Authentication may also be configured, whereby the REST API Client must also provide an X.509 Certificate signed by a mutually trusted Certificate Authority before it is permitted to connect.\n\nUsing a mutually trusted Certificate Authority (CA), either an Internal or Public CA, allows for both the Client Device (such as a Network Automation Server) and JUNOS Device to detect when a management session is being intercepted or impersonated by an attacker. Additionally, a centralized CA is able to revoke any Certificate's which may be compromised or have been issued to Clients who are no longer authorized.\n\nA Certificate Authority is a Trusted Third Party which validates X.509 Certificates by signing them, using a secure Hashing algorithm and their own Private Key. A CA may be part of an organization's internal Public Key Infrastructure (PKI) or an Public CA service such as those provided by Verisign, Entrust or Microsoft.\n\nCommonly, for signing Certificates used for internal management and systems, Organizations will configure their own PKI rather than paying for Public CA Services - configuring their End Points to trust Certificates signed by their CA through Group Policy or similar methods.\n\nEither option is equally acceptable for use REST TLS Mutual Authentication, but a ca-profile must be configured on the JUNOS Device (even where the device has preconfigured trust for some Public CAs).\n\nTLS/HTTPS Mutual Authentication does not replace User Authentication, which is still performed via an HTTP Authentication Header using details configured Local or Remote (via RADIUS/TACACS+) User.\n\nImpact:\n\nREST API Management may be lost if the Certificate is not valid or if Automation/Network Management Systems using the REST API are not also configured to support Mutual Authentication using valid Certificates from the same Certificate Authority.",
        "solution": "To configure REST HTTPS Mutual Authentication, enter the following command from the [edit system services rest] hierarchy:\n\n[edit system services rest]\nuser@host# set https mutual-authenticationWhereis the name of an existing Certificate Authority Profile configured on the JUNOS Device for a Trusted CA.\nTo configure a new CA Profile, use the following commands from the [edit security pki] hierarchy:\n\n[edit security pki]\nuser@host# set ca-profileca-identityIt is recommended that a Certificate Revocation List be set for the CA Profile, by including theusing the following command:\n\n[edit security pki]\nuser@host# set ca-profilerevocation-check crlFinally, the CAs' Public Certificate should be obtained an uploaded to the JUNOS Device and linked to the CA Profile:\n\n[edit security pki]\nuser@host# run request security pki ca-certificate load ca-profilefilenameDefault Value:\n\nBy default the REST API is disabled.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services rest https .+",
        "expect": "set system services rest https mutual-authentication .+"
    },
    "custom_item_71": {
        "description": "6.10.5.6 Ensure REST HTTPS Cipher List is Set to Suite B Only",
        "info": "The REST API should only be accessed using HTTPS with secure Cipher Suites.\n\nRationale:\n\nThe JUNOS REST API can be configured for access using either HTTP or HTTPS for connections.\n\nWhen configured to use HTTPS, the device supports a wide range of Cipher Suites which define the Encryption, Hashing and Key Exchange methods and algorithms. By default, in the interests of compatibility, this includes support for a number of older, weaker algorithms such as RC4 Encryption or MD5 Hashing, which are no longer considered suitable for protecting sensitive data or device management.\n\nIn Secure Environments, the REST API HTTPS Service should be configured to accept only Cipher Suites listed in the National Security Agencies Suite B Standards.\n\nSuite B standards for Cryptographic functions are developed and distributed by the US National Security Agency as part of Cryptographic Modernization Program for protection of US Government data, both unclassified and classified (to Secret). The Suite B Profile for Transport Layer Security (TLS) is set in RFC6460 and specifies two acceptable Profiles using ECDH with standard NIST Elliptic Curves, AES in Galois Counter Mode and SHA2.\n\nImpact:\n\nREST API Management may be lost if the Network Management System or Hosts do not support the secure Cipher Suites.",
        "solution": "To restrict the Cipher Suites used REST over HTTPS, enter the following command from the [edit system services rest] hierarchy:\n\n[edit system services rest]\nuser@host# set https cipher-list [ ecdhe-rsa-with-aes-128-gcm-SHA256 ecdhe-rsa-with-aes-256-gcm-SHA384 ]\n\nEither Cipher Suite may be omitted, but at least one of these Cipher Suites must be set. No other Cipher Suites may be used.\n\nDefault Value:\n\nBy default the REST API is disabled. When the REST API HTTPS Service is enabled, all Cipher Suites (including those with RC4 and insecure ciphers) are accepted, except for JUNOS FIPS mode, which supports only rsa-with-aes-256-gcm-SHA384, dhe-rsa-with-aes-128-gcm-SHA256, dhe-rsa-with-aes-256-gcm-SHA384, ecdhe-rsa-with-aes-128-gcm and ecdhe-rsa-with-aes-256-gcm.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53r5|IA-2(1),CN-L3|7.1.2.7(b),CSCv7|11.5,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),LEVEL|2A,NESA|T5.4.2,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services rest https cipher-suites (ecdhe-rsa-withaes-128-gcm-SHA256|ecdhe-rsa-with-aes-256-gcm-SHA384)",
        "number_of_lines": "^[1-2]$"
    },
    "custom_item_72": {
        "description": "6.10.5.11 Ensure REST Service Address is Set to OOB Management Only",
        "info": "The REST API Service Address should be set to OOB Management.\n\nRationale:\n\nThe REST API service allows remote scripts or users to connect to a JUNOS Device and execute RPC commands to operate and configure the device, potentially granting full control if connecting using a privileged account.\n\nTo protect the REST API from unauthorized use, access should be restricted to specific network management segments.\n\nBy default, when enabled, the REST API listens on port TCP/3000 (for HTTP) or TCP/3443 (for HTTPS) on all IP Addresses configured on the JUNOS Device. The addresses option can be configured with one or more IP Addresses to restrict the REST API to listening only on these addresses.\n\nIn Secure Environments, all Management Services including the REST API should be restricted to being access only through the JUNOS Device's dedicate Out of Band Management Interface (fxp0, em0, etc).\n\nImpact:\n\nHosts will be unable to connect to the REST API HTTPS Service on any addresses which are not configured.",
        "solution": "To restrict the IP Address/es on which the REST API will listen, enter the following command from the [edit system services rest] hierarchy:\n\n[edit system services rest]\nuser@host# set https addressesWhereis a single IP Address configured on the Device's Out of Band Management Interface.\nTo add multiple addresses, enter the following command:\n\n[edit system services rest]\nuser@host# set https addresses []\n\nTo remove a single address from the current list enter the following command:\n\n[edit system services rest]\nuser@host# delete https addressesDefault Value:\n\nBy default the REST API is disabled. When enabled, the REST API HTTPS Service listens on all configured IP Addresses.",
        "reference": "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv6|11.4,CSCv7|4.7,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system services rest https .+",
        "expect": "set system services rest https addresses .+"
    },
    "custom_item_73": {
        "description": "6.11.2 Ensure Auxiliary Port is Set as Insecure If Used",
        "info": "The Auxiliary Port should be set as Insecure if used.\n\nRationale:\n\nThe Auxiliary Port on a Juniper Device is used to connect Modems and other devices to allow remote administration of the router when other connectivity is not possible.\n\nConnections to the Auxiliary Port are treated in a very similar fashion to local Console Port connections.\n\nAlthough this is a useful function, connections via the Auxiliary Port represent a less secure method of remote administration compared to services such as SSH or HTTPS so the Aux Port is Disabled by default.\n\nWhere the Auxiliary Port is absolutely required for a deployment, logins to the Auxiliary Port using the highly privileged Root or Superuser accounts should be prevented by setting the JUNOS Device's Auxiliary Port as being Insecure in order to limit the scope for abuse.\n\nImpact:\n\nThe Auxiliary port will not permit logins using the Root or Superuser accounts.",
        "solution": "To set the Auxiliary Port as Insecure, issue the following command from the [edit system ports] hierarchy;\n\n[edit system ports]\nuser@host#set auxiliary insecure\n\nDefault Value:\n\nRoot login via the Auxiliary port is disabled by default on most platforms. If enabled, Insecure mode is not configured by default.",
        "reference": "800-171|3.4.2,800-171|3.14.6,800-171|3.14.7,800-53|CM-6,800-53|SI-4,800-53r5|CM-6,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSCv7|11,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|CM-6,ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ports auxiliary .+",
        "expect": "set system ports auxiliary insecure"
    },
    "custom_item_74": {
        "description": "6.11.3 Ensure Console Port is Set to Disabled",
        "info": "The JUNOS Device's Console Port should be disabled.\n\nRationale:\n\nAdministrators often use Console Port on a JUNOS Device to configure the Device via the CLI when they have physical access to the device.\n\nIn high security environments or deployments where the physical security of the JUNOS Device cannot be assured, such as CPE (Customer Premises Equipment), Point of Sales (POS) or Branch Office installations, disabling the console port will increase the difficulty of accessing the router for an attacker with physical access.\n\nConnecting to the console will not allow access to the CLI without restarting the JUNOS Device to access recovery options, an event which will show up in your monitoring and audit logs.\n\nImpact:\n\nThe JUNOS Device's CLI will no longer be accessible through the Console Port without rebooting the device.",
        "solution": "To disable the Console Port, issue the following command from the [edit system ports] hierarchy;\n\n[edit system ports]\nuser@host#set console disabled\n\nDefault Value:\n\nBy default, the Console Port is enabled",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ports console .+",
        "expect": "set system ports console disable"
    },
    "custom_item_75": {
        "description": "6.11.4 Ensure Console Port is Set as Insecure",
        "info": "The JUNOS Device's Console Port should be set as Insecure.\n\nRationale:\n\nAdministrators often use Console Port to configure the JUNOS Device when they have physical access to the device.\n\nIn high security environments or deployments where the physical security of the router is minimal, such as CPE (Customer Premises Equipment), Point of Sale (POS) or Branch Office installations, it is important to prevent both customers and intruders from accessing the Device's CLI or using the Password Recovery process using the Console Port.\n\nNormally if an attacker is able to connect a console cable and then restart the device, it is possible to reset the root password in order to gain full control.\n\nTo prevent this, the Console Port should be set as Insecure. This option, which persists after restart, prevents login to the JUNOS Device's Console Port using the Root account. When rebooting the JUNOS Device, the Root password will be required before beginning the Password Recovery process, such as booting into Single User Mode or running the Password Recovery Utility (depending on model).\n\nImpact:\n\nThe Console Port will not permit logins using the Root account.\n\nOn reboot, access to the Password Recovery process will require the Root password to be entered.",
        "solution": "To set the Console Port as Insecure, issue the following command from the [edit system ports] hierarchy;\n\n[edit system ports]\nuser@host#set console insecure\n\nDefault Value:\n\nBy default Root password recovery is possible from the console.",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|2A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system ports console .+",
        "expect": "set system ports console insecure"
    },
    "custom_item_76": {
        "description": "6.12.2 Ensure At Least 2 External SYSLOG Hosts are Set with Any/Info",
        "info": "Logging data must be sent to at least two external SYSLOG servers.\n\nRationale:\n\nLog information from a JUNOS Device can be vital in detecting an attack and to allow incidents to be analyzed, investigated and (where appropriate) prosecuted. SYSLOG information is also helpful in diagnosing and resolving non-security related operational issues on the network.\n\nBecause of this, one of the first tasks an attacker will attempt to accomplish after gaining access to a Network Device is to alter or delete logs to cover their tracks.\n\nTo prevent an attacker or a fault denying you access to log data, it is vital to send logs to at least one External Logging and/or SIEM (Security Incident and Event Manager) Server. JUNOS Devices use the industry standard SYSLOG protocol for this.\n\nSYSLOG entries are generated by a range of sources on a JUNOS Device, such as authorization which reports Authentication and Authorization events or PFE for events encountered by the Packet Forwarding Engine. Each of these sources are referred to as a Facility.\n\nIn addition to indicating what facility generated a log message, JUNOS SYSLOG also indicates and allows the administrator to filter based on the Severity Level for each message. There are eight possible levels, which are as follows:\n\nEmergency (0)\n\nAlert (1)\n\nCritical (2)\n\nError (3)\n\nWarning (4)\n\nNotice (5)\n\nInformational (6)\n\nAny (7) (called Debug on many SYSLOG systems)\n\nEach increase in level represents an increase in the detail and number of log messages created. Each level includes the messages from all preceding levels, so Critical includes all messages from both the Alert and Emergency levels.\n\nTo ensure that vital messages about the Health and Security of the JUNOS Device are not missed, or lost should an attacker delete local logs, at least two External SYSLOG or SIEM Servers should be configured to receive log messages from any Facility and at least info Severity.\n\nSYSLOG messages are sent in a 'fire and forget' manner over UDP, with no acknowledgement or ability to resend missed messages in the event a server is unable to handle them. Adding a second server significantly reduces the risk that messages are lost in the event of a network or server issue.\n\nImpact:\n\nNetwork Devices, particularly Firewalls, can generate a significant volumes of log data, it is essential that the target SYSLOG servers are suitably resourced to handle the expected volume of messages and it is strongly recommended that robust archiving and retention processes be employed.",
        "solution": "SYSLOG data is recorded locally by default, you can configure external SYSLOG servers by issuing the following commands from the [edit system syslog] hierarchy;\n\n[edit system syslog]\nuser@host# set hostany[edit system syslog]\nuser@host# set hostanyWhere:is the IP Address or Fully Qualified Domain Name of the first Remote SYSLOG or SIEM Serveris the IP Address or FQDN of a separate second Remote SYSLOG or SIEM Server. For added resilience, you may wish to place the second server on a different network to the first and this is recommended where possible.should be either any or info\n\nSome SYSLOG or SIEM Servers may require additional configuration items such as explicit-priority or structured-data options to be configured.\nIt is possible to filter SYSLOG messages to be forwarded to the host using a match or match-string condition. This should not be set for the device's the Remote SYSLOG Hosts configured in meeting this Recommendation.\n\nDefault Value:\n\nLog messages are not sent to remote hosts by default, but are stored locally in files in the /var/log/ folder.",
        "reference": "800-171|3.3.8,800-53|AU-9(2),800-53r5|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSCv7|6.5,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|2A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,PCI-DSSv3.2.1|10.5.3,PCI-DSSv3.2.1|10.5.4,PCI-DSSv4.0|10.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3069",
        "regex": "set system syslog host .+ any (any|info)",
        "number_of_lines": "^([2-9]|[1-9][0-9]+)$"
    }
}