{
    "custom_item_1": {
        "description": "Oracle version is = 12c",
        "sql_request": "SELECT banner FROM v$version WHERE banner LIKE 'Oracle%';",
        "sql_expect": "@ORACLE_DATABASE_VERSION@"
    },
    "custom_item_2": {
        "description": "O121-BP-021200 - Access to default accounts used to support replication must be restricted to authorized DBAs.",
        "sql_request": "select count(*) from all_tables where table_name like 'REPCAT%';",
        "sql_expect": "[^0]"
    },
    "custom_item_3": {
        "description": "O121-BP-021200 - Access to default accounts used to support replication must be restricted to authorized DBAs.",
        "info": "Replication database accounts are used for database connections between databases. Replication requires the configuration of these accounts using the same username and password on all databases participating in the replication. Replication connections use fixed user database links. This means that access to the replication account on one server provides access to the other servers participating in the replication. Granting unauthorized access to the replication account provides unauthorized and privileged access to all databases participating in the replication group.",
        "solution": "Change the password for default and custom replication accounts and provide the password to ISSO-authorized users only.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219824r879887_rule,STIG-ID|O121-BP-021200,STIG-Legacy|SV-75901,STIG-Legacy|V-61411,SWIFT-CSCv1|2.3,Vuln-ID|V-219824",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select count(*) from sys.dba_repcatlog;"
    },
    "custom_item_4": {
        "description": "O121-BP-021200 - Access to default accounts used to support replication must be restricted to authorized DBAs.",
        "info": "Replication database accounts are used for database connections between databases. Replication requires the configuration of these accounts using the same username and password on all databases participating in the replication. Replication connections use fixed user database links. This means that access to the replication account on one server provides access to the other servers participating in the replication. Granting unauthorized access to the replication account provides unauthorized and privileged access to all databases participating in the replication group.",
        "solution": "Change the password for default and custom replication accounts and provide the password to ISSO-authorized users only.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219824r879887_rule,STIG-ID|O121-BP-021200,STIG-Legacy|SV-75901,STIG-Legacy|V-61411,SWIFT-CSCv1|2.3,Vuln-ID|V-219824",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select count(*) from all_tables where table_name like 'REPCAT%';"
    },
    "custom_item_5": {
        "description": "O121-BP-021300 - Oracle instance names must not contain Oracle version numbers.",
        "info": "Service names may be discovered by unauthenticated users. If the service name includes version numbers or other database product information, a malicious user may use that information to develop a targeted attack.",
        "solution": "Follow the instructions in Oracle MetaLink Note 15390.1 (and related documents) to change the SID for the database without re-creating the database to a value that does not identify the Oracle version.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219825r879887_rule,STIG-ID|O121-BP-021300,STIG-Legacy|SV-75903,STIG-Legacy|V-61413,SWIFT-CSCv1|2.3,Vuln-ID|V-219825",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select instance_name||':'||version from v$instance;",
        "sql_expect": "^[A-Za-z0-9_-]+:[0-9.]+"
    },
    "custom_item_6": {
        "description": "O121-BP-021400 - Fixed user and public database links must be authorized for use.",
        "sql_request": "select count(*) from sys.dba_repcatlog;",
        "sql_expect": "[^0]"
    },
    "custom_item_7": {
        "description": "O121-BP-021400 - Fixed user and public database links must be authorized for use.",
        "info": "Database links define connections that may be used by the local database to access remote Oracle databases. These links provide a means for a compromise to the local database to spread to remote databases in the distributed database environment. Limiting or eliminating use of database links where they are not required to support the operational system can help isolate compromises to the local or a limited number of databases.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Document all authorized connections from the database to remote databases in the System Security Plan.\n\nRemove all unauthorized remote database connection definitions from the database.\n\nFrom SQL*Plus:\n\n  drop database link [link name];\nOR\n  drop public database link [link name];\n\nReview remote database connection definitions periodically and confirm their use is still required and authorized.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219826r879887_rule,STIG-ID|O121-BP-021400,STIG-Legacy|SV-75905,STIG-Legacy|V-61415,SWIFT-CSCv1|2.3,Vuln-ID|V-219826",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select owner||': '||db_link from dba_db_links;"
    },
    "custom_item_8": {
        "description": "O121-BP-021400 - Fixed user and public database links must be authorized for use.",
        "info": "Database links define connections that may be used by the local database to access remote Oracle databases. These links provide a means for a compromise to the local database to spread to remote databases in the distributed database environment. Limiting or eliminating use of database links where they are not required to support the operational system can help isolate compromises to the local or a limited number of databases.",
        "solution": "Document all authorized connections from the database to remote databases in the System Security Plan.\n\nRemove all unauthorized remote database connection definitions from the database.\n\nFrom SQL*Plus:\n\n  drop database link [link name];\nOR\n  drop public database link [link name];\n\nReview remote database connection definitions periodically and confirm their use is still required and authorized.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219826r879887_rule,STIG-ID|O121-BP-021400,STIG-Legacy|SV-75905,STIG-Legacy|V-61415,SWIFT-CSCv1|2.3,Vuln-ID|V-219826",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select count(*) from sys.dba_repcatlog;"
    },
    "custom_item_9": {
        "description": "O121-BP-021500 - A minimum of two Oracle control files must be defined and configured to be stored on separate, archived disks (physical or virtual) or archived partitions on a RAID device.",
        "info": "Oracle control files are used to store information critical to Oracle database integrity. Oracle uses these files to maintain time synchronization of database files as well as at system startup to verify the validity of system data and log files. Loss of access to the control files can affect database availability, integrity and recovery.",
        "solution": "To prevent loss of service during disk failure, multiple copies of Oracle control files must be maintained on separate disks in archived directories or on separate, archived directories within one or more RAID devices.\n\nAdding or moving a control file requires careful planning and execution.\n\nConsult and follow the instructions for creating control files in the Oracle Database Administrator's Guide, under Steps for Creating New Control Files.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219827r879887_rule,STIG-ID|O121-BP-021500,STIG-Legacy|SV-75907,STIG-Legacy|V-61417,SWIFT-CSCv1|2.3,Vuln-ID|V-219827",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name from v$controlfile;",
        "sql_expect": ".+"
    },
    "custom_item_10": {
        "description": "'V$LOG count > 2'",
        "sql_request": "select count(*) from V$LOG;"
    },
    "custom_item_11": {
        "description": "V$LOG where members > 1",
        "sql_request": "select count(*) from V$LOG where members > 1;"
    },
    "custom_item_12": {
        "description": "O121-BP-021700 - The Oracle WITH GRANT OPTION privilege must not be granted to non-DBA or non-Application administrator user accounts.",
        "info": "An account permission to grant privileges within the database is an administrative function. Minimizing the number and privileges of administrative accounts reduces the chances of privileged account exploitation. Application user accounts must never require WITH GRANT OPTION privileges since, by definition, they require only privileges to execute procedures or view / edit data.",
        "solution": "Revoke privileges granted the WITH GRANT OPTION from non-DBA and accounts that do not own application objects.\n\nRe-grant privileges without specifying WITH GRANT OPTION.\n\nNote: Do not revoke the system-generated grants such as those found on The SYS_PLSQL_% objects. They are system generated object types (a.k.a ShadowTypes) which are created internally by Oracle when you use the Pipelined Table Functions. This can result in (incorrect) compilation failures and/or invalidations when the users who are supposed to have access to the shadow types find themselves without access.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219829r879887_rule,STIG-ID|O121-BP-021700,STIG-Legacy|SV-75911,STIG-Legacy|V-61421,SWIFT-CSCv1|2.3,Vuln-ID|V-219829",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select grantee||': '||owner||'.'||table_name from dba_tab_privs where grantable = 'YES' and grantee not in (select distinct owner from dba_objects) and grantee not in (select grantee from dba_role_privs where granted_role = 'DBA') and table_name not like 'SYS_PLSQL_%' order by grantee;"
    },
    "custom_item_13": {
        "description": "O121-BP-021900 - The Oracle REMOTE_OS_AUTHENT parameter must be set to FALSE.",
        "info": "Setting this value to TRUE allows operating system authentication over an unsecured connection. Trusting remote operating systems can allow a user to impersonate another operating system user and connect to the database without having to supply a password. If REMOTE_OS_AUTHENT is set to true, the only information a remote user needs to connect to the database is the name of any user whose account is setup to be authenticated by the operating system.",
        "solution": "Document remote OS authentication in the System Security Plan.\n\nIf not required or not mitigated to an acceptable level, disable remote OS authentication.\n\nFrom SQL*Plus:\n\n  alter system set remote_os_authent = FALSE scope = spfile;\n\nThe above SQL*Plus command will set the parameter to take effect at next system startup.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219830r879887_rule,STIG-ID|O121-BP-021900,STIG-Legacy|SV-75915,STIG-Legacy|V-61425,SWIFT-CSCv1|2.3,Vuln-ID|V-219830",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = 'REMOTE_OS_AUTHENT';",
        "sql_expect": "FALSE"
    },
    "custom_item_14": {
        "description": "O121-BP-022000 - The Oracle REMOTE_OS_ROLES parameter must be set to FALSE.",
        "info": "Setting REMOTE_OS_ROLES to TRUE allows operating system groups to control Oracle roles. The default value of FALSE causes roles to be identified and managed by the database. If REMOTE_OS_ROLES is set to TRUE, a remote user could impersonate another operating system user over a network connection.",
        "solution": "Document remote OS roles in the System Security Plan.\n\nIf not required, disable use of remote OS roles.\n\nFrom SQL*Plus:\n\n  alter system set remote_os_roles = FALSE scope = spfile;\n\nThe above SQL*Plus command will set the parameter to take effect at next system startup.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219831r903017_rule,STIG-ID|O121-BP-022000,STIG-Legacy|SV-75917,STIG-Legacy|V-61427,SWIFT-CSCv1|2.3,Vuln-ID|V-219831",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = 'REMOTE_OS_ROLES';",
        "sql_expect": "FALSE"
    },
    "custom_item_15": {
        "description": "O121-BP-022100 - The Oracle SQL92_SECURITY parameter must be set to TRUE.",
        "info": "The configuration option SQL92_SECURITY specifies whether table-level SELECT privileges are required to execute an update or delete that references table column values. If this option is disabled (set to FALSE), the UPDATE privilege can be used to determine values that should require SELECT privileges.\n\nThe SQL92_SECURITY setting of TRUE prevents the exploitation of user credentials with only DELETE or UPDATE privileges on a table from being able to derive column values in that table by performing a series of update/delete statements using a where clause, and rolling back the change. In the following example, with SQL92_SECURITY set to FALSE, a user with only delete privilege on the scott.emp table is able to derive that there is one employee with a salary greater than 3000. With SQL92_SECURITY set to TRUE, that user is prevented from attempting to derive a value.\n\nSQL92_SECURITY = FALSE\nSQL> delete from scott.emp where sal > 3000;\n1 row deleted\nSQL> rollback;\nRollback complete\n\nSQL92_SECURITY = TRUE\nSQL> delete from scott.emp where sal > 3000;\ndelete from scott.emp where sal > 3000\n                  *\nERROR at line 1:\nORA-01031: insufficient privileges",
        "solution": "Enable SQL92 security.\n\nFrom SQL*Plus:\n\n  alter system set sql92_security = TRUE scope = spfile;\n\nThe above SQL*Plus command will set the parameter to take effect at next system startup.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219832r879887_rule,STIG-ID|O121-BP-022100,STIG-Legacy|SV-75919,STIG-Legacy|V-61429,SWIFT-CSCv1|2.3,Vuln-ID|V-219832",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = 'SQL92_SECURITY';",
        "sql_expect": "TRUE"
    },
    "custom_item_16": {
        "description": "O121-BP-022200 - The Oracle password file ownership and permissions should be limited and the REMOTE_LOGIN_PASSWORDFILE parameter must be set to EXCLUSIVE or NONE.",
        "info": "It is critically important to the security of your system that you protect your password file and the environment variables that identify the location of the password file. Any user with access to these could potentially compromise the security of the connection.\nThe REMOTE_LOGIN_PASSWORDFILE setting of 'NONE' disallows remote administration of the database. The REMOTE_LOGIN_PASSWORDFILE setting of 'EXCLUSIVE' allows for auditing of individual DBA logons to the SYS account. If not set to 'EXCLUSIVE', remote connections to the database as 'internal' or 'as SYSDBA' are not logged to an individual account.",
        "solution": "Disable use of the REMOTE_LOGIN_PASSWORDFILE where remote administration is not authorized by specifying a value of NONE.\n\nIf authorized, restrict use of a password file to exclusive use by each database by specifying a value of EXCLUSIVE.\n\nFrom SQL*Plus:\n\nalter system set REMOTE_LOGIN_PASSWORDFILE = 'EXCLUSIVE' scope = spfile;\n\nOR\n\nalter system set REMOTE_LOGIN_PASSWORDFILE = 'NONE' scope = spfile;\n\nThe above SQL*Plus command will set the parameter to take effect at next system startup.\n\nRestrict ownership and permissions on the Oracle password file to exclude world (Unix) or everyone (Windows).\n\nMore information regarding the ORAPWD file and the REMOTE_LOGIN_PASSWORDFILE parameter, can be found here:\nhttps://docs.oracle.com/database/121/ADMIN/dba.htm#ADMIN12478",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219833r879887_rule,STIG-ID|O121-BP-022200,STIG-Legacy|SV-75921,STIG-Legacy|V-61431,SWIFT-CSCv1|2.3,Vuln-ID|V-219833",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = 'REMOTE_LOGIN_PASSWORDFILE';",
        "sql_expect": "^(EXCLUSIVE|NONE)$"
    },
    "custom_item_17": {
        "description": "O121-BP-022300 - System privileges granted using the WITH ADMIN OPTION must not be granted to unauthorized user accounts.",
        "info": "The WITH ADMIN OPTION allows the grantee to grant a privilege to another database account. Best security practice restricts the privilege of assigning privileges to authorized personnel. Authorized personnel include DBAs, object owners, and, where designed and included in the application's functions, application administrators. Restricting privilege-granting functions to authorized accounts can help decrease mismanagement of privileges and wrongful assignments to unauthorized accounts.",
        "solution": "Revoke assignment of privileges with the WITH ADMIN OPTION from unauthorized users and re-grant them without the option.\n\nFrom SQL*Plus:\n\n  revoke [privilege name] from user [username];\n\nReplace [privilege name] with the named privilege and [username] with the named user.\n\nRestrict use of the WITH ADMIN OPTION to authorized administrators.\n\nDocument authorized privilege assignments with the WITH ADMIN OPTION in the System Security Plan.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219834r879887_rule,STIG-ID|O121-BP-022300,STIG-Legacy|SV-75923,STIG-Legacy|V-61433,SWIFT-CSCv1|2.3,Vuln-ID|V-219834",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select grantee, privilege from dba_sys_privs where grantee not in ('APEX_PUBLIC_USER', 'DIP', 'FLOWS_040100*', 'FLOWS_FILES', 'MDDATA', 'SPATIAL_WFS_ADMIN_USR', 'XS$NULL', 'ANONYMOUS', 'CTXSTS', 'EXFSYS', 'LBACSYS', 'MDSYS', 'OLAPSYS', 'ORACLE_OCM', 'ORDDATA', 'OWBSYS', 'ORDPLUGINS', 'ORDSYS', 'OUTLN', 'SI_INFORMTN_SCHEMA', 'SPATIAL_CSW_ADMIN_USR', 'WK_TEST', 'WK_SYS', 'WKPROXY', 'WMSYS', 'XDB', 'DBSNMP', 'MGMT_VIEW', 'SYS', 'SYSMAN', 'SYSTEM') and admin_option = 'YES' and grantee not in (select grantee from dba_role_privs where granted_role = 'DBA');"
    },
    "custom_item_18": {
        "description": "O121-BP-022400 - System Privileges must not be granted to PUBLIC.",
        "info": "System privileges can be granted to users and roles and to the user group PUBLIC. All privileges granted to PUBLIC are accessible to every user in the database. Many of these privileges convey considerable authority over the database and should be granted only to those persons responsible for administering the database. In general, these privileges should be granted to roles and then the appropriate roles should be granted to users. System privileges must never be granted to PUBLIC as this could allow users to compromise the database.",
        "solution": "Revoke any system privileges assigned to PUBLIC:\n\nFrom SQL*Plus:\n\n  revoke [system privilege] from PUBLIC;\n\nReplace [system privilege] with the named system privilege.\n\nNote:  System privileges are not granted to PUBLIC by default and would indicate a custom action.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219835r879887_rule,STIG-ID|O121-BP-022400,STIG-Legacy|SV-75925,STIG-Legacy|V-61435,SWIFT-CSCv1|2.3,Vuln-ID|V-219835",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select privilege from dba_sys_privs where grantee = 'PUBLIC';"
    },
    "custom_item_19": {
        "description": "O121-BP-022500 - Oracle roles granted using the WITH ADMIN OPTION must not be granted to unauthorized accounts.",
        "info": "The WITH ADMIN OPTION allows the grantee to grant a role to another database account. Best security practice restricts the privilege of assigning privileges to authorized personnel. Authorized personnel include DBAs, object owners, and, where designed and included in the application's functions, application administrators. Restricting privilege-granting functions to authorized accounts can help decrease mismanagement of privileges and wrongful assignments to unauthorized accounts.",
        "solution": "Revoke assignment of roles with the WITH ADMIN OPTION from unauthorized grantees and re-grant them without the option if required.\n\nSQL statements to remove the admin option from an unauthorized grantee:\n  revokefrom;\n  grantto;\n\nRestrict use of the WITH ADMIN OPTION to authorized administrators.\n\nDocument authorized role assignments with the WITH ADMIN OPTION in the System Security Plan.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219836r879887_rule,STIG-ID|O121-BP-022500,STIG-Legacy|SV-75927,STIG-Legacy|V-61437,SWIFT-CSCv1|2.3,Vuln-ID|V-219836",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select grantee||': '||granted_role from dba_role_privs where grantee not in ('APEX_PUBLIC_USER', 'DIP', 'FLOWS_040100*', 'FLOWS_FILES', 'MDDATA', 'SPATIAL_WFS_ADMIN_USR', 'XS$NULL', 'ANONYMOUS', 'CTXSTS', 'EXFSYS', 'LBACSYS', 'MDSYS', 'OLAPSYS', 'ORACLE_OCM', 'ORDDATA', 'OWBSYS', 'ORDPLUGINS', 'ORDSYS', 'OUTLN', 'SI_INFORMTN_SCHEMA', 'SPATIAL_CSW_ADMIN_USR', 'WK_TEST', 'WK_SYS', 'WKPROXY', 'WMSYS', 'XDB', 'DBSNMP', 'MGMT_VIEW', 'SYS', 'SYSMAN', 'SYSTEM') and admin_option = 'YES' and grantee not in (select distinct owner from dba_objects) and grantee not in (select grantee from dba_role_privs where granted_role = 'DBA') order by grantee;"
    },
    "custom_item_20": {
        "description": "O121-BP-022600 - Object permissions granted to PUBLIC must be restricted.",
        "info": "Permissions on objects may be granted to the user group PUBLIC. Because every database user is a member of the PUBLIC group, granting object permissions to PUBLIC gives all users in the database access to that object. In a secure environment, granting object permissions to PUBLIC must be restricted to those objects that all users are allowed to access. The policy does not require object permissions assigned to PUBLIC by the installation of Oracle Database server components be revoked.",
        "solution": "Revoke any privileges granted to PUBLIC for objects that are not owned by Oracle product accounts.\n\nFrom SQL*Plus:\n\nrevoke [privilege name] from [user name] on [object name];\n\nAssign permissions to custom application user roles based on job functions:\n\nFrom SQL*Plus:\n\ngrant [privilege name] to [user role] on [object name];",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219837r879887_rule,STIG-ID|O121-BP-022600,STIG-Legacy|SV-75929,STIG-Legacy|V-61439,SWIFT-CSCv1|2.3,Vuln-ID|V-219837",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select owner ||'.'|| table_name ||':'|| privilege from dba_tab_privs where grantee = 'PUBLIC' and owner not in ('APEX_PUBLIC_USER', 'DIP', 'FLOWS_040100*', 'FLOWS_FILES', 'MDDATA', 'SPATIAL_WFS_ADMIN_USR', 'XS$NULL', 'ANONYMOUS', 'CTXSTS', 'EXFSYS', 'LBACSYS', 'MDSYS', 'OLAPSYS', 'ORACLE_OCM', 'ORDDATA', 'OWBSYS', 'ORDPLUGINS', 'ORDSYS', 'OUTLN', 'SI_INFORMTN_SCHEMA', 'SPATIAL_CSW_ADMIN_USR', 'WK_TEST', 'WK_SYS', 'WKPROXY', 'WMSYS', 'XDB', 'DBSNMP', 'MGMT_VIEW', 'SYS', 'SYSMAN', 'SYSTEM');"
    },
    "custom_item_21": {
        "description": "O121-BP-022800 - Application role permissions must not be assigned to the Oracle PUBLIC role.",
        "info": "Permissions granted to PUBLIC are granted to all users of the database. Custom roles must be used to assign application permissions to functional groups of application users. The installation of Oracle does not assign role permissions to PUBLIC.",
        "solution": "Revoke role grants from PUBLIC.\n\nDo not assign role privileges to PUBLIC.\n\nFrom SQL*Plus:\n\n  revoke [role name] from PUBLIC;",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219839r879887_rule,STIG-ID|O121-BP-022800,STIG-Legacy|SV-75933,STIG-Legacy|V-61443,SWIFT-CSCv1|2.3,Vuln-ID|V-219839",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select granted_role from dba_role_privs where grantee = 'PUBLIC';"
    },
    "custom_item_22": {
        "description": "O121-BP-022900 - Oracle application administration roles must be disabled if not required and authorized.",
        "info": "Application administration roles, which are assigned system or elevated application object privileges, must be protected from default activation. Application administration roles are determined by system privilege assignment (create / alter / drop user) and application user role ADMIN OPTION privileges.",
        "solution": "For each role assignment returned, issue:\n\nFrom SQL*Plus:\n\n  alter user [username] default role all except [role];\n\nIf the user has more than one application administration role assigned, then remove assigned roles from default assignment and assign individually the appropriate default roles.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219840r879887_rule,STIG-ID|O121-BP-022900,STIG-Legacy|SV-75935,STIG-Legacy|V-61445,SWIFT-CSCv1|2.3,Vuln-ID|V-219840",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select grantee, granted_role from dba_role_privs where default_role='YES' and granted_role in (select grantee from dba_sys_privs where upper(privilege) like '%USER%') and grantee not in ('DBA', 'SYS', 'SYSTEM', 'CTXSYS', 'DBA', 'IMP_FULL_DATABASE','DATAPUMP_IMP_FULL_DATABASE','MDSYS', 'SYS', 'WKSYS') and grantee not in (select distinct owner from dba_tables) and grantee not in (select distinct username from dba_users where upper(account_status) like '%LOCKED%');"
    },
    "custom_item_23": {
        "description": "'job_queue_processes'",
        "sql_request": "select value from v$parameter where upper(name) = 'JOB_QUEUE_PROCESSES';",
        "sql_expect": "@JOB_QUEUE_PROC@"
    },
    "custom_item_24": {
        "description": "'max_job_slave_processes limit is set'",
        "sql_request": "select value from all_scheduler_global_attribute where ATTRIBUTE_NAME = 'MAX_JOB_SLAVE_PROCESSES';",
        "sql_expect": "@MAX_JOB_SLAVE_PROC@"
    },
    "custom_item_25": {
        "description": "dba_jobs",
        "sql_request": "select job, next_date, next_sec, failures, broken from dba_jobs;"
    },
    "custom_item_26": {
        "description": "owner",
        "sql_request": "select owner, job_name, state, job_class, job_type, job_action from dba_scheduler_jobs;"
    },
    "custom_item_27": {
        "description": "O121-BP-023200 - Unauthorized database links must not be defined and active.",
        "info": "DBMS links provide a communication and data transfer path definition between two databases that may be used by malicious users to discover and obtain unauthorized access to remote systems. Database links between production and development DBMSs provide a means for developers to access production data not authorized for their access or to introduce untested or unauthorized applications to the production database. Only protected, controlled, and authorized downloads of any production data to use for development may be allowed. Only applications that have completed the configuration management process may be introduced by the application object owner account to the production system.",
        "solution": "Document all remote or external interfaces used by the DBMS to connect to or allow connections from remote or external sources.\n\nInclude with the documentation as appropriate, any network ports or protocols, security accounts, and the sensitivity of any data exchanged.\n\nDo not define or configure database links between production databases and test or development databases.\n\nNote: Oracle Database Advanced Replication is deprecated in Oracle Database 12c. Use Oracle GoldenGate to replace all features of Advanced Replication, including multimaster replication, updatable materialized views, hierarchical materialized views, and deployment templates.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219843r879887_rule,STIG-ID|O121-BP-023200,STIG-Legacy|SV-75941,STIG-Legacy|V-61451,SWIFT-CSCv1|2.3,Vuln-ID|V-219843",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select db_link||': '||host from dba_db_links;"
    },
    "custom_item_28": {
        "description": "'Default Tablespaces",
        "sql_request": "select property_name, property_value from database_properties where property_name in ('DEFAULT_PERMANENT_TABLESPACE','DEFAULT_TEMP_TABLESPACE') and property_value = 'SYSTEM';"
    },
    "custom_item_29": {
        "description": "'User Tablespaces'",
        "sql_request": "select username from dba_users where (default_tablespace = 'SYSTEM' or temporary_tablespace = 'SYSTEM') and username not in ('LBACSYS','OUTLN','SYS','SYSTEM', 'SYSKM', 'SYSDG', 'SYSBACKUP');"
    },
    "custom_item_30": {
        "description": "O121-BP-023700 - Application owner accounts must have a dedicated application tablespace.",
        "info": "Separation of tablespaces by application helps to protect the application from resource contention and unauthorized access that could result from storage space reuses or host system access controls. Application data must be stored separately from system and custom user-defined objects to facilitate administration and management of its data storage. The SYSTEM tablespace must never be used for application data storage in order to prevent resource contention and performance degradation.",
        "solution": "Create and assign dedicated tablespaces for the storage of data by each application using the CREATE TABLESPACE command.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219848r879887_rule,STIG-ID|O121-BP-023700,STIG-Legacy|SV-75951,STIG-Legacy|V-61461,SWIFT-CSCv1|2.3,Vuln-ID|V-219848",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select distinct owner, tablespace_name from dba_SEGMENTS where owner not in ('SYS','SYSTEM','OUTLN','OLAPSYS','CTXSYS','WKSYS','ODM', 'ODM_MTR','MDSYS','ORDSYS','WMSYS','RMAN','XDB', 'AUDSYS','DBSNMP','GSMADMIN_INTERNAL') order by tablespace_name;"
    },
    "custom_item_31": {
        "description": "NOARCHIVELOG",
        "sql_request": "select log_mode from v$database;",
        "sql_expect": "NOARCHIVELOG"
    },
    "custom_item_32": {
        "description": "log_archive_dest",
        "sql_request": "select value from v$parameter where upper(name) = 'LOG_ARCHIVE_DEST';",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_33": {
        "description": "log_archive_dest",
        "sql_request": "select name, value from v$parameter where upper(name) LIKE 'LOG_ARCHIVE_DEST_%' and NOT upper(name) like 'LOG_ARCHIVE_DEST_STATE%';",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_34": {
        "description": "DB_RECOVERY_FILE_DEST",
        "sql_request": "select value from v$parameter where upper(name) = 'DB_RECOVERY_FILE_DEST';",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_35": {
        "description": "O121-BP-023900 - The Oracle _TRACE_FILES_PUBLIC parameter if present must be set to FALSE.",
        "info": "The _TRACE_FILES_PUBLIC parameter is used to make trace files used for debugging database applications and events available to all database users. Use of this capability precludes the discrete assignment of privileges based on job function. Additionally, its use may provide access to external files and data to unauthorized users.",
        "solution": "From SQL*Plus (shutdown database instance):\n\n  shutdown immediate\n\nFrom SQL*Plus (create a pfile from spfile):\n\n  create pfile='[PATH]init[SID].ora' from spfile;\n\nEdit the init[SID].ora file and remove the following line:\n\n  *._trace_files_public=TRUE\n\nFrom SQL*Plus (update the spfile using the pfile):\n\n  create spfile from pfile='[PATH]init[SID].ora';\n\nFrom SQL*Plus (start the database instance):\n\n  startup\n\nNote: [PATH] depends on the platform (Windows or UNIX).\n\nEnsure the file is directed to a writable location.\n\n[SID] is equal to the oracle SID or database instance ID.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219850r879887_rule,STIG-ID|O121-BP-023900,STIG-Legacy|SV-75955,STIG-Legacy|V-61465,SWIFT-CSCv1|2.3,Vuln-ID|V-219850",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = '_TRACE_FILES_PUBLIC';",
        "sql_expect": "false"
    },
    "custom_item_36": {
        "description": "O121-BP-024000 - Application object owner accounts must be disabled when not performing installation or maintenance actions.",
        "info": "Object ownership provides all database object permissions to the owned object. Access to the application object owner accounts requires special protection to prevent unauthorized access and use of the object ownership privileges. In addition to the high privileges to application objects assigned to this account, it is also an account that, by definition, is not accessed interactively except for application installation and maintenance. This reduced access to the account means that unauthorized access to the account could go undetected. To help protect the account, it must be enabled only when access is required.",
        "solution": "Disable any application object owner accounts.\n\nFrom SQL*Plus:\n  alter user [username] account lock;\n\nEnable application object owner accounts only for installation and maintenance.\n\nDBAs are special purpose accounts and do not require disabling although they may own objects.\n\nFor application objects that require routine maintenance, e.g. index objects, to maintain performance, consider allowing a special purpose account to own the index or enable the application owner account for the duration of the routine maintenance function only.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219851r879887_rule,STIG-ID|O121-BP-024000,STIG-Legacy|SV-75957,STIG-Legacy|V-61467,SWIFT-CSCv1|2.3,Vuln-ID|V-219851",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select distinct o.owner from dba_objects o, dba_users u where o.owner not in ('SYS','SYSTEM','LBACSYS','XDB') and o.object_type <> 'SYNONYM' and o.owner = username and upper(account_status) not like '%LOCKED%';"
    },
    "custom_item_37": {
        "description": "O121-BP-024750 - Oracle database products must be a version supported by the vendor.",
        "info": "Unsupported commercial and database systems should not be used because fixes to newly identified bugs will not be implemented by the vendor. The lack of support can result in potential vulnerabilities. Systems at unsupported servicing levels or releases will not receive security updates for new vulnerabilities, which leaves them subject to exploitation.\n\nWhen maintenance updates and patches are no longer available, the database software is no longer considered supported and should be upgraded or decommissioned.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Remove or decommission all unsupported software products.\n\nUpgrade unsupported DBMS or unsupported components to a supported version of the product.\n\nOracle recommends the following upgrade options:\n\nFor product longevity and patching, Oracle strongly recommends upgrading to 19c, which is the Long-Term Release with a support end date of April 30, 2027 (or April 30, 2024 if you choose not to pay Extended Support fees or purchase a ULA).\nIf  currently running 12.1.x, upgrade to the terminal release (12.1.0.2) for the DB Release you are running, and then continue the upgrade process by upgrading to the 19c.\nIf currently running 12.2.0.1 or 18c, upgrade to 19c before the error correction grace periods for 12.2.0.1 and 18c expire.",
        "reference": "800-53|SA-22a.,800-53r5|SA-22a.,CAT|I,CCI|CCI-003376,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),Rule-ID|SV-251802r944386_rule,STIG-ID|O121-BP-024750,Vuln-ID|V-251802",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select version from v$instance;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_38": {
        "description": "O121-BP-025500 - Replication accounts must not be granted DBA privileges.- 'No replication objects exist'",
        "sql_request": "select 'The number of replication objects defined is: '|| count(*) from all_tables where table_name like 'REPCAT%';",
        "sql_expect": "The number of replication objects defined is: [^0]"
    },
    "custom_item_39": {
        "description": "O121-BP-025500 - Replication accounts must not be granted DBA privileges.",
        "info": "Replication accounts may be used to access databases defined for the replication architecture. An exploit of a replication on one database could lead to the compromise of any database participating in the replication that uses the same account name and credentials. If the replication account is compromised and it has DBA privileges, the database is at additional risk to unauthorized or malicious action.",
        "solution": "Restrict privileges assigned to replication accounts to the fewest possible privileges.\n\nRemove DBA roles from replication accounts.\n\nCreate and use custom replication accounts assigned least privileges for supporting replication operations.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219866r879887_rule,STIG-ID|O121-BP-025500,STIG-Legacy|SV-76003,STIG-Legacy|V-61513,SWIFT-CSCv1|2.3,Vuln-ID|V-219866",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select count(*) from sys.dba_repcatlog;"
    },
    "custom_item_40": {
        "description": "O121-BP-025500 - Replication accounts must not be granted DBA privileges.",
        "info": "Replication accounts may be used to access databases defined for the replication architecture. An exploit of a replication on one database could lead to the compromise of any database participating in the replication that uses the same account name and credentials. If the replication account is compromised and it has DBA privileges, the database is at additional risk to unauthorized or malicious action.",
        "solution": "Restrict privileges assigned to replication accounts to the fewest possible privileges.\n\nRemove DBA roles from replication accounts.\n\nCreate and use custom replication accounts assigned least privileges for supporting replication operations.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219866r879887_rule,STIG-ID|O121-BP-025500,STIG-Legacy|SV-76003,STIG-Legacy|V-61513,SWIFT-CSCv1|2.3,Vuln-ID|V-219866",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select 'The number of replication objects defined is: '|| count(*) from all_tables where table_name like 'REPCAT%';",
        "sql_expect": "The number of replication objects defined is:[\\s\\t]*0"
    },
    "custom_item_41": {
        "description": "O121-BP-025600 - Network access to the DBMS must be restricted to authorized personnel.",
        "info": "Restricting remote access to specific, trusted systems helps prevent access by unauthorized and potentially malicious users.",
        "solution": "Configure the database listener to restrict access by IP address or set up an external device to restrict network access to the DBMS.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219867r879887_rule,STIG-ID|O121-BP-025600,STIG-Legacy|SV-76005,STIG-Legacy|V-61515,SWIFT-CSCv1|2.3,Vuln-ID|V-219867",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = 'SERVICE_NAMES';",
        "sql_expect": "@LOCAL_SVC_NAME@"
    },
    "custom_item_42": {
        "description": "standard auditing",
        "sql_request": "select value from v$parameter where upper(name) = 'AUDIT_SYS_OPERATIONS';",
        "sql_expect": "true"
    },
    "custom_item_43": {
        "description": "unified auditing",
        "sql_request": "select count(*) from audit_unified_enabled_policies where entity_name = 'SYS';"
    },
    "custom_item_44": {
        "description": "dba_sa_audit_options",
        "sql_request": "select * from dba_sa_audit_options;"
    },
    "custom_item_45": {
        "description": "Unified Auditing",
        "sql_request": "SELECT * FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": ".+"
    },
    "custom_item_46": {
        "description": "O121-BP-026300 - Remote database or other external access must use fully-qualified names.",
        "info": "The Oracle GLOBAL_NAMES parameter is used to set the requirement for database link names to be the same name as the remote database whose connection they define. By using the same name for both, ambiguity is avoided and unauthorized or unintended connections to remote databases are less likely.",
        "solution": "From SQL*Plus:\n\n  alter system set global_names = TRUE scope = spfile;\n\nNote: This parameter, if changed, will affect all currently defined Oracle database links.\n\nThe above SQL*Plus command will set the parameter to take effect at next system startup.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219872r879887_rule,STIG-ID|O121-BP-026300,STIG-Legacy|SV-76019,STIG-Legacy|V-61529,SWIFT-CSCv1|2.3,Vuln-ID|V-219872",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = 'GLOBAL_NAMES';",
        "sql_expect": "true"
    },
    "custom_item_47": {
        "description": "O121-BP-026400 - The /diag subdirectory under the directory assigned to the DIAGNOSTIC_DEST parameter must be protected from unauthorized access.",
        "info": "/diag indicates the directory where trace, alert, core and incident directories and files are located. The files may contain sensitive data or information that could prove useful to potential attackers.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Alter host system permissions to the/diag directory to the Oracle process and software owner accounts, DBAs, SAs (if required) and developers or other users that may specifically require access for debugging or other purposes.\n\nAuthorize and document user access requirements to the directory outside of the Oracle, DBA and SA account list.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-219873r879887_rule,STIG-ID|O121-BP-026400,STIG-Legacy|SV-76021,STIG-Legacy|V-61531,SWIFT-CSCv1|2.3,Vuln-ID|V-219873",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select value from v$parameter where upper(name) = 'DIAGNOSTIC_DEST';",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_48": {
        "description": "O121-C1-015000 - DBMS default accounts must be assigned custom passwords.",
        "info": "Password maximum lifetime is  the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.\n\nPasswords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.\n\nOne method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.\n\nDBMS default passwords provide a commonly known and exploited means for unauthorized access to database installations.",
        "solution": "Change passwords for DBMS accounts to non-default values. Where necessary, unlock or enable accounts to change the password, and then return the account to disabled or locked status.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237698r879887_rule,STIG-ID|O121-C1-015000,STIG-Legacy|SV-76031,STIG-Legacy|V-61541,SWIFT-CSCv1|2.3,Vuln-ID|V-237698",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT * FROM SYS.DBA_USERS_WITH_DEFPWD;",
        "sql_expect": "XS$NULL"
    },
    "custom_item_49": {
        "description": "DBMS - Standard Auditing",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_50": {
        "description": "O121-P3-006200 - The DBMS must protect against an individual who uses a shared account falsely denying having performed a particular action.",
        "info": "Non-repudiation of actions taken is required in order to maintain application integrity. Examples of particular actions taken by individuals include creating information, sending a message, approving information (e.g., indicating concurrence or signing a contract), and receiving a message.\n\nNon-repudiation protects individuals against later claims by an author of not having authored a particular document, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document.\n\nAuthentication via shared accounts does not provide individual accountability for actions taken on the DBMS or data. Whenever a single database account is used to connect to the database, a secondary authentication method that provides individual accountability is required. This scenario most frequently occurs when an externally hosted application authenticates individual users to the application and the application uses a single account to retrieve or update database information on behalf of the individual users.\n\nWhen shared accounts are utilized without another means of identifying individual users, users may deny having performed a particular action.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.",
        "solution": "Use accounts assigned to individual users where feasible. Configure DBMS to provide individual accountability at the DBMS level, and in audit logs, for actions performed under a shared database account.\n\nModify applications and data tables that are not capturing individual user identity to do so.\n\nCreate and enforce the use of individual user IDs for logging on to Oracle tools and third-party products.\n\nIf Oracle auditing is not already enabled, enable it.\n\nIf Standard Auditing is used:\nIf Oracle (or third-party) auditing is not already enabled, enable it. For Oracle auditing, use this query:\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nLink the oracle binary with uniaud_on, and then restart the database. Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation at the locations above.\n\nIf this level of auditing does not meet site-specific requirements, consider deploying the Oracle Audit Vault.  The Audit Vault is a highly configurable option from Oracle made specifically for performing the audit functions.  It has reporting capabilities as well as user-defined rules that provide additional flexibility for complex auditing requirements.",
        "reference": "800-53|AU-10,800-53r5|AU-10,CAT|III,CCI|CCI-000166,CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-10,NESA|T4.3.1,NESA|T7.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220313r879554_rule,STIG-ID|O121-P3-006200,STIG-Legacy|SV-76377,STIG-Legacy|V-61887,Vuln-ID|V-220313",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_51": {
        "description": "O121-C2-007400 - The DBMS must produce audit records containing sufficient information to establish what type of events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nDatabase software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly what actions were performed. This requires specific information regarding the event type an audit record is referring to. If event type information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include what type of event occurred. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000130,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220270r879563_rule,STIG-ID|O121-C2-007400,STIG-Legacy|SV-76117,STIG-Legacy|V-61627,SWIFT-CSCv1|6.4,Vuln-ID|V-220270",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_52": {
        "description": "O121-C2-007500 - The DBMS must produce audit records containing sufficient information to establish when (date and time) the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nDatabase software is capable of a range of actions on data stored within the database. It's important, for accurate forensic analysis, to know exactly when specific actions were performed. This requires the date and time an audit record is referring to. If date and time information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the date and time of any user/subject or process associated with the event. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000131,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220271r879564_rule,STIG-ID|O121-C2-007500,STIG-Legacy|SV-76121,STIG-Legacy|V-61631,SWIFT-CSCv1|6.4,Vuln-ID|V-220271",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_53": {
        "description": "O121-C2-007600 - The DBMS must produce audit records containing sufficient information to establish where the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nWithout sufficient information establishing where the audit events occurred, investigation into the cause of events is severely hindered.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include where the event occurred. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\n Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000132,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220272r879565_rule,STIG-ID|O121-C2-007600,STIG-Legacy|SV-76123,STIG-Legacy|V-61633,SWIFT-CSCv1|6.4,Vuln-ID|V-220272",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_54": {
        "description": "O121-C2-007700 - The DBMS must produce audit records containing sufficient information to establish the sources (origins) of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control, includes, but is not limited to:  timestamps, source and destination IP addresses, user/process identifiers, event descriptions, application specific events, success/fail indications, file names involved, access control or flow control rules invoked.\n\nWithout information establishing the source of activity, the value of audit records from a forensics perspective is questionable.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the source of the event. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000133,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220273r879566_rule,STIG-ID|O121-C2-007700,STIG-Legacy|SV-76125,STIG-Legacy|V-61635,SWIFT-CSCv1|6.4,Vuln-ID|V-220273",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_55": {
        "description": "O121-C2-007800 - The DBMS must produce audit records containing sufficient information to establish the outcome (success or failure) of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes, but is not limited to: timestamps, source and destination IP addresses, user/process identifiers, event descriptions, application specific events, success/fail indications, file names involved, access control, or flow control rules invoked.\n\nSuccess and failure indicators ascertain the outcome of a particular event. As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. Without knowing the outcome of audit events, it is very difficult to accurately recreate the series of events during forensic analysis.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the outcome. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000134,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220274r879567_rule,STIG-ID|O121-C2-007800,STIG-Legacy|SV-76127,STIG-Legacy|V-61637,SWIFT-CSCv1|6.4,Vuln-ID|V-220274",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_56": {
        "description": "O121-C2-007900 - The DBMS must produce audit records containing sufficient information to establish the identity of any user/subject or process associated with the event.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nDatabase software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly who performed a given action.  If user identification information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the identity of any user/subject or process associated with the event. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-001487,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220275r879568_rule,STIG-ID|O121-C2-007900,STIG-Legacy|SV-76129,STIG-Legacy|V-61639,SWIFT-CSCv1|6.4,Vuln-ID|V-220275",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_57": {
        "description": "O121-C2-008000 - The DBMS must include organization-defined additional, more detailed information in the audit records for audit events identified by type, location, or subject.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nIn addition, the application must have the capability to include organization-defined additional, more detailed information in the audit records for audit events. These events may be identified by type, location, or subject.\n\nAn example of detailed information the organization may require in audit records is full-text recording of privileged commands or the individual identities of shared account users.\n\nSome organizations may determine that more detailed information is required for specific database event types.  If this information is not available, it could negatively impact forensic investigations into user actions or other malicious events.",
        "solution": "Either configure the DBMS's auditing to audit organization-defined auditable events, or, if preferred, use a third-party or custom tool. The tool must provide the minimum capability to audit the required events.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\n\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf the organization-defined additional audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation at the location below.\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation, at the location below.\n\nIf Unified Auditing is used:\nUse this process to ensure auditable events are captured:\n\nSELECT * FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';\n\nIf Oracle returns the value 'TRUE', this is not a finding.\n\nOtherwise,\nLink the oracle binary with uniaud_on, and then restart the database. Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nIf the organization-defined additional audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation at the location below.\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation, at the location below.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3(1),800-53r5|AU-3(1),CAT|II,CCI|CCI-000135,CN-L3|7.1.3.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3(1),NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220276r879569_rule,STIG-ID|O121-C2-008000,STIG-Legacy|SV-76131,STIG-Legacy|V-61641,SWIFT-CSCv1|6.4,Vuln-ID|V-220276",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_58": {
        "description": "O121-C2-006800 - The DBMS must provide audit record generation capability for organization-defined auditable events within the database.",
        "info": "Audit records can be generated from various components within the information system. (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system. Audit records can be generated from various components within the information system, such as network interfaces, hard disks, modems, etc. From an application perspective, certain specific application functionalities may be audited, as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).\n\nOrganizations may define the organizational personnel accountable for determining which application components shall provide auditable events.\n\nAuditing provides accountability for changes made to the DBMS configuration or its objects and data. It provides a means to discover suspicious activity and unauthorized changes. Without auditing, a compromise may go undetected and without a means to determine accountability.\n\nThe Department of Defense has established the following as the minimum set of auditable events. Most can be audited via Oracle settings; some - marked here with an asterisk - cannot, and may require OS settings.\n- Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g. classification levels).\n- Successful and unsuccessful logon attempts, privileged activities or other system level access\n- Starting and ending time for user access to the system, concurrent logons from different workstations.\n- Successful and unsuccessful accesses to objects.\n- All program initiations.\n- *All direct access to the information system.\n- All account creations, modifications, disabling, and terminations.\n- *All kernel module loads, unloads, and restarts.",
        "solution": "Configure the DBMS's auditing to audit organization-defined auditable events. If preferred, use a third-party tool. The tool must provide the minimum capability to audit the required events.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation at the locations below.\n\nIf Unified Auditing is used:\nUse this process to ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database. Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation at the locations above.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220267r879559_rule,STIG-ID|O121-C2-006800,STIG-Legacy|SV-76111,STIG-Legacy|V-61621,SWIFT-CSCv1|6.4,Vuln-ID|V-220267",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select name,value from v$parameter where upper(name) = 'AUDIT_TRAIL' AND upper(value) != 'NONE';",
        "sql_expect": "audit_trail"
    },
    "custom_item_59": {
        "description": "O121-C2-009300 - The system must protect audit information from any type of unauthorized access.",
        "info": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.\n\nThis requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.\n\nAdditionally, applications with user interfaces to audit records must not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.",
        "solution": "Add controls and modify permissions to protect database audit log data from unauthorized access, whether stored in the database itself or at the OS level.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000162,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220277r879576_rule,STIG-ID|O121-C2-009300,STIG-Legacy|SV-76143,STIG-Legacy|V-61653,Vuln-ID|V-220277",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT GRANTEE, TABLE_NAME, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUD$';"
    },
    "custom_item_60": {
        "description": "O121-C2-009400 - The system must protect audit information from unauthorized modification.",
        "info": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification.\n\nThis requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions and limiting log data locations.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make access decisions regarding the modification of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nModification of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database.",
        "solution": "Add controls and modify permissions to protect database audit log data from unauthorized modification, whether stored in the database itself or at the OS level.\n\n- - - - -\nIf Standard Auditing is used:\nRevoke access to the AUD$ table to anyone who should not have access to it.\n\nIn the check we looked for all users who had access to the AUD$ table. To fix this, use the REVOKE command to revoke access to users who should not have access to the audit data.\n\nREVOKE statement\n\nUse the REVOKE statement to remove permissions from a specific user or from all users to perform actions on database objects.\nThe following types of permissions can be revoked:\n\n    Delete data from a specific table.\n    Insert data into a specific table.\n    Create a foreign key reference to the named table or to a subset of columns from a table.\n    Select data from a table, view, or a subset of columns in a table.\n    Create a trigger on a table.\n    Update data in a table or in a subset of columns in a table.\n    Run a specified routine (function or procedure).\n\nIf a user named FRED had access to the AUD$ table and wanting to revoke that access, use the following command. The syntax that would be used for the REVOKE statement for tables is as follows:\n\nREVOKE privilege-type ON [ TABLE ] { table-Name | view-Name } FROM grantees\n\nSQL>REVOKE SELECT ON TABLE AUD$ FROM FRED;\n\nRevoking a privilege without specifying a column list revokes the privilege for all of the columns in the table.\nSyntax for routines\n\ntable-privileges include\n\n  DELETE |\n  INSERT |\n  REFERENCES [column list] |\n  SELECT [column list] |\n  TRIGGER |\n  UPDATE [column list]\n\ncolumn list\n\n  ( column-identifier {, column-identifier}* )\n\nUse the ALL PRIVILEGES privilege type to revoke all of the permissions from the user for the specified table. Can also revoke one or more table privileges by specifying a privilege-list.\n\nUse the DELETE privilege type to revoke permission to delete rows from the specified table.\n\nUse the INSERT privilege type to revoke permission to insert rows into the specified table.\n\nUse the REFERENCES privilege type to revoke permission to create a foreign key reference to the specified table. If a column list is specified with the REFERENCES privilege, the permission is revoked on only the foreign key reference to the specified columns.\n\nUse the SELECT privilege type to revoke permission to perform SELECT statements on a table or view. If a column list is specified with the SELECT privilege, the permission is revoked on only those columns. If no column list is specified, then the privilege is valid on all of the columns in the table.\n\nUse the TRIGGER privilege type to revoke permission to create a trigger on the specified table.\n\nUse the UPDATE privilege type to revoke permission to use the UPDATE statement on the specified table. If a column list is specified, the permission is revoked only on the specified columns.\ngrantees\n\n  { authorization ID | PUBLIC } [,{ authorization ID | PUBLIC } ] *\n\nCan revoke the privileges from specific users or from all users. Use the keyword PUBLIC to specify all users. The privileges revoked from PUBLIC and from individual users are independent privileges. For example, a SELECT privilege on table t is granted to both PUBLIC and to the authorization ID harry. The SELECT privilege is later revoked from the authorization ID 'Harry', but the authorization ID 'Harry' can access the table through the PUBLIC privilege.\n\nRestriction: Cannot revoke the privileges of the owner of an object.\nroutine-designator\n\n  {\n   qualified-name [ signature ]\n  }\n\nCascading object dependencies\n\nFor views, triggers, and constraints, if the privilege on which the object depends is revoked, the object is automatically dropped. Derby does not try to determine if there are other privileges that can replace the privileges that are being revoked. For more information, see 'SQL standard authorization' in the Java DB Developer's Guide.\nLimitations\n\nThe following limitations apply to the REVOKE statement:\n\nTable-level privileges:\n\nAll of the table-level privilege types for a specified grantee and table ID are stored in one row in the SYSTABLEPERMS system table. For example, when user2 is granted the SELECT and DELETE privileges on table user1.t1, a row is added to the SYSTABLEPERMS table. The GRANTEE field contains user2 and the TABLEID contains user1.t1. The SELECTPRIV and DELETEPRIV fields are set to Y. The remaining privilege type fields are set to N.\n\nWhen a grantee creates an object that relies on one of the privilege types, the Derby engine tracks the dependency of the object on the specific row in the SYSTABLEPERMS table. For example, user2 creates the view v1 by using the statement SELECT * FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1). The dependency manager knows only that the view is dependent on a privilege type in that specific row but does not track exactly which privilege type the view is dependent on.\n\nWhen a REVOKE statement for a table-level privilege is issued for a grantee and table ID, all of the objects that are dependent on the grantee and table ID are dropped. For example, if user1 revokes the DELETE privilege on table t1 from user2, the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the DELETE privilege for GRANTEE(user2), TABLEID(user1.t1).\n\nColumn-level privileges:\n\nOnly one type of privilege for a specified grantee and table ID are stored in one row in the SYSCOLPERMS system table. For example, when user2 is granted the SELECT privilege on table user1.t1 for columns c12 and c13, a row is added to the SYSCOLPERMS. The GRANTEE field contains user2, the TABLEID contains user1.t1, the TYPE field contains S, and the COLUMNS field contains c12, c13.\n\nWhen a grantee creates an object that relies on the privilege type and the subset of columns in a table ID, the Derby engine tracks the dependency of the object on the specific row in the SYSCOLPERMS table. For example, user2 creates the view v1 by using the statement SELECT c11 FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S). The dependency manager knows that the view is dependent on the SELECT privilege type but does not track exactly which columns the view is dependent on.\n\nWhen a REVOKE statement for a column-level privilege is issued for a grantee, table ID, and type, all of the objects that are dependent on the grantee, table ID, and type are dropped. For example, if user1 revokes the SELECT privilege on column c12 on table user1.t1 from user2, the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the column c12 for GRANTEE(user2), TABLEID(user1.t1), TYPE(S).\n\nIf Unified Auditing is used:\n\nApply the same process used in standard auditing to the tables with AUDSYS as the owner.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000163,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220278r879577_rule,STIG-ID|O121-C2-009400,STIG-Legacy|SV-76145,STIG-Legacy|V-61655,Vuln-ID|V-220278",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT GRANTEE, TABLE_NAME, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUD$';"
    },
    "custom_item_61": {
        "description": "O121-C2-009500 - The system must protect audit information from unauthorized deletion.",
        "info": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.\n\nTo ensure the veracity of audit data the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods which will depend upon system architecture and design.\n\nSome commonly employed methods include:  ensuring log files enjoy the proper file system permissions utilizing file system protections; restricting access; and backing up log data to ensure log data is retained.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order make access decisions regarding the deletion of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nDeletion of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database.",
        "solution": "Add controls and modify permissions to protect database audit log data from unauthorized deletion, whether stored in the database itself or at the OS-level.\n\n- - - - -\nIf Standard Auditing is used:\nRevoke access to the AUD$ table to anyone who should not have access to it.\n\nIn the check we looked for all users who had access to the AUD$ table. To fix this, use the REVOKE command to revoke access to users who should not have access to the audit data.\n\nREVOKE statement\n\nUse the REVOKE statement to remove permissions from a specific user or from all users to perform actions on database objects.\nThe following types of permissions can be revoked:\n\n    Delete data from a specific table.\n    Insert data into a specific table.\n    Create a foreign key reference to the named table or to a subset of columns from a table.\n    Select data from a table, view, or a subset of columns in a table.\n    Create a trigger on a table.\n    Update data in a table or in a subset of columns in a table.\n    Run a specified routine (function or procedure).\n\nIf a user named FRED had access to the AUD$ table and wanting to revoke that access, use the following command. The syntax that would be used for the REVOKE statement for tables is as follows:\n\nREVOKE privilege-type ON [ TABLE ] { table-Name | view-Name } FROM grantees\n\nSQL>REVOKE SELECT ON TABLE AUD$ FROM FRED;\n\nRevoking a privilege without specifying a column list revokes the privilege for all of the columns in the table.\nSyntax for routines\n\ntable-privileges include\n\n  DELETE |\n  INSERT |\n  REFERENCES [column list] |\n  SELECT [column list] |\n  TRIGGER |\n  UPDATE [column list]\n\ncolumn list\n\n  ( column-identifier {, column-identifier}* )\n\nUse the ALL PRIVILEGES privilege type to revoke all of the permissions from the user for the specified table. Can also revoke one or more table privileges by specifying a privilege-list.\n\nUse the DELETE privilege type to revoke permission to delete rows from the specified table.\n\nUse the INSERT privilege type to revoke permission to insert rows into the specified table.\n\nUse the REFERENCES privilege type to revoke permission to create a foreign key reference to the specified table. If a column list is specified with the REFERENCES privilege, the permission is revoked on only the foreign key reference to the specified columns.\n\nUse the SELECT privilege type to revoke permission to perform SELECT statements on a table or view. If a column list is specified with the SELECT privilege, the permission is revoked on only those columns. If no column list is specified, then the privilege is valid on all of the columns in the table.\n\nUse the TRIGGER privilege type to revoke permission to create a trigger on the specified table.\n\nUse the UPDATE privilege type to revoke permission to use the UPDATE statement on the specified table. If a column list is specified, the permission is revoked only on the specified columns.\ngrantees\n\n  { authorization ID | PUBLIC } [,{ authorization ID | PUBLIC } ] *\n\nCan revoke the privileges from specific users or from all users. Use the keyword PUBLIC to specify all users. The privileges revoked from PUBLIC and from individual users are independent privileges. For example, a SELECT privilege on table t is granted to both PUBLIC and to the authorization ID harry. The SELECT privilege is later revoked from the authorization ID 'Harry', but the authorization ID 'Harry' can access the table through the PUBLIC privilege.\n\nRestriction: Cannot revoke the privileges of the owner of an object.\nroutine-designator\n\n  {\n   qualified-name [ signature ]\n  }\n\nCascading object dependencies\n\nFor views, triggers, and constraints, if the privilege on which the object depends is revoked, the object is automatically dropped. Derby does not try to determine if there are  other privileges that can replace the privileges that are being revoked. For more information, see 'SQL standard authorization' in the Java DB Developer's Guide.\nLimitations\n\nThe following limitations apply to the REVOKE statement:\n\nTable-level privileges:\n\nAll of the table-level privilege types for a specified grantee and table ID are stored in one row in the SYSTABLEPERMS system table. For example, when user2 is granted the SELECT and DELETE privileges on table user1.t1, a row is added to the SYSTABLEPERMS table. The GRANTEE field contains user2 and the TABLEID contains user1.t1. The SELECTPRIV and DELETEPRIV fields are set to Y. The remaining privilege type fields are set to N.\n\nWhen a grantee creates an object that relies on one of the privilege types, the Derby engine tracks the dependency of the object on the specific row in the SYSTABLEPERMS table. For example, user2 creates the view v1 by using the statement SELECT * FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1). The dependency manager knows only that the view is dependent on a privilege type in that specific row but does not track exactly which privilege type the view is dependent on.\n\nWhen a REVOKE statement for a table-level privilege is issued for a grantee and table ID, all of the objects that are dependent on the grantee and table ID are dropped. For example, if user1 revokes the DELETE privilege on table t1 from user2, the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the DELETE privilege for GRANTEE(user2), TABLEID(user1.t1).\n\nColumn-level privileges:\n\nOnly one type of privilege for a specified grantee and table ID are stored in one row in the SYSCOLPERMS system table. For example, when user2 is granted the SELECT privilege on table user1.t1 for columns c12 and c13, a row is added to the SYSCOLPERMS. The GRANTEE field contains user2, the TABLEID contains user1.t1, the TYPE field contains S, and the COLUMNS field contains c12, c13.\n\nWhen a grantee creates an object that relies on the privilege type and the subset of columns in a table ID, the Derby engine tracks the dependency of the object on the specific row in the SYSCOLPERMS table. For example, user2 creates the view v1 by using the statement SELECT c11 FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S). The dependency manager knows that the view is dependent on the SELECT privilege type but does not track exactly which columns the view is dependent on.\n\nWhen a REVOKE statement for a column-level privilege is issued for a grantee, table ID, and type, all of the objects that are dependent on the grantee, table ID, and type are dropped. For example, if user1 revokes the SELECT privilege on column c12 on table user1.t1 from user2, the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the column c12 for GRANTEE(user2), TABLEID(user1.t1), TYPE(S).\n\nIf Unified Auditing is used:\n\nApply the same process used in standard auditing to the tables with AUDSYS as the owner.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220279r879578_rule,STIG-ID|O121-C2-009500,STIG-Legacy|SV-76147,STIG-Legacy|V-61657,Vuln-ID|V-220279",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT GRANTEE, TABLE_NAME, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUD$';"
    },
    "custom_item_62": {
        "description": "O121-P3-006200 - The DBMS must protect against an individual who uses a shared account falsely denying having performed a particular action.",
        "info": "Non-repudiation of actions taken is required in order to maintain application integrity. Examples of particular actions taken by individuals include creating information, sending a message, approving information (e.g., indicating concurrence or signing a contract), and receiving a message.\n\nNon-repudiation protects individuals against later claims by an author of not having authored a particular document, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document.\n\nAuthentication via shared accounts does not provide individual accountability for actions taken on the DBMS or data. Whenever a single database account is used to connect to the database, a secondary authentication method that provides individual accountability is required. This scenario most frequently occurs when an externally hosted application authenticates individual users to the application and the application uses a single account to retrieve or update database information on behalf of the individual users.\n\nWhen shared accounts are utilized without another means of identifying individual users, users may deny having performed a particular action.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed and must document what has been discovered.",
        "solution": "Use accounts assigned to individual users where feasible. Configure DBMS to provide individual accountability at the DBMS level, and in audit logs, for actions performed under a shared database account.\n\nModify applications and data tables that are not capturing individual user identity to do so.\n\nCreate and enforce the use of individual user IDs for logging on to Oracle tools and third-party products.\n\nIf Oracle auditing is not already enabled, enable it.\n\nIf Standard Auditing is used:\nIf Oracle (or third-party) auditing is not already enabled, enable it. For Oracle auditing, use this query:\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nLink the oracle binary with uniaud_on, and then restart the database. Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation at the locations above.\n\nIf this level of auditing does not meet site-specific requirements, consider deploying the Oracle Audit Vault.  The Audit Vault is a highly configurable option from Oracle made specifically for performing the audit functions.  It has reporting capabilities as well as user-defined rules that provide additional flexibility for complex auditing requirements.",
        "reference": "800-53|AU-10,800-53r5|AU-10,CAT|III,CCI|CCI-000166,CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-10,NESA|T4.3.1,NESA|T7.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220313r879554_rule,STIG-ID|O121-P3-006200,STIG-Legacy|SV-76377,STIG-Legacy|V-61887,Vuln-ID|V-220313",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_63": {
        "description": "O121-C2-007400 - The DBMS must produce audit records containing sufficient information to establish what type of events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nDatabase software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly what actions were performed. This requires specific information regarding the event type an audit record is referring to. If event type information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include what type of event occurred. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000130,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220270r879563_rule,STIG-ID|O121-C2-007400,STIG-Legacy|SV-76117,STIG-Legacy|V-61627,SWIFT-CSCv1|6.4,Vuln-ID|V-220270",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_64": {
        "description": "O121-C2-007500 - The DBMS must produce audit records containing sufficient information to establish when (date and time) the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nDatabase software is capable of a range of actions on data stored within the database. It's important, for accurate forensic analysis, to know exactly when specific actions were performed. This requires the date and time an audit record is referring to. If date and time information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the date and time of any user/subject or process associated with the event. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000131,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220271r879564_rule,STIG-ID|O121-C2-007500,STIG-Legacy|SV-76121,STIG-Legacy|V-61631,SWIFT-CSCv1|6.4,Vuln-ID|V-220271",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_65": {
        "description": "O121-C2-007600 - The DBMS must produce audit records containing sufficient information to establish where the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nWithout sufficient information establishing where the audit events occurred, investigation into the cause of events is severely hindered.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include where the event occurred. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\n Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000132,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220272r879565_rule,STIG-ID|O121-C2-007600,STIG-Legacy|SV-76123,STIG-Legacy|V-61633,SWIFT-CSCv1|6.4,Vuln-ID|V-220272",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_66": {
        "description": "O121-C2-007700 - The DBMS must produce audit records containing sufficient information to establish the sources (origins) of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control, includes, but is not limited to:  timestamps, source and destination IP addresses, user/process identifiers, event descriptions, application specific events, success/fail indications, file names involved, access control or flow control rules invoked.\n\nWithout information establishing the source of activity, the value of audit records from a forensics perspective is questionable.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the source of the event. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf Unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000133,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220273r879566_rule,STIG-ID|O121-C2-007700,STIG-Legacy|SV-76125,STIG-Legacy|V-61635,SWIFT-CSCv1|6.4,Vuln-ID|V-220273",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_67": {
        "description": "O121-C2-007800 - The DBMS must produce audit records containing sufficient information to establish the outcome (success or failure) of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes, but is not limited to: timestamps, source and destination IP addresses, user/process identifiers, event descriptions, application specific events, success/fail indications, file names involved, access control, or flow control rules invoked.\n\nSuccess and failure indicators ascertain the outcome of a particular event. As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. Without knowing the outcome of audit events, it is very difficult to accurately recreate the series of events during forensic analysis.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the outcome. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000134,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220274r879567_rule,STIG-ID|O121-C2-007800,STIG-Legacy|SV-76127,STIG-Legacy|V-61637,SWIFT-CSCv1|6.4,Vuln-ID|V-220274",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_68": {
        "description": "O121-C2-007900 - The DBMS must produce audit records containing sufficient information to establish the identity of any user/subject or process associated with the event.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nDatabase software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly who performed a given action.  If user identification information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Configure the DBMS's auditing to audit standard and organization-defined auditable events, the audit record to include the identity of any user/subject or process associated with the event. If preferred, use a third-party or custom tool.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf unified Auditing is used:\nTo ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database.\nOracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-001487,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220275r879568_rule,STIG-ID|O121-C2-007900,STIG-Legacy|SV-76129,STIG-Legacy|V-61639,SWIFT-CSCv1|6.4,Vuln-ID|V-220275",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_69": {
        "description": "O121-C2-008000 - The DBMS must include organization-defined additional, more detailed information in the audit records for audit events identified by type, location, or subject.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content that may be necessary to satisfy the requirement of this control includes:  timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nIn addition, the application must have the capability to include organization-defined additional, more detailed information in the audit records for audit events. These events may be identified by type, location, or subject.\n\nAn example of detailed information the organization may require in audit records is full-text recording of privileged commands or the individual identities of shared account users.\n\nSome organizations may determine that more detailed information is required for specific database event types.  If this information is not available, it could negatively impact forensic investigations into user actions or other malicious events.",
        "solution": "Either configure the DBMS's auditing to audit organization-defined auditable events, or, if preferred, use a third-party or custom tool. The tool must provide the minimum capability to audit the required events.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\n\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\n\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\n\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf the organization-defined additional audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation at the location below.\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation, at the location below.\n\nIf Unified Auditing is used:\nUse this process to ensure auditable events are captured:\n\nSELECT * FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';\n\nIf Oracle returns the value 'TRUE', this is not a finding.\n\nOtherwise,\nLink the oracle binary with uniaud_on, and then restart the database. Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nIf the organization-defined additional audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation at the location below.\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing. For details, refer to Oracle documentation, at the location below.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3(1),800-53r5|AU-3(1),CAT|II,CCI|CCI-000135,CN-L3|7.1.3.3(b),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3(1),NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220276r879569_rule,STIG-ID|O121-C2-008000,STIG-Legacy|SV-76131,STIG-Legacy|V-61641,SWIFT-CSCv1|6.4,Vuln-ID|V-220276",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_70": {
        "description": "O121-C2-006800 - The DBMS must provide audit record generation capability for organization-defined auditable events within the database.",
        "info": "Audit records can be generated from various components within the information system. (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system. Audit records can be generated from various components within the information system, such as network interfaces, hard disks, modems, etc. From an application perspective, certain specific application functionalities may be audited, as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, timestamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).\n\nOrganizations may define the organizational personnel accountable for determining which application components shall provide auditable events.\n\nAuditing provides accountability for changes made to the DBMS configuration or its objects and data. It provides a means to discover suspicious activity and unauthorized changes. Without auditing, a compromise may go undetected and without a means to determine accountability.\n\nThe Department of Defense has established the following as the minimum set of auditable events. Most can be audited via Oracle settings; some - marked here with an asterisk - cannot, and may require OS settings.\n- Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g. classification levels).\n- Successful and unsuccessful logon attempts, privileged activities or other system level access\n- Starting and ending time for user access to the system, concurrent logons from different workstations.\n- Successful and unsuccessful accesses to objects.\n- All program initiations.\n- *All direct access to the information system.\n- All account creations, modifications, disabling, and terminations.\n- *All kernel module loads, unloads, and restarts.",
        "solution": "Configure the DBMS's auditing to audit organization-defined auditable events. If preferred, use a third-party tool. The tool must provide the minimum capability to audit the required events.\n\nIf using a third-party product, proceed in accordance with the product documentation. If using Oracle's capabilities, proceed as follows.\n\nIf Standard Auditing is used:\nUse this process to ensure auditable events are captured:\nALTER SYSTEM SET AUDIT_TRAIL=SCOPE=SPFILE;\nAudit trail type can be 'OS', 'DB', 'DB,EXTENDED', 'XML' or 'XML,EXTENDED'.\nAfter executing this statement, it may be necessary to shut down and restart the Oracle database.\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation at the locations below.\n\nIf Unified Auditing is used:\nUse this process to ensure auditable events are captured:\nLink the oracle binary with uniaud_on, and then restart the database. Oracle Database Upgrade Guide describes how to enable unified auditing.\n\nFor more information on the configuration of auditing, refer to the following documents:\n'Auditing Database Activity' in the Oracle Database 2 Day + Security Guide:\nhttp://docs.oracle.com/database/121/TDPSG/tdpsg_auditing.htm#TDPSG50000\n'Monitoring Database Activity with Auditing' in the Oracle Database Security Guide:\nhttp://docs.oracle.com/database/121/DBSEG/part_6.htm#CCHEHCGI\n'DBMS_AUDIT_MGMT' in the Oracle Database PL/SQL Packages and Types Reference:\nhttp://docs.oracle.com/database/121/ARPLS/d_audit_mgmt.htm#ARPLS241\nOracle Database Upgrade Guide:\nhttp://docs.oracle.com/database/121/UPGRD/afterup.htm#UPGRD52810\n\nIf the site-specific audit requirements are not covered by the default audit options, deploy and configure Fine-Grained Auditing.  For details, refer to Oracle documentation at the locations above.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220267r879559_rule,STIG-ID|O121-C2-006800,STIG-Legacy|SV-76111,STIG-Legacy|V-61621,SWIFT-CSCv1|6.4,Vuln-ID|V-220267",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER,VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';",
        "sql_expect": "Unified Auditing"
    },
    "custom_item_71": {
        "description": "O121-C2-009300 - The system must protect audit information from any type of unauthorized access.",
        "info": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.\n\nThis requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.\n\nAdditionally, applications with user interfaces to audit records must not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.",
        "solution": "Add controls and modify permissions to protect database audit log data from unauthorized access, whether stored in the database itself or at the OS level.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000162,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220277r879576_rule,STIG-ID|O121-C2-009300,STIG-Legacy|SV-76143,STIG-Legacy|V-61653,Vuln-ID|V-220277",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT GRANTEE, TABLE_NAME, PRIVILEGE FROM DBA_TAB_PRIVS where owner='AUDSYS';"
    },
    "custom_item_72": {
        "description": "O121-C2-009400 - The system must protect audit information from unauthorized modification.",
        "info": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification.\n\nThis requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions and limiting log data locations.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make access decisions regarding the modification of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nModification of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database.",
        "solution": "Add controls and modify permissions to protect database audit log data from unauthorized modification, whether stored in the database itself or at the OS level.\n\n- - - - -\nIf Standard Auditing is used:\nRevoke access to the AUD$ table to anyone who should not have access to it.\n\nIn the check we looked for all users who had access to the AUD$ table. To fix this, use the REVOKE command to revoke access to users who should not have access to the audit data.\n\nREVOKE statement\n\nUse the REVOKE statement to remove permissions from a specific user or from all users to perform actions on database objects.\nThe following types of permissions can be revoked:\n\n    Delete data from a specific table.\n    Insert data into a specific table.\n    Create a foreign key reference to the named table or to a subset of columns from a table.\n    Select data from a table, view, or a subset of columns in a table.\n    Create a trigger on a table.\n    Update data in a table or in a subset of columns in a table.\n    Run a specified routine (function or procedure).\n\nIf a user named FRED had access to the AUD$ table and wanting to revoke that access, use the following command. The syntax that would be used for the REVOKE statement for tables is as follows:\n\nREVOKE privilege-type ON [ TABLE ] { table-Name | view-Name } FROM grantees\n\nSQL>REVOKE SELECT ON TABLE AUD$ FROM FRED;\n\nRevoking a privilege without specifying a column list revokes the privilege for all of the columns in the table.\nSyntax for routines\n\ntable-privileges include\n\n  DELETE |\n  INSERT |\n  REFERENCES [column list] |\n  SELECT [column list] |\n  TRIGGER |\n  UPDATE [column list]\n\ncolumn list\n\n  ( column-identifier {, column-identifier}* )\n\nUse the ALL PRIVILEGES privilege type to revoke all of the permissions from the user for the specified table. Can also revoke one or more table privileges by specifying a privilege-list.\n\nUse the DELETE privilege type to revoke permission to delete rows from the specified table.\n\nUse the INSERT privilege type to revoke permission to insert rows into the specified table.\n\nUse the REFERENCES privilege type to revoke permission to create a foreign key reference to the specified table. If a column list is specified with the REFERENCES privilege, the permission is revoked on only the foreign key reference to the specified columns.\n\nUse the SELECT privilege type to revoke permission to perform SELECT statements on a table or view. If a column list is specified with the SELECT privilege, the permission is revoked on only those columns. If no column list is specified, then the privilege is valid on all of the columns in the table.\n\nUse the TRIGGER privilege type to revoke permission to create a trigger on the specified table.\n\nUse the UPDATE privilege type to revoke permission to use the UPDATE statement on the specified table. If a column list is specified, the permission is revoked only on the specified columns.\ngrantees\n\n  { authorization ID | PUBLIC } [,{ authorization ID | PUBLIC } ] *\n\nCan revoke the privileges from specific users or from all users. Use the keyword PUBLIC to specify all users. The privileges revoked from PUBLIC and from individual users are independent privileges. For example, a SELECT privilege on table t is granted to both PUBLIC and to the authorization ID harry. The SELECT privilege is later revoked from the authorization ID 'Harry', but the authorization ID 'Harry' can access the table through the PUBLIC privilege.\n\nRestriction: Cannot revoke the privileges of the owner of an object.\nroutine-designator\n\n  {\n   qualified-name [ signature ]\n  }\n\nCascading object dependencies\n\nFor views, triggers, and constraints, if the privilege on which the object depends is revoked, the object is automatically dropped. Derby does not try to determine if there are other privileges that can replace the privileges that are being revoked. For more information, see 'SQL standard authorization' in the Java DB Developer's Guide.\nLimitations\n\nThe following limitations apply to the REVOKE statement:\n\nTable-level privileges:\n\nAll of the table-level privilege types for a specified grantee and table ID are stored in one row in the SYSTABLEPERMS system table. For example, when user2 is granted the SELECT and DELETE privileges on table user1.t1, a row is added to the SYSTABLEPERMS table. The GRANTEE field contains user2 and the TABLEID contains user1.t1. The SELECTPRIV and DELETEPRIV fields are set to Y. The remaining privilege type fields are set to N.\n\nWhen a grantee creates an object that relies on one of the privilege types, the Derby engine tracks the dependency of the object on the specific row in the SYSTABLEPERMS table. For example, user2 creates the view v1 by using the statement SELECT * FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1). The dependency manager knows only that the view is dependent on a privilege type in that specific row but does not track exactly which privilege type the view is dependent on.\n\nWhen a REVOKE statement for a table-level privilege is issued for a grantee and table ID, all of the objects that are dependent on the grantee and table ID are dropped. For example, if user1 revokes the DELETE privilege on table t1 from user2, the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the DELETE privilege for GRANTEE(user2), TABLEID(user1.t1).\n\nColumn-level privileges:\n\nOnly one type of privilege for a specified grantee and table ID are stored in one row in the SYSCOLPERMS system table. For example, when user2 is granted the SELECT privilege on table user1.t1 for columns c12 and c13, a row is added to the SYSCOLPERMS. The GRANTEE field contains user2, the TABLEID contains user1.t1, the TYPE field contains S, and the COLUMNS field contains c12, c13.\n\nWhen a grantee creates an object that relies on the privilege type and the subset of columns in a table ID, the Derby engine tracks the dependency of the object on the specific row in the SYSCOLPERMS table. For example, user2 creates the view v1 by using the statement SELECT c11 FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S). The dependency manager knows that the view is dependent on the SELECT privilege type but does not track exactly which columns the view is dependent on.\n\nWhen a REVOKE statement for a column-level privilege is issued for a grantee, table ID, and type, all of the objects that are dependent on the grantee, table ID, and type are dropped. For example, if user1 revokes the SELECT privilege on column c12 on table user1.t1 from user2, the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the column c12 for GRANTEE(user2), TABLEID(user1.t1), TYPE(S).\n\nIf Unified Auditing is used:\n\nApply the same process used in standard auditing to the tables with AUDSYS as the owner.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000163,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220278r879577_rule,STIG-ID|O121-C2-009400,STIG-Legacy|SV-76145,STIG-Legacy|V-61655,Vuln-ID|V-220278",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT GRANTEE, TABLE_NAME, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUDSYS';"
    },
    "custom_item_73": {
        "description": "O121-C2-009500 - The system must protect audit information from unauthorized deletion.",
        "info": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.\n\nTo ensure the veracity of audit data the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods which will depend upon system architecture and design.\n\nSome commonly employed methods include:  ensuring log files enjoy the proper file system permissions utilizing file system protections; restricting access; and backing up log data to ensure log data is retained.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order make access decisions regarding the deletion of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nDeletion of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database.",
        "solution": "Add controls and modify permissions to protect database audit log data from unauthorized deletion, whether stored in the database itself or at the OS-level.\n\n- - - - -\nIf Standard Auditing is used:\nRevoke access to the AUD$ table to anyone who should not have access to it.\n\nIn the check we looked for all users who had access to the AUD$ table. To fix this, use the REVOKE command to revoke access to users who should not have access to the audit data.\n\nREVOKE statement\n\nUse the REVOKE statement to remove permissions from a specific user or from all users to perform actions on database objects.\nThe following types of permissions can be revoked:\n\n    Delete data from a specific table.\n    Insert data into a specific table.\n    Create a foreign key reference to the named table or to a subset of columns from a table.\n    Select data from a table, view, or a subset of columns in a table.\n    Create a trigger on a table.\n    Update data in a table or in a subset of columns in a table.\n    Run a specified routine (function or procedure).\n\nIf a user named FRED had access to the AUD$ table and wanting to revoke that access, use the following command. The syntax that would be used for the REVOKE statement for tables is as follows:\n\nREVOKE privilege-type ON [ TABLE ] { table-Name | view-Name } FROM grantees\n\nSQL>REVOKE SELECT ON TABLE AUD$ FROM FRED;\n\nRevoking a privilege without specifying a column list revokes the privilege for all of the columns in the table.\nSyntax for routines\n\ntable-privileges include\n\n  DELETE |\n  INSERT |\n  REFERENCES [column list] |\n  SELECT [column list] |\n  TRIGGER |\n  UPDATE [column list]\n\ncolumn list\n\n  ( column-identifier {, column-identifier}* )\n\nUse the ALL PRIVILEGES privilege type to revoke all of the permissions from the user for the specified table. Can also revoke one or more table privileges by specifying a privilege-list.\n\nUse the DELETE privilege type to revoke permission to delete rows from the specified table.\n\nUse the INSERT privilege type to revoke permission to insert rows into the specified table.\n\nUse the REFERENCES privilege type to revoke permission to create a foreign key reference to the specified table. If a column list is specified with the REFERENCES privilege, the permission is revoked on only the foreign key reference to the specified columns.\n\nUse the SELECT privilege type to revoke permission to perform SELECT statements on a table or view. If a column list is specified with the SELECT privilege, the permission is revoked on only those columns. If no column list is specified, then the privilege is valid on all of the columns in the table.\n\nUse the TRIGGER privilege type to revoke permission to create a trigger on the specified table.\n\nUse the UPDATE privilege type to revoke permission to use the UPDATE statement on the specified table. If a column list is specified, the permission is revoked only on the specified columns.\ngrantees\n\n  { authorization ID | PUBLIC } [,{ authorization ID | PUBLIC } ] *\n\nCan revoke the privileges from specific users or from all users. Use the keyword PUBLIC to specify all users. The privileges revoked from PUBLIC and from individual users are independent privileges. For example, a SELECT privilege on table t is granted to both PUBLIC and to the authorization ID harry. The SELECT privilege is later revoked from the authorization ID 'Harry', but the authorization ID 'Harry' can access the table through the PUBLIC privilege.\n\nRestriction: Cannot revoke the privileges of the owner of an object.\nroutine-designator\n\n  {\n   qualified-name [ signature ]\n  }\n\nCascading object dependencies\n\nFor views, triggers, and constraints, if the privilege on which the object depends is revoked, the object is automatically dropped. Derby does not try to determine if there are  other privileges that can replace the privileges that are being revoked. For more information, see 'SQL standard authorization' in the Java DB Developer's Guide.\nLimitations\n\nThe following limitations apply to the REVOKE statement:\n\nTable-level privileges:\n\nAll of the table-level privilege types for a specified grantee and table ID are stored in one row in the SYSTABLEPERMS system table. For example, when user2 is granted the SELECT and DELETE privileges on table user1.t1, a row is added to the SYSTABLEPERMS table. The GRANTEE field contains user2 and the TABLEID contains user1.t1. The SELECTPRIV and DELETEPRIV fields are set to Y. The remaining privilege type fields are set to N.\n\nWhen a grantee creates an object that relies on one of the privilege types, the Derby engine tracks the dependency of the object on the specific row in the SYSTABLEPERMS table. For example, user2 creates the view v1 by using the statement SELECT * FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1). The dependency manager knows only that the view is dependent on a privilege type in that specific row but does not track exactly which privilege type the view is dependent on.\n\nWhen a REVOKE statement for a table-level privilege is issued for a grantee and table ID, all of the objects that are dependent on the grantee and table ID are dropped. For example, if user1 revokes the DELETE privilege on table t1 from user2, the row in SYSTABLEPERMS for GRANTEE(user2), TABLEID(user1.t1) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the DELETE privilege for GRANTEE(user2), TABLEID(user1.t1).\n\nColumn-level privileges:\n\nOnly one type of privilege for a specified grantee and table ID are stored in one row in the SYSCOLPERMS system table. For example, when user2 is granted the SELECT privilege on table user1.t1 for columns c12 and c13, a row is added to the SYSCOLPERMS. The GRANTEE field contains user2, the TABLEID contains user1.t1, the TYPE field contains S, and the COLUMNS field contains c12, c13.\n\nWhen a grantee creates an object that relies on the privilege type and the subset of columns in a table ID, the Derby engine tracks the dependency of the object on the specific row in the SYSCOLPERMS table. For example, user2 creates the view v1 by using the statement SELECT c11 FROM user1.t1; the dependency manager tracks the dependency of view v1 on the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S). The dependency manager knows that the view is dependent on the SELECT privilege type but does not track exactly which columns the view is dependent on.\n\nWhen a REVOKE statement for a column-level privilege is issued for a grantee, table ID, and type, all of the objects that are dependent on the grantee, table ID, and type are dropped. For example, if user1 revokes the SELECT privilege on column c12 on table user1.t1 from user2, the row in SYSCOLPERMS for GRANTEE(user2), TABLEID(user1.t1), TYPE(S) is modified by the REVOKE statement. The dependency manager sends a revoke invalidation message to the view user2.v1, and the view is dropped, even though the view is not dependent on the column c12 for GRANTEE(user2), TABLEID(user1.t1), TYPE(S).\n\nIf Unified Auditing is used:\n\nApply the same process used in standard auditing to the tables with AUDSYS as the owner.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-220279r879578_rule,STIG-ID|O121-C2-009500,STIG-Legacy|SV-76147,STIG-Legacy|V-61657,Vuln-ID|V-220279",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT GRANTEE, TABLE_NAME, PRIVILEGE FROM DBA_TAB_PRIVS where table_name = 'AUDSYS';"
    },
    "custom_item_74": {
        "description": "profile list",
        "sql_request": "SELECT PROFILE#, NAME FROM SYS.PROFNAME$;"
    },
    "custom_item_75": {
        "description": "User Profile Assignment",
        "sql_request": "SELECT username, profile FROM SYS.DBA_USERS WHERE profile = '@TEMPORARY_USERS@' ORDER BY username;"
    },
    "custom_item_76": {
        "description": "O121-C2-002000 - The DBMS must provide a mechanism to automatically remove or disable temporary user accounts after 72 hours.",
        "info": "Temporary application accounts could ostensibly be used in the event of a vendor support visit where a support representative requires a temporary unique account in order to perform diagnostic testing or conduct some other support related activity. When these types of accounts are created, there is a risk that the temporary account may remain in place and active after the support representative has left.\n\nTo address this, in the event temporary application accounts are required, the application must ensure accounts designated as temporary in nature shall automatically terminate these accounts after a period of 72 hours. Such a process and capability greatly reduces the risk that accounts will be misused, hijacked, or data compromised.\n\nNote that user authentication and account management should be done via an enterprise-wide mechanism whenever possible. Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.\n\nTemporary database accounts must be automatically terminated after a 72 hour time period in order to mitigate the risk of the account being used beyond its original purpose or timeframe.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If using database mechanisms to satisfy this requirement, use a profile with a distinctive name (for example, TEMPORARY_USERS), so that temporary users can be easily identified. Whenever a temporary user account is created, assign it to this profile.\n\nCreate a job to lock accounts under this profile that are more than 72 hours old.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237702r879887_rule,STIG-ID|O121-C2-002000,STIG-Legacy|SV-76051,STIG-Legacy|V-61561,SWIFT-CSCv1|2.3,Vuln-ID|V-237702",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select profile,resource_name,resource_type,limit from dba_profiles where upper(resource_name) like 'PASSWORD_LIFE_TIME';",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_77": {
        "description": "O121-C2-002700 - The DBMS must enforce approved authorizations for logical access to the system in accordance with applicable policy.",
        "info": "Strong access controls are critical to securing application data. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by applications, when applicable, to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains) in the information system.\n\nConsideration should be given to the implementation of an audited, explicit override of automated mechanisms in the event of emergencies or other serious events.\n\nIf the DBMS does not follow applicable policy when approving access it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and may be in conflict with applicable policy.",
        "solution": "If Oracle Database Vault is in use, use it to configure the correct access privileges for each type of user.\n\nIf Oracle Database Vault is not in use, configure the correct access privileges for each type of user using Roles and Profiles.\n\nDo not assign privileges directly to users, except for those that Oracle does not permit to be assigned via roles.\n\nFor more information on the configuration of Database Vault, refer to the Database Vault Administrator's  Guide:\nhttps://docs.oracle.com/database/121/DVADM/toc.htm",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CAT|I,CCI|CCI-000213,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-220266r917644_rule,STIG-ID|O121-C2-002700,STIG-Legacy|SV-76065,STIG-Legacy|V-61575,TBA-FIISB|31.1,Vuln-ID|V-220266",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PARAMETER, VALUE FROM V$OPTION WHERE PARAMETER = 'Oracle Database Vault';",
        "sql_expect": "Oracle Database Vault"
    },
    "custom_item_78": {
        "description": "O121-C2-004000 - Administrative privileges must be assigned to database accounts via database roles.",
        "info": "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.\n\nPrivileges granted outside the context of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.",
        "solution": "Create roles for administrative function assignments. Assign the necessary privileges for the administrative functions to a role.  Do not assign administrative privileges directly to users, except for those that Oracle does not permit to be assigned via roles.",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-237709r879586_rule,STIG-ID|O121-C2-004000,STIG-Legacy|SV-76081,STIG-Legacy|V-61591,Vuln-ID|V-237709",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT grantee, privilege FROM dba_sys_privs WHERE grantee IN (SELECT username FROM dba_users WHERE username NOT IN ('XDB', 'SYSTEM', 'SYS', 'LBACSYS', 'DVSYS', 'DVF', 'SYSMAN_RO', 'SYSMAN_BIPLATFORM', 'SYSMAN_MDS', 'SYSMAN_OPSS', 'SYSMAN_STB', 'DBSNMP', 'SYSMAN', 'APEX_040200', 'WMSYS', 'SYSDG', 'SYSBACKUP', 'SPATIAL_WFS_ADMIN_USR', 'SPATIAL_CSW_ADMIN_US', 'GSMCATUSER', 'OLAPSYS', 'SI_INFORMTN_SCHEMA', 'OUTLN', 'ORDSYS', 'ORDDATA', 'OJVMSYS', 'ORACLE_OCM', 'MDSYS', 'ORDPLUGINS', 'GSMADMIN_INTERNAL', 'MDDATA', 'FLOWS_FILES', 'DIP', 'CTXSYS', 'AUDSYS', 'APPQOSSYS', 'APEX_PUBLIC_USER', 'ANONYMOUS', 'SPATIAL_CSW_ADMIN_USR', 'SYSKM', 'SYSMAN_TYPES', 'MGMT_VIEW', 'EUS_ENGINE_USER', 'EXFSYS', 'SYSMAN_APM')) AND privilege NOT IN ('UNLIMITED TABLESPACE' , 'REFERENCES', 'INDEX', 'SYSDBA', 'SYSOPER') ORDER BY 1, 2;"
    },
    "custom_item_79": {
        "description": "O121-C2-004900 - The DBMS must verify account lockouts persist until reset by an administrator.",
        "info": "Anytime an authentication method is exposed, to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.\n\nTo defeat these attempts, organizations define the number of times a user account may consecutively fail a logon attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.\n\nBy limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "Configure the DBMS settings to specify indefinite lockout duration:\nALTER PROFILE ORA_STIG_PROFILE LIMIT PASSWORD_LOCK_TIME UNLIMITED;",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237713r879887_rule,STIG-ID|O121-C2-004900,STIG-Legacy|SV-76093,STIG-Legacy|V-61603,SWIFT-CSCv1|2.3,Vuln-ID|V-237713",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'ORA_STIG_PROFILE' AND RESOURCE_NAME = 'PASSWORD_LOCK_TIME';",
        "sql_expect": "ORA_STIG_PROFILE"
    },
    "custom_item_80": {
        "description": "O121-C2-005000 - The DBMS must set the maximum number of consecutive invalid logon attempts to three.",
        "info": "Anytime an authentication method is exposed,  to allow for the utilization of an application, there is a risk that attempts will be made to obtain unauthorized access.\n\nTo defeat these attempts, organizations define the number of times a user account may consecutively fail a logon attempt. The organization also defines the period of time in which these consecutive failed attempts may occur.\n\nBy limiting the number of failed logon attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account.\n\nMore recent brute force attacks make attempts over long periods of time to circumvent intrusion detection systems and system account lockouts based entirely on the number of failed logons that are typically reset after a successful logon.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP.  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.\n\nNote also that a policy that places no limit on the length of the timeframe (for counting consecutive invalid attempts) does satisfy this requirement.",
        "solution": "Configure the DBMS setting to specify the maximum number of consecutive failed logon attempts to three (or less):\nALTER PROFILE {PROFILE_NAME} LIMIT FAILED_LOGIN_ATTEMPTS 3;\n\n(ORA_STIG_PROFILE is available in DBA_PROFILES, starting with Oracle 12.1.0.2. Note: It remains necessary to create a customized replacement for the password validation function, ORA12C_STRONG_VERIFY_FUNCTION, if relying on this technique to verify password complexity.)",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237714r879887_rule,STIG-ID|O121-C2-005000,STIG-Legacy|SV-76095,STIG-Legacy|V-61605,SWIFT-CSCv1|2.3,Vuln-ID|V-237714",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'FAILED_LOGIN_ATTEMPTS'",
        "sql_expect": ".+"
    },
    "custom_item_81": {
        "description": "O121-C2-011000 - Database objects must be owned by accounts authorized for ownership.",
        "info": "Within the database, object ownership implies full privileges to the owned object including the privilege to assign access to the owned objects to other subjects. Unmanaged or uncontrolled ownership of objects can lead to unauthorized object grants and alterations, and unauthorized modifications to data.\n\nIf critical tables or other objects rely on unauthorized owner accounts, these objects can be lost when an account is removed.\n\nIt may be the case that there are accounts that are authorized to own synonyms, but no other objects. If this is so, it should be documented.",
        "solution": "Update system documentation to include list of accounts authorized for object ownership.\n\nRe-assign ownership of authorized objects to authorized object owner accounts.",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-220283r879586_rule,STIG-ID|O121-C2-011000,STIG-Legacy|SV-76163,STIG-Legacy|V-61673,Vuln-ID|V-220283",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT owner, object_type, count(*) FROM dba_objects GROUP BY owner, object_type ORDER BY owner, object_type;"
    },
    "custom_item_82": {
        "description": "O121-C1-011100 - Oracle software must be evaluated and patched against newly found vulnerabilities.",
        "info": "Security faults with software applications and operating systems are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling, must also be  addressed expeditiously.\n\nAnytime new software code is introduced to a system there is the potential for unintended consequences. There have been documented instances where the application of a patch has caused problems with system integrity or availability.  Due to information system integrity and availability concerns, organizations must give careful consideration to the methodology used to carry out automatic updates.\n\nUnsupported software versions are not patched by vendors to address newly discovered security versions. An unpatched version is vulnerable to attack.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Follow the process below to apply the security patch.\n\nLog on to My Oracle Support.\n\nSelect patches and download the specific patch number and corresponding MD5 checksum. Once the patch is downloaded to the server, check the MD5 checksum to make sure the patch is valid.\n\nTo check the MD5 Checksum in Linux/UNIX, the command is:\n$md5sum absolute_path_of_file_name - file_name is the complete location of the downloaded file.\n$md5sum /home/oracle/test.zip\na34d8cd98f00cf24e9800998ecf823e4 /home/oracle/test.zip\n\nOnce the checksum is validated, apply the patch:\n$ cd $ORACLE_HOME\n$ opatch apply\n\nCheck that the patch was applied and the inventory was updated with the following command (UNIX/Linux):\n$ opatch lsinventory -detail\n\nWindows:\n> opatch lsinventory detail",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|I,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-237697r879827_rule,STIG-ID|O121-C1-011100,STIG-Legacy|SV-76029,STIG-Legacy|V-61539,Vuln-ID|V-237697",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT patch_id, version, action, status, description from dba_registry_sqlpatch"
    },
    "custom_item_83": {
        "description": "O121-C2-011500 - Default demonstration and sample databases, database objects, and applications must be removed.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities.\n\nDemonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system.",
        "solution": "Remove any demonstration and sample databases, database applications, objects, and files from the DBMS.\n\nTo remove an account and all objects owned by that account (using BI as an example):\nDROP USER BI CASCADE;\n\nTo remove objects without removing their owner, use the appropriate DROP statement (DROP TABLE, DROP VIEW, etc.).",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-220284r879587_rule,STIG-ID|O121-C2-011500,STIG-Legacy|SV-76167,STIG-Legacy|V-61677,SWIFT-CSCv1|2.3,Vuln-ID|V-220284",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT DISTINCT(username) FROM dba_users WHERE upper(username) in ('BI','HR','OE','PM','IX','SH','SCOTT');"
    },
    "custom_item_84": {
        "description": "O121-C2-011600 - Unused database components, DBMS software, and database objects must be removed.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements or providing a wide array of functionality not required for the mission.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities.\n\nDemonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system.\n\nUnused and unnecessary DBMS components increase the attack vector for the DBMS by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If any components are required for operation of applications that will be accessing the DBMS, include them in the system documentation.\n\nOne cannot remove components, either via Database Configuration Assistant (DBCA) or manually once the database has been created, either from a container or a non-container database.\n\nOne can, however, use DBCA to create a non-container database and remove components during the creation process, before the database is created.\n\nWhen using DBCA to create a custom non-container database, select\ncreation mode = advanced\nDatabase Template = Custom\nDatabase Options..Database Component.\n\nComponents that can be selected or de-selected are:\nOracle JVM, Oracle Text, Oracle Multimedia, Oracle OLAP, Oracle Spatial, Oracle Label Security, Oracle Application Express, Oracle Database Vault\n\nFor a container database (CDB), the CDB$ROOT must have all possible database components available.  This is because, when a pluggable database (PDB) is plugged into the CDB, the CDB must have the same components installed as the PDB.  Since we do not know what components the PDBS may have, the CDB must be able to support all possible PDB configurations.\n\nComponents installed in the CDB$ROOT do not need to be licensed.  Components are only considered to be used if they are installed in the PDB.\n\nTo configure a PDB to only use specific components, do the following:\n\n1) Create a non-CDB 12.1 database and configure that database with the components desired.\n\n2) Plug the non-CDB database into a CDB database, creating a new PDB.  If wanted, can then create additional clones from the new PDB.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-220285r879587_rule,STIG-ID|O121-C2-011600,STIG-Legacy|SV-76169,STIG-Legacy|V-61679,SWIFT-CSCv1|2.3,Vuln-ID|V-220285",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT comp_id, comp_name, version, status from dba_registry where comp_id not in ('CATALOG','CATPROC','XDB') AND status <> 'OPTION OFF';",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_85": {
        "description": "O121-C2-011700 - Unused database components that are integrated in the DBMS and cannot be uninstalled must be disabled.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements or providing a wide array of functionality not required for the mission.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities.\n\nUnused, unnecessary DBMS components increase the attack vector for the DBMS by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled.",
        "solution": "In the system documentation list the integrated components required for operation of applications that will be accessing the DBMS.\n\nFor Oracle Database 12.1, only the following components can be enabled/disabled:\n\nOracle Data Mining (dm)\nOracle Database Extensions for .NET (ode_net)\nOracle OLAP (olap)\nOracle Partitioning (partitioning)\nReal Application Testing (rat)\n\nUse the chopt utility (an Oracle-supplied operating system command that resides in the/bin directory) to disable each option that should not be available.  The command format is\n\n            choptwhereis any of the abbreviations in parentheses in the list above.  For example, to disable Real Application Testing, issue the following command at an OS prompt:\n\n            chopt disable rat\n\nRestart the Oracle service.\n\n(See My Oracle Support Document 948061.1 for more on the chopt command.)",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-220286r879587_rule,STIG-ID|O121-C2-011700,STIG-Legacy|SV-76171,STIG-Legacy|V-61681,SWIFT-CSCv1|2.3,Vuln-ID|V-220286",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT parameter, value FROM V$OPTION WHERE VALUE = 'TRUE';"
    },
    "custom_item_86": {
        "description": "O121-C2-011800 - Use of external executables must be authorized.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality not required for the mission.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities.\n\nDBMSs may spawn additional external processes to execute procedures that are defined in the DBMS, but stored in external host files (external procedures). The spawned process used to execute the external procedure may operate within a different OS security context than the DBMS and provide unauthorized access to the host system.",
        "solution": "Disable use of or remove any external application executable object definitions that are not authorized.\n\nRevoke privileges granted to users that are not authorized access to external applications.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-220287r879587_rule,STIG-ID|O121-C2-011800,STIG-Legacy|SV-76173,STIG-Legacy|V-61683,SWIFT-CSCv1|2.3,Vuln-ID|V-220287",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select library_name, owner, '' grantee, '' privilege from dba_libraries where file_spec is not null and owner not in ('SYS', 'ORDSYS') minus ( select library_name,o.name owner, '' grantee, '' privilege from dba_libraries l, sys.user$ o, sys.user$ ge, sys.obj$ obj, sys.objauth$ oa where l.owner=o.name and obj.owner#=o.user# and obj.name=l.library_name and oa.obj#=obj.obj# and ge.user#=oa.grantee# and l.file_spec is not null) union all select library_name, o.name owner, ge.name grantee, tpm.name privilege from dba_libraries l, sys.user$ o, sys.user$ ge, sys.obj$ obj, sys.objauth$ oa, sys.table_privilege_map tpm where l.owner=o.name and obj.owner#=o.user# and obj.name=l.library_name and oa.obj#=obj.obj# and ge.user#=oa.grantee# and tpm.privilege=oa.privilege# and l.file_spec is not null;"
    },
    "custom_item_87": {
        "description": "O121-C2-013800 - The DBMS must disable user accounts after 35 days of inactivity.",
        "info": "Attackers that are able to exploit an inactive DBMS account can potentially obtain and maintain undetected access to the database.\n\nOwners of inactive DBMS accounts will not notice if unauthorized access to their user account has been obtained. All DBMS need to track periods of user inactivity and disable accounts after 35 days of inactivity. Such a process greatly reduces the risk that accounts will be hijacked, leading to a data compromise.\n\nTo address access requirements, some database administrators choose to integrate their databases with enterprise-level authentication/access mechanisms that meet or exceed access control policy requirements. Such integration allows the database administrator to off-load those access control functions and focus on core application features and functionality.\n\nThis policy does not apply to either emergency accounts or infrequently used accounts. Infrequently used accounts are local logon administrator accounts used by system administrators when network or normal logon/access is not available. Emergency accounts are administrator accounts created in response to crisis situations.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible. Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "For accounts managed by Oracle, issue the statement:\n\nALTER PROFILE profile_name  LIMIT inactive_account_time 35;\n\nOr\n\nChange the profile for the DBMS account to ORA_STIG_PROFILE (which has the inactive_account_time parameter set to 35):\n\nALTER USER user_name PROFILE ora_stig_profile;\n\nAn alternate method is to create a script or store procedure that runs once a day.\n\nWrite a SQL statement to determine accounts that have not logged in within 35 days:\n\nExample:\nselect username from dba_audit_trail where  action_name = 'LOGON'\ngroup  by username having max(timestamp) < sysdate - 36\n\nAnd then disable all accounts that have not logged in within 35 days.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237725r879887_rule,STIG-ID|O121-C2-013800,STIG-Legacy|SV-76207,STIG-Legacy|V-61717,SWIFT-CSCv1|2.3,Vuln-ID|V-237725",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT profile, resource_name, limit FROM dba_profiles WHERE resource_name = 'INACTIVE_ACCOUNT_TIME';",
        "sql_expect": ".+"
    },
    "custom_item_88": {
        "description": "O121-C2-013900 - The DBMS must support organizational requirements to enforce minimum password length.",
        "info": "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nTo meet password policy requirements, passwords need to be changed at specific policy-based intervals.\n\nIf the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements.\n\nWeak passwords are a primary target for attack to gain unauthorized access to databases and other systems. Where username/password is used for identification and authentication to the database, requiring the use of strong passwords can help prevent simple and more sophisticated methods for guessing at passwords.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": ": If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.\n\nIf any user accounts are managed by Oracle: Develop, test, and implement a password verification function that enforces DoD requirements.\n\nOracle supplies a sample function called ORA12C_STRONG_VERIFY_FUNCTION. This can be used as the starting point for a customized function. The script file is found in the following location on the server depending on OS:\nWindows:\n%ORACLE_HOME%\\RDBMS\\ADMIN\\catpvf.sql\nUNIX/Linux:\n$ORACLE_HOME/rdbms/admin/catpvf.sql",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CAT|II,CCI|CCI-000205,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237726r879601_rule,STIG-ID|O121-C2-013900,STIG-Legacy|SV-76209,STIG-Legacy|V-61719,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-237726",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, RESOURCE_TYPE, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' ORDER BY PROFILE;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_89": {
        "description": "PASSWORD_REUSE_MAX >= 5",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_REUSE_MAX';",
        "sql_expect": ".+"
    },
    "custom_item_90": {
        "description": "PASSWORD_REUSE_TIME >= 5",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_REUSE_TIME';",
        "sql_expect": ".+"
    },
    "custom_item_91": {
        "description": "O121-C2-014100 - The DBMS must support organizational requirements to enforce password complexity by the number of upper-case characters used.",
        "info": "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.\n\nUse of a complex password helps to increase the time and resources required to compromise the password.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.\n\nIf any user accounts are managed by Oracle: Develop, test, and implement a password verification function that enforces DoD requirements.\n\nOracle supplies a sample function called ORA12C_STRONG_VERIFY_FUNCTION. This can be used as the starting point for a customized function. The script file is found in the following location on the server depending on OS:\nWindows:\n%ORACLE_HOME%\\RDBMS\\ADMIN\\catpvf.sql\nUNIX/Linux:\n$ORACLE_HOME/rdbms/admin/catpvf.sql",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CAT|II,CCI|CCI-000192,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237728r879601_rule,STIG-ID|O121-C2-014100,STIG-Legacy|SV-76213,STIG-Legacy|V-61723,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-237728",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
    },
    "custom_item_92": {
        "description": "O121-C2-014200 - The DBMS must support organizational requirements to enforce password complexity by the number of lower-case characters used.",
        "info": "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.\n\nUse of a complex password helps to increase the time and resources required to compromise the password.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.\nIf any user accounts are managed by Oracle: Develop, test, and implement a password verification function that enforces DoD requirements.\n\nOracle supplies a sample function called ORA12C_STRONG_VERIFY_FUNCTION. This can be used as the starting point for a customized function. The script file is found in the following location on the server depending on OS:\nWindows:\n%ORACLE_HOME%\\RDBMS\\ADMIN\\catpvf.sql\nUNIX/Linux:\n$ORACLE_HOME/rdbms/admin/catpvf.sql",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CAT|II,CCI|CCI-000193,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237729r879601_rule,STIG-ID|O121-C2-014200,STIG-Legacy|SV-76215,STIG-Legacy|V-61725,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-237729",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
    },
    "custom_item_93": {
        "description": "O121-C2-014300 - The DBMS must support organizational requirements to enforce password complexity by the number of numeric characters used.",
        "info": "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.\n\nUse of a complex password helps to increase the time and resources required to compromise the password.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.\n\nIf any user accounts are managed by Oracle: Develop, test, and implement a password verification function that enforces DoD requirements.\n\nOracle supplies a sample function called ORA12C_STRONG_VERIFY_FUNCTION. This can be used as the starting point for a customized function. The script file is found in the following location on the server depending on OS:\nWindows:\n%ORACLE_HOME%\\RDBMS\\ADMIN\\catpvf.sql\nUNIX/Linux:\n$ORACLE_HOME/rdbms/admin/catpvf.sql",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CAT|II,CCI|CCI-000194,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237730r879601_rule,STIG-ID|O121-C2-014300,STIG-Legacy|SV-76217,STIG-Legacy|V-61727,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-237730",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
    },
    "custom_item_94": {
        "description": "O121-C2-014400 - The DBMS must support organizational requirements to enforce password complexity by the number of special characters used.",
        "info": "Password complexity or strength is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised.\n\nUse of a complex password helps to increase the time and resources required to compromise the password.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "If all user accounts are authenticated by the OS or an enterprise-level authentication/access mechanism, and not by Oracle, no fix to the DBMS is required.\n\nIf any user accounts are managed by Oracle: Develop, test, and implement a password verification function that enforces DoD requirements.\n\nOracle supplies a sample function called ORA12C_STRONG_VERIFY_FUNCTION. This can be used as the starting point for a customized function. The script file is found in the following location on the server depending on OS:\nWindows:\n%ORACLE_HOME%\\RDBMS\\ADMIN\\catpvf.sql\nUNIX/Linux:\n$ORACLE_HOME/rdbms/admin/catpvf.sql",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CAT|II,CCI|CCI-001619,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237731r879601_rule,STIG-ID|O121-C2-014400,STIG-Legacy|SV-76219,STIG-Legacy|V-61729,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-237731",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
    },
    "custom_item_95": {
        "description": "O121-C2-014500 - The DBMS must support organizational requirements to enforce the number of characters that get changed when passwords are changed.",
        "info": "Passwords need to be changed at specific policy-based intervals.\n\nIf the information system or application allows the user to consecutively reuse extensive portions of their password when they change their password, the end result is a password that has not had enough elements changed to meet the policy requirements.\n\nChanging passwords frequently can thwart password-guessing attempts or re-establish protection of a compromised DBMS account. Minor changes to passwords may not accomplish this since password guessing may be able to continue to build on previous guesses, or the new password may be easily guessed using the old password.\n\nNote that user authentication and account management must be done via an enterprise-wide mechanism whenever possible.  Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP  This requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "If any user accounts are managed by Oracle: Develop, test, and implement a password verification function that enforces DoD requirements.\n\nOracle supplies a sample function called ORA12C_STRONG_VERIFY_FUNCTION. This can be used as the starting point for a customized function. The script file is found in the following location on the server depending on OS:\nWindows:\n%ORACLE_HOME%\\RDBMS\\ADMIN\\catpvf.sql\nUNIX/Linux:\n$ORACLE_HOME/rdbms/admin/catpvf.sql",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(b),800-53r5|IA-5(1)(b),CAT|II,CCI|CCI-000195,CSF|PR.AC-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(b),NESA|T5.2.3,NIAv2|AM22d,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237732r879601_rule,STIG-ID|O121-C2-014500,STIG-Legacy|SV-76221,STIG-Legacy|V-61731,SWIFT-CSCv1|4.1,Vuln-ID|V-237732",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM SYS.DBA_PROFILES WHERE RESOURCE_NAME = 'PASSWORD_VERIFY_FUNCTION' AND LIMIT = 'NULL' ORDER BY PROFILE;"
    },
    "custom_item_96": {
        "description": "O121-C2-015200 - The DBMS must enforce password maximum lifetime restrictions.",
        "info": "Password maximum lifetime is the maximum period of time, (typically in days) a user's password may be in effect before the user is forced to change it.\n\nPasswords need to be changed at specific policy-based intervals as per policy. Any password, no matter how complex, can eventually be cracked.\n\nOne method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised.\n\nThe PASSWORD_LIFE_TIME parameter defines the number of days a password remains valid. This can must not be set to UNLIMITED. Further, the PASSWORD_GRACE_TIME parameter, if set to UNLIMITED, can nullify the PASSWORD_LIFE_TIME. PASSWORD_GRACE_TIME must be set to 0 days (or another small integer).\n\nNote: User authentication and account management must be done via an enterprise-wide mechanism whenever possible. Examples of enterprise-level authentication/access mechanisms include, but are not limited to, Active Directory and LDAP. With respect to Oracle, this requirement applies to cases where it is necessary to have accounts directly managed by Oracle.",
        "solution": "For user accounts managed by Oracle, modify DBMS settings to force users to periodically change their passwords. For example, using 'PPPPPP' to stand for a profile name:\nALTER PROFILE PPPPPP LIMIT PASSWORD_LIFE_TIME 35 PASSWORD_GRACE_TIME 0;\nDo this for each profile applied to user accounts.\n\n(Note: Although the DoD requirement is for a password change every 60 days, using a value of 35 facilitates the use of PASSWORD_LIFE_TIME as a means of locking accounts inactive for 35 days. But if 35 is not a practical or acceptable limit for password lifetime, set it to the standard DoD value of 60.)\n\nWhere a password lifetime longer than 60 is needed, document the reasons and obtain ISSO approval.",
        "reference": "800-171|3.5.2,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CAT|II,CCI|CCI-000199,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-237735r944384_rule,STIG-ID|O121-C2-015200,STIG-Legacy|SV-76229,STIG-Legacy|V-61739,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,Vuln-ID|V-237735",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT p1.profile, CASE DECODE(p1.limit, 'DEFAULT', p3.limit, p1.limit) WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE CASE DECODE(p2.limit, 'DEFAULT', p4.limit, p2.limit) WHEN 'UNLIMITED' THEN 'UNLIMITED' ELSE TO_CHAR(DECODE(p1.limit, 'DEFAULT', p3.limit, p1.limit) + DECODE(p2.limit, 'DEFAULT', p4.limit, p2.limit)) END END effective_life_time FROM dba_profiles p1, dba_profiles p2, dba_profiles p3, dba_profiles p4 WHERE p1.profile=p2.profile AND p3.profile='DEFAULT' AND p4.profile='DEFAULT' AND p1.resource_name='PASSWORD_LIFE_TIME' AND p2.resource_name='PASSWORD_GRACE_TIME' AND p3.resource_name='PASSWORD_LIFE_TIME' AND p4.resource_name='PASSWORD_GRACE_TIME' order by 1;",
        "sql_expect": ".+"
    },
    "custom_item_97": {
        "description": "O121-C2-015700 - The DBMS must use NIST-validated FIPS 140-2 or 140-3 compliant cryptography for authentication mechanisms.",
        "info": "Use of weak or not validated cryptographic algorithms undermines the purposes of utilizing encryption and digital signatures to protect data. Weak algorithms can be easily broken and not validated cryptographic modules may not implement algorithms correctly. Unapproved cryptographic modules or algorithms should not be relied on for authentication, confidentiality, or integrity. Weak cryptography could allow an attacker to gain access to and modify data stored in the database as well as the administration settings of the DBMS.\n\nApplications (including DBMSs) utilizing cryptography are required to use approved NIST FIPS 140-2 or 140-3 validated cryptographic modules that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.\n\nNSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based encryption modules.\n\nThe standard for validating cryptographic modules will transition to the NIST FIPS 140-3 publication.\n\nFIPS 140-2 modules can remain active for up to five years after validation or until September 21, 2026, when the FIPS 140-2 validations will be moved to the historical list. Even on the historical list, CMVP supports the purchase and use of these modules for existing systems. While Federal Agencies decide when they move to FIPS 140-3 only modules, purchasers are reminded that for several years there may be a limited selection of FIPS 140-3 modules from which to choose. CMVP recommends purchasers consider all modules that appear on the Validated Modules Search Page:\nhttps://csrc.nist.gov/projects/cryptographic-module-validation-program/validated-modules\n\nMore information on the FIPS 140-3 transition can be found here:\nhttps://csrc.nist.gov/Projects/fips-140-3-transition-effort/\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Utilize NIST-validated FIPS 140-2 or 140-3 compliant cryptography for all authentication mechanisms.\n\nWhere not already in effect, upgrade the DBMS to version 12.1.0.2 or higher.\n\nWhere the operating system is Windows and the DBMS version is 12.1.0.2, install patch 'WINDOWS DB BUNDLE PATCH 12.1.0.2.7' if not already deployed.\n\nOpen the fips.ora file in an editor. (The default location for fips.ora is $ORACLE_HOME/ldap/admin/ but alternate locations are possible. An alternate location, if it is in use, is specified in the FIPS_HOME environment variable.)\nCreate or modify fips.ora to include the line 'SSLFIPS_140=TRUE'.\n- - - - -\nThe strength requirements are dependent upon data classification.\n\nFor unclassified data, where cryptography is required:\nAES 128 for encryption\nSHA 256 for hashing\n\nNSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows.\nAES 128 for Secret\nAES 256 for Top Secret\nSHA 256 for Secret\nSHA 384 for Top Secret\n\nNational Security System is defined as: (OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).\n\nThere is more information on this topic in the Oracle Database 12c Advanced Security Administrator's Guide,  located at https://docs.oracle.com/database/121/DBSEG/E48135-11.pdf. (Note: Because of changes in Oracle's licensing policy, it is no longer necessary to purchase Oracle Advanced Security to use network encryption and advanced authentication.)\n\nFIPS documentation can be downloaded from https://csrc.nist.gov/publications/fips",
        "reference": "800-53|IA-7,800-53r5|IA-7,CAT|I,CCI|CCI-000803,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),ITSG-33|IA-7,ITSG-33|IA-7a.,NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T7.4.1,QCSC-v1|13.2,Rule-ID|SV-220294r903013_rule,STIG-ID|O121-C2-015700,STIG-Legacy|SV-76237,STIG-Legacy|V-61747,Vuln-ID|V-220294",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select * from V$VERSION;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_98": {
        "description": "DEFAULT Profile 'IDLE_TIME' Is Less than or Equal to '15'",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE PROFILE = 'DEFAULT' AND RESOURCE_NAME = 'IDLE_TIME';",
        "sql_expect": "DEFAULT"
    },
    "custom_item_99": {
        "description": "O121-C2-016500 - The DBMS must terminate the network connection associated with a communications session at the end of the session or 15 minutes of inactivity.",
        "info": "Non-local maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network.\n\nThe act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data.\n\nWhen applications provide a remote management capability inherent to the application, the application needs to ensure all sessions and network connections are terminated when non-local maintenance is completed.\n\nWhen network connections are left open after the database session has closed, the network session is open to session hijacking.\n\nThe Oracle Listener inherently meets most of this SRG requirement.  When a user logs off, or times out, or encounters an unrecoverable network fault, the Oracle Listener terminates all sessions and network connections.  The remaining aspect of the requirement, the timeout because of inactivity, is configurable.",
        "solution": "Configure DBMS and/or OS settings to disconnect network sessions when database communication sessions have ended or after the DoD-defined period of inactivity.\n\nTo configure this in Oracle, modify each relevant profile.  The resource name is IDLE_TIME, which is expressed in minutes.  Using PPPPPP as an example of a profile, set the timeout to 15 minutes with:\nALTER PROFILE PPPPPP LIMIT IDLE_TIME 15;",
        "reference": "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CAT|II,CCI|CCI-002361,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,Rule-ID|SV-237738r879673_rule,STIG-ID|O121-C2-016500,STIG-Legacy|SV-76247,STIG-Legacy|V-61757,Vuln-ID|V-237738",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'IDLE_TIME';",
        "sql_expect": "DEFAULT"
    },
    "custom_item_100": {
        "description": "O121-C2-016500 - The DBMS must terminate the network connection associated with a communications session at the end of the session or 15 minutes of inactivity.",
        "info": "Non-local maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network.\n\nThe act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data.\n\nWhen applications provide a remote management capability inherent to the application, the application needs to ensure all sessions and network connections are terminated when non-local maintenance is completed.\n\nWhen network connections are left open after the database session has closed, the network session is open to session hijacking.\n\nThe Oracle Listener inherently meets most of this SRG requirement.  When a user logs off, or times out, or encounters an unrecoverable network fault, the Oracle Listener terminates all sessions and network connections.  The remaining aspect of the requirement, the timeout because of inactivity, is configurable.",
        "solution": "Configure DBMS and/or OS settings to disconnect network sessions when database communication sessions have ended or after the DoD-defined period of inactivity.\n\nTo configure this in Oracle, modify each relevant profile.  The resource name is IDLE_TIME, which is expressed in minutes.  Using PPPPPP as an example of a profile, set the timeout to 15 minutes with:\nALTER PROFILE PPPPPP LIMIT IDLE_TIME 15;",
        "reference": "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CAT|II,CCI|CCI-002361,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,Rule-ID|SV-237738r879673_rule,STIG-ID|O121-C2-016500,STIG-Legacy|SV-76247,STIG-Legacy|V-61757,Vuln-ID|V-237738",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'IDLE_TIME';",
        "sql_expect": "DEFAULT"
    },
    "custom_item_101": {
        "description": "DBFIPS_140",
        "sql_request": "SELECT NAME, VALUE FROM SYS.V$PARAMETER WHERE NAME = 'DBFIPS_140';",
        "sql_expect": "DBFIPS_140"
    },
    "custom_item_102": {
        "description": "Supported Version",
        "sql_request": "select * from V$VERSION;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_103": {
        "description": "Patches",
        "sql_request": "SELECT ACTION, NAMESPACE, VERSION, COMMENTS FROM sys.registry$history;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_104": {
        "description": "O121-C2-016700 - Database data files containing sensitive information must be encrypted.",
        "info": "Cryptography is only as strong as the encryption modules/algorithms employed to encrypt the data.\n\nUse of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data.\n\nData files that are not encrypted are vulnerable to theft. When data files are not encrypted they can be copied and opened on a separate system. The data can be compromised without the information owner's knowledge that the theft has even taken place.",
        "solution": "Obtain and utilize native or third-party NIST-validated FIPS 140-2 or 140-3 compliant cryptography solution for the DBMS. Configure cryptographic functions to use FIPS 140 compliant algorithms and hashing functions.\n\nThe strength requirements are dependent upon data classification.\n\nFor unclassified data, where cryptography is required:\nAES 128 for encryption\nSHA 256 for hashing\n\nNSA has established the suite B encryption requirements for protecting National Security Systems (NSS) as follows.\nAES 128 for Secret\nAES 256 for Top Secret\nSHA 256 for Secret\nSHA 384 for Top Secret\n\nNational Security System is defined as:\n(OMB Circular A-130) Any telecommunications or information system operated by the United States Government, the function, operation, or use of which (1) involves intelligence activities; (2) involves cryptologic activities related to national security; (3) involves command and control of military forces; (4) involves equipment that is an integral part of a weapon or weapons system; or (5) is critical to the direct fulfillment of military or intelligence missions, but excluding any system that is to be used for routine administrative and business applications (including payroll, finance, logistics, and personnel management applications).\n\nThere is more information on this topic in the Oracle Database 12c Advanced Security Administrator's Guide, which may be found at https://docs.oracle.com/database/121/ASOAG/toc.htm. (Note, however, that because of changes in Oracle's licensing policy, it is no longer necessary to purchase Oracle Advanced Security to use network encryption and advanced authentication.)\n\nFIPS documentation can be downloaded from https://csrc.nist.gov/publications/fips",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-237740r879887_rule,STIG-ID|O121-C2-016700,STIG-Legacy|SV-76251,STIG-Legacy|V-61761,SWIFT-CSCv1|2.3,Vuln-ID|V-237740",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT NAME, VALUE FROM SYS.V$PARAMETER WHERE NAME = 'DBFIPS_140';",
        "sql_expect": "DBFIPS_140"
    },
    "custom_item_105": {
        "description": "SESSIONS_PER_USER",
        "sql_request": "select profile, limit from DBA_PROFILES where resource_name = 'SESSIONS_PER_USER';",
        "sql_expect": ".*"
    },
    "custom_item_106": {
        "description": "CONNECT_TIME",
        "sql_request": "select profile, limit from DBA_PROFILES where resource_name = 'CONNECT_TIME';",
        "sql_expect": ".*"
    },
    "custom_item_107": {
        "description": "IDLE_TIME",
        "sql_request": "select profile, limit from DBA_PROFILES where resource_name = 'IDLE_TIME';",
        "sql_expect": ".*"
    },
    "custom_item_108": {
        "description": "O121-C2-018200 - The DBMS must preserve any organization-defined system state information in the event of a system failure.",
        "info": "Failure in a known state can address safety or security in accordance with the mission/business needs of the organization. Failure in a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system.\n\nPreserving information system state information helps to facilitate system restart and return to the operational mode of the organization with less disruption of mission/business processes.",
        "solution": "Configure DBMS settings to preserve all required system state information in the event of a system failure.\n\nIf the database is not in archive log mode, issue the following commands to put the database in archive log mode. The database must be normally shutdown and restarted before it can be placed in archive log mode.\n\n$ sqlplus connect as sysdba -- stop and dismount database and shutdown instance.\nSQL> shutdown immediate;\n\nDatabase closed.\nDatabase dismounted.\nORACLE instance shut down.\n\nSQL> startup mount; -- Restart instance.\n\nORACLE instance started.\nTotal System Global Area 1653518336 bytes\nFixed Size 2228904 bytes\nVariable Size 1325403480 bytes\nDatabase Buffers 318767104 bytes\nRedo Buffers 7118848 bytes\nDatabase mounted.\n\nSQL> alter database archivelog; -- Enable ArchiveLog\nDatabase altered.\n\nSQL> alter database open; -- Re-open database\nDatabase altered.\n\nIssue the following command to see the new status:\nSQL> select log_mode from v$database;\n\nLOG_MODE\n------------\nARCHIVELOG\n\nSQL> archive log list;\n\nDatabase log mode Archive Mode\nAutomatic archival Enabled\nArchive destination USE_DB_RECOVERY_FILE_DEST\nOldest online log sequence 294\nNext log sequence to archive 296\nCurrent log sequence 296\n\nThe database is now in archive log mode, and transactions are either being recorded to transport to another database or being re-applied if the database becomes corrupt and needs to be restored from the last backup. Use the redo logs to replay transactions not captured in the backup.",
        "reference": "800-53|SC-24,800-53r5|SC-24,CAT|II,CCI|CCI-001665,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-24,ITSG-33|SC-24a.,QCSC-v1|5.2.1,Rule-ID|SV-220296r879641_rule,STIG-ID|O121-C2-018200,STIG-Legacy|SV-76259,STIG-Legacy|V-61769,Vuln-ID|V-220296",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "select log_mode from v$database;",
        "sql_expect": "ARCHIVELOG"
    },
    "custom_item_109": {
        "description": "O121-C2-000100 - The DBMS must limit the number of concurrent sessions for each system account to an organization-defined number of sessions.",
        "info": "Application management includes the ability to control the number of users and user sessions utilizing an application. Limiting the number of allowed users, and sessions per user, is helpful in limiting risks related to Denial of Service attacks.\n\nThis requirement addresses concurrent session control for a single information system account and does not address concurrent sessions by a single user via multiple system accounts.\n\nUnlimited concurrent connections to the DBMS could allow a successful Denial of Service (DoS) attack by exhausting connection resources.\n\nThe organization will need to define the maximum number of concurrent sessions by account type, by account, or a combination thereof. In deciding on the appropriate number, it is important to take into account the work requirements of the various types of user. For example, 2 might be an acceptable limit for general users accessing the database via an application; but 10 might be too few for a database administrator using a database management GUI tool, where each query tab and navigation pane may count as a separate session.",
        "solution": "Limit concurrent connections for each system account to a number less than or equal to the organization-defined number of sessions using the following SQL. Create profiles that conform to the requirements. Assign users to the appropriate profile.\n\nThe user profile, ORA_STIG_PROFILE, has been provided (starting with Oracle 12.1.0.2) to satisfy the STIG requirements pertaining to the profile parameters. Oracle recommends that this profile be customized with any site-specific requirements and assigned to all users where applicable.  Note: It remains necessary to create a customized replacement for the password validation function, ORA12C_STRONG_VERIFY_FUNCTION, if relying on this technique to verify password complexity.\n\nThe defaults for ORA_STIG_PROFILE are set as follows:\nResource Name                   Limit\n-------------                   ------\nCOMPOSITE_LIMIT                 DEFAULT\nSESSIONS_PER_USER               DEFAULT\nCPU_PER_SESSION                 DEFAULT\nCPU_PER_CALL                    DEFAULT\nLOGICAL_READS_PER_SESSION       DEFAULT\nLOGICAL_READS_PER_CALL          DEFAULT\nIDLE_TIME                          15\nCONNECT_TIME                    DEFAULT\nPRIVATE_SGA                     DEFAULT\nFAILED_LOGIN_ATTEMPTS               3\nPASSWORD_LIFE_TIME                 60\nPASSWORD_REUSE_TIME               365\nPASSWORD_REUSE_MAX                 10\nPASSWORD_VERIFY_FUNCTION    ORA12C_STRONG_VERIFY_FUNCTION\nPASSWORD_LOCK_TIME              UNLIMITED\nPASSWORD_GRACE_TIME                 5\n\nChange the value of SESSIONS_PER_USER (along with the other parameters, where relevant) from UNLIMITED to DoD-compliant, site-specific requirements and then assign users to the profile.\nALTER PROFILE ORA_STIG_PROFILE LIMIT SESSIONS_PER_USER;\n\nTo assign the user to the profile do the following:\nALTER USERPROFILE ORA_STIG_PROFILE;",
        "reference": "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,DISA_Benchmark|Oracle_Database_12c_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-220264r879511_rule,STIG-ID|O121-C2-000100,STIG-Legacy|SV-76457,STIG-Legacy|V-61967,Vuln-ID|V-220264",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Oracle_Database_12c_V2R9_STIG.zip",
        "sql_request": "SELECT PROFILE, RESOURCE_NAME, LIMIT FROM DBA_PROFILES WHERE RESOURCE_NAME = 'SESSIONS_PER_USER';",
        "sql_expect": ".+"
    }
}