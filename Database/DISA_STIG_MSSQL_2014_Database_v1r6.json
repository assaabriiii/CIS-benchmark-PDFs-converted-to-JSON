{
    "custom_item_1": {
        "description": "SQL4-00-011200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_2": {
        "description": "SQL4-00-011200 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_3": {
        "description": "SQL4-00-011200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_4": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 14",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 14"
    },
    "custom_item_5": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 15",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 15"
    },
    "custom_item_6": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 16",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 16"
    },
    "custom_item_7": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 17",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 17"
    },
    "custom_item_8": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 18",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 18"
    },
    "custom_item_9": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 20",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 20"
    },
    "custom_item_10": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 42",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_11": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 43",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_12": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 46",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 46"
    },
    "custom_item_13": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 47",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 47"
    },
    "custom_item_14": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 90",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_15": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 102",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 102"
    },
    "custom_item_16": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 103",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 103"
    },
    "custom_item_17": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 104",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 104"
    },
    "custom_item_18": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 105",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 105"
    },
    "custom_item_19": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 106",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 106"
    },
    "custom_item_20": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 107",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 107"
    },
    "custom_item_21": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 108",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 108"
    },
    "custom_item_22": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 109",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 109"
    },
    "custom_item_23": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 110",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 110"
    },
    "custom_item_24": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 111",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 111"
    },
    "custom_item_25": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 112",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 112"
    },
    "custom_item_26": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 113",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 113"
    },
    "custom_item_27": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 115",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 115"
    },
    "custom_item_28": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 116",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 116"
    },
    "custom_item_29": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 117",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 117"
    },
    "custom_item_30": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 118",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 118"
    },
    "custom_item_31": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 128",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 128"
    },
    "custom_item_32": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 129",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 129"
    },
    "custom_item_33": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 130",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 130"
    },
    "custom_item_34": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 131",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 131"
    },
    "custom_item_35": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 132",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 132"
    },
    "custom_item_36": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 133",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 133"
    },
    "custom_item_37": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 134",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 134"
    },
    "custom_item_38": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 135",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 135"
    },
    "custom_item_39": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 152",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 152"
    },
    "custom_item_40": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 153",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 153"
    },
    "custom_item_41": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 162",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_42": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 164",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 164"
    },
    "custom_item_43": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 170",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170"
    },
    "custom_item_44": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 171",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171"
    },
    "custom_item_45": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 172",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172"
    },
    "custom_item_46": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 173",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173"
    },
    "custom_item_47": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 175",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 175"
    },
    "custom_item_48": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 176",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 176"
    },
    "custom_item_49": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 177",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177"
    },
    "custom_item_50": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 178",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 178"
    },
    "custom_item_51": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - Event ID 180",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 180"
    },
    "custom_item_52": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'APPLICATION_ROLE_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_53": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - AUDIT_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'AUDIT_CHANGE_GROUP';",
        "sql_expect": "AUDIT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_54": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - BACKUP_RESTORE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'BACKUP_RESTORE_GROUP';",
        "sql_expect": "BACKUP_RESTORE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_55": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_CHANGE_GROUP';",
        "sql_expect": "DATABASE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_56": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_OBJECT_ACCESS_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_ACCESS_GROUP';",
        "sql_expect": "DATABASE_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_57": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_58": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_59": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_OPERATION_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OPERATION_GROUP';",
        "sql_expect": "DATABASE_OPERATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_60": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_61": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_62": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_PRINCIPAL_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_63": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_64": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_65": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - DBCC_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DBCC_GROUP';",
        "sql_expect": "DBCC_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_66": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - FAILED_LOGIN_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'FAILED_LOGIN_GROUP';",
        "sql_expect": "FAILED_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_67": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - LOGIN_CHANGE_PASSWORD_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGIN_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "LOGIN_CHANGE_PASSWORD_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_68": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - LOGOUT_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGOUT_GROUP';",
        "sql_expect": "LOGOUT_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_69": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_70": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SCHEMA_OBJECT_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_71": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_72": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_73": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_OBJECT_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_74": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_75": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_76": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_OPERATION_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OPERATION_GROUP';",
        "sql_expect": "SERVER_OPERATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_77": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_78": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_PRINCIPAL_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PRINCIPAL_CHANGE_GROUP';",
        "sql_expect": "SERVER_PRINCIPAL_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_79": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_PRINCIPAL_IMPERSONATION_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "SERVER_PRINCIPAL_IMPERSONATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_80": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_81": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SERVER_STATE_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_STATE_CHANGE_GROUP';",
        "sql_expect": "SERVER_STATE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_82": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - SUCCESSFUL_LOGIN_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SUCCESSFUL_LOGIN_GROUP';",
        "sql_expect": "SUCCESSFUL_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_83": {
        "description": "SQL4-00-011200 - SQL Server must generate Trace or Audit records for organization-defined auditable events - TRACE_CHANGE_GROUP",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace; edit it as necessary to capture any additional, locally-defined events.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit; edit it as necessary to capture any additional, locally-defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81849r2_rule,STIG-ID|SQL4-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-67359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'TRACE_CHANGE_GROUP';",
        "sql_expect": "TRACE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_84": {
        "description": "SQL4-00-011320 - Where SQL Server Audit is in use at the database level, SQL Server must allow only the ISSM (or individuals or roles appointed by the ISSM) to select which auditable events are to be audited at the database level.",
        "info": "Without the capability to restrict which roles and individuals can select which events are audited, unauthorized personnel may be able to prevent or interfere with the auditing of critical events.\n\nSuppression of auditing could permit an adversary to evade detection.\n\nMisconfigured audits can degrade the system's performance by overwhelming the audit log. Misconfigured audits may also make it more difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nThis version of the requirement deals with SQL Server Audit-based audit trails.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Create a database role specifically for audit maintainers, and give it permission to maintain audits, without granting it unnecessary permissions:\nUSE;\nGO\nCREATE ROLE DATABASE_AUDIT_MAINTAINERS;\nGO\nGRANT ALTER ANY DATABASE AUDIT TO DATABASE_AUDIT_MAINTAINERS;\nGO\n(The role name used here is an example; other names may be used.)\n\nUse REVOKE and/or DENY and/or ALTER ROLE ... DROP MEMBER ... statements to remove the ALTER ANY DATABASE AUDIT permission from all users.\n\nThen, for each authorized database user, run the statement:\nALTER ROLE DATABASE_AUDIT_MAINTAINERS ADD MEMBER;\nGO\n\nUse REVOKE and/or DENY and/or ALTER SERVER ROLE ... DROP MEMBER ... statements to remove CONTROL DATABASE permission from logins that do not need it.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12b.,800-53r5|AU-12b.,CAT|II,CCI|CCI-000171,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12b.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81851r2_rule,STIG-ID|SQL4-00-011320,SWIFT-CSCv1|6.4,Vuln-ID|V-67361",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC sp_MSforeachdb 'USE [?] select princ.name, princ.type_desc, perm.permission_name, perm.state_desc, perm.class_desc from sys.database_principals princ left join sys.database_permissions perm on perm.grantee_principal_id = princ.principal_id WHERE permission_name in(''ALTER ANY DATABASE AUDIT'',''CONTROL'')'"
    },
    "custom_item_85": {
        "description": "SQL4-00-014900 - SQL Server must be monitored to discover unauthorized changes to functions.",
        "info": "When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of SQL Server and/or application can potentially have significant effects on the overall security of the system.\n\nIf SQL Server were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.\n\nThis requirement is contingent upon the language in which the application is programmed, as many application architectures in use today incorporate their software libraries into, and make them inseparable from, their compiled distributions, rendering them static and version-dependent. However, this requirement does apply to applications with software libraries accessible and configurable, as in the case of interpreted languages.\n\nAccordingly, only qualified and authorized individuals shall be allowed to obtain access to SQL Server components for purposes of initiating changes, including upgrades and modifications.\n\nUnmanaged changes that occur to the SQL Server software libraries or configuration, such as Functions, can lead to unauthorized or compromised installations.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure a SQL Server timed job that automatically checks all system and user-defined Functions for being modified.\n\n(The supplemental file Track.sql, provided with this STIG, can be used to establish a monitoring job.  This should be supplemented with a process for informing the appropriate personnel.  Other techniques for achieving the same ends, such as the use of DDL triggers, are acceptable.)",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-81855r2_rule,STIG-ID|SQL4-00-014900,Vuln-ID|V-67365",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC msdb.dbo.sp_help_job;"
    },
    "custom_item_86": {
        "description": "SQL4-00-015100 - SQL Server must be monitored to discover unauthorized changes to triggers.",
        "info": "When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of SQL Server and/or application can potentially have significant effects on the overall security of the system.\n\nIf SQL Server were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.\n\nThis requirement is contingent upon the language in which the application is programmed, as many application architectures in use today incorporate their software libraries into, and make them inseparable from, their compiled distributions, rendering them static and version-dependent. However, this requirement does apply to applications with software libraries accessible and configurable, as in the case of interpreted languages.\n\nAccordingly, only qualified and authorized individuals shall be allowed to obtain access to SQL Server components for purposes of initiating changes, including upgrades and modifications.\n\nUnmanaged changes that occur to the SQL Server software libraries or configuration, such as Triggers, can lead to unauthorized or compromised installations.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure a SQL Server timed job that automatically checks all system and user-defined Triggers for modification.\n\n(The supplemental file Track.sql, provided with this STIG, can be used to establish a monitoring job.  This should be supplemented with a process for informing the appropriate personnel.  Other techniques for achieving the same ends, such as the use of DDL triggers, are acceptable.)",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-81857r2_rule,STIG-ID|SQL4-00-015100,Vuln-ID|V-67367",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC msdb.dbo.sp_help_job;"
    },
    "custom_item_87": {
        "description": "SQL4-00-015200 - SQL Server must be monitored to discover unauthorized changes to stored procedures.",
        "info": "When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of SQL Server and/or application can potentially have significant effects on the overall security of the system.\n\nIf SQL Server were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.\n\nThis requirement is contingent upon the language in which the application is programmed, as many application architectures in use today incorporate their software libraries into, and make them inseparable from, their compiled distributions, rendering them static and version-dependent. However, this requirement does apply to applications with software libraries accessible and configurable, as in the case of interpreted languages.\n\nAccordingly, only qualified and authorized individuals shall be allowed to obtain access to SQL Server components for purposes of initiating changes, including upgrades and modifications.\n\nUnmanaged changes that occur to the SQL Server software libraries or configuration, such as Stored Procedures, can lead to unauthorized or compromised installations.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure a SQL Server timed job that automatically checks all system and user-defined Stored Procedures for modification.\n\n(The supplemental file Track.sql, provided with this STIG, can be used to establish a monitoring job.  This should be supplemented with a process for informing the appropriate personnel.  Other techniques for achieving the same ends, such as the use of DDL triggers, are acceptable.)",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-81859r2_rule,STIG-ID|SQL4-00-015200,Vuln-ID|V-67369",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC msdb.dbo.sp_help_job;"
    },
    "custom_item_88": {
        "description": "SQL4-00-015600 - Database objects (including but not limited to tables, indexes, storage, stored procedures, functions, triggers, links to software external to SQL Server, etc.) must be owned by database/DBMS principals authorized for ownership.",
        "info": "Within the database, object ownership implies full privileges to the owned object, including the privilege to assign access to the owned objects to other subjects. Database functions and procedures can be coded using definer's rights. This allows anyone who utilizes the object to perform the actions if they were the owner. If not properly managed, this can lead to privileged actions being taken by unauthorized individuals.\n\nConversely, if critical tables or other objects rely on unauthorized owner accounts, these objects may be lost when an account is removed.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Add and/or update system documentation to include any accounts authorized for object ownership and remove any account not authorized.\n\nTo change the schema owning a database object in SQL Server, use this code:\nUSE;\nGO\nALTER SCHEMATRANSFER.;\nGO\n\nCaution:  this can break code.  This Fix should be implemented in conjunction with corrections to such code.  Test before deploying in production.  Deploy during a scheduled maintenance window.",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-81861r1_rule,STIG-ID|SQL4-00-015600,Vuln-ID|V-67371",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name AS 'Database name', SUSER_SNAME(owner_sid) AS 'Database Owner', state_desc AS 'Database state' FROM sys.databases"
    },
    "custom_item_89": {
        "description": "SQL4-00-015610 - In a database owned by [sa], or by any other login having administrative privileges at the instance level, the database property TRUSTWORTHY must be OFF.",
        "info": "SQL Server's fixed (built-in) server roles, especially [sysadmin], have powerful capabilities that could cause great harm if misused, so their use must be tightly controlled.\n\nThe SQL Server instance uses each database's TRUSTWORTHY property to guard against tampering that could enable unwarranted privilege escalation. When TRUSTWORTHY is 0/False/Off, SQL Server prevents the database from accessing resources in other databases. When TRUSTWORTHY is 1/True/On, SQL Server permits access to other databases (subject to other protections). SQL Server sets TRUSTWORTHY OFF when it creates a new database. SQL Server forces TRUSTWORTHY OFF, irrespective of its prior value, when an existing database is attached to it, to address the possibility that an adversary may have tampered with the database, introducing malicious code. To set TRUSTWORTHY ON, an account with the [sysadmin] role must issue an ALTER DATABASE command.\n\nAlthough SQL Server itself treats this property conservatively, application installer programs may set TRUSTWORTHY ON and leave it on. This provides an opportunity for misuse.\n\nWhen TRUSTWORTHY is ON, users of the database can take advantage of the database owner's privileges, by impersonating the owner. This can have particularly serious consequences if the database owner is the [sa] login (which may have been renamed in accordance with SQL4-00-010200, and disabled in accordance with SQL4-00-017100, but nonetheless can be invoked in an EXECUTE AS USER = 'dbo' statement, or CREATE PROCEDURE ... WITH EXECUTE AS OWNER ...). The [sa] login cannot be removed from the [sysadmin] role. The user impersonating [sa] - or another [sysadmin] account - is then able to perform administrative actions across all databases under the instance, including making any himself or any other login a member of [sysadmin].\n\nMost of the other fixed server roles could be similarly abused.\n\nTherefore, TRUSTWORTHY must not be used on databases owned by logins that are members of the fixed server roles. Further, if TRUSTWORTHY is to be used for any other database, the need must be documented and approved.\n\nThe system database [msdb] is an exception: it is required to be TRUSTWORTHY.",
        "solution": "Set the TRUSTWORTHY property OFF; or remove the database owner from the fixed server role(s); or change the database owner.\n\nTo set the TRUSTWORTHY property OFF:\nUSE [master];\nGO\nALTER DATABASESET TRUSTWORTHY OFF;\nGO\nVerify that this produced the intended result by re-running the query specified in the Check.\n\nTo determine the path or paths by which the database owner is assigned the fixed server role or roles, run this query:\n\nUSE;\nGO\nWITH C AS\n(\nSELECT\n      P.name      AS [Parent Server Role],\n      CAST('Fixed' AS varchar(8))\n                  AS [Server Role Type],\n      M.name      AS [Member],\n      M.type_desc AS [Member Type],\n      P.name      AS [Root],\n      1           AS [Level]\nFROM\n      [sys].[server_role_members] X\n      INNER JOIN [sys].[server_principals] P ON P.principal_id = X.role_principal_id\n      INNER JOIN [sys].[server_principals] M ON M.principal_id = X.member_principal_id\nWHERE\n      P.is_fixed_role = 1\nUNION ALL\nSELECT\n      P.name        AS [Parent Server Role],\n      CASE WHEN M.is_fixed_role = 1 THEN CAST('Fixed' AS varchar(8)) ELSE CAST('Custom' AS varchar(8)) END\n                    AS [Server Role Type],\n      M.name        AS [Member],\n      M.type_desc   AS [Member Type],\n      C.[Root]      AS [Root],\n      C.[Level] + 1 AS [Level]\nFROM\n      [sys].[server_role_members] X\n      INNER JOIN [sys].[server_principals] P ON P.principal_id = X.role_principal_id\n      INNER JOIN [sys].[server_principals] M ON M.principal_id = X.member_principal_id\n      INNER JOIN C ON P.name = C.Member\n)\n,\nB AS\n(\nSELECT\n      C.[Member] AS [Leaf],\n      C.[Root],\n      C.[Parent Server Role],\n      C.[Server Role Type],\n      C.[Member],\n      C.[Member Type],\n      C.[Level]\nFROM C\nWHERE\n      C.[Member Type] NOT LIKE '%ROLE%'\nUNION ALL\nSELECT\n      B.[Leaf],\n      C.[Root],\n      C.[Parent Server Role],\n      C.[Server Role Type],\n      C.[Member],\n      C.[Member Type],\n      C.[Level]\nFROM C\nINNER JOIN B\n      ON       C.[Member] = B.[Parent Server Role]\n      AND       C.[Level] = B.[Level] - 1\n      AND       C.[Root] = B.[Root]\n)\nSELECT\n      DB_NAME() AS [Database],\n      B.[Leaf]  AS [Owner Login],\n      B.[Root]  AS[Top-Level Server Role],\n      B.[Parent Server Role],\n      B.[Server Role Type],\n      B.[Member],\n      B.[Member Type],\n      B.[Level]\nFROM B\nWHERE B.[Leaf] = (SELECT SUSER_SNAME(D.owner_sid) FROM sys.databases D WHERE D.Name = DB_NAME())\nORDER BY B.[Root], B.[Level], B.[Parent Server Role], B.[Member]\n;\nGO\n\nTo remove the database owner from a fixed server role or a custom server role:\nUSE [master];\nGO\nALTER SERVER ROLEDROP MEMBER;\nGO\nVerify that this produced the intended result by re-running the Check query.\n\nTo change the database owner:\nUSE [master];\nGO\nALTER AUTHORIZATION ON DATABASE::TO;\nGO\nVerify that this produced the intended result by re-running the Check query.",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-81865r1_rule,STIG-ID|SQL4-00-015610,Vuln-ID|V-67375",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC sp_MSforeachdb 'USE [?]; WITH FixedServerRoles(RoleName) AS(SELECT ''sysadmin'' UNION SELECT ''securityadmin'' UNION SELECT ''serveradmin'' UNION SELECT ''setupadmin'' UNION SELECT ''processadmin'' UNION SELECT ''diskadmin'' UNION SELECT ''dbcreator'' UNION SELECT ''bulkadmin'') SELECT DB_NAME() AS [Database], SUSER_SNAME(D.owner_sid) AS [Database Owner], F.RoleName AS [Fixed Server Role], CASE WHEN D.is_trustworthy_on = 1 THEN ''ON'' ELSE ''off'' END AS [Trustworthy] FROM FixedServerRoles F INNER JOIN sys.databases D ON D.Name = DB_NAME() WHERE IS_SRVROLEMEMBER(F.RoleName, SUSER_SNAME(D.owner_sid)) = 1 AND DB_NAME() <> ''msdb'' AND D.is_trustworthy_on = 1;'"
    },
    "custom_item_90": {
        "description": "SQL4-00-015620 - In a database owned by a login not having administrative privileges at the instance level, the database property TRUSTWORTHY must be OFF unless required and authorized.",
        "info": "SQL Server's fixed (built-in) server roles, especially [sysadmin], have powerful capabilities that could cause great harm if misused, so their use must be tightly controlled.\n\nThe SQL Server instance uses each database's TRUSTWORTHY property to guard against tampering that could enable unwarranted privilege escalation. When TRUSTWORTHY is 0/False/Off, SQL Server prevents the database from accessing resources in other databases. When TRUSTWORTHY is 1/True/On, SQL Server permits access to other databases (subject to other protections). SQL Server sets TRUSTWORTHY OFF when it creates a new database. SQL Server forces TRUSTWORTHY OFF, irrespective of its prior value, when an existing database is attached to it, to address the possibility that an adversary may have tampered with the database, introducing malicious code. To set TRUSTWORTHY ON, an account with the [sysadmin] role must issue an ALTER DATABASE command.\n\nAlthough SQL Server itself treats this property conservatively, application installer programs may set TRUSTWORTHY ON and leave it on. This provides an opportunity for misuse.\n\nWhen TRUSTWORTHY is ON, users of the database can take advantage of the database owner's privileges, by impersonating the owner. This can have particularly serious consequences if the database owner is the [sa] login (which may have been renamed in accordance with SQL4-00-010200, and disabled in accordance with SQL4-00-017100, but nonetheless can be invoked in an EXECUTE AS USER = 'dbo' statement, or CREATE PROCEDURE ... WITH EXECUTE AS OWNER ...). The [sa] login cannot be removed from the [sysadmin] role. The user impersonating [sa] - or another [sysadmin] account - is then able to perform administrative actions across all databases under the instance, including making any himself or any other login a member of [sysadmin].\n\nMost of the other fixed server roles could be similarly abused.\n\nTherefore, TRUSTWORTHY must not be used on databases owned by logins that are members of the fixed server roles. Further, if TRUSTWORTHY is to be used for any other database, the need must be documented and approved.\n\nThe system database [msdb] is an exception: it is required to be TRUSTWORTHY.",
        "solution": "Run the SQL statements:\nUSE [master];\nGO\nALTER DATABASESET TRUSTWORTHY OFF;\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-81863r1_rule,STIG-ID|SQL4-00-015620,Vuln-ID|V-67373",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC sp_MSforeachdb 'USE [?]; SELECT DB_NAME() AS [Database], SUSER_SNAME(D.owner_sid) AS [Database Owner], CASE WHEN D.is_trustworthy_on = 1 THEN ''ON'' ELSE ''off'' END AS [Trustworthy] FROM sys.databases D WHERE D.[name] = DB_NAME() AND DB_NAME() <> ''msdb'' AND D.is_trustworthy_on = 1'"
    },
    "custom_item_91": {
        "description": "SQL4-00-024100 - The Database Master Key must be encrypted by the Service Master Key, where a Database Master Key is required and another encryption method has not been specified.",
        "info": "When not encrypted by the Service Master Key, system administrators or application administrators may access and use the Database Master Key to view sensitive data that they are not authorized to view. Where alternate encryption means are not feasible, encryption by the Service Master Key may be necessary. To help protect sensitive data from unauthorized access by DBAs, mitigations may be in order. Mitigations may include automatic alerts or other audit events when the Database Master Key is accessed outside of the application or by a DBA account.",
        "solution": "Where possible, encrypt the Database Master Key with a password known only to the application administrator.  Where not possible, configure additional audit events or alerts to detect unauthorized access to the Database Master Key by users not authorized to view sensitive data.",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-81871r1_rule,STIG-ID|SQL4-00-024100,Vuln-ID|V-67381",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name FROM [master].sys.databases WHERE is_master_key_encrypted_by_server = 1 AND owner_sid <> 1 AND state = 0"
    },
    "custom_item_92": {
        "description": "SQL4-00-024200 - Database Master Key passwords must not be stored in credentials within the database.",
        "info": "Storage of the Database Master Key password in a database credential allows decryption of sensitive data by privileged users who may not have a need-to-know requirement to access the data.",
        "solution": "Use the stored procedure sp_control_dbmasterkey_password to remove any credentials that\nstore Database Master Key passwords.\nFrom the query prompt:\nEXEC SP_CONTROL_DBMASTERKEY_PASSWORD @db_name = '', @action\n= N'drop'",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-81873r1_rule,STIG-ID|SQL4-00-024200,Vuln-ID|V-67383",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT COUNT(credential_id) FROM [master].sys.master_key_passwords",
        "sql_expect": "0"
    },
    "custom_item_93": {
        "description": "SQL4-00-024300 - Symmetric keys (other than the database master key) must use a DoD certificate to encrypt the key.",
        "info": "Data within the database is protected by use of encryption. The symmetric keys are critical for this process. If the symmetric keys were to be compromised the data could be disclosed to unauthorized personnel.\n\nThe database master key is exempt, as a password must be supplied when creating it.",
        "solution": "Configure or alter symmetric keys to encrypt keys with certificates or authorized asymmetric keys.\nIn a query tool:\n     ALTER SYMMETRIC KEYADD ENCRYPTION BY CERTIFICATE;\n     ALTER SYMMETRIC KEYDROP ENCRYPTION BY;\n\nThe symmetric key must specify a certificate or asymmetric key for encryption.",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-81875r2_rule,STIG-ID|SQL4-00-024300,Vuln-ID|V-67385",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT s.name, k.crypt_type_desc FROM sys.symmetric_keys s, sys.key_encryptions k WHERE s.symmetric_key_id = k.key_id AND s.name <> '##MS_DatabaseMasterKey##' AND k.crypt_type IN ('ESKP', 'ESKS') ORDER BY s.name, k.crypt_type_desc;"
    },
    "custom_item_94": {
        "description": "SQL4-00-034700 - SQL Server must implement and/or support cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components.",
        "info": "Databases holding data requiring 'data at rest' protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to the DBMS or implemented via additional software or operating system/file system settings, as appropriate to the situation.\n\nSelection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields).\n\nThe decision whether and what to encrypt rests with the data owner and is also influenced by the physical measures taken to secure the equipment and media on which the information resides.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Where full-disk encryption is required, configure Windows and/or the storage system to provide this.\n\nWhere transparent data encryption (TDE) is required, deploy the necessary stack of certificates and keys, and set the Encryption Enabled to True.  For guidance from the Microsoft Developer Network on how to do this, perform a web search for 'SQL Server 2014 TDE'.\n\nWhere column encryption is required, deploy the necessary stack of certificates and keys, and enable encryption on the columns in question.  For guidance from the Microsoft Developer Network on how to do this, perform a web search for 'SQL Server 2014 Encrypt a Column of Data'.",
        "reference": "800-171|3.13.16,800-53|SC-28(1),800-53r5|SC-28(1),CAT|II,CCI|CCI-002475,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28(1),PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-81899r1_rule,STIG-ID|SQL4-00-034700,TBA-FIISB|28.1,Vuln-ID|V-67409",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "IF NOT EXISTS (SELECT 1 FROM sys.dm_database_encryption_keys WHERE DB_NAME(database_id) = DB_NAME()) SELECT DB_NAME() AS [Database Name],'No database encryption key present, no encryption' AS [Encryption State] ELSE SELECT DB_NAME(database_id)  AS [Database Name], CASE encryption_state WHEN 0 THEN 'No database encryption key present, no encryption' WHEN 1 THEN 'Unencrypted' WHEN 2 THEN 'Encryption in progress' WHEN 3 THEN 'Encrypted' WHEN 4 THEN 'Key change in progress' WHEN 5 THEN 'Decryption in progress' WHEN 6 THEN 'Protection change in progress' END AS [Encryption State] FROM sys.dm_database_encryption_keys WHERE DB_NAME(database_id) = DB_NAME()",
        "regex": ".*encrypted.*"
    },
    "custom_item_95": {
        "description": "SQL4-00-035800 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_96": {
        "description": "SQL4-00-035800 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_97": {
        "description": "SQL4-00-035800 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_98": {
        "description": "SQL4-00-035800 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is accessed.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide this tracking at the application level, if Trace is used for audit purposes.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on categorized data at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81903r2_rule,STIG-ID|SQL4-00-035800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67413",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT id, status, path FROM sys.traces;",
        "regex": "Manual verificaton required"
    },
    "custom_item_99": {
        "description": "SQL4-00-035800 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is accessed.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide this tracking at the application level, if Trace is used for audit purposes.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on categorized data at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81903r2_rule,STIG-ID|SQL4-00-035800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67413",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT server_specification_id, audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_100": {
        "description": "SQL4-00-035900 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_101": {
        "description": "SQL4-00-035900 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_102": {
        "description": "SQL4-00-035900 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_103": {
        "description": "SQL4-00-035900 - Trace or Audit records must be generated  when unsuccessful attempts to access categorized information (e.g., classification levels/security levels) occur.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide this tracking at the application level, if Trace is used for audit purposes.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on categorized data at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes. Include failed attempts in the tracking.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81905r2_rule,STIG-ID|SQL4-00-035900,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67415",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT id, status, path FROM sys.traces;",
        "regex": "Manual verificaton required"
    },
    "custom_item_104": {
        "description": "SQL4-00-035900 - Trace or Audit records must be generated  when unsuccessful attempts to access categorized information (e.g., classification levels/security levels) occur.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide this tracking at the application level, if Trace is used for audit purposes.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on categorized data at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes. Include failed attempts in the tracking.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81905r2_rule,STIG-ID|SQL4-00-035900,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67415",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT server_specification_id, audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_105": {
        "description": "SQL4-00-036200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_106": {
        "description": "SQL4-00-036200 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_107": {
        "description": "SQL4-00-036200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_108": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 42",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_109": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 43",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_110": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 82",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_111": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 83",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_112": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 84",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_113": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 85",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_114": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 86",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_115": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 87",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_116": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 88",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_117": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 89",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_118": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 90",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_119": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 91",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_120": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - Event ID 162",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_121": {
        "description": "SQL4-00-036200 - SQL Server must generate Trace or Audit records when privileges/permissions are modified via locally-defined security objects - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81907r2_rule,STIG-ID|SQL4-00-036200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_122": {
        "description": "SQL4-00-036300 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_123": {
        "description": "SQL4-00-036300 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_124": {
        "description": "SQL4-00-036300 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_125": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 42",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_126": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 43",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_127": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 82",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_128": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 83",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_129": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 84",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_130": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 85",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_131": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 86",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_132": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 87",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_133": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 88",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_134": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 89",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_135": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 90",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_136": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 91",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_137": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - Event ID 162",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_138": {
        "description": "SQL4-00-036300 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify privileges/permissions via locally-defined security objects occur - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, there is no distinction between modification of permissions and granting or dropping them.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to the system views (and all other schema-scoped objects).  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81909r2_rule,STIG-ID|SQL4-00-036300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67419",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_139": {
        "description": "SQL4-00-036400 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_140": {
        "description": "SQL4-00-036400 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_141": {
        "description": "SQL4-00-036400 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_142": {
        "description": "SQL4-00-036400 - SQL Server must generate Trace or Audit records when locally-defined security objects are modified - Event ID 46",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81911r2_rule,STIG-ID|SQL4-00-036400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67421",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 46"
    },
    "custom_item_143": {
        "description": "SQL4-00-036400 - SQL Server must generate Trace or Audit records when locally-defined security objects are modified - Event ID 47",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81911r2_rule,STIG-ID|SQL4-00-036400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67421",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 47"
    },
    "custom_item_144": {
        "description": "SQL4-00-036400 - SQL Server must generate Trace or Audit records when locally-defined security objects are modified - Event ID 162",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81911r2_rule,STIG-ID|SQL4-00-036400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67421",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_145": {
        "description": "SQL4-00-036400 - SQL Server must generate Trace or Audit records when locally-defined security objects are modified - Event ID 164",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81911r2_rule,STIG-ID|SQL4-00-036400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67421",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 164"
    },
    "custom_item_146": {
        "description": "SQL4-00-036400 - SQL Server must generate Trace or Audit records when locally-defined security objects are modified - SCHEMA_OBJECT_CHANGE_GROUP",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81911r2_rule,STIG-ID|SQL4-00-036400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67421",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_147": {
        "description": "SQL4-00-036500 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_148": {
        "description": "SQL4-00-036500 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_149": {
        "description": "SQL4-00-036500 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_150": {
        "description": "SQL4-00-036500 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify locally-defined security objects occur - Event ID 46",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81925r2_rule,STIG-ID|SQL4-00-036500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67435",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 46"
    },
    "custom_item_151": {
        "description": "SQL4-00-036500 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify locally-defined security objects occur - Event ID 47",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81925r2_rule,STIG-ID|SQL4-00-036500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67435",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 47"
    },
    "custom_item_152": {
        "description": "SQL4-00-036500 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify locally-defined security objects occur - Event ID 162",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81925r2_rule,STIG-ID|SQL4-00-036500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67435",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_153": {
        "description": "SQL4-00-036500 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify locally-defined security objects occur - Event ID 164",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81925r2_rule,STIG-ID|SQL4-00-036500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67435",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 164"
    },
    "custom_item_154": {
        "description": "SQL4-00-036500 - SQL Server must generate Trace or Audit records when unsuccessful attempts to modify locally-defined security objects occur - SCHEMA_OBJECT_CHANGE...",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  ALTER operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81925r2_rule,STIG-ID|SQL4-00-036500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67435",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_155": {
        "description": "SQL4-00-036600 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_156": {
        "description": "SQL4-00-036600 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_157": {
        "description": "SQL4-00-036600 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_158": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 82",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_159": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 83",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_160": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 84",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_161": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 85",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_162": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 86",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_163": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 87",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_164": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 88",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_165": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 89",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_166": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 90",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_167": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 91",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_168": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - Event ID 162",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_169": {
        "description": "SQL4-00-036600 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is created - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81927r2_rule,STIG-ID|SQL4-00-036600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67437",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_170": {
        "description": "SQL4-00-036650 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_171": {
        "description": "SQL4-00-036650 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_172": {
        "description": "SQL4-00-036650 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_173": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 82",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_174": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 83",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_175": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 84",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_176": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 85",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_177": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 86",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_178": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 87",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_179": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 88",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_180": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 89",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_181": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 90",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_182": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 91",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_183": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - Event ID 162",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_184": {
        "description": "SQL4-00-036650 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81931r2_rule,STIG-ID|SQL4-00-036650,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67441",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_185": {
        "description": "SQL4-00-036800 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_186": {
        "description": "SQL4-00-036800 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_187": {
        "description": "SQL4-00-036800 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_188": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 82",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_189": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 83",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_190": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 84",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_191": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 85",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_192": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 86",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_193": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 87",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_194": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 88",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_195": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 89",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_196": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 90",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_197": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 91",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_198": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - Event ID 162",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_199": {
        "description": "SQL4-00-036800 - Trace or Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur - SCHEMA_OBJECT_ACCESS...",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit INSERT actions at the application level.  However, to capture all INSERTs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False; and some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for INSERTs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81929r2_rule,STIG-ID|SQL4-00-036800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67439",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_200": {
        "description": "SQL4-00-036850 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_201": {
        "description": "SQL4-00-036850 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_202": {
        "description": "SQL4-00-036850 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_203": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 82",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_204": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 83",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_205": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 84",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_206": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 85",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_207": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 86",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_208": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 87",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_209": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 88",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_210": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 89",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_211": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 90",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_212": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 91",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_213": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - Event ID 162",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_214": {
        "description": "SQL4-00-036850 - Trace or Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur - SCHEMA_OBJECT_ACCESS...",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit UPDATE actions at the application level.  However, to capture all UPDATEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for UPDATEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81933r2_rule,STIG-ID|SQL4-00-036850,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67443",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_215": {
        "description": "SQL4-00-037100 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_216": {
        "description": "SQL4-00-037100 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_217": {
        "description": "SQL4-00-037100 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_218": {
        "description": "SQL4-00-037100 - SQL Server must generate Trace or Audit records when locally-defined security objects are dropped - Event ID 46",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81923r3_rule,STIG-ID|SQL4-00-037100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67433",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 46"
    },
    "custom_item_219": {
        "description": "SQL4-00-037100 - SQL Server must generate Trace or Audit records when locally-defined security objects are dropped - Event ID 47",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81923r3_rule,STIG-ID|SQL4-00-037100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67433",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 47"
    },
    "custom_item_220": {
        "description": "SQL4-00-037100 - SQL Server must generate Trace or Audit records when locally-defined security objects are dropped - Event ID 162",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81923r3_rule,STIG-ID|SQL4-00-037100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67433",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_221": {
        "description": "SQL4-00-037100 - SQL Server must generate Trace or Audit records when locally-defined security objects are dropped - Event ID 164",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81923r3_rule,STIG-ID|SQL4-00-037100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67433",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 164"
    },
    "custom_item_222": {
        "description": "SQL4-00-037100 - SQL Server must generate Trace or Audit records when locally-defined security objects are dropped - SCHEMA_OBJECT_CHANGE_GROUP",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81923r3_rule,STIG-ID|SQL4-00-037100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67433",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_223": {
        "description": "SQL4-00-037200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_224": {
        "description": "SQL4-00-037200 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_225": {
        "description": "SQL4-00-037200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_226": {
        "description": "SQL4-00-037200 - SQL Server must generate Trace or Audit records when  unsuccessful attempts to drop locally-defined security objects occur - Event ID 46",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81921r3_rule,STIG-ID|SQL4-00-037200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67431",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 46"
    },
    "custom_item_227": {
        "description": "SQL4-00-037200 - SQL Server must generate Trace or Audit records when  unsuccessful attempts to drop locally-defined security objects occur - Event ID 47",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81921r3_rule,STIG-ID|SQL4-00-037200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67431",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 47"
    },
    "custom_item_228": {
        "description": "SQL4-00-037200 - SQL Server must generate Trace or Audit records when  unsuccessful attempts to drop locally-defined security objects occur - Event ID 162",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81921r3_rule,STIG-ID|SQL4-00-037200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67431",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_229": {
        "description": "SQL4-00-037200 - SQL Server must generate Trace or Audit records when  unsuccessful attempts to drop locally-defined security objects occur - Event ID 164",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81921r3_rule,STIG-ID|SQL4-00-037200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67431",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 164"
    },
    "custom_item_230": {
        "description": "SQL4-00-037200 - SQL Server must generate Trace or Audit records when  unsuccessful attempts to drop locally-defined security objects occur.",
        "info": "SQL Server protects its built-in security objects (tables, views, functions, procedures, etc.) from alteration by database users and administrators.  However, applications sometimes have additional, security-related objects defined in the database.  DROP operations on these objects must be monitored.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_CHANGE_GROUP causes capture of all attempts, successful and otherwise, to CREATE, ALTER, or DROP any schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_CHANGE_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81921r3_rule,STIG-ID|SQL4-00-037200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67431",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_231": {
        "description": "SQL4-00-037300 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_232": {
        "description": "SQL4-00-037300 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_233": {
        "description": "SQL4-00-037300 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_234": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 82",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_235": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 83",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_236": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 84",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_237": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 85",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_238": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 86",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_239": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 87",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_240": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 88",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_241": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 89",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_242": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 90",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_243": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 91",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_244": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - Event ID 162",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_245": {
        "description": "SQL4-00-037300 - Trace or Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81919r2_rule,STIG-ID|SQL4-00-037300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67429",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_246": {
        "description": "SQL4-00-037400 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_247": {
        "description": "SQL4-00-037400 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_248": {
        "description": "SQL4-00-037400 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_249": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 82",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_250": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 83",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_251": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 84",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_252": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 85",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_253": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 86",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_254": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 87",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_255": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 88",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_256": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 89",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_257": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 90",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_258": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 91",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_259": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - Event ID 162",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_260": {
        "description": "SQL4-00-037400 - Trace or Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur - SCHEMA_OBJECT_ACCESS...",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nSince Trace does not provide for tracking SELECT statements, it is necessary to provide that part of the tracking at the application level.  Because of this, it may also be appropriate to audit DELETE actions at the application level.  However, to capture all DELETEs, whether they come from the application or bypass it, the Trace must be configured to cover them.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event for DELETEs on each table holding categorized information.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81917r2_rule,STIG-ID|SQL4-00-037400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67427",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_261": {
        "description": "SQL4-00-038100 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_262": {
        "description": "SQL4-00-038100 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_263": {
        "description": "SQL4-00-038100 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_264": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 42",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_265": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 43",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_266": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 82",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_267": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 83",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_268": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 84",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_269": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 85",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_270": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 86",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_271": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 87",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_272": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 88",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_273": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 89",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_274": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 90",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_275": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 91",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_276": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - Event ID 162",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_277": {
        "description": "SQL4-00-038100 - SQL Server must generate Trace or Audit records when successful accesses to designated objects occur - SUCCESSFUL_LOGIN_GROUP",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nTrace does not offer tracking of SELECT operations, so where this is required it must be implemented at the application level.",
        "solution": "Where SQL Server Trace is in use, implement tracking of SELECTs on designated tables at the application level, using the system stored procedure sp_trace_generateevent to write the tracking records to the Trace used for audit purposes.\n\nCreate triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nEnsure that Trace.sql includes blocks of code for event classes 42, 43, and 162.\n\nExecute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81915r3_rule,STIG-ID|SQL4-00-038100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67425",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_278": {
        "description": "SQL4-00-038200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_279": {
        "description": "SQL4-00-038200 - Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_280": {
        "description": "SQL4-00-038200 - Test for Trace",
        "sql_request": "SELECT id FROM sys.traces where id = @TRACE_ID@;",
        "sql_expect": "@TRACE_ID@"
    },
    "custom_item_281": {
        "description": "SQL4-00-038200 - SQL Server must generate Trace or Audit records when unsuccessful accesses to designated objects occur - Event ID 162",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81913r3_rule,STIG-ID|SQL4-00-038200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67423",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_282": {
        "description": "SQL4-00-038200 - SQL Server must generate Trace or Audit records when unsuccessful accesses to designated objects occur - SUCCESSFUL_LOGIN_GROUP",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTypes of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-81913r3_rule,STIG-ID|SQL4-00-038200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-67423",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_283": {
        "description": "SQL4-00-021300 - SQL Server must protect data at rest and ensure confidentiality and integrity of data.",
        "info": "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information.  Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.\n\nUser-generated data, as well as, application-specific configuration data, needs to be protected. Configurations and/or rule sets for firewalls, gateways, intrusion detection/prevention systems, filtering routers, and authenticator content are examples of system information likely requiring protection. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.\n\nIf the confidentiality and integrity of SQL Server data is not protected, the data will be open to compromise and unauthorized modification.\n\nProtective measures include encryption, physical security of the facility where the storage devices reside, operating system file permissions, and organizational controls.  Each of these should be applied as necessary and appropriate.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Apply appropriate controls to protect the confidentiality and integrity of data on a secondary device.\n\nWhere encryption is required, this can be done by full-disk encryption or by database encryption. To enable database encryption, create a master key, create a database encryption key, and protect it by using mechanisms tied to the master key, and then set encryption on.\n\nImplement physical security measures, operating system access control lists and organizational controls appropriate to the sensitivity level of the data in the database(s).",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_2014_Database_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-82367r3_rule,STIG-ID|SQL4-00-021300,Vuln-ID|V-67877",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT d.name AS [Database Name], CASE e.encryption_state WHEN 0 THEN 'No database encryption key present, no encryption' WHEN 1 THEN 'Unencrypted' WHEN 2 THEN 'Encryption in progress' WHEN 3 THEN 'Encrypted' WHEN 4 THEN 'Key change in progress' WHEN 5 THEN 'Decryption in progress' WHEN 6 THEN 'Protection change in progress' END AS [Encryption State] FROM sys.dm_database_encryption_keys e RIGHT JOIN sys.databases d ON DB_NAME(e.database_id) = d.name WHERE d.name NOT IN ('master','model','msdb') ORDER BY 1;"
    }
}