{
    "custom_item_1": {
        "description": "SQL4-00-010200 - SQL Server default account [sa] must have its name changed.",
        "info": "SQL Server's [sa] account has special privileges required to administer the database. The [sa] account is a well-known SQL Server account name and is likely to be targeted by attackers, and is thus more prone to providing unauthorized access to the database.\n\nSince the SQL Server [sa] is administrative in nature, the compromise of a default account can have catastrophic consequences, including the complete loss of control over SQL Server. Since SQL Server needs for this account to exist and it should not be removed, one way to mitigate this risk is to change the [sa] account name.",
        "solution": "Modify the SQL Server's [sa] (system administrator) account by running the following script:\n\nUSE master;\nGO\nALTER LOGIN [sa] WITH NAME =;\nGO",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|III,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213809r395853_rule,STIG-ID|SQL4-00-010200,STIG-Legacy|SV-82345,STIG-Legacy|V-67855,SWIFT-CSCv1|2.3,Vuln-ID|V-213809",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name AS 'Account Name' FROM sys.sql_logins WHERE name = 'sa'"
    },
    "custom_item_2": {
        "description": "SQL4-00-016200 - SQL Server must have the publicly available Northwind sample database removed.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements and providing a wide array of functionality not required for every mission, but which cannot be disabled.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities. Even though the very popular 'Northwind' database is no longer installed by default, it introduces a vulnerability to SQL Server and must be removed, if present.\n\nDemonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the SQL Server and the OS.",
        "solution": "Remove the publicly available 'Northwind' database from SQL Server by running the following script:\n\nUSE master;\nGO\nDROP DATABASE Northwind;\nGO",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213830r395853_rule,STIG-ID|SQL4-00-016200,STIG-Legacy|SV-82307,STIG-Legacy|V-67817,SWIFT-CSCv1|2.3,Vuln-ID|V-213830",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name FROM sysdatabases WHERE name LIKE 'Northwind%';"
    },
    "custom_item_3": {
        "description": "SQL4-00-016300 - SQL Server must have the publicly available pubs sample database removed.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements and providing a wide array of functionality not required for every mission, but which cannot be disabled.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities. Even though the formerly popular 'pubs' database is no longer installed by default, it introduces a vulnerability to SQL Server and must be removed, if present.\n\nDemonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the SQL Server and the OS.",
        "solution": "Remove the publicly available 'pubs' database from SQL Server by running the following script:\n\nUSE master;\nGO\nDROP DATABASE pubs;\nGO",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213831r395853_rule,STIG-ID|SQL4-00-016300,STIG-Legacy|SV-82309,STIG-Legacy|V-67819,SWIFT-CSCv1|2.3,Vuln-ID|V-213831",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name FROM sysdatabases WHERE name LIKE 'pubs%';"
    },
    "custom_item_4": {
        "description": "SQL4-00-016310 - SQL Server must have the publicly available AdventureWorks sample database removed.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements and providing a wide array of functionality not required for every mission, but which cannot be disabled.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities. Even though the very popular 'AdventureWorks' database is no longer installed by default, it introduces a vulnerability to SQL Server and must be removed, if present.\n\nDemonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the SQL Server and the OS.",
        "solution": "Remove the publicly available 'AdventureWorks' database from SQL Server by running the following script:\n\nUSE master;\nGO\nDROP DATABASE AdventureWorks;\nGO",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213832r395853_rule,STIG-ID|SQL4-00-016310,STIG-Legacy|SV-82311,STIG-Legacy|V-67821,SWIFT-CSCv1|2.3,Vuln-ID|V-213832",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name FROM sysdatabases WHERE name LIKE 'AdventureWorks%';"
    },
    "custom_item_5": {
        "description": "SQL4-00-016835 - SQL Server must have the Data Quality Services software component removed if it is unused.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default or selected for installation by an administrator, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities.  Unused and unnecessary SQL Server components increase the number of available attack vectors.  By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.\n\nThe Data Quality Services software component must be removed from SQL Server if it is unused.",
        "solution": "Either using the Start menu or via the command 'control.exe', open the Windows Control Panel.  Open Programs and Features.  Double-click on Microsoft SQL Server 2014.  In the dialog box that appears, select Remove.  Wait for the Remove wizard to appear.\n\nSelect the relevant SQL Server instance; click Next.\n\nSelect Data Quality Services; click Next.\n\nFollow the remaining prompts, to remove Data Quality Services from SQL Server.\n\nThen run the following script:\nUSE master;\nGO\nDROP DATABASE DQS_STAGING;\nGO\nDROP DATABASE DQS_PROJECTS;\nGO\nDROP DATABASE DQS_MAIN;\nGO\n\nRestart the server.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213843r395853_rule,STIG-ID|SQL4-00-016835,STIG-Legacy|SV-82333,STIG-Legacy|V-67843,SWIFT-CSCv1|2.3,Vuln-ID|V-213843",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name, database_id, owner_sid FROM sys.databases WHERE name in ('DQS_MAIN', 'DQS_PROJECTS', 'DQS_STAGING_DATA');"
    },
    "custom_item_6": {
        "description": "SQL4-00-016855 - SQL Server must have the Filestream feature disabled if it is unused.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default or selected for installation by an administrator, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities.  Unused and unnecessary SQL Server components increase the number of available attack vectors.  By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.\n\nThe Filestream feature must be disabled if it is unused.",
        "solution": "Either, in SQL Server Management Studio, Object Explorer, right-click on the SQL Server instance; select Properties; examine the Filestream section.\n\nIf Filestream is not required, set Filestream Access Level to 'Disabled.'\n\nIf Filestream is required only at the Transact-SQL query level, set Filestream Access Level to 'Transact-SQL access enabled.'\n\nRestart the SQL Server instance.\n\nOr, in a query tool, run this script, substituting the correct value for:\n     EXEC sys.sp_configure N'filestream access level', N'';\n     GO\n     RECONFIGURE WITH OVERRIDE;\n     GO\n\nThevalues are:\n0 - Disabled\n1 - Transact-SQL access enabled\n2 - Full access enabled",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213846r395853_rule,STIG-ID|SQL4-00-016855,STIG-Legacy|SV-82339,STIG-Legacy|V-67849,SWIFT-CSCv1|2.3,Vuln-ID|V-213846",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC sys.sp_configure N'filestream access level';",
        "regex": ".+"
    },
    "custom_item_7": {
        "description": "SQL4-00-017100 - The SQL Server default account [sa] must be disabled.",
        "info": "SQL Server's [sa] account has special privileges required to administer the database. The [sa] account is a well-known SQL Server account and is likely to be targeted by attackers and thus more prone to providing unauthorized access to the database.\n\nThis [sa] default account is administrative and could lead to catastrophic consequences, including the complete loss of control over SQL Server.\n\nIf the [sa] default account is not disabled, an attacker might be able to gain access through the account. SQL Server by default, at installation, disables the [sa] account.\n\nSome applications that run on SQL Server require the [sa] account to be enabled in order for the application to function properly. These applications that require the [sa] account to be enabled are usually legacy systems.",
        "solution": "Modify the enabled flag of SQL Server's [sa] (system administrator) account by running the following script. If the account name has been changed per SQL4-00-010200, replace the letters 'sa' in the query with the new name.\n\nUSE master;\nGO\nALTER LOGIN [sa] DISABLE;\nGO",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213848r395853_rule,STIG-ID|SQL4-00-017100,STIG-Legacy|SV-82343,STIG-Legacy|V-67853,SWIFT-CSCv1|2.3,Vuln-ID|V-213848",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "USE master; SELECT name, CAST(is_disabled as varchar(1)) FROM sys.sql_logins WHERE principal_id = 1",
        "sql_expect": "@SA_ACCT@"
    },
    "custom_item_8": {
        "description": "SQL4-00-017200 - Access to xp_cmdshell must be disabled, unless specifically required and approved.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives.\n\nApplications must adhere to the principles of least functionality by providing only essential capabilities.\n\nDBMSs may spawn additional external processes to execute procedures that are defined in the DBMS, but stored in external host files (external procedures). The spawned process used to execute the external procedure may operate within a different OS security context than the DBMS and provide unauthorized access to the host system.\n\nThe xp_cmdshell extended stored procedure allows execution of host executables outside the controls of database access permissions. This access may be exploited by malicious users who have compromised the integrity of the SQL Server database process to control the host operating system to perpetrate additional malicious activity.",
        "solution": "To disable the use of xp_cmdshell, from the query prompt:\n     EXEC sp_configure 'show advanced options', 1;\n     GO\n     RECONFIGURE;\n     GO\n     EXEC sp_configure 'xp_cmdshell', 0;\n     GO\n     RECONFIGURE;\n     GO",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-213849r395853_rule,STIG-ID|SQL4-00-017200,STIG-Legacy|SV-82347,STIG-Legacy|V-67857,SWIFT-CSCv1|2.3,Vuln-ID|V-213849",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC SP_CONFIGURE 'show advanced options', '1'; RECONFIGURE WITH OVERRIDE; EXEC SP_CONFIGURE 'xp_cmdshell';",
        "regex": ".+"
    },
    "custom_item_9": {
        "description": "SQL4-00-023700 - SQL Server must protect against an individual using a shared account from falsely denying having performed a particular action.",
        "info": "Non-repudiation of actions taken is required in order to maintain application integrity. Examples of particular actions taken by individuals include creating information, sending a message, approving information (e.g., indicating concurrence or signing a contract), and receiving a message.\n\nNon-repudiation protects against later claims by a user of not having created, modified, or deleted a particular data item or collection of data in the database.\n\nUse of shared accounts does not provide individual accountability for actions taken on the DBMS or data. Whenever a single database account is used to connect to the database, a secondary authentication method that provides individual accountability is required. This scenario most frequently occurs when an externally hosted application authenticates individual users to the application and the application uses a single account to retrieve or update database information on behalf of the individual users (as in connection pooling).\n\nWhen shared accounts are utilized without another means of identifying individual users, users may deny having performed a particular action.\n\n(Shared accounts should not be confused with Windows groups, which are used in role-based access control.)\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Remove user-accessible shared accounts and use individual userids.\n\nBuild/configure applications to ensure successful individual authentication prior to shared account access.\n\nEnsure each user's identity is received and used in audit data in all relevant circumstances.\n\nDesign, develop, and implement a method to log use of any account to which more than one person has access. Restrict interactive access to shared accounts to the fewest persons possible.",
        "reference": "800-53|AU-10,800-53r5|AU-10,CAT|II,CCI|CCI-000166,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-10,NESA|T4.3.1,NESA|T7.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213856r395691_rule,STIG-ID|SQL4-00-023700,STIG-Legacy|SV-82253,STIG-Legacy|V-67763,Vuln-ID|V-213856",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name, principal_id, CAST(is_disabled as varchar(1)) from master.sys.sql_logins"
    },
    "custom_item_10": {
        "description": "SQL4-00-030300 - SQL Server authentication and identity management must be integrated with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals.",
        "info": "Enterprise environments make account management for applications and databases challenging and complex. A manual process for account management functions adds the risk of a potential oversight or other error. Managing accounts for the same person in multiple places is inefficient and prone to problems with consistency and synchronization.\n\nA comprehensive application account management process that includes automation helps to ensure that accounts designated as requiring attention are consistently and promptly addressed.\n\nExamples include, but are not limited to, using automation to take action on multiple accounts designated as inactive, suspended, or terminated, or by disabling accounts located in non-centralized account stores, such as multiple servers. Account management functions can also include: assignment of group or role membership; identifying account type; specifying user access authorizations (i.e., privileges); account removal, update, or termination; and administrative alerts. The use of automated mechanisms can include, for example: using email or text messaging to notify account managers when users are terminated or transferred; using the information system to monitor account usage; and using automated telephone notification to report atypical system account usage.\n\nAccount management and authentication in a Windows environment normally use an LDAP-compatible directory service, usually Windows Active Directory.  This in turn, in the DoD environment, is typically integrated with the Public Key Infrastructure (PKI).  Additional technologies or products may be employed that when placed together constitute an overall mechanism supporting an organization's automated account management requirements.  An example is the use of Group Policy Objects to enforce rules concerning passwords.\n\nSQL Server must be configured to use Windows authentication, with SQL Server authentication disabled.  If circumstances (such as the architecture of a purchased application) make it necessary to have SQL Server authentication available, its use must be kept to a minimum.  The reasons for its use, and the measures taken to restrict it to only the necessary cases, must be documented, with AO approval.\n\nIt is assumed throughout this STIG that this integration has been implemented.",
        "solution": "If mixed mode is required, document the need and justification; describe the measures taken to ensure the use of SQL Server authentication is kept to a minimum; describe the measures taken to safeguard passwords; list or describe the SQL Logins used; obtain official approval.\n\nIf mixed mode is not required, disable it as follows:\n\nIn the SSMS Object Explorer, right-click on the server instance; select Properties.  Select the Security page.  Click on the radio button for Windows Authentication Mode.  Click on 'OK.'  Restart the SQL Server instance.\n\nAlternatively, run the statement:\nEXEC xp_instance_regwrite\n    N'HKEY_LOCAL_MACHINE',\n    N'Software\\Microsoft\\MSSQLServer\\MSSQLServer',\n    N'LoginMode',\n    REG_DWORD,\n    1;\nRestart the SQL Server instance.\n\nFor each account being managed by SQL Server but not requiring it, drop or disable the SQL Login.  Replace it with an appropriately configured account, as needed.\n\nTo drop or disable a Login in the SSMS Object Explorer:\nNavigate to>> Security >> Logins.\nRight-click on the Login name; click on Delete or Disable.\n\nTo drop or disable a Login by using a query:\nUSE master;\nDROP LOGIN;\nALTER LOGINDISABLE;\n\nDropping a Login does not delete the equivalent database User(s).  There may be more than one database containing a User mapped to the Login.  Drop the User(s) unless still needed..\n\nTo drop a User in the SSMS Object Explorer:\nNavigate to>> Databases >>>> Security >> Users.\nRight-click on the User name; click on Delete.\n\nTo drop a User via a query:\nUSE;\nDROP USER;",
        "reference": "800-171|3.1.1,800-53|AC-2(1),800-53r5|AC-2(1),CAT|II,CCI|CCI-000015,CN-L3|7.1.3.2(d),CSF|PR.AC-1,CSF|PR.AC-4,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2(1),NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,Rule-ID|SV-213858r395475_rule,STIG-ID|SQL4-00-030300,STIG-Legacy|SV-82249,STIG-Legacy|V-67759,Vuln-ID|V-213858",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXECUTE xp_instance_regread N'HKEY_LOCAL_MACHINE', N'Software\\Microsoft\\MSSQLServer\\MSSQLServer', N'LoginMode';",
        "sql_expect": "LoginMode"
    },
    "custom_item_11": {
        "description": "SQL4-00-038900 - If SQL Server authentication, using passwords, is employed, SQL Server must enforce the DoD standards for password complexity.",
        "info": "Windows domain/enterprise authentication and identification must be used (SQL4-00-030300).  Native SQL Server authentication may be used only when circumstances make it unavoidable; and must be documented and AO-approved.\n\nThe DoD standard for authentication is DoD-approved PKI certificates.  Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.\n\nIn such cases, the DoD standards for password complexity must be implemented.\n\nThe requirements for password complexity are:\na. minimum of 15 Characters, 1 of each of the following character sets:\n- Upper-case\n- Lower-case\n- Numeric\n- Special characters (e.g. ~ ! @ # $ % ^ & * ( ) _ + = - ' [ ] / ? > <)];\nb. Minimum number of characters changed from previous password:  50% of the minimum password length (that is, 8).\n\nTo enforce this in SQL Server, configure each DBMS-managed login to inherit the rules from Windows.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "For each SQL Server Login identified in the Check as out of compliance:\nIn SQL Server Management Studio Object Explorer, navigate to>> Security >> Logins >>.  Right-click, select Properties.  Select the check box Enforce Password Policy.  Click OK.\n\nAlternatively, for each identified Login, run the statement:\nALTER LOGINCHECK_POLICY = ON;",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(a),800-53|IA-5(1)(b),800-53r5|IA-5(1)(a),800-53r5|IA-5(1)(b),CAT|II,CCI|CCI-000192,CCI|CCI-000193,CCI|CCI-000194,CCI|CCI-000195,CCI|CCI-000205,CCI|CCI-001619,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),ITSG-33|IA-5(1)(b),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,NIAv2|AM22d,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-213894r397501_rule,STIG-ID|SQL4-00-038900,STIG-Legacy|SV-82433,STIG-Legacy|V-67943,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-213894",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name FROM sys.sql_logins WHERE type_desc = 'SQL_LOGIN' AND is_disabled = 0 AND is_policy_checked = 0;",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_12": {
        "description": "SQL4-00-038910 - If SQL Server authentication, using passwords, is employed, SQL Server must enforce the DoD standards for password lifetime.",
        "info": "Windows domain/enterprise authentication and identification must be used (SQL4-00-030300).  Native SQL Server authentication may be used only when circumstances make it unavoidable; and must be documented and AO-approved.\n\nThe DoD standard for authentication is DoD-approved PKI certificates.  Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.\n\nIn such cases, the DoD standards for password lifetime must be implemented.\n\nThe requirements for password lifetime are:\na. Password lifetime limits for interactive accounts:  Minimum 24 hours, Maximum 60 days\nb. Password lifetime limits for non-interactive accounts:  Minimum 24 hours, Maximum 365 days\nc. Number of password changes before an old one may be reused:  Minimum of 5.\n\nTo enforce this in SQL Server, configure each DBMS-managed login to inherit the rules from Windows.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "For each SQL Server Login identified in the Check as out of compliance:\nIn SQL Server Management Studio Object Explorer, navigate to>> Security >> Logins >>.  Right-click, select Properties.  Select the check box Enforce Password Expiration.  Click OK.\n\nAlternatively, for each identified Login, run the statement:\nALTER LOGINCHECK_EXPIRATION = ON;",
        "reference": "800-171|3.5.2,800-171|3.5.8,800-53|IA-5(1)(d),800-53|IA-5(1)(e),800-53r5|IA-5(1)(d),800-53r5|IA-5(1)(e),CAT|II,CCI|CCI-000198,CCI|CCI-000199,CCI|CCI-000200,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),ITSG-33|IA-5(1)(e),NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,NIAv2|AM22c,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-213895r397501_rule,STIG-ID|SQL4-00-038910,STIG-Legacy|SV-82435,STIG-Legacy|V-67945,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2,TBA-FIISB|26.2.3,Vuln-ID|V-213895",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT name FROM sys.sql_logins WHERE type_desc = 'SQL_LOGIN' AND is_disabled = 0 AND is_expiration_checked = 0;",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_13": {
        "description": "SQL4-00-039020 - When using command-line tools such as SQLCMD in a mixed-mode authentication environment, users must use a logon method that does not expose the password.",
        "info": "To prevent the compromise of authentication information, such as passwords and PINs, during the authentication process, the feedback from the information system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism.\n\nObfuscation of user-provided information when typed into the system is a method used in addressing this risk.\n\nFor example, displaying asterisks when a user types in a password or PIN, is an example of obscuring feedback of authentication information.\n\nThis requirement is applicable when mixed-mode authentication is enabled.  When this is the case, password-authenticated accounts can be created in and authenticated by SQL Server.  Other STIG requirements prohibit the use of mixed-mode authentication except when justified and approved.  This deals with the exceptions.\n\nSQLCMD and other command-line tools are part of any SQL Server installation. These tools can accept a plain-text password, but do offer alternative techniques. Since the typical user of these tools is a database administrator, the consequences of password compromise are particularly serious. Therefore, the use of plain-text passwords must be prohibited, as a matter of practice and procedure.",
        "solution": "Where possible, change the login mode to Windows-only:\nUSE [master]\nGO\nEXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'Software\\Microsoft\\MSSQLServer\\MSSQLServer', N'LoginMode', REG_DWORD, 1;\nGO\n\nIf mixed-mode authentication is necessary, then for SQLCMD, which cannot be configured not to accept a plain-text password when mixed-mode authentication is enabled, and any other essential tool with the same limitation:\n1) Document the need for it, who uses it, and any relevant mitigations, and obtain AO approval.\n2) Train all users of the tool in the importance of not using the plain-text password option and in how to keep the password hidden.",
        "reference": "800-171|3.5.11,800-53|IA-6,800-53r5|IA-6,CAT|I,CCI|CCI-000206,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),ITSG-33|IA-6,ITSG-33|IA-6a.,NESA|T5.5.1,QCSC-v1|13.2,Rule-ID|SV-213897r397603_rule,STIG-ID|SQL4-00-039020,STIG-Legacy|SV-82359,STIG-Legacy|V-67869,Vuln-ID|V-213897",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "EXEC master.sys.xp_loginconfig 'login mode';",
        "sql_expect": "login mode"
    },
    "custom_item_14": {
        "description": "Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_15": {
        "description": "Test for Trace",
        "sql_request": "SELECT id FROM sys.traces;",
        "regex": ".+"
    },
    "custom_item_16": {
        "description": "SQL4-00-013700 - The audit information produced by  SQL Server must be protected from unauthorized modification.",
        "info": "If audit data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be impossible to achieve.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification.\n\nThis requirement can be achieved through multiple methods, which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions, and limiting log data locations.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make decisions regarding the modification of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nModification of database audit data could mask the theft or unauthorized modification of sensitive data stored in the database.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Edit the system security plan to include justification and authorization for any less restrictive permissions that are present and needed.  (An example might be where Auditors need 'Read & Execute' rather than 'Read' alone.)\n\nModify audit file permissions to meet the requirement to protect against unauthorized modification.\n\nNavigate to audit folder location(s) using a command prompt or Windows Explorer. Right-click on the file, click Properties. On the Security tab, modify the security permissions to:\nAdministrator(read)\nUsers (none)\nAudit Administrator(Full Control)\nAuditors group (Read)\nSQL Server Service SID OR Service Account (Full Control) [Notes 1, 2]\nSQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]\n\n-----\n\nNote 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically-generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.120).aspx.\n\nNote 2: Tips for adding a service SID/virtual account to a folder's permission list.\n1) In Windows Explorer, right-click on the folder and select 'Properties.'\n2) Select the 'Security' tab\n3) Click 'Edit'\n4) Click 'Add'\n5) Click 'Locations'\n6) Select the computer name\n7) Search for the name\n7.a) SQL Server Service\n7.a.i) Type 'NT SERVICE\\MSSQL' and click 'Check Names'. (What you have just typed in is the first 16 characters of the name. At least one character must follow 'NT SERVICE\\'; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)\n7.a.ii) Select the 'MSSQL$' user and click OK\n7.b) SQL Agent Service\n7.b.i) Type 'NT SERVICE\\SQL' and click 'Check Names'\n7.b.ii) Select the 'SQLAgent$' user and click OK\n8) Click OK\n9) Permission like a normal user from here",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000163,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213821r395823_rule,STIG-ID|SQL4-00-013700,STIG-Legacy|SV-82281,STIG-Legacy|V-67791,Vuln-ID|V-213821",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT LEFT(path, (LEN(path) - CHARINDEX('\\',REVERSE(path)) + 1)) AS 'Audit Path' FROM sys.traces UNION SELECT log_file_path AS 'Audit Path' FROM sys.server_file_audits",
        "sql_expect": "Manual review required"
    },
    "custom_item_17": {
        "description": "SQL4-00-013800 - The audit information produced by SQL Server must be protected from unauthorized deletion.",
        "info": "If audit data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be impossible to achieve.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods, which will depend upon system architecture and design.\n\nSome commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections, restricting access, and backing up log data to ensure log data is retained.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order to make decisions regarding the deletion of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nDeletion of database audit data could mask the theft or unauthorized modification of sensitive data stored in the database.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Modify audit file permissions to meet the requirement to protect against unauthorized deletion.\n\nNavigate to audit folder location(s) using a command prompt or Windows Explorer. Right-click on the file, click Properties.\nOn the Security tab, modify the security permissions to:\nAdministrator(read)\nUsers (none)\nAudit Administrator(Full Control)\nAuditors group (Read)\nSQL Server Service SID OR Service Account (Full Control) [Notes 1, 2]\nSQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]\n\n-----\n\nNote 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically-generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.120).aspx.\n\nNote 2: Tips for adding a service SID/virtual account to a folder's permission list.\n1) In Windows Explorer, right-click on the folder and select 'Properties.'\n2) Select the 'Security' tab\n3) Click 'Edit'\n4) Click 'Add'\n5) Click 'Locations'\n6) Select the computer name\n7) Search for the name\n7.a) SQL Server Service\n7.a.i) Type 'NT SERVICE\\MSSQL' and click 'Check Names'. (What you have just typed in is the first 16 characters of the name. At least one character must follow 'NT SERVICE\\'; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)\n7.a.ii) Select the 'MSSQL$' user and click OK\n7.b) SQL Agent Service\n7.b.i) Type 'NT SERVICE\\SQL' and click 'Check Names'\n7.b.ii) Select the 'SQLAgent$' user and click OK\n8) Click OK\n9) Permission like a normal user from here",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213822r395826_rule,STIG-ID|SQL4-00-013800,STIG-Legacy|SV-82283,STIG-Legacy|V-67793,Vuln-ID|V-213822",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT LEFT(path, (LEN(path) - CHARINDEX('\\',REVERSE(path)) + 1)) AS 'Audit Path' FROM sys.traces UNION SELECT log_file_path AS 'Audit Path' FROM sys.server_file_audits",
        "sql_expect": "Manual review required"
    },
    "custom_item_18": {
        "description": "SQL4-00-013900 - Audit tools used in, or in conjunction with, SQL Server must be protected from unauthorized access.",
        "info": "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.\n\nDepending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. It is, therefore, imperative that access to audit tools be controlled and protected from unauthorized access.\n\nApplications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user has in order to make access decisions regarding access to the audit tools. SQL Server is an application that does provide access to audit data.\n\nAudit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.\n\nIf an attacker were to gain access to audit tools, he could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Remove audit-related permissions from individuals and roles not authorized to have them.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-001493,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213823r395829_rule,STIG-ID|SQL4-00-013900,STIG-Legacy|SV-82285,STIG-Legacy|V-67795,Vuln-ID|V-213823",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT login.name, perm.permission_name, perm.state_desc FROM sys.server_permissions perm JOIN sys.server_principals login ON perm.grantee_principal_id = login.principal_id WHERE permission_name in ('CONTROL SERVER', 'ALTER ANY DATABASE AUDIT', 'ALTER ANY SERVER AUDIT','ALTER TRACE') and login.name not like '##MS_%';",
        "sql_expect": "Manual review required"
    },
    "custom_item_19": {
        "description": "SQL4-00-030600 - Where availability is paramount, the SQL Server must continue processing (preferably overwriting existing records, oldest first), in the event of lack of space for more Audit/Trace log records; and must keep processing after any failure of an Audit/Trace.",
        "info": "It is critical that when SQL Server is at risk of failing to process audit logs as required, it take action to mitigate the failure. Audit processing failures include: software/hardware errors; failures in the audit capturing mechanisms; and audit storage capacity being reached or exceeded. Responses to audit failure depend upon the nature of the failure mode.\n\nWhen availability is an overriding concern, approved actions in response to an audit failure are as follows:\n\n(i) If the failure was caused by the lack of audit record storage capacity, the DBMS must continue generating audit records, if possible (automatically restarting the audit service if necessary), preferably overwriting the oldest audit records in a first-in-first-out manner.\n\n(ii) If audit records are sent to a centralized collection server and communication with this server is lost or the server fails, the DBMS must queue audit records locally until communication is restored or until the audit records are retrieved manually. Upon restoration of the connection to the centralized collection server, action should be taken to synchronize the local audit data with the collection server.\n\nSystems where availability is paramount will most likely be MAC I; the final determination is the prerogative of the application owner, subject to Authorizing Official concurrence. In any case, sufficient auditing resources must be allocated to avoid audit data loss in all but the most extreme situations.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nHowever, although Trace supports FIFO rollover, SQL Server Audit does not:  its CONTINUE option stops the production of new audit records when there is an audit failure.",
        "solution": "If SQL Server Audit is in use, configure SQL Server Audit to continue to generate audit records, overwriting the oldest existing records, in the case of an auditing failure.\n\nRun this T-SQL script for each identified audit:\n\nALTER SERVER AUDIT [AuditName] WITH (STATE = OFF);\nGO\nALTER SERVER AUDIT [AuditName] to file (max_rollover_files = IntegerValue);\nGO\nALTER SERVER AUDIT [AuditName] WITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.4,800-53|AU-5b.,800-53r5|AU-5b.,CAT|I,CCI|CCI-000140,CN-L3|7.1.3.3(e),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5b.,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213860r495393_rule,STIG-ID|SQL4-00-030600,STIG-Legacy|SV-82277,STIG-Legacy|V-67787,Vuln-ID|V-213860",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT [name], [max_rollover_files] FROM sys.server_file_audits WHERE is_state_enabled = 1;",
        "regex": ".+"
    },
    "custom_item_20": {
        "description": "SQL4-00-035500 - Software updates to SQL Server must be tested before being applied to production systems.",
        "info": "While it is important to apply SQL Server updates in a timely manner, it is also incumbent upon the database administrator and/or system administrator to ensure that their deployment will not interfere with the operation of the database and its applications.  Other than in emergency situations, SQL Server updates must be applied to appropriately configured non-production systems, and the resulting version of SQL Server assessed for correct operation.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Institute and adhere to policies and procedures to ensure that SQL Server updates are tested prior to installation on production servers.",
        "reference": "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CAT|II,CCI|CCI-002605,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-213880r855552_rule,STIG-ID|SQL4-00-035500,STIG-Legacy|SV-82405,STIG-Legacy|V-67915,SWIFT-CSCv1|2.2,Vuln-ID|V-213880",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT @@VERSION AS 'SQL Server Version';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_21": {
        "description": "Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_22": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'APPLICATION_ROLE_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP"
    },
    "custom_item_23": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - AUDIT_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'AUDIT_CHANGE_GROUP';",
        "sql_expect": "AUDIT_CHANGE_GROUP"
    },
    "custom_item_24": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - BACKUP_RESTORE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'BACKUP_RESTORE_GROUP';",
        "sql_expect": "BACKUP_RESTORE_GROUP"
    },
    "custom_item_25": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_CHANGE_GROUP';",
        "sql_expect": "DATABASE_CHANGE_GROUP"
    },
    "custom_item_26": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_OBJECT_ACCESS_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_ACCESS_GROUP';",
        "sql_expect": "DATABASE_OBJECT_ACCESS_GROUP"
    },
    "custom_item_27": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_OBJECT_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_CHANGE_GROUP"
    },
    "custom_item_28": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP"
    },
    "custom_item_29": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP"
    },
    "custom_item_30": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP"
    },
    "custom_item_31": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_OPERATION_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OPERATION_GROUP';",
        "sql_expect": "DATABASE_OPERATION_GROUP"
    },
    "custom_item_32": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP"
    },
    "custom_item_33": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_PRINCIPAL_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_CHANGE_GROUP"
    },
    "custom_item_34": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_IMPERSONATION_GROUP"
    },
    "custom_item_35": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP"
    },
    "custom_item_36": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - DBCC_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DBCC_GROUP';",
        "sql_expect": "DBCC_GROUP"
    },
    "custom_item_37": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - LOGIN_CHANGE_PASSWORD_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGIN_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "LOGIN_CHANGE_PASSWORD_GROUP"
    },
    "custom_item_38": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SCHEMA_OBJECT_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP"
    },
    "custom_item_39": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP"
    },
    "custom_item_40": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP"
    },
    "custom_item_41": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_OBJECT_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_CHANGE_GROUP"
    },
    "custom_item_42": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP"
    },
    "custom_item_43": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP"
    },
    "custom_item_44": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_OPERATION_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OPERATION_GROUP';",
        "sql_expect": "SERVER_OPERATION_GROUP"
    },
    "custom_item_45": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP"
    },
    "custom_item_46": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_PRINCIPAL_IMPERSONATION_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "SERVER_PRINCIPAL_IMPERSONATION_GROUP"
    },
    "custom_item_47": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP"
    },
    "custom_item_48": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - SERVER_STATE_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_STATE_CHANGE_GROUP';",
        "sql_expect": "SERVER_STATE_CHANGE_GROUP"
    },
    "custom_item_49": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - TRACE_CHANGE_GROUP",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'TRACE_CHANGE_GROUP';",
        "sql_expect": "TRACE_CHANGE_GROUP"
    },
    "custom_item_50": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_51": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_52": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_53": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_54": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_55": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_56": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_57": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_58": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_59": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_60": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_61": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_62": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_63": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_64": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - DATABASE_OBJECT_OWNERSHIP_CH...",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_65": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - DATABASE_OBJECT_PERMISSION_C...",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_66": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_67": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_68": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_69": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - SCHEMA_OBJECT_OWNERSHIP_CHAN...",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_70": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - SCHEMA_OBJECT_PERMISSION_CHA...",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_71": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - SERVER_OBJECT_OWNERSHIP_CHAN...",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_72": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - SERVER_OBJECT_PERMISSION_CHA...",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_73": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_74": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_75": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_76": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_77": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_78": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_79": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_80": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_81": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_82": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_83": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_84": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_85": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_86": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_87": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_88": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - DB_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_89": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - DB_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_90": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_91": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_92": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_93": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_94": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_95": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_96": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_97": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_98": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_99": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_100": {
        "description": "SQL4-00-037500 - SQL Server must generate Trace or Audit records when successful logons or connections occur - SUCCESSFUL_LOGIN_GROUP",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to SQL Server.\n\nUse of SQL Server Audit is recommended. All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014. It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being. Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events. The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events. The script provided in the supplemental file Audit.sql can be used for this.\n\nTo add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SUCCESSFUL_LOGIN_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO\n\nAlternatively, enable 'Both failed and successful logins'.\nIn SQL Management Studio:\nRight-click on the instance.\n>> Select 'Properties'.\n>> Select 'Security' on the left side.\n>> Select 'Both failed and successful logins'.\n>> Click 'OK'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213887r754860_rule,STIG-ID|SQL4-00-037500,STIG-Legacy|SV-82419,STIG-Legacy|V-67929,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213887",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SUCCESSFUL_LOGIN_GROUP';",
        "sql_expect": "SUCCESSFUL_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_101": {
        "description": "SQL4-00-037600 - SQL Server must generate Trace or Audit records when unsuccessful logons or connection attempts occur - FAILED_LOGIN_GROUP",
        "info": "For completeness of forensic analysis, it is necessary to track failed attempts to log on to SQL Server. While positive identification may not be possible in a case of failed authentication, as much information as possible about the incident must be captured.\n\nUse of SQL Server Audit is recommended. All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014. It is not available at the database level in other editions. For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being. Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events. The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events. The script provided in the supplemental file Audit.sql can be used for this.\n\nTo add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (FAILED_LOGIN_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO\n\nAlternatively, enable 'Both failed and successful logins'.\nIn SQL Management Studio:\nRight-click on the instance.\n>> Select 'Properties'.\n>> Select 'Security' on the left side.\n>> Select 'Both failed and successful logins'.\n>> Click 'OK'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213888r754858_rule,STIG-ID|SQL4-00-037600,STIG-Legacy|SV-82421,STIG-Legacy|V-67931,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213888",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'FAILED_LOGIN_GROUP';",
        "sql_expect": "FAILED_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_102": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'APPLICATION_ROLE_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_103": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - AUDIT_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'AUDIT_CHANGE_GROUP';",
        "sql_expect": "AUDIT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_104": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - BACKUP_RESTORE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'BACKUP_RESTORE_GROUP';",
        "sql_expect": "BACKUP_RESTORE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_105": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_CHANGE_GROUP';",
        "sql_expect": "DATABASE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_106": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_OBJECT_ACCESS_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_ACCESS_GROUP';",
        "sql_expect": "DATABASE_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_107": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_108": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_109": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_OPERATION_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OPERATION_GROUP';",
        "sql_expect": "DATABASE_OPERATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_110": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_111": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_112": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_PRINCIPAL_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_113": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_114": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_115": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - DBCC_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DBCC_GROUP';",
        "sql_expect": "DBCC_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_116": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - FAILED_LOGIN_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'FAILED_LOGIN_GROUP';",
        "sql_expect": "FAILED_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_117": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - LOGIN_CHANGE_PASSWORD_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGIN_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "LOGIN_CHANGE_PASSWORD_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_118": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - LOGOUT_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGOUT_GROUP';",
        "sql_expect": "LOGOUT_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_119": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_120": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SCHEMA_OBJECT_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_121": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_122": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_123": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_OBJECT_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_124": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_125": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_126": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_OPERATION_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OPERATION_GROUP';",
        "sql_expect": "SERVER_OPERATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_127": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_128": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_PRINCIPAL_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PRINCIPAL_CHANGE_GROUP';",
        "sql_expect": "SERVER_PRINCIPAL_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_129": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_PRINCIPAL_IMPERSONATION_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "SERVER_PRINCIPAL_IMPERSONATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_130": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_131": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SERVER_STATE_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_STATE_CHANGE_GROUP';",
        "sql_expect": "SERVER_STATE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_132": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - SUCCESSFUL_LOGIN_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SUCCESSFUL_LOGIN_GROUP';",
        "sql_expect": "SUCCESSFUL_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_133": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - TRACE_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'TRACE_CHANGE_GROUP';",
        "sql_expect": "TRACE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_134": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - APPLICATION_ROLE_CHANGE_PASSWOR...",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'APPLICATION_ROLE_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_135": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - AUDIT_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'AUDIT_CHANGE_GROUP';",
        "sql_expect": "AUDIT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_136": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - BACKUP_RESTORE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'BACKUP_RESTORE_GROUP';",
        "sql_expect": "BACKUP_RESTORE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_137": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_CHANGE_GROUP';",
        "sql_expect": "DATABASE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_138": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_OBJECT_ACCESS_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_ACCESS_GROUP';",
        "sql_expect": "DATABASE_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_139": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_OBJECT_OWNERSHIP_CHANG...",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_140": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_OBJECT_PERMISSION_CHAN...",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_141": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_OPERATION_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OPERATION_GROUP';",
        "sql_expect": "DATABASE_OPERATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_142": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_OWNERSHIP_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "DATABASE_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_143": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_PERMISSION_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_144": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_PRINCIPAL_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_CHANGE_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_145": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_PRINCIPAL_IMPERSONATIO...",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_146": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DATABASE_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_147": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - DBCC_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'DBCC_GROUP';",
        "sql_expect": "DBCC_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_148": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - FAILED_LOGIN_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'FAILED_LOGIN_GROUP';",
        "sql_expect": "FAILED_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_149": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - LOGIN_CHANGE_PASSWORD_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGIN_CHANGE_PASSWORD_GROUP';",
        "sql_expect": "LOGIN_CHANGE_PASSWORD_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_150": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - LOGOUT_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGOUT_GROUP';",
        "sql_expect": "LOGOUT_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_151": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SCHEMA_OBJECT_ACCESS_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_ACCESS_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_ACCESS_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_152": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SCHEMA_OBJECT_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_153": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_154": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SCHEMA_OBJECT_PERMISSION_CHANGE...",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_155": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_OBJECT_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_156": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_157": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_OBJECT_PERMISSION_CHANGE...",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OBJECT_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_OBJECT_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_158": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_OPERATION_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_OPERATION_GROUP';",
        "sql_expect": "SERVER_OPERATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_159": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_PERMISSION_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PERMISSION_CHANGE_GROUP';",
        "sql_expect": "SERVER_PERMISSION_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_160": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_PRINCIPAL_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PRINCIPAL_CHANGE_GROUP';",
        "sql_expect": "SERVER_PRINCIPAL_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_161": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_PRINCIPAL_IMPERSONATION_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_PRINCIPAL_IMPERSONATION_GROUP';",
        "sql_expect": "SERVER_PRINCIPAL_IMPERSONATION_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_162": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_ROLE_MEMBER_CHANGE_GROUP';",
        "sql_expect": "SERVER_ROLE_MEMBER_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_163": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SERVER_STATE_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SERVER_STATE_CHANGE_GROUP';",
        "sql_expect": "SERVER_STATE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_164": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - SUCCESSFUL_LOGIN_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SUCCESSFUL_LOGIN_GROUP';",
        "sql_expect": "SUCCESSFUL_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_165": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - TRACE_CHANGE_GROUP",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'TRACE_CHANGE_GROUP';",
        "sql_expect": "TRACE_CHANGE_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_166": {
        "description": "SQL4-00-037900 - SQL Server must generate Trace or Audit records when logoffs or disconnections occur - LOGOUT_GROUP",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to and off from SQL Server.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (LOGOUT_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213891r400849_rule,STIG-ID|SQL4-00-037900,STIG-Legacy|SV-82427,STIG-Legacy|V-67937,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213891",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGOUT_GROUP';",
        "sql_expect": "LOGOUT_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_167": {
        "description": "SQL4-00-038000 - SQL Server must generate Trace or Audit records when concurrent logons/connections by the same user from different workstations occur - SUCCESSFUL_LOGIN_GROUP",
        "info": "For completeness of forensic analysis, it is necessary to track who logs on to SQL Server.\n\nConcurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.\n\nIf the fact of multiple, concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, enable the SUCCESSFUL_LOGIN_GROUP and LOGOUT_GROUP, as described in other STIG requirements.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213892r400852_rule,STIG-ID|SQL4-00-038000,STIG-Legacy|SV-82429,STIG-Legacy|V-67939,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213892",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'SUCCESSFUL_LOGIN_GROUP';",
        "sql_expect": "SUCCESSFUL_LOGIN_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_168": {
        "description": "SQL4-00-038000 - SQL Server must generate Trace or Audit records when concurrent logons/connections by the same user from different workstations occur - LOGOUT_GROUP",
        "info": "For completeness of forensic analysis, it is necessary to track who logs on to SQL Server.\n\nConcurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.\n\nIf the fact of multiple, concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, enable the SUCCESSFUL_LOGIN_GROUP and LOGOUT_GROUP, as described in other STIG requirements.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213892r400852_rule,STIG-ID|SQL4-00-038000,STIG-Legacy|SV-82429,STIG-Legacy|V-67939,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213892",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_action_name, audited_result FROM sys.server_audit_specification_details WHERE server_specification_id =(SELECT server_specification_id FROM sys.server_audit_specifications) AND audit_action_name = 'LOGOUT_GROUP';",
        "sql_expect": "LOGOUT_GROUP",
        "regex": "(SUCCESS|SUCCESS AND FAILURE)"
    },
    "custom_item_169": {
        "description": "Test for Trace",
        "sql_request": "SELECT id FROM sys.traces;",
        "regex": ".+"
    },
    "custom_item_170": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 102",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(1) where eventid = 102;"
    },
    "custom_item_171": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 103",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(1) where eventid = 103;"
    },
    "custom_item_172": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 104",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(1) where eventid = 104;"
    },
    "custom_item_173": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 105",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 105;"
    },
    "custom_item_174": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 106",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 106;"
    },
    "custom_item_175": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 107",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 107;"
    },
    "custom_item_176": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 108",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 108;"
    },
    "custom_item_177": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 109",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 109;"
    },
    "custom_item_178": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 110",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 110;"
    },
    "custom_item_179": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 111",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 111;"
    },
    "custom_item_180": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 112",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 112;"
    },
    "custom_item_181": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 113",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 113;"
    },
    "custom_item_182": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 115",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 115;"
    },
    "custom_item_183": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 116",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 116;"
    },
    "custom_item_184": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 117",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 117;"
    },
    "custom_item_185": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 118",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 118;"
    },
    "custom_item_186": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 128",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 128;"
    },
    "custom_item_187": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 129",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 129;"
    },
    "custom_item_188": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 130",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 130;"
    },
    "custom_item_189": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 131",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 131;"
    },
    "custom_item_190": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 132",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 132;"
    },
    "custom_item_191": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 133",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 133;"
    },
    "custom_item_192": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 134",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 134;"
    },
    "custom_item_193": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 135",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 135;"
    },
    "custom_item_194": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 152",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 152;"
    },
    "custom_item_195": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 153",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 153;"
    },
    "custom_item_196": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 162",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162;"
    },
    "custom_item_197": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 170",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170;"
    },
    "custom_item_198": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 171",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171;"
    },
    "custom_item_199": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 172",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172;"
    },
    "custom_item_200": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 173",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173;"
    },
    "custom_item_201": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 175",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 175;"
    },
    "custom_item_202": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 176",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 176;"
    },
    "custom_item_203": {
        "description": "SQL4-00-034000 - SQL Server must produce Trace or Audit records of its enforcement of access restrictions associated with changes to the configuration of the DBMS or database(s) - Event ID 177",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (APPLICATION_ROLE_CHANGE_PASSWORD_GROUP),\n ADD (AUDIT_CHANGE_GROUP),\n ADD (BACKUP_RESTORE_GROUP),\n ADD (DATABASE_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_ACCESS_GROUP),\n ADD (DATABASE_OBJECT_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OPERATION_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_CHANGE_GROUP),\n ADD (DATABASE_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (DBCC_GROUP),\n ADD (LOGIN_CHANGE_PASSWORD_GROUP),\n ADD (SCHEMA_OBJECT_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OPERATION_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PRINCIPAL_IMPERSONATION_GROUP),\n ADD (SERVER_STATE_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP),\n ADD (TRACE_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-213874r855546_rule,STIG-ID|SQL4-00-034000,STIG-Legacy|SV-82393,STIG-Legacy|V-67903,Vuln-ID|V-213874",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177;"
    },
    "custom_item_204": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 42",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_205": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 43",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_206": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 82",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_207": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 83",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_208": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 84",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_209": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 85",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_210": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 86",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_211": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 87",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_212": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 88",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_213": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 89",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_214": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 90",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_215": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 91",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_216": {
        "description": "SQL4-00-035600 - SQL Server must produce Trace or Audit records when security objects are accessed - Event ID 162",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213881r400753_rule,STIG-ID|SQL4-00-035600,STIG-Legacy|SV-82407,STIG-Legacy|V-67917,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213881",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_217": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 42",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_218": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 43",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_219": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 82",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_220": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 83",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_221": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 84",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_222": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 85",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_223": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 86",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_224": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 87",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_225": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 88",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_226": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 89",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_227": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 90",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_228": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 91",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_229": {
        "description": "SQL4-00-035700 - SQL Server must produce Trace or Audit records when unsuccessful attempts to access security objects occur - Event ID 162",
        "info": "Changes to the security configuration must be tracked.  To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via SQL Server's built-in security functionality (GRANT, REVOKE, DENY, ALTER [SERVER] ROLE ... ADD/DROP MEMBER ..., etc.).\n\nIn SQL Server, types of access include, but are not necessarily limited to:\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nSince the system views are read-only, and the underlying tables are kept hidden by SQL Server, the Insert, Update and Delete cases are relevant only where the database includes user-defined tables to support additional security functionality.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.  Note also that Trace does not support auditing of SELECT statements, whereas Audit does.\n\nUse of SQL Server Audit's SCHEMA_OBJECT_ACCESS_GROUP causes capture of all accesses, successful and otherwise, to all schema-scoped objects.  The [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "Where SQL Server Trace is in use, create triggers to raise a custom event on each table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd a block of code to the supplemental file Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nIf SQL Server Audit is in use, design and deploy an Audit that captures all auditable events and data items.  The script provided in the supplemental file Audit.sql can be used as the basis for this.  Supplement the standard audit data as necessary, using Extended Events and/or triggers.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213882r400753_rule,STIG-ID|SQL4-00-035700,STIG-Legacy|SV-82409,STIG-Legacy|V-67919,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213882",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_230": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 42",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_231": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 43",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_232": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 82",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_233": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 83",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_234": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 84",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_235": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 85",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_236": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 86",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_237": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 87",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_238": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 88",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_239": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 89",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_240": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 90",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_241": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 91",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_242": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 102",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 102"
    },
    "custom_item_243": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 103",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 103"
    },
    "custom_item_244": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 104",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 104"
    },
    "custom_item_245": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 105",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 105"
    },
    "custom_item_246": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 108",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 108"
    },
    "custom_item_247": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 109",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 109"
    },
    "custom_item_248": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 110",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 110"
    },
    "custom_item_249": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 111",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 111"
    },
    "custom_item_250": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 162",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_251": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 170",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170"
    },
    "custom_item_252": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 171",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171"
    },
    "custom_item_253": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 172",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172"
    },
    "custom_item_254": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 173",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173"
    },
    "custom_item_255": {
        "description": "SQL4-00-036000 - SQL Server must generate Trace or Audit records when privileges/permissions are added - Event ID 177",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE (in cases where more than one permission can be represented in a single row)\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213883r400762_rule,STIG-ID|SQL4-00-036000,STIG-Legacy|SV-82411,STIG-Legacy|V-67921,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213883",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177"
    },
    "custom_item_256": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 42",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_257": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 43",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_258": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 82",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_259": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 83",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_260": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 84",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_261": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 85",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_262": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 86",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_263": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 87",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_264": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 88",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_265": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 89",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_266": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 90",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_267": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 91",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_268": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 102",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 102"
    },
    "custom_item_269": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 103",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 103"
    },
    "custom_item_270": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 104",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 104"
    },
    "custom_item_271": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 105",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 105"
    },
    "custom_item_272": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 108",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 108"
    },
    "custom_item_273": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 109",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 109"
    },
    "custom_item_274": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 110",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 110"
    },
    "custom_item_275": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 111",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 111"
    },
    "custom_item_276": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 162",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_277": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 170",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170"
    },
    "custom_item_278": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 171",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171"
    },
    "custom_item_279": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 172",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172"
    },
    "custom_item_280": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 173",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173"
    },
    "custom_item_281": {
        "description": "SQL4-00-036100 - SQL Server must generate Trace or Audit records when unsuccessful attempts to add privileges/permissions occur - Event ID 177",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict privileges could go undetected.\n\nIn SQL Server, adding permissions is typically done via the GRANT command, or, in the negative, DENY; or with the ALTER SERVER ROLE . . . ADD MEMBER . . .,  and/or  ALTER ROLE . . . ADD MEMBER . . . commands.  Native security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nINSERT\nUPDATE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.  Execute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_OWNERSHIP_CHANGE_GROUP),\n ADD (DATABASE_PERMISSION_CHANGE_GROUP),\n ADD (DATABASE_ROLE_MEMBER_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP),\n ADD (SERVER_OBJECT_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_PERMISSION_CHANGE_GROUP),\n ADD (SERVER_ROLE_MEMBER_CHANGE_GROUP)\n;\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213884r400762_rule,STIG-ID|SQL4-00-036100,STIG-Legacy|SV-82413,STIG-Legacy|V-67923,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213884",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177"
    },
    "custom_item_282": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 42",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_283": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 43",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_284": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 82",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_285": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 83",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_286": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 84",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_287": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 85",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_288": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 86",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_289": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 87",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_290": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 88",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_291": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 89",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_292": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 90",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_293": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 91",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_294": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 102",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 102"
    },
    "custom_item_295": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 103",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 103"
    },
    "custom_item_296": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 104",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 104"
    },
    "custom_item_297": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 105",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 105"
    },
    "custom_item_298": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 108",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 108"
    },
    "custom_item_299": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 109",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 109"
    },
    "custom_item_300": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 110",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 110"
    },
    "custom_item_301": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 111",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 111"
    },
    "custom_item_302": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 162",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_303": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 170",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170"
    },
    "custom_item_304": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 171",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171"
    },
    "custom_item_305": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 172",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172"
    },
    "custom_item_306": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 173",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173"
    },
    "custom_item_307": {
        "description": "SQL4-00-036900 - SQL Server must generate Trace or Audit records when privileges/permissions are deleted - Event ID 177",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.  However, native SQL Server security functionality may be supplemented with application-specific tables and logic, in which case the following actions on these tables and procedures/triggers/functions are also relevant:\nDELETE\nEXECUTE\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213885r400831_rule,STIG-ID|SQL4-00-036900,STIG-Legacy|SV-82415,STIG-Legacy|V-67925,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213885",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177"
    },
    "custom_item_308": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 42",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 42"
    },
    "custom_item_309": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 43",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 43"
    },
    "custom_item_310": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 82",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_311": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 83",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_312": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 84",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_313": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 85",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_314": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 86",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_315": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 87",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_316": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 88",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_317": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 89",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_318": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 90",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_319": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 91",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_320": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 102",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 102"
    },
    "custom_item_321": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 103",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 103"
    },
    "custom_item_322": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 104",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 104"
    },
    "custom_item_323": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 105",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 105"
    },
    "custom_item_324": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 108",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 108"
    },
    "custom_item_325": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 109",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 109"
    },
    "custom_item_326": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 110",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 110"
    },
    "custom_item_327": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 111",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 111"
    },
    "custom_item_328": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 162",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 162"
    },
    "custom_item_329": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 170",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170"
    },
    "custom_item_330": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 171",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171"
    },
    "custom_item_331": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 172",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172"
    },
    "custom_item_332": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 173",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173"
    },
    "custom_item_333": {
        "description": "SQL4-00-037000 - SQL Server must generate Trace or Audit records when unsuccessful attempts to delete privileges/permissions occur - Event ID 177",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn SQL Server, deleting permissions is typically done via the REVOKE or DENY command; or with the ALTER SERVER ROLE . . . DROP MEMBER . . . and/or ALTER ROLE . . . DROP MEMBER . . . statements.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nAdd blocks of code to Trace.sql for each custom event class (integers in the range 82-91; the same event class may be used for all such triggers) used in these triggers.\n\nCreate triggers to raise a custom event on each locally-defined security table that requires tracking of Insert-Update-Delete operations.  The examples provided in the supplemental file CustomTraceEvents.sql can serve as the basis for these.\n\nExecute Trace.sql\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SCHEMA_OBJECT_ACCESS_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213886r400831_rule,STIG-ID|SQL4-00-037000,STIG-Legacy|SV-82417,STIG-Legacy|V-67927,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213886",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177"
    },
    "custom_item_334": {
        "description": "SQL4-00-037500 - SQL Server must generate Trace or Audit records when successful logons or connections occur - Event ID 14",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to SQL Server.\n\nUse of SQL Server Audit is recommended. All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014. It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being. Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events. The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events. The script provided in the supplemental file Audit.sql can be used for this.\n\nTo add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SUCCESSFUL_LOGIN_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO\n\nAlternatively, enable 'Both failed and successful logins'.\nIn SQL Management Studio:\nRight-click on the instance.\n>> Select 'Properties'.\n>> Select 'Security' on the left side.\n>> Select 'Both failed and successful logins'.\n>> Click 'OK'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213887r754860_rule,STIG-ID|SQL4-00-037500,STIG-Legacy|SV-82419,STIG-Legacy|V-67929,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213887",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 14"
    },
    "custom_item_335": {
        "description": "SQL4-00-037500 - SQL Server must generate Trace or Audit records when successful logons or connections occur - Event ID 15",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to SQL Server.\n\nUse of SQL Server Audit is recommended. All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014. It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being. Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events. The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events. The script provided in the supplemental file Audit.sql can be used for this.\n\nTo add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SUCCESSFUL_LOGIN_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO\n\nAlternatively, enable 'Both failed and successful logins'.\nIn SQL Management Studio:\nRight-click on the instance.\n>> Select 'Properties'.\n>> Select 'Security' on the left side.\n>> Select 'Both failed and successful logins'.\n>> Click 'OK'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213887r754860_rule,STIG-ID|SQL4-00-037500,STIG-Legacy|SV-82419,STIG-Legacy|V-67929,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213887",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 15"
    },
    "custom_item_336": {
        "description": "SQL4-00-037500 - SQL Server must generate Trace or Audit records when successful logons or connections occur - Event ID 16",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to SQL Server.\n\nUse of SQL Server Audit is recommended. All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014. It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being. Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events. The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events. The script provided in the supplemental file Audit.sql can be used for this.\n\nTo add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SUCCESSFUL_LOGIN_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO\n\nAlternatively, enable 'Both failed and successful logins'.\nIn SQL Management Studio:\nRight-click on the instance.\n>> Select 'Properties'.\n>> Select 'Security' on the left side.\n>> Select 'Both failed and successful logins'.\n>> Click 'OK'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213887r754860_rule,STIG-ID|SQL4-00-037500,STIG-Legacy|SV-82419,STIG-Legacy|V-67929,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213887",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 16"
    },
    "custom_item_337": {
        "description": "SQL4-00-037500 - SQL Server must generate Trace or Audit records when successful logons or connections occur - Event ID 17",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to SQL Server.\n\nUse of SQL Server Audit is recommended. All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014. It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being. Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events. The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events. The script provided in the supplemental file Audit.sql can be used for this.\n\nTo add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (SUCCESSFUL_LOGIN_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO\n\nAlternatively, enable 'Both failed and successful logins'.\nIn SQL Management Studio:\nRight-click on the instance.\n>> Select 'Properties'.\n>> Select 'Security' on the left side.\n>> Select 'Both failed and successful logins'.\n>> Click 'OK'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213887r754860_rule,STIG-ID|SQL4-00-037500,STIG-Legacy|SV-82419,STIG-Legacy|V-67929,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213887",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 17"
    },
    "custom_item_338": {
        "description": "SQL4-00-037600 - SQL Server must generate Trace or Audit records when unsuccessful logons or connection attempts occur - Event ID 20",
        "info": "For completeness of forensic analysis, it is necessary to track failed attempts to log on to SQL Server. While positive identification may not be possible in a case of failed authentication, as much information as possible about the incident must be captured.\n\nUse of SQL Server Audit is recommended. All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014. It is not available at the database level in other editions. For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being. Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events. The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events. The script provided in the supplemental file Audit.sql can be used for this.\n\nTo add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (FAILED_LOGIN_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO\n\nAlternatively, enable 'Both failed and successful logins'.\nIn SQL Management Studio:\nRight-click on the instance.\n>> Select 'Properties'.\n>> Select 'Security' on the left side.\n>> Select 'Both failed and successful logins'.\n>> Click 'OK'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213888r754858_rule,STIG-ID|SQL4-00-037600,STIG-Legacy|SV-82421,STIG-Legacy|V-67931,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213888",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 20"
    },
    "custom_item_339": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 46",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 46"
    },
    "custom_item_340": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 47",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 47"
    },
    "custom_item_341": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 82",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_342": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 83",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_343": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 84",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_344": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 85",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_345": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 86",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_346": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 87",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_347": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 88",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_348": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 89",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_349": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 90",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_350": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 91",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_351": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 115",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 115"
    },
    "custom_item_352": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 116",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 116"
    },
    "custom_item_353": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 117",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 117"
    },
    "custom_item_354": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 118",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 118"
    },
    "custom_item_355": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 128",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 128"
    },
    "custom_item_356": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 129",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 129"
    },
    "custom_item_357": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 130",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 130"
    },
    "custom_item_358": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 131",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 131"
    },
    "custom_item_359": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 164",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 164"
    },
    "custom_item_360": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 170",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170"
    },
    "custom_item_361": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 171",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171"
    },
    "custom_item_362": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 172",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172"
    },
    "custom_item_363": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 173",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173"
    },
    "custom_item_364": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 175",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 175"
    },
    "custom_item_365": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 176",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 176"
    },
    "custom_item_366": {
        "description": "SQL4-00-037700 - SQL Server must generate Trace or Audit records for all privileged activities or other system-level access - Event ID 177",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213889r400846_rule,STIG-ID|SQL4-00-037700,STIG-Legacy|SV-82423,STIG-Legacy|V-67933,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213889",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177"
    },
    "custom_item_367": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 46",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 46"
    },
    "custom_item_368": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 47",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 47"
    },
    "custom_item_369": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 82",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 82"
    },
    "custom_item_370": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 83",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 83"
    },
    "custom_item_371": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 84",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 84"
    },
    "custom_item_372": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 85",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 85"
    },
    "custom_item_373": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 86",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 86"
    },
    "custom_item_374": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 87",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 87"
    },
    "custom_item_375": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 88",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 88"
    },
    "custom_item_376": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 89",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 89"
    },
    "custom_item_377": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 90",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 90"
    },
    "custom_item_378": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 91",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 91"
    },
    "custom_item_379": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 115",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 115"
    },
    "custom_item_380": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 116",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 116"
    },
    "custom_item_381": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 117",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 117"
    },
    "custom_item_382": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 118",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 118"
    },
    "custom_item_383": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 128",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 128"
    },
    "custom_item_384": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 129",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 129"
    },
    "custom_item_385": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 130",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 130"
    },
    "custom_item_386": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 131",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 131"
    },
    "custom_item_387": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 164",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 164"
    },
    "custom_item_388": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 170",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 170"
    },
    "custom_item_389": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 171",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 171"
    },
    "custom_item_390": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 172",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 172"
    },
    "custom_item_391": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 173",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 173"
    },
    "custom_item_392": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 175",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 175"
    },
    "custom_item_393": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 176",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 176"
    },
    "custom_item_394": {
        "description": "SQL4-00-037800 - SQL Server must generate Trace or Audit records when unsuccessful attempts to execute privileged activities or other system-level access occur - Event ID 177",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. This encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\nDENY\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define  and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nFor additional actions considered privileged, identify the available event class IDs, or define custom event class IDs (integers in the range 82-91).  Add blocks of code for these event IDs to Trace.sql.\n\nExecute Trace.sql.\n\nDefine triggers as necessary to support data capture.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used to create an audit; supplement it as necessary to capture any additional, locally-defined privileged activity.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213890r400846_rule,STIG-ID|SQL4-00-037800,STIG-Legacy|SV-82425,STIG-Legacy|V-67935,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213890",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 177"
    },
    "custom_item_395": {
        "description": "SQL4-00-037900 - SQL Server must generate Trace or Audit records when logoffs or disconnections occur - Event ID 14",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to and off from SQL Server.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (LOGOUT_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213891r400849_rule,STIG-ID|SQL4-00-037900,STIG-Legacy|SV-82427,STIG-Legacy|V-67937,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213891",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 14"
    },
    "custom_item_396": {
        "description": "SQL4-00-037900 - SQL Server must generate Trace or Audit records when logoffs or disconnections occur - Event ID 15",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to and off from SQL Server.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (LOGOUT_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213891r400849_rule,STIG-ID|SQL4-00-037900,STIG-Legacy|SV-82427,STIG-Legacy|V-67937,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213891",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 15"
    },
    "custom_item_397": {
        "description": "SQL4-00-037900 - SQL Server must generate Trace or Audit records when logoffs or disconnections occur - Event ID 16",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to and off from SQL Server.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (LOGOUT_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213891r400849_rule,STIG-ID|SQL4-00-037900,STIG-Legacy|SV-82427,STIG-Legacy|V-67937,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213891",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 16"
    },
    "custom_item_398": {
        "description": "SQL4-00-037900 - SQL Server must generate Trace or Audit records when logoffs or disconnections occur - Event ID 17",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to and off from SQL Server.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, design and deploy a SQL Server Audit that captures all auditable events.  The script provided in the supplemental file Audit.sql can be used for this.\n\nAlternatively, to add the necessary data capture to an existing server audit specification, run the script:\nUSE [master];\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = OFF);\nGO\nALTER SERVER AUDIT SPECIFICATIONADD (LOGOUT_GROUP);\nGO\nALTER SERVER AUDIT SPECIFICATIONWITH (STATE = ON);\nGO",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213891r400849_rule,STIG-ID|SQL4-00-037900,STIG-Legacy|SV-82427,STIG-Legacy|V-67937,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213891",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 17"
    },
    "custom_item_399": {
        "description": "SQL4-00-038000 - SQL Server must generate Trace or Audit records when concurrent logons/connections by the same user from different workstations occur - Event ID 14",
        "info": "For completeness of forensic analysis, it is necessary to track who logs on to SQL Server.\n\nConcurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.\n\nIf the fact of multiple, concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, enable the SUCCESSFUL_LOGIN_GROUP and LOGOUT_GROUP, as described in other STIG requirements.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213892r400852_rule,STIG-ID|SQL4-00-038000,STIG-Legacy|SV-82429,STIG-Legacy|V-67939,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213892",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 14"
    },
    "custom_item_400": {
        "description": "SQL4-00-038000 - SQL Server must generate Trace or Audit records when concurrent logons/connections by the same user from different workstations occur - Event ID 15",
        "info": "For completeness of forensic analysis, it is necessary to track who logs on to SQL Server.\n\nConcurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.\n\nIf the fact of multiple, concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, enable the SUCCESSFUL_LOGIN_GROUP and LOGOUT_GROUP, as described in other STIG requirements.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213892r400852_rule,STIG-ID|SQL4-00-038000,STIG-Legacy|SV-82429,STIG-Legacy|V-67939,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213892",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 15"
    },
    "custom_item_401": {
        "description": "SQL4-00-038000 - SQL Server must generate Trace or Audit records when concurrent logons/connections by the same user from different workstations occur - Event ID 16",
        "info": "For completeness of forensic analysis, it is necessary to track who logs on to SQL Server.\n\nConcurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.\n\nIf the fact of multiple, concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, enable the SUCCESSFUL_LOGIN_GROUP and LOGOUT_GROUP, as described in other STIG requirements.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213892r400852_rule,STIG-ID|SQL4-00-038000,STIG-Legacy|SV-82429,STIG-Legacy|V-67939,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213892",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 16"
    },
    "custom_item_402": {
        "description": "SQL4-00-038000 - SQL Server must generate Trace or Audit records when concurrent logons/connections by the same user from different workstations occur - Event ID 17",
        "info": "For completeness of forensic analysis, it is necessary to track who logs on to SQL Server.\n\nConcurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.\n\nIf the fact of multiple, concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Where SQL Server Trace is in use, define and enable a trace that captures all auditable events.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nWhere SQL Server Audit is in use, enable the SUCCESSFUL_LOGIN_GROUP and LOGOUT_GROUP, as described in other STIG requirements.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213892r400852_rule,STIG-ID|SQL4-00-038000,STIG-Legacy|SV-82429,STIG-Legacy|V-67939,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-213892",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(@TRACE_ID@) where eventid = 17"
    },
    "custom_item_403": {
        "description": "Test for Audit",
        "sql_request": "SELECT audit_action_name FROM sys.server_audit_specification_details WHERE server_specification_id = (SELECT server_specification_id FROM sys.server_audit_specifications)AND audit_action_name IN('APPLICATION_ROLE_CHANGE_PASSWORD_GROUP','AUDIT_CHANGE_GROUP','BACKUP_RESTORE_GROUP','DATABASE_CHANGE_GROUP','DATABASE_OBJECT_ACCESS_GROUP','DATABASE_OBJECT_CHANGE_GROUP','DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP','DATABASE_OBJECT_PERMISSION_CHANGE_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_OPERATION_GROUP','DATABASE_OWNERSHIP_CHANGE_GROUP','DATABASE_PERMISSION_CHANGE_GROUP','DATABASE_PRINCIPAL_CHANGE_GROUP','DATABASE_PRINCIPAL_IMPERSONATION_GROUP','DATABASE_ROLE_MEMBER_CHANGE_GROUP','DBCC_GROUP','LOGIN_CHANGE_PASSWORD_GROUP','SCHEMA_OBJECT_CHANGE_GROUP','SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP','SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OBJECT_CHANGE_GROUP','SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP','SERVER_OBJECT_PERMISSION_CHANGE_GROUP','SERVER_OPERATION_GROUP','SERVER_PERMISSION_CHANGE_GROUP','SERVER_PRINCIPAL_IMPERSONATION_GROUP','SERVER_ROLE_MEMBER_CHANGE_GROUP','SERVER_STATE_CHANGE_GROUP','TRACE_CHANGE_GROUP');",
        "regex": ".+"
    },
    "custom_item_404": {
        "description": "SQL4-00-013000 - Unless it has been determined that availability is paramount, SQL Server must shut down upon the failure of an Audit, or a Trace used for auditing purposes, to include the unavailability of space for more audit/trace log records.",
        "info": "It is critical that when SQL Server is at risk of failing to process audit logs as required, it take action to mitigate the failure. Audit processing failures include: software/hardware errors; failures in the audit capturing mechanisms; and audit storage capacity being reached or exceeded. Responses to audit failure depend upon the nature of the failure mode.\n\nWhen the need for system availability does not outweigh the need for a complete audit trail, SQL Server should shut down immediately, rolling back all in-flight transactions.\n\nSystems where audit trail completeness is paramount will most likely be at a lower MAC level than MAC I; the final determination is the prerogative of the application owner, subject to Authorizing Official concurrence. In any case, sufficient auditing resources must be allocated to avoid a shutdown in all but the most extreme situations.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If Trace is in use for audit purposes, redefine the trace, with @options = 6.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nIf SQL Server Audit is in use, configure SQL Server Audit to shut SQL Server down upon audit failure, to include running out of space for audit logs.  Run this T-SQL script for each identified audit:\nALTER SERVER AUDITWITH (STATE = OFF);\nGO\nALTER SERVER AUDITWITH (ON_FAILURE = SHUTDOWN);\nGO\nALTER SERVER AUDITWITH (STATE = ON);\nGO\nThe audit defined in the supplemental file Audit.sql includes this setting.",
        "reference": "800-171|3.3.4,800-53|AU-5b.,800-53r5|AU-5b.,CAT|II,CCI|CCI-000140,CN-L3|7.1.3.3(e),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5b.,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213819r395805_rule,STIG-ID|SQL4-00-013000,STIG-Legacy|SV-82275,STIG-Legacy|V-67785,Vuln-ID|V-213819",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT audit_id, name, is_state_enabled, on_failure_desc FROM sys.server_audits;",
        "regex": ".+"
    },
    "custom_item_405": {
        "description": "SQL4-00-013600 - The audit information produced by SQL Server must be protected from unauthorized read access.",
        "info": "If audit data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.\n\nSQL Server and third-party tools are examples of applications that are easily able to view and manipulate audit file data. Additionally, applications with user interfaces to audit records should not allow unfettered manipulation of, or access to, those records via any application. If an application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.\n\nThis requirement can be achieved through multiple methods, which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections, and limiting log data location.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Edit the system security plan to include justification and authorization for any less restrictive permissions that are present and needed.  (An example might be where Auditors need 'Read & Execute' rather than 'Read' alone.)\n\nModify audit file permissions to meet the requirement to protect against unauthorized access.\n\nNavigate to audit folder location(s) using a command prompt or Windows Explorer. Right-click on the file, click Properties.\nOn the Security tab, modify the security permissions to:\nAdministrator(read)\nUsers (none)\nAudit Administrator(Full Control)\nAuditors group (Read)\nSQL Server Service SID OR Service Account (Full Control) [Notes 1, 2]\nSQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]\n\n-----\n\nNote 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically-generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.120).aspx.\n\nNote 2: Tips for adding a service SID/virtual account to a folder's permission list.\n1) In Windows Explorer, right-click on the folder and select 'Properties.'\n2) Select the 'Security' tab\n3) Click 'Edit'\n4) Click 'Add'\n5) Click 'Locations'\n6) Select the computer name\n7) Search for the name\n7.a) SQL Server Service\n7.a.i) Type 'NT SERVICE\\MSSQL' and click 'Check Names'. (What you have just typed in is the first 16 characters of the name. At least one character must follow 'NT SERVICE\\'; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)\n7.a.ii) Select the 'MSSQL$' user and click OK\n7.b) SQL Agent Service\n7.b.i) Type 'NT SERVICE\\SQL' and click 'Check Names'\n7.b.ii) Select the 'SQLAgent$' user and click OK\n8) Click OK\n9) Permission like a normal user from here",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000162,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213820r810820_rule,STIG-ID|SQL4-00-013600,STIG-Legacy|SV-82279,STIG-Legacy|V-67789,Vuln-ID|V-213820",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT DISTINCT LEFT(path, (LEN(path) - CHARINDEX('\\',REVERSE(path)) + 1)) AS 'Audit Path' FROM sys.traces UNION SELECT log_file_path AS 'Audit Path' FROM sys.server_file_audits",
        "sql_expect": "Manual review required"
    },
    "custom_item_406": {
        "description": "Test for Trace",
        "sql_request": "SELECT id FROM sys.traces;",
        "regex": ".+"
    },
    "custom_item_407": {
        "description": "SQL4-00-011900 - SQL Server must produce Trace or Audit records containing sufficient information to establish when the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nSQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly when actions were performed. This requires specific information regarding the date and time an audit record is referring to. If date and time information is not recorded and stored with the audit record, the record itself is of very limited use.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or a Trace that captures Start Time and (where relevant) End Time for all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit..",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000131,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213813r395724_rule,STIG-ID|SQL4-00-011900,STIG-Legacy|SV-82263,STIG-Legacy|V-67773,SWIFT-CSCv1|6.4,Vuln-ID|V-213813",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "WITH EC AS (SELECT eventid, columnid FROM sys.fn_trace_geteventinfo(@TRACE_ID@)), E AS (SELECT DISTINCT eventid FROM EC)SELECT E.eventid, CASE WHEN EC14.columnid IS NULL THEN 'Start Time (14) missing' ELSE '14 OK' END AS field14, CASE WHEN EC15.columnid IS NULL THEN 'End Time (15) missing' ELSE '15 OK' END AS field15 FROM E E LEFT OUTER JOIN EC EC14 ON EC14.eventid = E.eventid AND EC14.columnid = 14  LEFT OUTER JOIN EC EC15 ON EC15.eventid = E.eventid AND EC15.columnid = 15 WHERE EC14.columnid IS NULL OR EC15.columnid IS NULL;",
        "regex": ".*(OK|Success).*"
    },
    "custom_item_408": {
        "description": "SQL4-00-012000 - SQL Server must produce Trace or Audit records containing sufficient information to establish where the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nSQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly where actions were performed. This requires specific information regarding the event location an audit record is referring to. If event location information is not recorded and stored with the audit record, the record itself is of very limited use.\n\nAn event location can be a database instance, table, column, row, etc. Without sufficient information establishing where the audit events occurred, investigation into the cause of events is severely hindered. If SQL Server Audit is enabled, SQL Server does capture the event location-specific information in all audit records.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures the server name, database name, object type, object name and object owner (each where relevant) for all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace.\n\nThe script provided in the supplemental file Audit.sql can be used to create an audit..",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000132,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213814r395727_rule,STIG-ID|SQL4-00-012000,STIG-Legacy|SV-82265,STIG-Legacy|V-67775,SWIFT-CSCv1|6.4,Vuln-ID|V-213814",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "WITH EC AS (SELECT eventid, columnid FROM sys.fn_trace_geteventinfo(@TRACE_ID@)),E AS (SELECT DISTINCT eventid FROM EC) SELECT E.eventid, CASE WHEN EC26.columnid IS NULL THEN 'Server Name (26) missing' ELSE '26 OK' END AS field26, CASE WHEN EC35.columnid IS NULL THEN 'Database Name (35) missing' ELSE '35 OK' END AS field35, CASE WHEN EC28.columnid IS NULL THEN 'Object Type (28) missing' ELSE '28 OK' END AS field28, CASE WHEN EC34.columnid IS NULL THEN 'Object Name (34) missing' ELSE '34 OK' END AS field34, CASE WHEN EC37.columnid IS NULL THEN 'Object Owner (37) missing' ELSE '34 OK' END AS field37 FROM E E LEFT OUTER JOIN EC EC26 ON EC26.eventid = E.eventid AND EC26.columnid = 26 LEFT OUTER JOIN EC EC35 ON EC35.eventid = E.eventid AND EC35.columnid = 35 LEFT OUTER JOIN EC EC28 ON EC28.eventid = E.eventid AND EC28.columnid = 28 LEFT OUTER JOIN EC EC34 ON EC34.eventid = E.eventid AND EC34.columnid = 34 LEFT OUTER JOIN EC EC37 ON EC37.eventid = E.eventid AND EC37.columnid = 37 WHERE EC26.columnid IS NULL OR EC35.columnid IS NULL OR EC28.columnid IS NULL OR EC34.columnid IS NULL OR EC37.columnid IS NULL;",
        "regex": ".*(OK|Success).*"
    },
    "custom_item_409": {
        "description": "SQL4-00-012100 - SQL Server must produce Trace or Audit records containing sufficient information to establish the sources (origins) of the events - origins of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nSQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly who performed what actions. This requires specific information regarding the source of the event an audit record is referring to. If the source of the event information is not recorded and stored with the audit record, the record itself is of very limited use.\n\nThe source of the event can be a user account and sometimes a system account when timed jobs are run. Without information establishing the source of activity, the value of audit records from a forensics perspective is questionable. If Trace is enabled for auditing, SQL Server does capture the source of the event-specific information in all audit records.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "Design and deploy a SQL Server Audit or Trace that captures the NT User Name, NT Domain Name, Host Name, Client Process ID, Application Name, Login Name, SPID, DB User Name, and Login SID (each where relevant) for all auditable events.\n\nThe script provided in the supplemental file Trace.sql can be used to create a trace.\n\nIf SQL Server Audit is intended to be in use, design and deploy an Audit that captures all auditable events. The code provided in the supplemental file Audit.sql can be used as the basis for creating an Audit.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000133,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213815r395730_rule,STIG-ID|SQL4-00-012100,STIG-Legacy|SV-82267,STIG-Legacy|V-67777,SWIFT-CSCv1|6.4,Vuln-ID|V-213815",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "WITH EC AS (SELECT eventid, columnid FROM sys.fn_trace_geteventinfo(@TRACE_ID@)),E AS (SELECT DISTINCT eventid FROM EC) SELECT E.eventid, CASE WHEN EC6.columnid IS NULL THEN 'NT User Name (6) missing' ELSE '6 OK' END AS field26, CASE WHEN EC7.columnid IS NULL THEN 'NT Domain Name (7) missing' ELSE '7 OK' END AS field7, CASE WHEN EC8.columnid IS NULL THEN 'Host Name (8) missing' ELSE '8 OK' END AS field8, CASE WHEN EC9.columnid IS NULL THEN 'Client Process ID (9) missing' ELSE '9 OK' END AS field9, CASE WHEN EC10.columnid IS NULL THEN 'Application Name (10) missing' ELSE '10 OK' END AS field10, CASE WHEN EC11.columnid IS NULL THEN 'Login Name (11) missing' ELSE '11 OK' END AS field11, CASE WHEN EC12.columnid IS NULL THEN 'SPID (12) missing' ELSE '12 OK' END AS field12, CASE WHEN EC40.columnid IS NULL THEN 'DB User Name (40) missing' ELSE '40 OK' END AS field40, CASE WHEN EC41.columnid IS NULL THEN 'Login SID (41) missing' ELSE '41 OK' END AS field41 FROM E E LEFT OUTER JOIN EC EC6 ON EC6.eventid = E.eventid AND EC6.columnid = 6  LEFT OUTER JOIN EC EC7 ON EC7.eventid = E.eventid AND EC7.columnid = 7 LEFT OUTER JOIN EC EC8 ON EC8.eventid = E.eventid AND EC8.columnid = 8 LEFT OUTER JOIN EC EC9 ON EC9.eventid = E.eventid AND EC9.columnid = 9 LEFT OUTER JOIN EC EC10 ON EC10.eventid = E.eventid AND EC10.columnid = 10 LEFT OUTER JOIN EC EC11 ON EC11.eventid = E.eventid AND EC11.columnid = 11 LEFT OUTER JOIN EC EC12 ON EC12.eventid = E.eventid AND EC12.columnid = 12 LEFT OUTER JOIN EC EC40 ON EC40.eventid = E.eventid AND EC40.columnid = 40 LEFT OUTER JOIN EC EC41 ON EC41.eventid = E.eventid AND EC41.columnid = 41 WHERE EC6.columnid IS NULL OR EC7.columnid IS NULL OR EC8.columnid IS NULL OR EC9.columnid IS NULL OR EC10.columnid IS NULL OR EC11.columnid IS NULL OR EC12.columnid IS NULL OR EC40.columnid IS NULL OR EC41.columnid IS NULL;",
        "regex": ".*(OK|Success).*"
    },
    "custom_item_410": {
        "description": "SQL4-00-012200 - SQL Server must produce Trace or Audit records containing sufficient information to establish the outcome (success or failure) of the events - success/failure of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nSQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know the outcome of attempted actions. This requires specific information regarding the outcome of the action or event that the audit record is referring to. If outcome status information is not recorded and stored with the audit record, the record itself is of very limited use.\n\nSuccess and failure indicators ascertain the outcome of a particular event. As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. Without knowing the outcome of audit events, it is very difficult to accurately recreate the series of events during forensic analysis.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nIf Trace is enabled for auditing, SQL Server does capture the outcome status information in all audit records.\n\nIf SQL Server Audit is enabled, the [Succeeded] column in the audit output indicates the success or failure of the attempted action.  Be aware, however, that it may report True in some cases where one would intuitively expect False.  For example, SELECT 1/0 FROM SYS.ALL_OBJECTS will appear in the audit trail as successful, if the user has permission to perform that action, even though it contains an invalid expression.  Some other actions that one would consider failures (such as selecting from a table that does not exist) may not appear at all.",
        "solution": "If Trace is in use for audit purposes, design and deploy a Trace  that captures the NT User Name, NT Domain Name, Host Name, Login Name, DB User Name and Login SID (each where relevant) for all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nIf SQL Server Audit is intended to be in use, design and deploy an Audit that captures all auditable events. The code provided in the supplemental file Audit.sql can be used as the basis for creating an Audit.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000134,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213816r395733_rule,STIG-ID|SQL4-00-012200,STIG-Legacy|SV-82269,STIG-Legacy|V-67779,SWIFT-CSCv1|6.4,Vuln-ID|V-213816",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "WITH EC AS (SELECT eventid, columnid FROM sys.fn_trace_geteventinfo(@TRACE_ID@)), E AS (SELECT DISTINCT eventid FROM EC) SELECT E.eventid, CASE WHEN EC23.columnid IS NULL THEN 'Success (successful use of permissions) (23) missing' ELSE '23 OK' END AS field23, CASE WHEN EC30.columnid IS NULL THEN 'State (30) missing' ELSE '30 OK' END AS field30, CASE WHEN EC31.columnid IS NULL THEN 'Error (31) missing' ELSE '31 OK' END AS field31 FROM E E LEFT OUTER JOIN EC EC23 ON EC23.eventid = E.eventid AND EC23.columnid = 23 LEFT OUTER JOIN EC EC30 ON EC30.eventid = E.eventid AND EC30.columnid = 30 LEFT OUTER JOIN EC EC31 ON EC31.eventid = E.eventid AND EC31.columnid = 31 WHERE EC23.columnid IS NULL OR EC30.columnid IS NULL OR EC31.columnid IS NULL;",
        "regex": ".*(OK|Success).*"
    },
    "custom_item_411": {
        "description": "SQL4-00-012300 - SQL Server must produce Trace or Audit records containing sufficient information to establish the identity of any user/subject associated with the event.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nDatabase software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly who performed a given action. If user identification information is not recorded and stored with the audit record, the record itself is of very limited use.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.",
        "solution": "If Trace is in use for audit purposes, design and deploy a Trace  that captures the NT User Name, NT Domain Name, Host Name, Login Name, DB User Name and Login SID (each where relevant) for all auditable events.  The script provided in the supplemental file Trace.sql can be used to create a trace.\n\nIf SQL Server Audit is intended to be in use, design and deploy an Audit that captures all auditable events. The code provided in the supplemental file Audit.sql can be used as the basis for creating an Audit.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-001487,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213817r395736_rule,STIG-ID|SQL4-00-012300,STIG-Legacy|SV-82271,STIG-Legacy|V-67781,SWIFT-CSCv1|6.4,Vuln-ID|V-213817",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "WITH EC AS (SELECT eventid, columnid FROM sys.fn_trace_geteventinfo(@TRACE_ID@)),E AS (SELECT DISTINCT eventid FROM EC) SELECT E.eventid, CASE WHEN EC6.columnid IS NULL THEN 'NT User Name (6) missing' ELSE '6 OK' END AS field26, CASE WHEN EC7.columnid IS NULL THEN 'NT Domain Name (7) missing' ELSE '7 OK' END AS field7, CASE WHEN EC8.columnid IS NULL THEN 'Host Name (8) missing' ELSE '8 OK' END AS field8, CASE WHEN EC11.columnid IS NULL THEN 'Login Name (11) missing' ELSE '11 OK' END AS field11, CASE WHEN EC40.columnid IS NULL THEN 'DB User Name (40) missing' ELSE '40 OK' END AS field40, CASE WHEN EC41.columnid IS NULL THEN 'Login SID (41) missing' ELSE '41 OK' END AS field41 FROM E E LEFT OUTER JOIN EC EC6 ON EC6.eventid = E.eventid AND EC6.columnid = 6  LEFT OUTER JOIN EC EC7 ON EC7.eventid = E.eventid AND EC7.columnid = 7 LEFT OUTER JOIN EC EC8 ON EC8.eventid = E.eventid AND EC8.columnid = 8 LEFT OUTER JOIN EC EC11 ON EC11.eventid = E.eventid AND EC11.columnid = 11 LEFT OUTER JOIN EC EC40 ON EC40.eventid = E.eventid AND EC40.columnid = 40 LEFT OUTER JOIN EC EC41 ON EC41.eventid = E.eventid AND EC41.columnid = 41 WHERE EC6.columnid IS NULL OR EC7.columnid IS NULL OR EC8.columnid IS NULL OR EC11.columnid IS NULL OR EC40.columnid IS NULL OR EC41.columnid IS NULL;",
        "regex": ".*(OK|Success).*"
    },
    "custom_item_412": {
        "description": "SQL4-00-013000 - Unless it has been determined that availability is paramount, SQL Server must shut down upon the failure of an Audit, or a Trace used for auditing purposes, to include the unavailability of space for more audit/trace log records.",
        "info": "It is critical that when SQL Server is at risk of failing to process audit logs as required, it take action to mitigate the failure. Audit processing failures include: software/hardware errors; failures in the audit capturing mechanisms; and audit storage capacity being reached or exceeded. Responses to audit failure depend upon the nature of the failure mode.\n\nWhen the need for system availability does not outweigh the need for a complete audit trail, SQL Server should shut down immediately, rolling back all in-flight transactions.\n\nSystems where audit trail completeness is paramount will most likely be at a lower MAC level than MAC I; the final determination is the prerogative of the application owner, subject to Authorizing Official concurrence. In any case, sufficient auditing resources must be allocated to avoid a shutdown in all but the most extreme situations.\n\nUse of SQL Server Audit is recommended.  All features of SQL Server Audit are available in the Enterprise and Developer editions of SQL Server 2014.  It is not available at the database level in other editions.  For this or legacy reasons, the instance may be using SQL Server Trace for auditing, which remains an acceptable solution for the time being.  Note, however, that Microsoft intends to remove most aspects of Trace at some point after SQL Server 2016.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If Trace is in use for audit purposes, redefine the trace, with @options = 6.  The script provided in the supplemental file Trace.sql can be used to do this.\n\nIf SQL Server Audit is in use, configure SQL Server Audit to shut SQL Server down upon audit failure, to include running out of space for audit logs.  Run this T-SQL script for each identified audit:\nALTER SERVER AUDITWITH (STATE = OFF);\nGO\nALTER SERVER AUDITWITH (ON_FAILURE = SHUTDOWN);\nGO\nALTER SERVER AUDITWITH (STATE = ON);\nGO\nThe audit defined in the supplemental file Audit.sql includes this setting.",
        "reference": "800-171|3.3.4,800-53|AU-5b.,800-53r5|AU-5b.,CAT|II,CCI|CCI-000140,CN-L3|7.1.3.3(e),CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_2014_Instance_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5b.,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-213819r395805_rule,STIG-ID|SQL4-00-013000,STIG-Legacy|SV-82275,STIG-Legacy|V-67785,Vuln-ID|V-213819",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2014_Y22M10_STIG.zip",
        "sql_request": "SELECT id, status, path, is_shutdown FROM sys.traces;",
        "regex": ".+"
    },
    "custom_item_413": {
        "description": "Test for Trace",
        "sql_request": "SELECT id FROM sys.traces;",
        "regex": ".+"
    }
}