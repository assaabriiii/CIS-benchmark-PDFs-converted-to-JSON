{
    "custom_item_1": {
        "description": "Windows is installed",
        "value_data": "HKLM\\SOFTWARE\\Microsoft\\Windows NT"
    },
    "custom_item_2": {
        "description": "2.11 Ensure Unnecessary SQL Server Protocols are set to 'Disabled' - 'Shared Memory protocol is enabled'",
        "info": "SQL Server supports Shared Memory, Named Pipes, TCP/IP and VIA protocols. However, SQL Server should be configured to use the bare minimum required based on the organization's needs.\n\nRationale:\n\nUsing fewer protocols minimizes the attack surface of SQL Server and, in some cases, can protect it from remote attacks.",
        "solution": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration. Ensure that only required protocols are enabled. Disable protocols not necessary.\n\nImpact:\n\nThe Database Engine must be stopped and restarted for the change to take effect.\n\nDefault Value:\n\nBy default, TCP/IP and Shared Memory protocols are enabled on all commercial editions.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.100).aspx",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1M,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": "Pass",
        "powershell_args": "$result='Pass';Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL10*\\MSSQLServer\\SuperSocketNetLib\\Sm' -name 'Enabled' | ForEach-Object -Process {If($_.Enabled -ne 1){$result='FAIL';$_.PSPath;'Enabled : ' + $_.Enabled}};$result;"
    },
    "custom_item_3": {
        "description": "2.11 Ensure Unnecessary SQL Server Protocols are set to 'Disabled' - 'Named Pipes protocol is disabled'",
        "info": "SQL Server supports Shared Memory, Named Pipes, TCP/IP and VIA protocols. However, SQL Server should be configured to use the bare minimum required based on the organization's needs.\n\nRationale:\n\nUsing fewer protocols minimizes the attack surface of SQL Server and, in some cases, can protect it from remote attacks.",
        "solution": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration. Ensure that only required protocols are enabled. Disable protocols not necessary.\n\nImpact:\n\nThe Database Engine must be stopped and restarted for the change to take effect.\n\nDefault Value:\n\nBy default, TCP/IP and Shared Memory protocols are enabled on all commercial editions.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.100).aspx",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1M,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": "Pass",
        "powershell_args": "$result='Pass';Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL10*\\MSSQLServer\\SuperSocketNetLib\\Np' -name 'Enabled' | ForEach-Object -Process {If($_.Enabled -ne 0){$result='FAIL';$_.PSPath;'Enabled : ' + $_.Enabled}};$result;"
    },
    "custom_item_4": {
        "description": "2.11 Ensure Unnecessary SQL Server Protocols are set to 'Disabled' - 'TCP/IP protocol is disabled'",
        "info": "SQL Server supports Shared Memory, Named Pipes, TCP/IP and VIA protocols. However, SQL Server should be configured to use the bare minimum required based on the organization's needs.\n\nRationale:\n\nUsing fewer protocols minimizes the attack surface of SQL Server and, in some cases, can protect it from remote attacks.",
        "solution": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration. Ensure that only required protocols are enabled. Disable protocols not necessary.\n\nImpact:\n\nThe Database Engine must be stopped and restarted for the change to take effect.\n\nDefault Value:\n\nBy default, TCP/IP and Shared Memory protocols are enabled on all commercial editions.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.100).aspx",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1M,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": "Pass",
        "powershell_args": "$result='Pass';Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL10*\\MSSQLServer\\SuperSocketNetLib\\Tcp' -name 'Enabled' | ForEach-Object -Process {If($_.Enabled -ne 0){$result='FAIL';$_.PSPath;'Enabled : ' + $_.Enabled}};$result;"
    },
    "custom_item_5": {
        "description": "2.11 Ensure Unnecessary SQL Server Protocols are set to 'Disabled' - 'VIA protocol is disabled'",
        "info": "SQL Server supports Shared Memory, Named Pipes, TCP/IP and VIA protocols. However, SQL Server should be configured to use the bare minimum required based on the organization's needs.\n\nRationale:\n\nUsing fewer protocols minimizes the attack surface of SQL Server and, in some cases, can protect it from remote attacks.",
        "solution": "Open SQL Server Configuration Manager; go to the SQL Server Network Configuration. Ensure that only required protocols are enabled. Disable protocols not necessary.\n\nImpact:\n\nThe Database Engine must be stopped and restarted for the change to take effect.\n\nDefault Value:\n\nBy default, TCP/IP and Shared Memory protocols are enabled on all commercial editions.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms191294(v=sql.100).aspx",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1M,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": "Pass",
        "powershell_args": "$result='Pass';Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL10*\\MSSQLServer\\SuperSocketNetLib\\Via' -name 'Enabled' | ForEach-Object -Process {If($_.Enabled -ne 0){$result='FAIL';$_.PSPath;'Enabled : ' + $_.Enabled}};$result;"
    },
    "custom_item_6": {
        "description": "2.12 Ensure SQL Server is configured to use non-standard ports",
        "info": "If enabled, the default SQL Server instance will be assigned a default port of TCP:1433 for TCP/IP communication. Administrators can also configure named instances to use TCP:1433 for communication. TCP:1433 is a widely known SQL Server port and this port assignment should be changed.\n\nRationale:\n\nUsing a non-default port helps protect the database from attacks directed to the default port.",
        "solution": "In SQL Server Configuration Manager, in the console pane, expand SQL Server Network Configuration, expand Protocols for, and then double-click the TCP/IP or VIA protocol\n\nIn the TCP/IP Properties dialog box, on the IP Addresses tab, several IP addresses appear in the format IP1, IP2, up to IPAll. One of these is for the IP address of the loopback adapter, 127.0.0.1. Additional IP addresses appear for each IP Address on the computer\n\nChange the TCP Port field from 1433 to another non-standard port or leave the TCP Port field empty and set the TCP Dynamic Ports value to 0 to enable dynamic port assignment and then click OK.\n\nIn the console pane, click SQL Server Services.\n\nIn the details pane, right-click SQL Server () and then click Restart, to stop and restart SQL Server.\n\nImpact:\n\nChanging the default port will force the DAC (Dedicated Administrator Connection) to listen on a random port. Also, it might make benign applications, such as application firewalls, require special configuration. In general, you should set a static port for consistent usage by applications, including firewalls, instead of using dynamic ports which will be chosen randomly at each SQL Server start up.\n\nDefault Value:\n\nBy default, default SQL Server instances listen on to TCP/IP traffic on TCP port 1433 and named instances use dynamic ports.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-a-server-to-listen-on-a-specific-tcp-port",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": "Pass",
        "powershell_args": "$result='Pass';Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL10*\\MSSQLServer\\SuperSocketNetLib\\Tcp\\IPALL' -name 'TcpPort' | ForEach-Object -Process {If($_.TcpPort -eq 1433){$result='FAIL';$_.PSPath;'TCP Port : ' + $_.TCPPort}};$result;"
    },
    "custom_item_7": {
        "description": "2.13 Ensure 'Hide Instance' option is set to 'Yes' for Production SQL Server instances",
        "info": "Non-clustered SQL Server instances within production environments should be designated as hidden to prevent advertisement by the SQL Server Browser service.\n\nRationale:\n\nDesignating production SQL Server instances as hidden leads to a more secure installation because they cannot be enumerated. However, clustered instances may break if this option is selected.",
        "solution": "Perform either the GUI or T-SQL method shown:\n\nGUI Method\n\nIn SQL Server Configuration Manager, expand SQL Server Network Configuration, right-click Protocols for, and then select Properties.\n\nOn the Flags tab, in the Hide Instance box, select Yes, and then click OK to close the dialog box. The change takes effect immediately for new connections.\n\nT-SQL Method\n\nExecute the following T-SQL to remediate:\n\nEXEC master.sys.xp_instance_regwrite\n      @rootkey = N'HKEY_LOCAL_MACHINE',\n      @key = N'SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQLServer\\SuperSocketNetLib',\n      @value_name = N'HideInstance',\n      @type = N'REG_DWORD',\n      @value = 1;\n\nImpact:\n\nThis method only prevents the instance from being listed on the network. If the instance is hidden (not exposed by SQL Browser), then connections will need to specify the server and port in order to connect. It does not prevent users from connecting to server if they know the instance name and port.\n\nIf you hide a clustered named instance, the cluster service may not be able to connect to the SQL Server. Please refer to the Microsoft documentation reference.\n\nDefault Value:\n\nBy default, SQL Server instances are not hidden.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms179327(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms179327(v=sql.100).aspx",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": "Pass",
        "powershell_args": "$result='Pass';Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL10*\\MSSQLServer\\SuperSocketNetLib' -name 'HideInstance' | ForEach-Object -Process {If($_.HideInstance -ne 1){$result='FAIL';$_.PSPath;'HideInstance : ' + $_.HideInstance}};$result;"
    },
    "custom_item_8": {
        "description": "3.4 Ensure the SQL Server's MSSQL Service Account is Not an Administrator",
        "info": "The service account and/or service SID used by the MSSQLSERVER service for a default instance or MSSQL$service for a named instance should not be a member of the Windows Administrator group either directly or indirectly (via a group). This also means that the account known as LocalSystem (aka NT AUTHORITY\\SYSTEM) should not be used for the MSSQL service as this account has higher privileges than the SQL Server service requires.\n\nRationale:\n\nFollowing the principle of least privilege, the service account should have no more privileges than required to do its job. For SQL Server services, the SQL Server Setup will assign the required permissions directly to the service SID. No additional permissions or privileges should be necessary.",
        "solution": "In the case where LocalSystem is used, use SQL Server Configuration Manager to change to a less privileged account. Otherwise, remove the account or service SID from the Administrators group. You may need to run the SQL Server Configuration Manager if underlying permissions had been changed or if SQL Server Configuration Manager was not originally used to set the service account.\n\nImpact:\n\nThe SQL Server Configuration Manager tool should always be used to change the SQL Server's service account. This will ensure that the account has the necessary privileges. If the service needs access to resources other than the standard Microsoft defined directories and registry, then additional permissions may need to be granted separately to those resources.\n\nDefault Value:\n\nBy default, the Service Account (or Service SID) is not a member of the Administrators group.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-windows-service-accounts-and-permissions",
        "reference": "800-171|3.1.1,800-53|AC-2(9),800-53r5|AC-2(9),CN-L3|8.1.4.2(c),CSCv6|5.1,CSCv7|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM16,PCI-DSSv3.2.1|8.5,PCI-DSSv4.0|8.2.2,PCI-DSSv4.0|8.2.3,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": " IS a member ",
        "powershell_args": "$name = 'MSSQL(SERVER|\\$[A-Z]+)$'; $account = 'None'; $result = 'is not'; Get-WmiObject Win32_Service | Where-Object { $_.name -match $name } | ForEach-Object { $account = $_.StartName }; net localgroup administrators | Where-Object { $_ -eq $account } | ForEach-Object { $result = 'IS' }; Write-Host Account $account $result a member of local Administrators"
    },
    "custom_item_9": {
        "description": "3.5 Ensure the SQL Server's SQLAgent Service Account is Not an Administrator",
        "info": "The service account and/or service SID used by the SQLSERVERAGENT service for a default instance or SQLAGENT$service for a named instance should not be a member of the Windows Administrator group either directly or indirectly (via a group). This also means that the account known as LocalSystem (aka NT AUTHORITY\\SYSTEM) should not be used for the SQLAGENT service as this account has higher privileges than the SQL Server service requires.\n\nRationale:\n\nFollowing the principle of least privilege, the service account should have no more privileges than required to do its job. For SQL Server services, the SQL Server Setup will assign the required permissions directly to the service SID. No additional permissions or privileges should be necessary.",
        "solution": "In the case where LocalSystem is used, use SQL Server Configuration Manager to change to a less privileged account. Otherwise, remove the account or service SID from the Administrators group. You may need to run the SQL Server Configuration Manager if underlying permissions had been changed or if SQL Server Configuration Manager was not originally used to set the service account.\n\nImpact:\n\nThe SQL Server Configuration Manager tool should always be used to change the SQL Server's service account. This will ensure that the account has the necessary privileges. If the service needs access to resources other than the standard Microsoft-defined directories and registry, then additional permissions may need to be granted separately to those resources.\n\nIf using the auto restart feature, then the SQLAGENT service must be an Administrator.\n\nDefault Value:\n\nBy default, the Service Account (or Service SID) is not a member of the Administrators group.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-windows-service-accounts-and-permissions",
        "reference": "800-171|3.1.1,800-53|AC-2(9),800-53r5|AC-2(9),CN-L3|8.1.4.2(c),CSCv6|5.1,CSCv7|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM16,PCI-DSSv3.2.1|8.5,PCI-DSSv4.0|8.2.2,PCI-DSSv4.0|8.2.3,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": " IS a member ",
        "powershell_args": "$name = 'SQL(SERVERAGENT|AGENT\\$[A-Z]+)$'; $account = 'None'; $result = 'is not'; Get-WmiObject Win32_Service | Where-Object { $_.name -match $name } | ForEach-Object { $account = $_.StartName }; net localgroup administrators | Where-Object { $_ -eq $account } | ForEach-Object { $result = 'IS' }; Write-Host Account $account $result a member of local Administrators"
    },
    "custom_item_10": {
        "description": "3.6 Ensure the SQL Server's Full-Text Service Account is Not an Administrator",
        "info": "The service account and/or service SID used by the MSSQLFDLauncher service for a default instance or MSSQLFDLauncher$service for a named instance should not be a member of the Windows Administrator group either directly or indirectly (via a group). This also means that the account known as LocalSystem (aka NT AUTHORITY\\SYSTEM) should not be used for the Full-Text service as this account has higher privileges than the SQL Server service requires.\n\nRationale:\n\nFollowing the principle of least privilege, the service account should have no more privileges than required to do its job. For SQL Server services, the SQL Server Setup will assign the required permissions directly to the service SID. No additional permissions or privileges should be necessary.",
        "solution": "In the case where LocalSystem is used, use SQL Server Configuration Manager to change to a less privileged account. Otherwise, remove the account or service SID from the Administrators group. You may need to run the SQL Server Configuration Manager if underlying permissions had been changed or if SQL Server Configuration Manager was not originally used to set the service account.\n\nImpact:\n\nThe SQL Server Configuration Manager tool should always be used to change the SQL Server's service account. This will ensure that the account has the necessary privileges. If the service needs access to resources other than the standard Microsoft-defined directories and registry, then additional permissions may need to be granted separately to those resources.\n\nDefault Value:\n\nBy default, the Service Account (or Service SID) is not a member of the Administrators group.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-windows-service-accounts-and-permissions",
        "reference": "800-171|3.1.1,800-53|AC-2(9),800-53r5|AC-2(9),CN-L3|8.1.4.2(c),CSCv6|5.1,CSCv7|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM16,PCI-DSSv3.2.1|8.5,PCI-DSSv4.0|8.2.2,PCI-DSSv4.0|8.2.3,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": " IS a member ",
        "powershell_args": "$name = 'MSSQLFDLauncher(\\$[A-Z]+)?$'; $account = 'None'; $result = 'is not'; Get-WmiObject Win32_Service | Where-Object { $_.name -match $name } | ForEach-Object { $account = $_.StartName }; net localgroup administrators | Where-Object { $_ -eq $account } | ForEach-Object { $result = 'IS' }; Write-Host Account $account $result a member of local Administrators"
    },
    "custom_item_11": {
        "description": "5.1 Ensure 'Maximum number of error log files' is set to greater than or equal to '12'",
        "info": "SQL Server error log files must be protected from loss. The log files must be backed up before they are overwritten. Retaining more error logs helps prevent loss from frequent recycling before backups can occur.\n\nRationale:\n\nThe SQL Server error log contains important information about major server events and login attempt information as well.",
        "solution": "Adjust the number of logs to prevent data loss. The default value of 6 may be insufficient for a production environment. Perform either the GUI or T-SQL method shown:\n\nGUI Method\n\nOpen SQL Server Management Studio.\n\nOpen Object Explorer and connect to the target instance.\n\nNavigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure\n\nCheck the Limit the number of error log files before they are recycled\n\nSet the Maximum number of error log files to greater than or equal to 12\n\nT-SQL Method\n\nRun the following T-SQL to change the number of error log files, replacewith your desired number of error log files:\n\nEXEC master.sys.xp_instance_regwrite\nN'HKEY_LOCAL_MACHINE',\nN'Software\\Microsoft\\MSSQLServer\\MSSQLServer',\nN'NumErrorLogs',\nREG_DWORD,;\n\nImpact:\n\nOnce the max number of error logs is reached, the oldest error log file is deleted each time SQL Server restarts or sp_cycle_errorlog is executed.\n\nDefault Value:\n\n6 SQL Server error log files in addition to the current error log file are retained by default.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms177285(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms177285(v=sql.100).aspx",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "value_data": "NumErrorLogs : *(1[2-9]|[2-9][0-9])",
        "powershell_args": "$result = 'Not Limited'; Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL10*\\MSSQLServer' -name 'NumErrorLogs' -ErrorAction SilentlyContinue | Select 'NumErrorLogs' | ForEach-Object { $result = $_.NumErrorLogs }; Write-Host 'NumErrorLogs : '$result"
    }
}