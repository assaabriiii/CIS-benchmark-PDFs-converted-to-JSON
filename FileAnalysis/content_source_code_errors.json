{
    "custom_item_1": {
        "description": "Determine if a .NET config file is storing database account information in plaintext.",
        "file_extension": "config",
        "regex": "(([iI][dD]=.*;[pP][aA][sS]{2}[wW][oO][rR][dD]=.*))",
        "expect": "Data Source=",
        "max_size": "1M"
    },
    "custom_item_2": {
        "description": "Determine if a .NET config file has set the Trust level to Full.",
        "file_extension": "config",
        "expect": "Full",
        "max_size": "1M"
    },
    "custom_item_3": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - cpy",
        "file_extension": "c",
        "regex": "((strcpy|wcscpy|_tcscpy|_mbscpy|StrCpy|StrCpyA|StrCpyW))",
        "expect": "strcpy",
        "max_size": "1M"
    },
    "custom_item_4": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - cpy and cat",
        "file_extension": "c",
        "regex": "((_tccpy|_mbccpy|strcat|wcscat|_tcscat|_mbscat|StrCat|StrCatA|StrCatW))",
        "expect": "_tccpy",
        "max_size": "1M"
    },
    "custom_item_5": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - cat",
        "file_extension": "c",
        "regex": "((lstrcat|lstrcatA|lstrcatW|StrCatBuffW|StrCatBuff|StrCatBuffA|StrCatChainW|strcatA|strcatW|_tccat|_mbccat))",
        "expect": "strcat",
        "max_size": "1M"
    },
    "custom_item_6": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - printf",
        "file_extension": "c",
        "regex": "((wnsprintf|wnsprintfA|wnsprintfW|sprintfW|sprintfA|wsprintf|wsprintfW|wsprintfA|sprintf|swprintf|_stprintf|_snwprintf|_snprintf|_sntprintf|nsprintf))",
        "expect": "sprintf",
        "max_size": "1M"
    },
    "custom_item_7": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - sprintf",
        "file_extension": "c",
        "regex": "((wvsprintf|wvsprintfA|wvsprintfW|vsprintf|_vstprintf|vswprintf|_vsnprintf|_vsnwprintf|_vsntprintf|wvnsprintf|wvnsprintfA|wvnsprintfW))",
        "expect": "sprintf",
        "max_size": "1M"
    },
    "custom_item_8": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - vnsprintf",
        "file_extension": "c",
        "regex": "((_vsnprintf|_vsnwprintf|_vsntprintf|wvnsprintf|wvnsprintfA|wvnsprintfW))",
        "expect": "sprintf",
        "max_size": "1M"
    },
    "custom_item_9": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - ncpy",
        "file_extension": "c",
        "regex": "((strncpy|wcsncpy|_tcsncpy|_mbsncpy|_mbsnbcpy|StrCpyN|StrNCpy|strcpynA|StrNCpyA|StrNCpyW|lstrcpyn|lstrcpynA|lstrcpynW|_fstrncpy))",
        "expect": "strncpy",
        "max_size": "1M"
    },
    "custom_item_10": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - ncat",
        "file_extension": "c",
        "regex": "((strncat|wcsncat|_tcsncat|_mbsncat|_mbsnbcat|StrCatN|StrNCat|StrNCatA|StrNCatW|lstrncat|lstrcatnA|lstrcatnW|lstrcatn|_fstrncat))",
        "expect": "strncat",
        "max_size": "1M"
    },
    "custom_item_11": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - tok and makepath",
        "file_extension": "c",
        "regex": "((strtok|_tcstok|wcstok|_mbstok|Makepath|_tmakepath|_makepath|_wmakepath|_splitpath|_tsplitpath|_wsplitpath|scanf|wscanf|_tscanf|sscanf|swscanf|_stscanf))",
        "expect": "strto",
        "max_size": "1M"
    },
    "custom_item_12": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - ito",
        "file_extension": "c",
        "regex": "((snscanf|snwscanf|_sntscanf|_itoa|_itow|_i64toa|_i64tow|_ui64toa|_ui64tot|_ui64tow|_ultoa|_ultot|_ultow))",
        "expect": "scanf",
        "max_size": "1M"
    },
    "custom_item_13": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function gets",
        "file_extension": "c",
        "regex": "((gets|_getts|_gettws|IsBadWritePtr|IsBadHugeWritePtr|IsBadReadPtr|IsBadHugeReadPtr|IsBadCodePtr|IsBadStringPtr))",
        "expect": "gets",
        "max_size": "1M"
    },
    "custom_item_14": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - charto and oemto",
        "file_extension": "c",
        "regex": "((CharToOem|CharToOemA|CharToOemW|OemToChar|OemToCharA|OemToCharW|CharToOemBuffA|CharToOemBuffW|alloca|_alloca))",
        "expect": "CharTo",
        "max_size": "1M"
    },
    "custom_item_15": {
        "description": "Determine if a C/C++ source code file is using a Microsoft SDL banned function - len",
        "file_extension": "c",
        "regex": "((strlen|wcslen|_mbslen|_mbstrlen|StrLen|lstrlen))",
        "expect": "len",
        "max_size": "1M"
    },
    "custom_item_16": {
        "description": "Potential strcpy buffer overflow in C/C++ code.",
        "file_extension": "c",
        "regex": "((strcpy\\(.*,argv\\[.*\\]\\)))",
        "expect": "include",
        "max_size": "1M",
        "reference": "800-53|SI-16,800-53r5|SI-16,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16"
    },
    "custom_item_17": {
        "description": "Potential strpy buffer overflow in C/C++ code.",
        "file_extension": "c",
        "regex": "((strcpy\\((buffer|buf),str\\)))",
        "expect": "include",
        "max_size": "1M",
        "reference": "800-53|SI-16,800-53r5|SI-16,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16"
    },
    "custom_item_18": {
        "description": "Potential SQL injection in Microsoft C* code.",
        "file_extension": "c",
        "regex": "(([sS][eE][lL][eE][cC][tT].*[fF][rR][oO][mM].*Request\\.([fF]orm|[cC]ookies)[ ]+\\[))",
        "expect": "Request",
        "max_size": "1M"
    },
    "custom_item_19": {
        "description": "Potential injection vulnerability via unsanitized user supplied data - direct write of request",
        "file_extension": "cs",
        "regex": "((Response.Write[ ]*\\(Request\\.))",
        "expect": "Response.Write",
        "max_size": "1M"
    },
    "custom_item_20": {
        "description": "Potential injection vulnerability via unsanitized user supplied data - direct link of request",
        "file_extension": "asp",
        "regex": "(([aA] [hH][rR][eE][fF][ ]*=[ ]*<%=[ ]*[rR]equest\\.[^%]*%>))",
        "expect": "equest.",
        "max_size": "1M"
    },
    "custom_item_21": {
        "description": "Potential XSS vulnerability via unsanitized user data in Java code.",
        "file_extension": "java",
        "regex": "(((echo|print).*\\$_(GET|POST|COOKIE|SESSION|REQUEST)))",
        "expect": "out.println",
        "max_size": "1M"
    },
    "custom_item_22": {
        "description": "Potential XSS vulnerability via unsanitized user data in Java code.",
        "file_extension": "java",
        "regex": "(((echo|print).*\\$_(GET|POST|COOKIE|SESSION|REQUEST)))",
        "expect": "out.println",
        "max_size": "1M"
    },
    "custom_item_23": {
        "description": "Potential XSS vulnerability via unsanitized user data in Java code.",
        "file_extension": "java",
        "regex": "(((echo|print).*\\$_(GET|POST|COOKIE|SESSION|REQUEST)))",
        "expect": "out.println",
        "max_size": "1M"
    },
    "custom_item_24": {
        "description": "Potential XSS vulnerability via unsanitized user data in Java code.",
        "file_extension": "java",
        "regex": "(((echo|print).*\\$_(GET|POST|COOKIE|SESSION|REQUEST)))",
        "expect": "out.println",
        "max_size": "1M"
    },
    "custom_item_25": {
        "description": "Potential XSS vulnerability via unsanitized user data in Java code.",
        "file_extension": "java",
        "expect": "out.println",
        "max_size": "1M"
    },
    "custom_item_26": {
        "description": "Potential SQL injection via SQL query in Java code - SQL",
        "file_extension": "java",
        "expect": "request.getParameter",
        "max_size": "1M"
    },
    "custom_item_27": {
        "description": "Potential SQL injection via SQL query in Java code - execute",
        "file_extension": "java",
        "expect": "request.getParameter",
        "max_size": "1M"
    },
    "custom_item_28": {
        "description": "Potential XSS vulnerability via unsanitized user data in Java code.",
        "file_extension": "java",
        "expect": "out.println",
        "max_size": "1M"
    }
}