{
    "custom_item_1": {
        "description": "MySQL 5.6 is installed",
        "sql_request": "show variables like 'version' ;",
        "sql_expect": "version"
    },
    "custom_item_2": {
        "description": "MySQL 5.6 Community Edition is installed",
        "sql_request": "show variables like 'license' ;",
        "sql_expect": "license"
    },
    "custom_item_3": {
        "description": "1.1 Place Databases on Non-System Partitions",
        "info": "It is generally accepted that host operating systems should include different filesystem partitions for different purposes. One set of filesystems is typically called system partitions, and these are generally reserved for host system/application operation. The other set of filesystems is typically called 'non-system partitions', and such locations are generally reserved for storing data.\n\nRationale:\n\nMoving the database off the system partition will reduce the probability of denial of service caused by exhaustion of available disk space to the operating system.\n\nImpact:\n\nMoving database files and directories to a non-system partition may be difficult depending on whether there was only a single partition when the operating system was set up and whether there are additional non-system partitions available.",
        "solution": "Perform the following steps to remediate this setting for the datadir:\n\nBackup the database.\n\nChoose a non-system partition new location for the MySQL data\n\nStop mysqld using a command like: service mysql stop\n\nCopy the data using a command like: cp -rpSet the datadir location to the new location in the MySQL configuration file\n\nStart mysqld using a command like:\n\nservice mysql start\n\nNote: On some Linux distributions you may need to additionally modify apparmor settings. For example, on a Ubuntu 14.04.1 system edit the file /etc/apparmor.d/usr.sbin.mysqld so that the datadir access is appropriate. The original might look like this:\n\n# Allow data dir access\n/var/lib/mysql/ r,\n/var/lib/mysql/** rwk,\n\nAlter those two paths to be the new location you chose above. For example, if that new location were /media/mysql, then the /etc/apparmor.d/usr.sbin.mysqld file should include something like this:\n\n# Allow data dir access\n/media/mysql/ r,\n/media/mysql/** rwk,",
        "reference": "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,CSCv7|2.10,CSCv8|3.12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,LEVEL|1M",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "show variables like 'datadir' ;",
        "sql_expect": "datadir"
    },
    "custom_item_4": {
        "description": "2.4 Do Not Reuse Usernames",
        "info": "Database user accounts should not be reused for multiple applications or users.\n\nRationale:\n\nUtilizing unique database accounts across applications will reduce the impact of a compromised MySQL account. If a user is reused, then a compromise of this user will compromise multiple parts of the system and/or application.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Add/Remove users so that each user is only used for one specific purpose.",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4.3,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT host, user, plugin, IF(plugin = 'mysql_native_password', 'WEAK SHA1', 'STRONG SHA2') AS HASHTYPE FROM mysql.user WHERE user NOT IN ('mysql.infoschema', 'mysql.session', 'mysql.sys') AND plugin NOT LIKE 'auth%' AND plugin <> 'mysql_no_login' AND LENGTH(authentication_string) > 0 ORDER BY plugin;",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_5": {
        "description": "2.5 Ensure Non-Default, Unique Cryptographic Material is in Use - 'ssl_cert'",
        "info": "The cryptographic material used by MySQL, such as digital certificates and encryption keys, should be used only for MySQL and only for one instance. Default cryptographic material should not be used since it is not unique to the instance.\n\nRationale:\n\nIf a cryptographic material is used on multiple MySQL instances and/or systems then a compromise of one may lead to the compromise of the network traffic of all servers which use the same cryptographic material. If an attacker gains access to shared cryptographic material, including default material, the attacker can reuse that material to impersonate the MySQL server or otherwise compromise its operations.",
        "solution": "Generate new certificates, keys, and other cryptographic material as needed for each affected MySQL instance.",
        "reference": "800-171|3.5.2,800-53|IA-5e.,800-53r5|IA-5e.,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5e.,LEVEL|2M,NESA|T5.2.3,NIAv2|NS2,NIAv2|NS39,NIAv2|SS14f,PCI-DSSv3.2.1|2.1,PCI-DSSv4.0|2.2.2,QCSC-v1|5.2.2,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "show variables like 'ssl_cert' ;",
        "sql_expect": "ssl_cert"
    },
    "custom_item_6": {
        "description": "2.5 Ensure Non-Default, Unique Cryptographic Material is in Use - 'ssl_key'",
        "info": "The cryptographic material used by MySQL, such as digital certificates and encryption keys, should be used only for MySQL and only for one instance. Default cryptographic material should not be used since it is not unique to the instance.\n\nRationale:\n\nIf a cryptographic material is used on multiple MySQL instances and/or systems then a compromise of one may lead to the compromise of the network traffic of all servers which use the same cryptographic material. If an attacker gains access to shared cryptographic material, including default material, the attacker can reuse that material to impersonate the MySQL server or otherwise compromise its operations.",
        "solution": "Generate new certificates, keys, and other cryptographic material as needed for each affected MySQL instance.",
        "reference": "800-171|3.5.2,800-53|IA-5e.,800-53r5|IA-5e.,CN-L3|7.1.3.2(d),CN-L3|8.1.4.2(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5e.,LEVEL|2M,NESA|T5.2.3,NIAv2|NS2,NIAv2|NS39,NIAv2|SS14f,PCI-DSSv3.2.1|2.1,PCI-DSSv4.0|2.2.2,QCSC-v1|5.2.2,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "show variables like 'ssl_key' ;",
        "sql_expect": "ssl_key"
    },
    "custom_item_7": {
        "description": "2.6 Ensure Password Complexity is Configured - validate_password_length",
        "info": "Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure password storage. In keeping with the overall goal of having users create a password that is not overly weak, it's best to have at least 14 characters for a password only account.\n\nRationale:\n\nMalicious actors regularly attempt to compromise databases by attacking or guessing passwords. Stolen credentials may be used to gain access to steal information, engage in financial fraud, and more.\n\nBy enforcing practical and secure policies, end user cooperation grows. In general, longer passwords are better (harder to crack), but a forced password length requirement can cause user behavior that is predictable and undesirable. Having a reasonable minimum length with no maximum character limit increases the resulting average password length used and thus increases the security of that password.\n\nImpact:\n\nEnforcing too much complexity or length may be difficult for users to memorize. This may cause users to use predictable patterns or other bad practices, resulting in weaker passwords.",
        "solution": "If not already present in the my.cnf, add this line:\n\nplugin-load=validate_password.so\n\nSet password policies in accordance with the organizationally defined policy and security best practices:\n\nset global validate_password_dictionary_file='';\nset global validate_password_length=14;\nset global validate_password_policy='STRONG';\n\nUse with care. Passwords that are too complex in nature make it harder for users to remember, leading to bad practices.\n\nset global validate_password_mixed_case_count=1;\nset global validate_password_special_char_count=1;\nset global validate_password_number_count=1;\n\nDefault Value:\n\nThe MySQL validate password complexity plugin is not used by default.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_length'",
        "sql_expect": "validate_password_length"
    },
    "custom_item_8": {
        "description": "2.6 Ensure Password Complexity is Configured - validate_password_mixed_case_count",
        "info": "Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure password storage. In keeping with the overall goal of having users create a password that is not overly weak, it's best to have at least 14 characters for a password only account.\n\nRationale:\n\nMalicious actors regularly attempt to compromise databases by attacking or guessing passwords. Stolen credentials may be used to gain access to steal information, engage in financial fraud, and more.\n\nBy enforcing practical and secure policies, end user cooperation grows. In general, longer passwords are better (harder to crack), but a forced password length requirement can cause user behavior that is predictable and undesirable. Having a reasonable minimum length with no maximum character limit increases the resulting average password length used and thus increases the security of that password.\n\nImpact:\n\nEnforcing too much complexity or length may be difficult for users to memorize. This may cause users to use predictable patterns or other bad practices, resulting in weaker passwords.",
        "solution": "If not already present in the my.cnf, add this line:\n\nplugin-load=validate_password.so\n\nSet password policies in accordance with the organizationally defined policy and security best practices:\n\nset global validate_password_dictionary_file='';\nset global validate_password_length=14;\nset global validate_password_policy='STRONG';\n\nUse with care. Passwords that are too complex in nature make it harder for users to remember, leading to bad practices.\n\nset global validate_password_mixed_case_count=1;\nset global validate_password_special_char_count=1;\nset global validate_password_number_count=1;\n\nDefault Value:\n\nThe MySQL validate password complexity plugin is not used by default.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_mixed_case_count'",
        "sql_expect": "validate_password_mixed_case_count"
    },
    "custom_item_9": {
        "description": "2.6 Ensure Password Complexity is Configured - validate_password_number_count",
        "info": "Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure password storage. In keeping with the overall goal of having users create a password that is not overly weak, it's best to have at least 14 characters for a password only account.\n\nRationale:\n\nMalicious actors regularly attempt to compromise databases by attacking or guessing passwords. Stolen credentials may be used to gain access to steal information, engage in financial fraud, and more.\n\nBy enforcing practical and secure policies, end user cooperation grows. In general, longer passwords are better (harder to crack), but a forced password length requirement can cause user behavior that is predictable and undesirable. Having a reasonable minimum length with no maximum character limit increases the resulting average password length used and thus increases the security of that password.\n\nImpact:\n\nEnforcing too much complexity or length may be difficult for users to memorize. This may cause users to use predictable patterns or other bad practices, resulting in weaker passwords.",
        "solution": "If not already present in the my.cnf, add this line:\n\nplugin-load=validate_password.so\n\nSet password policies in accordance with the organizationally defined policy and security best practices:\n\nset global validate_password_dictionary_file='';\nset global validate_password_length=14;\nset global validate_password_policy='STRONG';\n\nUse with care. Passwords that are too complex in nature make it harder for users to remember, leading to bad practices.\n\nset global validate_password_mixed_case_count=1;\nset global validate_password_special_char_count=1;\nset global validate_password_number_count=1;\n\nDefault Value:\n\nThe MySQL validate password complexity plugin is not used by default.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_number_count'",
        "sql_expect": "validate_password_number_count"
    },
    "custom_item_10": {
        "description": "2.6 Ensure Password Complexity is Configured - validate_password_special_char_count",
        "info": "Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure password storage. In keeping with the overall goal of having users create a password that is not overly weak, it's best to have at least 14 characters for a password only account.\n\nRationale:\n\nMalicious actors regularly attempt to compromise databases by attacking or guessing passwords. Stolen credentials may be used to gain access to steal information, engage in financial fraud, and more.\n\nBy enforcing practical and secure policies, end user cooperation grows. In general, longer passwords are better (harder to crack), but a forced password length requirement can cause user behavior that is predictable and undesirable. Having a reasonable minimum length with no maximum character limit increases the resulting average password length used and thus increases the security of that password.\n\nImpact:\n\nEnforcing too much complexity or length may be difficult for users to memorize. This may cause users to use predictable patterns or other bad practices, resulting in weaker passwords.",
        "solution": "If not already present in the my.cnf, add this line:\n\nplugin-load=validate_password.so\n\nSet password policies in accordance with the organizationally defined policy and security best practices:\n\nset global validate_password_dictionary_file='';\nset global validate_password_length=14;\nset global validate_password_policy='STRONG';\n\nUse with care. Passwords that are too complex in nature make it harder for users to remember, leading to bad practices.\n\nset global validate_password_mixed_case_count=1;\nset global validate_password_special_char_count=1;\nset global validate_password_number_count=1;\n\nDefault Value:\n\nThe MySQL validate password complexity plugin is not used by default.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_special_char_count'",
        "sql_expect": "validate_password_special_char_count"
    },
    "custom_item_11": {
        "description": "2.6 Ensure Password Complexity is Configured - validate_password_policy",
        "info": "Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure password storage. In keeping with the overall goal of having users create a password that is not overly weak, it's best to have at least 14 characters for a password only account.\n\nRationale:\n\nMalicious actors regularly attempt to compromise databases by attacking or guessing passwords. Stolen credentials may be used to gain access to steal information, engage in financial fraud, and more.\n\nBy enforcing practical and secure policies, end user cooperation grows. In general, longer passwords are better (harder to crack), but a forced password length requirement can cause user behavior that is predictable and undesirable. Having a reasonable minimum length with no maximum character limit increases the resulting average password length used and thus increases the security of that password.\n\nImpact:\n\nEnforcing too much complexity or length may be difficult for users to memorize. This may cause users to use predictable patterns or other bad practices, resulting in weaker passwords.",
        "solution": "If not already present in the my.cnf, add this line:\n\nplugin-load=validate_password.so\n\nSet password policies in accordance with the organizationally defined policy and security best practices:\n\nset global validate_password_dictionary_file='';\nset global validate_password_length=14;\nset global validate_password_policy='STRONG';\n\nUse with care. Passwords that are too complex in nature make it harder for users to remember, leading to bad practices.\n\nset global validate_password_mixed_case_count=1;\nset global validate_password_special_char_count=1;\nset global validate_password_number_count=1;\n\nDefault Value:\n\nThe MySQL validate password complexity plugin is not used by default.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_policy'",
        "sql_expect": "validate_password_policy"
    },
    "custom_item_12": {
        "description": "2.6 Ensure Password Complexity is Configured - validate_password_dictionary_file",
        "info": "Passwords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure password storage. In keeping with the overall goal of having users create a password that is not overly weak, it's best to have at least 14 characters for a password only account.\n\nRationale:\n\nMalicious actors regularly attempt to compromise databases by attacking or guessing passwords. Stolen credentials may be used to gain access to steal information, engage in financial fraud, and more.\n\nBy enforcing practical and secure policies, end user cooperation grows. In general, longer passwords are better (harder to crack), but a forced password length requirement can cause user behavior that is predictable and undesirable. Having a reasonable minimum length with no maximum character limit increases the resulting average password length used and thus increases the security of that password.\n\nImpact:\n\nEnforcing too much complexity or length may be difficult for users to memorize. This may cause users to use predictable patterns or other bad practices, resulting in weaker passwords.",
        "solution": "If not already present in the my.cnf, add this line:\n\nplugin-load=validate_password.so\n\nSet password policies in accordance with the organizationally defined policy and security best practices:\n\nset global validate_password_dictionary_file='';\nset global validate_password_length=14;\nset global validate_password_policy='STRONG';\n\nUse with care. Passwords that are too complex in nature make it harder for users to remember, leading to bad practices.\n\nset global validate_password_mixed_case_count=1;\nset global validate_password_special_char_count=1;\nset global validate_password_number_count=1;\n\nDefault Value:\n\nThe MySQL validate password complexity plugin is not used by default.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_dictionary_file'",
        "sql_expect": "validate_password_dictionary_file"
    },
    "custom_item_13": {
        "description": "2.11 Implement Connection Delays to Limit Failed Login Attempts - CONNECTION_CONTROL",
        "info": "MySQL Server can enable administrators to introduce an increasing delay in server response to clients after a certain number of consecutive failed connection attempts.\n\nRationale:\n\nDelaying connection attempts provides a deterrent that slows down brute force attacks that attempt to access MySQL user accounts.",
        "solution": "Add the following lines to my.cnf:\n\n[mysqld]\nplugin-load-add=connection_control.so\nconnection-control=FORCE_PLUS_PERMANENT\nconnection-control-failed-login-attempts=FORCE_PLUS_PERMANENT\nconnection_control_failed_connections_threshold=5\nconnection_control_min_connection_delay=60000\nconnection_control_max_connection_delay=1920000\n\nDelays are in milliseconds for server response to failed connection attempt.\n\n60000 (ms - 1 minute)\n\n1920000 (ms, 32 minutes)\n\nFor each user set\n\nALTER USERFAILED_LOGIN_ATTEMPTS 12;",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME LIKE 'CONNECTION_CONTROL';",
        "sql_expect": "CONNECTION_CONTROL"
    },
    "custom_item_14": {
        "description": "2.11 Implement Connection Delays to Limit Failed Login Attempts - CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS",
        "info": "MySQL Server can enable administrators to introduce an increasing delay in server response to clients after a certain number of consecutive failed connection attempts.\n\nRationale:\n\nDelaying connection attempts provides a deterrent that slows down brute force attacks that attempt to access MySQL user accounts.",
        "solution": "Add the following lines to my.cnf:\n\n[mysqld]\nplugin-load-add=connection_control.so\nconnection-control=FORCE_PLUS_PERMANENT\nconnection-control-failed-login-attempts=FORCE_PLUS_PERMANENT\nconnection_control_failed_connections_threshold=5\nconnection_control_min_connection_delay=60000\nconnection_control_max_connection_delay=1920000\n\nDelays are in milliseconds for server response to failed connection attempt.\n\n60000 (ms - 1 minute)\n\n1920000 (ms, 32 minutes)\n\nFor each user set\n\nALTER USERFAILED_LOGIN_ATTEMPTS 12;",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME LIKE 'CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS';",
        "sql_expect": "CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS"
    },
    "custom_item_15": {
        "description": "2.11 Implement Connection Delays to Limit Failed Login Attempts - connection_control_failed_connections_threshold",
        "info": "MySQL Server can enable administrators to introduce an increasing delay in server response to clients after a certain number of consecutive failed connection attempts.\n\nRationale:\n\nDelaying connection attempts provides a deterrent that slows down brute force attacks that attempt to access MySQL user accounts.",
        "solution": "Add the following lines to my.cnf:\n\n[mysqld]\nplugin-load-add=connection_control.so\nconnection-control=FORCE_PLUS_PERMANENT\nconnection-control-failed-login-attempts=FORCE_PLUS_PERMANENT\nconnection_control_failed_connections_threshold=5\nconnection_control_min_connection_delay=60000\nconnection_control_max_connection_delay=1920000\n\nDelays are in milliseconds for server response to failed connection attempt.\n\n60000 (ms - 1 minute)\n\n1920000 (ms, 32 minutes)\n\nFor each user set\n\nALTER USERFAILED_LOGIN_ATTEMPTS 12;",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_failed_connections_threshold';",
        "sql_expect": "connection_control_failed_connections_threshold"
    },
    "custom_item_16": {
        "description": "2.11 Implement Connection Delays to Limit Failed Login Attempts - connection_control_min_connection_delay",
        "info": "MySQL Server can enable administrators to introduce an increasing delay in server response to clients after a certain number of consecutive failed connection attempts.\n\nRationale:\n\nDelaying connection attempts provides a deterrent that slows down brute force attacks that attempt to access MySQL user accounts.",
        "solution": "Add the following lines to my.cnf:\n\n[mysqld]\nplugin-load-add=connection_control.so\nconnection-control=FORCE_PLUS_PERMANENT\nconnection-control-failed-login-attempts=FORCE_PLUS_PERMANENT\nconnection_control_failed_connections_threshold=5\nconnection_control_min_connection_delay=60000\nconnection_control_max_connection_delay=1920000\n\nDelays are in milliseconds for server response to failed connection attempt.\n\n60000 (ms - 1 minute)\n\n1920000 (ms, 32 minutes)\n\nFor each user set\n\nALTER USERFAILED_LOGIN_ATTEMPTS 12;",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_min_connection_delay';",
        "sql_expect": "connection_control_min_connection_delay"
    },
    "custom_item_17": {
        "description": "2.11 Implement Connection Delays to Limit Failed Login Attempts - connection_control_max_connection_delay",
        "info": "MySQL Server can enable administrators to introduce an increasing delay in server response to clients after a certain number of consecutive failed connection attempts.\n\nRationale:\n\nDelaying connection attempts provides a deterrent that slows down brute force attacks that attempt to access MySQL user accounts.",
        "solution": "Add the following lines to my.cnf:\n\n[mysqld]\nplugin-load-add=connection_control.so\nconnection-control=FORCE_PLUS_PERMANENT\nconnection-control-failed-login-attempts=FORCE_PLUS_PERMANENT\nconnection_control_failed_connections_threshold=5\nconnection_control_min_connection_delay=60000\nconnection_control_max_connection_delay=1920000\n\nDelays are in milliseconds for server response to failed connection attempt.\n\n60000 (ms - 1 minute)\n\n1920000 (ms, 32 minutes)\n\nFor each user set\n\nALTER USERFAILED_LOGIN_ATTEMPTS 12;",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_max_connection_delay';",
        "sql_expect": "connection_control_max_connection_delay"
    },
    "custom_item_18": {
        "description": "4.1 Ensure the Latest Security Patches are Applied",
        "info": "Periodically, updates to MySQL server are released to resolve bugs, mitigate vulnerabilities, and provide new features. It is recommended that MySQL installations are up to date with the latest security updates.\n\n    Rationale:\n\n    Maintaining currency with MySQL patches will help reduce risk associated with known vulnerabilities present in the MySQL server.\n\n    Without the latest security patches MySQL might have known vulnerabilities which could be used by an attacker to gain access.\n\n    Impact:\n\n    To update the MySQL server a restart is required.",
        "solution": "Install the latest patches for your version or upgrade to the latest version.",
        "reference": "800-53|SA-22,800-53r5|SA-22,CSCv7|2.2,CSCv8|2.2,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1M",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "show variables like 'version' ;",
        "sql_expect": "version"
    },
    "custom_item_19": {
        "description": "4.2 Ensure Example or Test Databases are Not Installed on Production Servers",
        "info": "The default MySQL installation does not contain any example or test databases. However, it is a good idea to review for common example databases and ensure they have been removed from production systems.\n\nRationale:\n\nDropping example databases will reduce the attack surface of the MySQL server.",
        "solution": "Execute the following SQL statement to drop an example database:\n\nDROP DATABASE;",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT * FROM information_schema.SCHEMATA where SCHEMA_NAME not in ('mysql','information_schema', 'sys', 'performance_schema');"
    },
    "custom_item_20": {
        "description": "4.4 Ensure 'local_infile' Is Disabled",
        "info": "The local_infile parameter dictates whether files located on the MySQL client's computer can be loaded or selected via LOAD DATA INFILE or SELECT local_file.\n\nRationale:\n\nDisabling local_infile reduces an attacker's ability to read sensitive files off the affected server via an SQL injection vulnerability.\n\nImpact:\n\nDisabling local_infile will impact the functionality of solutions that rely on it.",
        "solution": "Add the following line to the [mysqld] section of the MySQL configuration file and restart the MySQL service:\n\nlocal_infile=OFF\n\nDefault Value:\n\nON",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|4.7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "show variables like 'local_infile' ;",
        "sql_expect": "local_infile"
    },
    "custom_item_21": {
        "description": "4.6 Ensure Symbolic Links are Disabled",
        "info": "The symbolic-links and skip-symbolic-links options for MySQL determine whether symbolic link support is available. When use of symbolic links are enabled, they have different effects depending on the host platform. When symbolic links are disabled, then symbolic links stored in files or entries in tables are not used by the database.\n\nRationale:\n\nPrevents symbolic links being used for data base files. This is especially important when MySQL is executing as root as arbitrary files may be overwritten. The symbolic-links option might allow someone to direct actions by to MySQL server to other files and/or directories.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf)\n\nLocate skip-symbolic-links in the configuration\n\nSet the skip-symbolic-links to YES\n\nNote: If skip-symbolic-links does not exist, add it to the configuration file in the mysqld section.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|13,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "show variables like 'have_symlink' ;",
        "sql_expect": "have_symlink"
    },
    "custom_item_22": {
        "description": "4.7 Ensure the 'daemon_memcached' Plugin Is Disabled",
        "info": "The InnoDB memcached Plugin allows users to access data stored in InnoDB with the memcached protocol.\n\nRationale:\n\nBy default the plugin doesn't do authentication, which means that anyone with access to the TCP/IP port of the plugin can access and modify the data. However, not all data is exposed by default.",
        "solution": "To remediate this setting, issue the following command in the MySQL command-line client:\n\nuninstall plugin daemon_memcached;\n\nThis uninstalls the memcached plugin from the MySQL server.\n\nDefault Value:\n\ndisabled",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW DATABASES LIKE 'innodb_memcache';"
    },
    "custom_item_23": {
        "description": "4.8 Ensure the 'secure_file_priv' is Configured Correctly",
        "info": "The secure_file_priv option restricts to paths used by LOAD DATA INFILE or SELECT local_file. It is recommended that this option be set to a file system location that contains only resources expected to be loaded by MySQL. Even better, if data import/export using LOAD DATA INFILE or SELECT local_file is not used, the functionality should be disabled entirely by setting --secure-file-priv to NULL.\n\nRationale:\n\nSetting secure_file_priv reduces an attacker's ability to read sensitive files off the affected server via a SQL injection vulnerability.\n\nImpact:\n\nSolutions that rely on loading data from various sub-directories may be negatively impacted by this change. Consider consolidating load directories under a common parent directory.\n\nThe server checks the value of secure_file_priv at startup and writes a warning to the error log if the value is insecure. A non-NULL value is considered insecure if it is empty, or the value is the data directory or a subdirectory of it, or a directory that is accessible by all users.",
        "solution": "If you are not going to use this feature, remove secure_file_priv from the [mysqld] section of the MySQL configuration file and restart the MySQL service.\n\nIf you need this feature add the following line to the [mysqld] section of the MySQL configuration file and restart the MySQL service:\n\nsecure_file_priv=Default Value:\n\nPrior to 5.6.34 - empty string Starting with 5.6.34 - Varies by platform.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW GLOBAL VARIABLES WHERE Variable_name = 'secure_file_priv';",
        "sql_expect": "secure_file_priv"
    },
    "custom_item_24": {
        "description": "5.1 Ensure Only Administrative Users Have Full Database Access",
        "info": "The mysql.user, mysql.db, and other mysql tables ending in _priv list a variety of privileges that can be granted (or denied) to MySQL users. Some of the privileges of concern include: Select_priv, Insert_priv, Update_priv, Delete_priv, Drop_priv, and so on. Typically, these privileges should not be available to every MySQL user and often are reserved for administrative use only. The information_schema.user_privileges provides a consolidated view of all user privileges.\n\nRationale:\n\nLimiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MySQL. A user which has direct access to mysql.* might view password hashes, change permissions, or alter or destroy information intentionally or unintentionally.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following actions to remediate this setting:\n\nEnumerate non-administrative users resulting from the audit procedure.\n\nFor each non-administrative user, use the REVOKE statement to remove privileges as appropriate.",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.1,CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "select grantee, privilege_type, is_grantable from information_schema.user_privileges where grantee not like ('\\'mysql.%localhost\\'');",
        "sql_expect": "@ADMIN_USER@"
    },
    "custom_item_25": {
        "description": "5.2 Ensure 'FILE' is Not Granted to Non-Administrative Users",
        "info": "The FILE privilege is used to allow or disallow a user from reading and writing files on the server host. Any user with the FILE right granted has the ability to:\n\nRead files from the local file system that are readable by the MySQL server (this includes world-readable files).\n\nWrite files to the local file system where the MySQL server has write access.\n\nRationale:\n\nThe FILE right allows MySQL users to read files from disk and to write files to disk. This may be leveraged by an attacker to further compromise MySQL. It should be noted that the MySQL server should not overwrite existing files.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure.\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE FILE ON *.* FROM '';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'FILE';",
        "sql_expect": "\\'@ADMIN_USER@\\'@.+"
    },
    "custom_item_26": {
        "description": "5.4 Ensure 'SUPER' is Not Granted to Non-Administrative Users",
        "info": "The SUPER privilege is a powerful and far-reaching privilege and should not be granted lightly.\n\nThe SUPER privilege shown in the INFORMATION_SCHEMA.USER_PRIVILEGES table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.\n\nRationale:\n\nThe SUPER privilege allows principals to perform many actions, including view and terminate currently executing MySQL statements (including statements used to manage passwords). This privilege also provides the ability to configure MySQL, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.\n\nIt is more secure to migrate administrative users off SUPER and instead assign the specific and minimal set of mysql Dynamic Privileges needed to perform their tasks.\n\nImpact:\n\nWhen the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE SUPER ON *.* FROM '';\n\nNext minimize administrator rights\n\nAssess the minimal set of Dynamic Permissions needed by a user to perform their duties.\n\nFor each user assign the appropriate Dynamic Permission and then revoke thatSUPER capability.\n\nFor example, if administrator 'u1'@'localhost' requires SUPER for binary log purging and system variable modification, these statements make the required changes to the account thus limiting rights to what is needed:\n\nGRANT BINLOG_ADMIN, SYSTEM_VARIABLES_ADMIN ON *.* TO 'u1'@'localhost';\nREVOKE SUPER ON *.* FROM 'u1'@'localhost';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SUPER';",
        "sql_expect": "\\'@ADMIN_USER@\\'@.+"
    },
    "custom_item_27": {
        "description": "5.5 Ensure 'SHUTDOWN' is Not Granted to Non-Administrative Users",
        "info": "The SHUTDOWN privilege simply enables use of the shutdown option to the mysqladmin command, which allows a user with the SHUTDOWN privilege the ability to shut down the MySQL server.\n\nRationale:\n\nThe SHUTDOWN privilege allows principals to shutdown MySQL. This may be leveraged by an attacker to negatively impact the availability of MySQL.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure.\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE SHUTDOWN ON *.* FROM '';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SHUTDOWN';",
        "sql_expect": "\\'@ADMIN_USER@\\'@.+"
    },
    "custom_item_28": {
        "description": "5.6 Ensure 'CREATE USER' is Not Granted to Non-Administrative Users",
        "info": "The CREATE USER privilege governs the right of a given user to add or remove users, change existing users' names, or revoke existing users' privileges.\n\nRationale:\n\nReducing the number of users granted the CREATE USER right minimizes the number of users able to add/drop users, alter existing users' names, and manipulate existing users' privileges.\n\nImpact:\n\nUsers that are denied the CREATE USER privilege will not only be unable to create a user, but they may be unable to drop a user, rename a user, or otherwise revoke a given user's privileges.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE CREATE USER ON *.* FROM '';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'CREATE USER';",
        "sql_expect": "\\'@ADMIN_USER@\\'@.+"
    },
    "custom_item_29": {
        "description": "5.7 Ensure 'GRANT OPTION' is Not Granted to Non-Administrative Users",
        "info": "The GRANT OPTION privilege exists in different contexts (mysql.user, mysql.db) for the purpose of governing the ability of a privileged user to manipulate the privileges of other users.\n\nRationale:\n\nThe GRANT OPTION privilege allows a principal to grant other principals additional privileges. This may be used by an attacker to compromise MySQL.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result sets of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE GRANT OPTION ON *.* FROM;",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'GRANT OPTION';",
        "sql_expect": "\\'@ADMIN_USER@\\'@.+"
    },
    "custom_item_30": {
        "description": "5.8 Ensure 'REPLICATION SLAVE' is Not Granted to Non-Administrative Users",
        "info": "The REPLICATION SLAVE privilege governs whether a given user (in the context of the source server) can request updates that have been made on the source server.\n\nRationale:\n\nThe REPLICATION SLAVE privilege allows a principal to fetch binlog files containing all data changing statements and/or changes in table data from the master. This may be used by an attacker to read/fetch sensitive data from MySQL.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-replica users found in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-replica user):\n\nREVOKE REPLICATION SLAVE ON *.* FROM;\n\nUse the REVOKE statement to remove the REPLICATION SLAVE privilege from users who shouldn't have it.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'REPLICATION SLAVE';",
        "sql_expect": "\\'@ADMIN_USER@\\'@.+"
    },
    "custom_item_31": {
        "description": "5.9 Ensure DML/DDL Grants Are Limited to Specific Databases and Users",
        "info": "DML/DDL includes the set of privileges used to modify or create data structures. This includes INSERT, SELECT, UPDATE, DELETE, DROP, CREATE, and ALTER privileges.\n\nRationale:\n\nINSERT, SELECT, UPDATE, DELETE, DROP, CREATE, and ALTER are powerful privileges in any database. Such privileges should be limited only to those users requiring such rights. By limiting the users with these rights and ensuring that they are limited to specific databases, the attack surface of the database is reduced.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the unauthorized users, hosts, and databases returned in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the unauthorized user,with host name, andwith the database name):\n\nREVOKE SELECT ON.FROM;\nREVOKE INSERT ON.FROM;\nREVOKE UPDATE ON.FROM;\nREVOKE DELETE ON.FROM;\nREVOKE CREATE ON.FROM;\nREVOKE DROP ON.FROM;\nREVOKE ALTER ON.FROM;",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT User,Host,Db FROM mysql.db WHERE Select_priv='Y' OR Insert_priv='Y' OR Update_priv='Y' OR Delete_priv='Y' OR Create_priv='Y' OR Drop_priv='Y' OR Alter_priv='Y';",
        "sql_expect": "@ADMIN_USER@"
    },
    "custom_item_32": {
        "description": "6.1 Ensure 'log_error' Is Not Empty",
        "info": "The error log contains information about events such as mysqld starting and stopping, when a table needs to be checked or repaired, and, depending on the host operating system, stack traces when mysqld fails.\n\nRationale:\n\nEnabling error logging can increase the ability to detect malicious attempts against MySQL, and other critical messages. For example, if the error log is not enabled then a connection error could go unnoticed.\n\nWhen empty, MySQL will send log data to the console. Logging to the console is useful, but remember it is ephemeral. This is not recommended due to the fact that logging to console does not provide a means to force restricted access via permissions strictly to MySQL and dedicated MySQL audit accounts. This may compromise the confidentiality of the MySQL log data. Furthermore use caution if co-mingling log data from multiple sources as that can complicate log inspection. Additionally from a security auditing perspective, it's difficult and error prone to verify logging is correct.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf or my.ini).\n\nSet the log-error option to the path for the error log.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW variables LIKE 'log_error';",
        "sql_expect": "log_error"
    },
    "custom_item_33": {
        "description": "6.2 Ensure Log Files Are Stored on a Non-System Partition",
        "info": "MySQL log files can be set in the MySQL configuration to exist anywhere on the filesystem. It is common practice to ensure that the system filesystem is left uncluttered by application logs. System filesystems include the root (/), /var, or /usr.\n\nRationale:\n\nMoving the MySQL logs off the system partition will reduce the probability of denial of service via the exhaustion of available disk space to the operating system.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf)\n\nLocate the log-bin entry and set it to a file not on root (/), /var, or /usr",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "show GLOBAL VARIABLES WHERE Variable_Name = 'log_bin_basename' AND Value LIKE 'C:%' OR Variable_Name = 'log_bin_basename' AND Value = '/' OR Variable_Name = 'log_bin_basename' AND Value = '/var%' OR Variable_Name = 'log_bin_basename' AND Value = '/usr%';"
    },
    "custom_item_34": {
        "description": "7.1 Ensure 'old_passwords' Is Not Set to '1' - ON",
        "info": "This variable controls the password hashing method used by the PASSWORD() function and for the IDENTIFIED BY clause of the CREATE USER and GRANT statements. Before 5.6.6, the value can be 0, or 1. As of 5.6.6, the value can be one of the following:\n\n0 - authenticate with the mysql_native_password plugin\n\n1 - authenticate with the mysql_old_password plugin\n\n2 - authenticate with the sha256_password plugin\n\nRationale:\n\nWhen old_passwords is set to 1 the PASSWORD() function will create password hashes with a very weak hashing algorithm which might be easy to break if captured by an attacker.",
        "solution": "Configure mysql to leverage the mysql_native_password or sha256_password plugin. For more information, see:\n\nhttps://dev.mysql.com/doc/refman/5.6/en/password-hashing.html\n\nhttps://dev.mysql.com/doc/refman/5.6/en/sha256-pluggable-authentication.html\n\nDefault Value:\n\n0",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES WHERE Variable_name = 'old_passwords';",
        "sql_expect": "old_passwords"
    },
    "custom_item_35": {
        "description": "7.2 Ensure 'secure_auth' is Set to 'ON' - ON",
        "info": "This option dictates whether the server will deny connections by clients that attempt to use accounts that have their password stored in the mysql_old_password format.\n\nRationale:\n\nEnabling this option will prevent all use of passwords employing the old format (and hence insecure communication over the network).\n\nImpact:\n\nAccounts having credentials stored using the old password format will be unable to login. Execute the following command to identify accounts that will be impacted by implementing this setting:\n\nSELECT User,Host FROM mysql.user WHERE plugin='mysql_old_password';",
        "solution": "Add the following line to [mysqld] portions of the MySQL option file to establish the recommended state:\n\nsecure_auth=ON\n\nDefault Value:\n\nPrior to MySQL 5.6.5, this option was disabled by default. As of MySQL 5.6.5, it is enabled by default.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES WHERE Variable_name = 'secure_auth';",
        "sql_expect": "secure_auth"
    },
    "custom_item_36": {
        "description": "7.4 Ensure 'sql_mode' Contains 'NO_AUTO_CREATE_USER' - '@@global.sql_mode'",
        "info": "NO_AUTO_CREATE_USER is an option for sql_mode that prevents a GRANT statement from automatically creating a user when authentication information is not provided.\n\nRationale:\n\nBlank passwords negate the benefits provided by authentication mechanisms. Without this setting an administrative user might accidentally create a user without a password.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf)\n\nFind the sql_mode setting in the [mysqld] area\n\nAdd the NO_AUTO_CREATE_USER to the sql_mode setting\n\nDefault Value:\n\nNO_ENGINE_SUBSTITUTION",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "select @@global.sql_mode ;",
        "sql_expect": "NO_AUTO_CREATE_USER"
    },
    "custom_item_37": {
        "description": "7.4 Ensure 'sql_mode' Contains 'NO_AUTO_CREATE_USER' - '@@session.sql_mode'",
        "info": "NO_AUTO_CREATE_USER is an option for sql_mode that prevents a GRANT statement from automatically creating a user when authentication information is not provided.\n\nRationale:\n\nBlank passwords negate the benefits provided by authentication mechanisms. Without this setting an administrative user might accidentally create a user without a password.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf)\n\nFind the sql_mode setting in the [mysqld] area\n\nAdd the NO_AUTO_CREATE_USER to the sql_mode setting\n\nDefault Value:\n\nNO_ENGINE_SUBSTITUTION",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "select @@session.sql_mode ;",
        "sql_expect": "NO_AUTO_CREATE_USER"
    },
    "custom_item_38": {
        "description": "7.5 Ensure Passwords are Set for All MySQL Accounts",
        "info": "Blank passwords allow a user to login without using a password.\n\nRationale:\n\nWithout a password only knowing the username and the list of allowed hosts will allow someone to connect to the server and assume the identity of the user. This, in effect, bypasses authentication mechanisms.",
        "solution": "For each row returned from the audit procedure, set a password for the given user using the following statement (as an example):\n\nSET PASSWORD FOR@'' = PASSWORD('')\n\nNote: Replace,, andwith appropriate values.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT User,host FROM mysql.user WHERE (plugin IN('mysql_native_password', 'mysql_old_password') AND (LENGTH(Password) = 0 OR Password IS NULL)) OR (plugin='sha256_password' AND LENGTH(authentication_string) = 0);"
    },
    "custom_item_39": {
        "description": "7.6 Ensure Password Complexity Policies are in Place - 'validate_password_length'",
        "info": "Password complexity includes password characteristics such as length, case, numerical, and character sets.\n\nRationale:\n\nComplex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed.\n\nImpact:\n\nRemediation for this recommendation requires a server restart.",
        "solution": "Add to the global configuration:\n\nplugin-load=validate_password.so\nvalidate-password=FORCE_PLUS_PERMANENT\nvalidate_password_length=14\nvalidate_password_dictionary_file=validate_password_policy=STRONG\n\nOptionally set one or more of these - ensuring complexity is not overly onerous\n\nvalidate_password_mixed_case_count=1\nvalidate_password_number_count=1\nvalidate_password_special_char_count=1\n\nAnd change passwords for users which have passwords which are identical to their username.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_length'",
        "sql_expect": "validate_password_length"
    },
    "custom_item_40": {
        "description": "7.6 Ensure Password Complexity Policies are in Place - 'validate_password_mixed_case_count'",
        "info": "Password complexity includes password characteristics such as length, case, numerical, and character sets.\n\nRationale:\n\nComplex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed.\n\nImpact:\n\nRemediation for this recommendation requires a server restart.",
        "solution": "Add to the global configuration:\n\nplugin-load=validate_password.so\nvalidate-password=FORCE_PLUS_PERMANENT\nvalidate_password_length=14\nvalidate_password_dictionary_file=validate_password_policy=STRONG\n\nOptionally set one or more of these - ensuring complexity is not overly onerous\n\nvalidate_password_mixed_case_count=1\nvalidate_password_number_count=1\nvalidate_password_special_char_count=1\n\nAnd change passwords for users which have passwords which are identical to their username.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_mixed_case_count'",
        "sql_expect": "validate_password_mixed_case_count"
    },
    "custom_item_41": {
        "description": "7.6 Ensure Password Complexity Policies are in Place - 'validate_password_number_count'",
        "info": "Password complexity includes password characteristics such as length, case, numerical, and character sets.\n\nRationale:\n\nComplex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed.\n\nImpact:\n\nRemediation for this recommendation requires a server restart.",
        "solution": "Add to the global configuration:\n\nplugin-load=validate_password.so\nvalidate-password=FORCE_PLUS_PERMANENT\nvalidate_password_length=14\nvalidate_password_dictionary_file=validate_password_policy=STRONG\n\nOptionally set one or more of these - ensuring complexity is not overly onerous\n\nvalidate_password_mixed_case_count=1\nvalidate_password_number_count=1\nvalidate_password_special_char_count=1\n\nAnd change passwords for users which have passwords which are identical to their username.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_number_count'",
        "sql_expect": "validate_password_number_count"
    },
    "custom_item_42": {
        "description": "7.6 Ensure Password Complexity Policies are in Place - 'validate_password_special_char_count'",
        "info": "Password complexity includes password characteristics such as length, case, numerical, and character sets.\n\nRationale:\n\nComplex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed.\n\nImpact:\n\nRemediation for this recommendation requires a server restart.",
        "solution": "Add to the global configuration:\n\nplugin-load=validate_password.so\nvalidate-password=FORCE_PLUS_PERMANENT\nvalidate_password_length=14\nvalidate_password_dictionary_file=validate_password_policy=STRONG\n\nOptionally set one or more of these - ensuring complexity is not overly onerous\n\nvalidate_password_mixed_case_count=1\nvalidate_password_number_count=1\nvalidate_password_special_char_count=1\n\nAnd change passwords for users which have passwords which are identical to their username.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_special_char_count'",
        "sql_expect": "validate_password_special_char_count"
    },
    "custom_item_43": {
        "description": "7.6 Ensure Password Complexity Policies are in Place - 'validate_password_policy'",
        "info": "Password complexity includes password characteristics such as length, case, numerical, and character sets.\n\nRationale:\n\nComplex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed.\n\nImpact:\n\nRemediation for this recommendation requires a server restart.",
        "solution": "Add to the global configuration:\n\nplugin-load=validate_password.so\nvalidate-password=FORCE_PLUS_PERMANENT\nvalidate_password_length=14\nvalidate_password_dictionary_file=validate_password_policy=STRONG\n\nOptionally set one or more of these - ensuring complexity is not overly onerous\n\nvalidate_password_mixed_case_count=1\nvalidate_password_number_count=1\nvalidate_password_special_char_count=1\n\nAnd change passwords for users which have passwords which are identical to their username.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_policy'",
        "sql_expect": "validate_password_policy"
    },
    "custom_item_44": {
        "description": "7.6 Ensure Password Complexity Policies are in Place - 'validate_password_dictionary_file'",
        "info": "Password complexity includes password characteristics such as length, case, numerical, and character sets.\n\nRationale:\n\nComplex passwords help mitigate dictionary, brute forcing, and other password attacks. This recommendation prevents users from choosing weak passwords which can easily be guessed.\n\nImpact:\n\nRemediation for this recommendation requires a server restart.",
        "solution": "Add to the global configuration:\n\nplugin-load=validate_password.so\nvalidate-password=FORCE_PLUS_PERMANENT\nvalidate_password_length=14\nvalidate_password_dictionary_file=validate_password_policy=STRONG\n\nOptionally set one or more of these - ensuring complexity is not overly onerous\n\nvalidate_password_mixed_case_count=1\nvalidate_password_number_count=1\nvalidate_password_special_char_count=1\n\nAnd change passwords for users which have passwords which are identical to their username.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_dictionary_file'",
        "sql_expect": "validate_password_dictionary_file"
    },
    "custom_item_45": {
        "description": "7.7 Ensure No Users Have Wildcard Hostnames",
        "info": "MySQL can make use of host wildcards when granting permissions to users on specific databases. For example, you may grant a given privilege to ''@'%'.\n\nRationale:\n\nAvoiding the use of wildcards within hostnames helps control the specific locations from which a given user may connect to and interact with the database.",
        "solution": "Perform the following actions to remediate this setting:\n\nEnumerate all users returned after running the audit procedure.\n\nEither ALTER the user's host to be specific or DROP the user.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "select user,host from mysql.user where host = '%' ;"
    },
    "custom_item_46": {
        "description": "7.8 Ensure No Anonymous Accounts Exist",
        "info": "Anonymous accounts are users with empty usernames (''). Anonymous accounts have no passwords, so anyone can use them to connect to the MySQL server.\n\nRationale:\n\nRemoving anonymous accounts will help ensure that only identified and trusted principals are capable of interacting with MySQL.\n\nImpact:\n\nAny applications relying on anonymous database access will be adversely affected by this change.",
        "solution": "Perform the following actions to remediate this setting:\n\nEnumerate the anonymous users returned from executing the audit procedure.\n\nFor each anonymous user, DROP or assign them a name.\n\nNote: As an alternative, you may execute the mysql_secure_installation utility.",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16.6,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT user,host FROM mysql.user WHERE user = '';"
    },
    "custom_item_47": {
        "description": "8.1 Ensure 'have_ssl' Is Set to 'YES'",
        "info": "All network traffic must use SSL/TLS when traveling over untrusted networks.\n\nRationale:\n\nEnabling Secure Sockets Layer (SSL) will allow clients to encrypt network traffic and verify the identity of the server. The SSL/TLS-protected MySQL protocol helps to prevent eavesdropping and man-in-the-middle attacks.\n\nImpact:\n\nEnabling SSL will allow clients to encrypt network traffic and verify the identity of the server. This could have impact on network traffic inspection.",
        "solution": "Follow the procedures as documented in the MySQL 5.6 Reference Manual to setup SSL.\n\nDefault Value:\n\nDISABLED",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SHOW variables WHERE variable_name IN ('have_ssl', 'have_openssl');",
        "sql_expect": "(have_ssl|have_openssl)"
    },
    "custom_item_48": {
        "description": "8.2 Ensure 'ssl_type' Is Set to 'ANY', 'X509', or 'SPECIFIED' for All Remote Users",
        "info": "All network traffic must use SSL/TLS when traveling over untrusted networks.\n\nSSL/TLS should be enforced on a per-user basis for users which enter the system through the network.\n\nRationale:\n\nThe SSL/TLS-protected MySQL protocol helps to prevent eavesdropping and man-in-the-middle attacks.\n\nImpact:\n\nWhen SSL/TLS is enforced then clients which do not use SSL will not be able to connect. If the server is not configured for SSL/TLS then accounts for which SSL/TLS is mandatory will not be able to connect.",
        "solution": "Use the GRANT statement to require the use of SSL:\n\nGRANT USAGE ON *.* TO 'my_user'@'app1.example.com' REQUIRE X509;\n\nNote: REQUIRE SSL only enforces SSL. There are additional options REQUIRE ISSUER, REQUIRE SUBJECT which can be used to further restrict the connection.\n\nDefault Value:\n\nNot enforced (ssl_type is empty)",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT user, host, ssl_type FROM mysql.user WHERE NOT HOST IN ('::1', '127.0.0.1', 'localhost');",
        "sql_expect": ".+"
    },
    "custom_item_49": {
        "description": "max_connections is set",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_connections';",
        "sql_expect": "max_connections"
    },
    "custom_item_50": {
        "description": "8.3 Set Maximum Connection Limits for Server and per User",
        "info": "Limiting concurrent connections to a MySQL server can be used to reduce risk of Denial of Service (DoS) attacks performed by exhausting connection resources.\n\nRationale:\n\nLimiting the number of concurrent sessions at the server and per user level helps to reduce the risk of DoS attacks. MySQL provides mechanisms to limit the number of simultaneous connections that can be made at the server level or by any given account.",
        "solution": "Connect to the MySQL Database as an administrator.\n\nFor example, to set the global default per user to 50 run the command:\n\nSET PERSIST max_user_connections=50;\n\nTo control the maximum number of clients the server permits to connect simultaneously, set the max_connections system variable:\n\nSET PERSIST max_connections=1000;\n\nAdditionally, this max user connections can be set per user as well as for a given period of time period using CREATE or GRANT.\n\nFor example:\n\nGRANT ALL ON *.* TO 'fred'@'localhost'\n    WITH MAX_CONNECTIONS_PER_HOUR 5\n         MAX_USER_CONNECTIONS 2;\n\nDefault Value:\n\nThe default value of max_connections is 151, max_user_connections is 0 (unlimited, thus limited by max_connections).",
        "reference": "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1M,NIAv2|NS49",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_user_connections';",
        "sql_expect": "max_user_connections"
    },
    "custom_item_51": {
        "description": "9.2 Ensure 'MASTER_SSL_VERIFY_SERVER_CERT' Is Set to 'YES' or '1'",
        "info": "In the MySQL SLAVE context the setting MASTER_SSL_VERIFY_SERVER_CERT indicates whether the SLAVE should verify the MASTER's certificate. This configuration item may be set to Yes or No, and unless SSL has been enabled on the SLAVE, the value will be ignored.\n\nRationale:\n\nWhen SSL is in use certificate verification is important to authenticate the party to which a connection is being made. In this case, the SLAVE (client) should verify the MASTER's (server's) certificate to authenticate the MASTER prior to continuing the connection.\n\nImpact:\n\nWhen using CHANGE MASTER to, be aware of the following:\n\nSLAVE processes need to be stopped prior to executing CHANGE MASTER to.\n\nUse of CHANGE MASTER to starts new relay logs without keeping the old ones unless explicitly told to keep them.\n\nWhen CHANGE MASTER to is invoked, some information is dumped to the error log (previous values for MASTER_HOST, MASTER_PORT, MASTER_LOG_FILE, and MASTER_LOG_POS).\n\nInvoking CHANGE MASTER to will implicitly commit any ongoing transactions in the session where the CHANGE MASTER to was run, but not all ongoing transactions on the database.",
        "solution": "To remediate this setting you must use the CHANGE MASTER to command.\n\nSTOP SLAVE; -- required if replication was already running\nCHANGE MASTER to MASTER_SSL_VERIFY_SERVER_CERT=1;\nSTART SLAVE; -- required if you want to restart replication",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|13.9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "select ssl_verify_server_cert from mysql.slave_master_info;",
        "sql_expect": "1"
    },
    "custom_item_52": {
        "description": "9.4 Ensure 'super_priv' Is Not Set to 'Y' for Replication Users",
        "info": "The SUPER privilege found in the mysql.user table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.\n\nRationale:\n\nThe SUPER privilege allows principals to perform many actions, including view and terminate currently executing MySQL statements (including statements used to manage passwords). This privilege also provides the ability to configure MySQL, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.\n\nImpact:\n\nWhen the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options.",
        "solution": "Execute the following steps to remediate this setting:\n\nEnumerate the replication users found in the result set of the audit procedure\n\nFor each replication user, issue the following SQL statement (replace repl with your replication user's name):\n\nREVOKE SUPER ON *.* FROM 'repl';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "select user, host from mysql.user where user='repl' and Super_priv = 'Y';"
    },
    "custom_item_53": {
        "description": "9.5 Ensure No Replication Users Have Wildcard Hostnames",
        "info": "MySQL can make use of host wildcards when granting permissions to users on specific databases. For example, you may grant a given privilege to ''@'%'.\n\nRationale:\n\nAvoiding the use of wildcards within hostnames helps control the specific locations from which a given user may connect to and interact with the database.",
        "solution": "Perform the following actions to remediate this setting:\n\nEnumerate all users returned after running the audit procedure\n\nEither ALTER the user's host to be specific or DROP the user",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|14.6,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/3859",
        "sql_request": "SELECT user, host FROM mysql.user WHERE user='repl' AND host = '%';"
    }
}