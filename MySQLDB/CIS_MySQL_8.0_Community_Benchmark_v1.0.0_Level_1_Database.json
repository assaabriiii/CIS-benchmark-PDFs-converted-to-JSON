{
    "custom_item_1": {
        "description": "MySQL 8.0 is installed",
        "sql_request": "show variables like 'version' ;",
        "sql_expect": "version"
    },
    "custom_item_2": {
        "description": "MySQL 8.0 Community Edition is installed",
        "sql_request": "show variables like 'license' ;",
        "sql_expect": "license"
    },
    "custom_item_3": {
        "description": "1.1 Place Databases on Non-System Partitions",
        "info": "It is generally accepted that host operating systems should include different filesystem partitions for different purposes. One set of filesystems is typically called system partitions, and these are generally reserved for host system/application operation. The other set of filesystems is typically called 'non-system partitions', and such locations are generally reserved for storing data.\n\nRationale:\n\nMoving the database off the system partition will reduce the probability of denial of service caused by exhaustion of available disk space to the operating system.\n\nImpact:\n\nMoving database files and directories to a non-system partition may be difficult depending on whether there was only a single partition when the operating system was set up and whether there are additional non-system partitions available.",
        "solution": "Perform the following steps to remediate this setting for the datadir:\n\nBackup the database.\n\nChoose a non-system partition new location for MySQL data.\n\nStop mysqld using a command like: service mysql stop.\n\nCopy the data using a command like: cp -rp.\n\nSet the datadir location to the new location in the MySQL configuration file.\n\nStart mysqld using a command like: service mysql start.\nNote: On some Linux distributions you may need to additionally modify apparmor settings. For example, on a Ubuntu 14.04.1 system edit the file /etc/apparmor.d/usr.sbin.mysqld so that the datadir access is appropriate. The original might look like this:\n\n# Allow data dir access\n/var/lib/mysql/ r,\n/var/lib/mysql/** rwk,\n\nAlter those two paths to be the new location you chose above. For example, if that new location were /media/mysql, then the /etc/apparmor.d/usr.sbin.mysqld file should include something like this:\n\n# Allow data dir access\n/media/mysql/ r,\n/media/mysql/** rwk,\n\nDefault Value:\n\nNot Applicable.",
        "reference": "800-53|SC-3,800-53r5|SC-3,CSCv7|2.10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-3,ITSG-33|SC-3a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.3.1,NESA|T4.3.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'datadir' ;",
        "sql_expect": "datadir"
    },
    "custom_item_4": {
        "description": "2.5 Do Not Reuse Usernames",
        "info": "Database user accounts should not be reused for multiple applications or users.\n\nRationale:\n\nUtilizing unique database accounts across applications will reduce the impact of a compromised MySQL account. If a user is reused, then a compromise of this user will compromise multiple parts of the system and/or application.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Add/Remove users so that each user is only used for one specific purpose.",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|4.3,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1M,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT host, user, plugin, IF(plugin = 'mysql_native_password', 'WEAK SHA1', 'STRONG SHA2') AS HASHTYPE FROM mysql.user WHERE user NOT IN ('mysql.infoschema', 'mysql.session', 'mysql.sys') AND plugin NOT LIKE 'auth%' AND plugin <> 'mysql_no_login' AND LENGTH(authentication_string) > 0 ORDER BY plugin;",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_5": {
        "description": "2.7 Ensure 'password_lifetime' is Less Than or Equal to '365'",
        "info": "Password expiration provides users with a unique time bounded password lifetime.\n\nRationale:\n\nAllows additional security factors pertinent to a specific user to provide further password security; predetermined by varying security needs and usability requirements in a system or organization.",
        "solution": "To configure the global password lifetime to 365 by executing the following command:\n\nset persist default_password_lifetime = 365;\n\nAlternatively, configure the password lifetime for each user returned by the audit procedure by executing the following command:\n\nALTER USER ''@'' PASSWORD EXPIRE INTERVAL 365 DAY;\n\nDefault Value:\n\nNULL",
        "reference": "800-171|3.5.2,800-53|IA-5(1)(d),800-53r5|IA-5(1)(d),CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(d),LEVEL|1A,NESA|T5.2.3,NIAv2|AM20,NIAv2|AM21,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables where VARIABLE_NAME like 'default_password_lifetime';",
        "sql_expect": "default_password_lifetime"
    },
    "custom_item_6": {
        "description": "password_history",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables where VARIABLE_NAME in ('password_history');",
        "sql_expect": "password_history"
    },
    "custom_item_7": {
        "description": "password_reuse_interval",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables where VARIABLE_NAME in ('password_reuse_interval');",
        "sql_expect": "password_reuse_interval"
    },
    "custom_item_8": {
        "description": "CONNECTION_CONTROL",
        "sql_request": "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME LIKE ('CONNECTION_CONTROL');",
        "sql_expect": "CONNECTION_CONTROL"
    },
    "custom_item_9": {
        "description": "CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS",
        "sql_request": "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME LIKE ('CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS');",
        "sql_expect": "CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS"
    },
    "custom_item_10": {
        "description": "connection_control_failed_connections_threshold",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_failed_connections_threshold';",
        "sql_expect": "connection_control_failed_connections_threshold"
    },
    "custom_item_11": {
        "description": "connection_control_min_connection_delay",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_min_connection_delay';",
        "sql_expect": "connection_control_min_connection_delay"
    },
    "custom_item_12": {
        "description": "connection_control_max_connection_delay",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'connection_control_max_connection_delay';",
        "sql_expect": "connection_control_max_connection_delay"
    },
    "custom_item_13": {
        "description": "3.1 Ensure 'datadir' Has Appropriate Permissions",
        "info": "The data directory is the location of the MySQL databases.\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL database. If someone other than the MySQL user is allowed to read files from the data directory, it may be possible to read data from the mysql.user table which contains passwords. Additionally, the ability to create files can lead to denial of service, or might otherwise allow someone to gain access to specific data by manually creating a file with a view definition.",
        "solution": "Execute the following commands at a terminal prompt:\n\nchmod 750chown mysql:mysql",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'datadir';",
        "sql_expect": ".+"
    },
    "custom_item_14": {
        "description": "3.2 Ensure 'log_bin_basename' Files Have Appropriate Permissions",
        "info": "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log (which can be encrypted), error log, slow query log, relay log, general log, and in the enterprise edition, the audit log (which can be encrypted). Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user. Additionally, using secure key management and at rest MySQL encryption can further protect data from OS users.\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs.\n\nImpact:\n\nChanging the permissions and ownership of the relay logs and binary log files might have impact on external tools.\n\nIf the permissions on the relay logs and binary log files are accidentally changed to exclude the user account which is used to run the MySQL service, then this might break replication.\n\nThe binary log file can be used for point-in-time recovery so this can also affect backup, restore, and disaster recovery procedures.",
        "solution": "Execute the following command for each log file location requiring corrected permissions and ownership:\n\nchmod 660chown mysql:mysql",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'log_bin_basename';",
        "sql_expect": ".+"
    },
    "custom_item_15": {
        "description": "3.3 Ensure 'log_error' Has Appropriate Permissions",
        "info": "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log (which can be encrypted), error log, slow query log, relay log, general log, and in the enterprise edition, the audit log (which can be encrypted). Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user. Additionally, using secure key management and at rest MySQL encryption can further protect data from OS users.\n\nMuch of the information about the state of MySQL exists in MySQL, the MySQL performance_schema or informations_schema. In cases where the information you need is within a running MySQL, use these methods as they are more secure as do not require OS login and access.\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs.\n\nImpact:\n\nChanging the permissions of the error log files might have impact on monitoring tools which use an error log file adapter.",
        "solution": "Execute the following command for each log file location requiring corrected permissions and ownership:\n\nchmod 600chown mysql:mysql",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'log_error';",
        "sql_expect": ".+"
    },
    "custom_item_16": {
        "description": "3.4 Ensure 'slow_query_log' Has Appropriate Permissions",
        "info": "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log (which can be encrypted), error log, slow query log, relay log, general log, and in the enterprise edition, the audit log (which can be encrypted). Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user. Additionally, using secure key management and at rest MySQL encryption can further protect data from OS users.\n\nMuch of the information about the state of MySQL exists in MySQL, the MySQL performance_schema or informations_schema. If you can get the information you need from within MySQL that is more secure as it does not require OS access. If you are not going to use log files it is best to first disable (don't enable) and remove any prior logs.\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs.\n\nImpact:\n\nChanging the permissions of the log files may impact monitoring tools which use a log file adapter. Also, the slow query log can be used for performance analysis by application developers.\n\nThe information about the performance exists in MySQL performance_schema or sys schema views. In cases where the information you need is within a running MySQL, disable the slow query log and instead use these methods as they are more secure and do not require OS login and access.",
        "solution": "Set slow query log to OFF (instead use SYS schema views or query Performance_Schema)\n\nSET PERSIST slow_query_log = OFF;\n\nIf slow query is enabled, execute the following command to correct permissions and ownership:\n\nchmod 660chown mysql:mysqlDefault Value:\n\nSlow query log is off by default.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'slow_query_log_file';",
        "sql_expect": ".+"
    },
    "custom_item_17": {
        "description": "3.5 Ensure 'relay_log_basename' Files Have Appropriate Permissions",
        "info": "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log (which can be encrypted), error log, slow query log, relay log (which can be encrypted), general log, and in the enterprise edition, the audit log (which can be encrypted). Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user. Additionally, using secure key management and at rest MySQL encryption can further protect data from OS users.\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs.\n\nImpact:\n\nIf the permissions on the relay logs and binary log files are accidentally changed to exclude the user account which is used to run the MySQL service, then this might break replication.\n\nThe binary log file can be used for point in time recovery so this can also affect backup, restore and disaster recovery procedures.",
        "solution": "Execute the following command for each log file location requiring corrected permissions and ownership:\n\nchmod 660chown mysql:mysqlDefault Value:+ '/' ++ '-relay-bin'",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'relay_log_basename';",
        "sql_expect": ".+"
    },
    "custom_item_18": {
        "description": "general_log_file",
        "sql_request": "select @@general_log"
    },
    "custom_item_19": {
        "description": "3.6 Ensure 'general_log_file' Has Appropriate Permissions",
        "info": "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log (which can be encrypted), error log, slow query log, relay log (which can be encrypted), general log, and in the enterprise edition, the audit log (which can be encrypted). Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user. Additionally, using secure key management and at rest MySQL encryption can further protect data from OS users.\n\nMuch of the information about the state of MySQL exists in MySQL, the MySQL performance_schema or informations_schema. If you can get the information you need from within MySQL that is more secure as it does not require OS access. If you are not going to use log files it is best to first disable (don't enable) and remove any prior logs.\n\nRationale:\n\nLimiting the accessibility, or existence, of these log files will protect the confidentiality, integrity, and availability of the MySQL logs.\n\nImpact:\n\nChanging the permissions of the general log files may impact monitoring tools which use a log file adapter.",
        "solution": "If you can, use MySQL SYS, PERFORMANCE_SCHEMA, or MySQL Auditing as these are more secure options.\n\nBy default the general_log is disabled (0). Its most secure to disable the general_log.\n\nTo disable the general_log_file:\n\nSET PERSIST @@GENERAL_LOG=0;\n\nIf you must use general_log then assure the permissions are correct. Execute the following command for each log file location requiring corrected permissions and ownership:\n\nchmod 600chown mysql:mysqlDefault Value:\n\nThe general log file is off by default.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'general_log_file';",
        "sql_expect": ".+"
    },
    "custom_item_20": {
        "description": "3.6 Ensure 'general_log_file' Has Appropriate Permissions",
        "info": "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log (which can be encrypted), error log, slow query log, relay log (which can be encrypted), general log, and in the enterprise edition, the audit log (which can be encrypted). Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user. Additionally, using secure key management and at rest MySQL encryption can further protect data from OS users.\n\nMuch of the information about the state of MySQL exists in MySQL, the MySQL performance_schema or informations_schema. If you can get the information you need from within MySQL that is more secure as it does not require OS access. If you are not going to use log files it is best to first disable (don't enable) and remove any prior logs.\n\nRationale:\n\nLimiting the accessibility, or existence, of these log files will protect the confidentiality, integrity, and availability of the MySQL logs.\n\nImpact:\n\nChanging the permissions of the general log files may impact monitoring tools which use a log file adapter.",
        "solution": "If you can, use MySQL SYS, PERFORMANCE_SCHEMA, or MySQL Auditing as these are more secure options.\n\nBy default the general_log is disabled (0). Its most secure to disable the general_log.\n\nTo disable the general_log_file:\n\nSET PERSIST @@GENERAL_LOG=0;\n\nIf you must use general_log then assure the permissions are correct. Execute the following command for each log file location requiring corrected permissions and ownership:\n\nchmod 600chown mysql:mysqlDefault Value:\n\nThe general log file is off by default.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'general_log_file';",
        "sql_expect": "general_log_file"
    },
    "custom_item_21": {
        "description": "3.7 Ensure SSL Key Files Have Appropriate Permissions",
        "info": "When configured to use SSL/TLS, MySQL relies on Secure Sockets Layer (SSL) key files, which are stored on the host's filesystem. These SSL key files are subject to the host's permissions and ownership structure.\n\nMySQL 8.0 provides ways to create the SSL certificate, SSL key files and RSA key-pair files required to support encrypted connections using SSL and secure password exchange using RSA over unencrypted connections, if those files are missing the server will attempt to autogenerate these files at startup if compiled with OpenSSL.\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL database and the communication with the client.\n\nIf the contents of the SSL key file are known to an attacker, he or she might impersonate the server. This can be used for a man-in-the-middle attack.\n\nDepending on the SSL cipher suite, the key might also be used to decipher previously captured network traffic.\n\nImpact:\n\nIf the permissions or ownership for the SSL key file are configured incorrectly, this can cause SSL to be disabled when MySQL is restarted or can cause MySQL not to start at all.\n\nIf other applications are using the same key pair, then changing the permissions or ownership of the SSL key file will affect this application. If this were to occur a new key pair must be generated for MySQL.",
        "solution": "Execute the following commands at a terminal prompt to remediate these settings using the Value from the audit procedure:\n\nchown mysql:mysqlchmod 400",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT * FROM performance_schema.global_variables WHERE REGEXP_LIKE(VARIABLE_NAME,'^.*ssl_(ca|capath|cert|crl|crlpath|key)$') AND VARIABLE_VALUE <> '';",
        "sql_expect": ".+"
    },
    "custom_item_22": {
        "description": "3.8 Ensure Plugin Directory Has Appropriate Permissions",
        "info": "The plugin directory is the location of the MySQL plugins. Plugins are storage engines or user defined functions (UDFs).\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL database. If someone can modify plugins then these plugins might be loaded when the server starts and the code will get executed.\n\nImpact:\n\nUsers other than the MySQL user will no longer be able to update and add/remove plugins unless they're able to switch to the MySQL user.",
        "solution": "To remediate these settings, execute the following commands at a terminal prompt using the plugin_dir Value from the audit procedure. MySQL server must not be allowed to write to this location.\n\nchmod 550(or use 554)\nchown mysql:mysql",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'plugin_dir';",
        "sql_expect": ".+"
    },
    "custom_item_23": {
        "description": "3.9 Ensure 'audit_log_file' Has Appropriate Permissions",
        "info": "MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, audit log and general log. Because these are files on the host operating system, they are subject to the permissions and ownership structure provided by the host and may be accessible by users other than the MySQL user.\n\nRationale:\n\nLimiting the accessibility of these objects will protect the confidentiality, integrity, and availability of the MySQL logs.\n\nImpact:\n\nChanging the permissions and ownership of the audit log file may have an impact on who can access and edit the audit log. Such changes can affect monitoring tools which maybe using a log file adapter or scripted alternatives. Also, the audit log may be used for alerting by infrastructure teams which can affect real-time audit capability.",
        "solution": "Execute the following commands for the audit_log_file discovered in the audit procedure:\n\nchmod 660chown mysql:mysql",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show global variables where variable_name='audit_log_file';",
        "sql_expect": ".+"
    },
    "custom_item_24": {
        "description": "4.1 Ensure the Latest Security Patches are Applied",
        "info": "Periodically, updates to MySQL server are released to resolve bugs, mitigate vulnerabilities, and provide new features. It is recommended that MySQL installations are up to date with the latest security updates.\n\n    Rationale:\n\n    Maintaining currency with MySQL patches will help reduce risk associated with known vulnerabilities present in the MySQL server.\n\n    Without the latest security patches MySQL might have known vulnerabilities which could be used by an attacker to gain access.\n\n    Impact:\n\n    To update the MySQL server a restart is required.",
        "solution": "Install the latest patches for your version or upgrade to the latest version.",
        "reference": "800-171|3.14.1,800-53|SI-2,800-53r5|SI-2,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,LEVEL|1NS,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'version' ;",
        "sql_expect": "version"
    },
    "custom_item_25": {
        "description": "4.2 Ensure Example or Test Databases are Not Installed on Production Servers",
        "info": "The default MySQL installation does not contain any example or test databases. However, it is a good idea to review for common example databases and ensure they have been removed from production systems.\n\nRationale:\n\nDropping example databases will reduce the attack surface of the MySQL server.",
        "solution": "Execute the following SQL statement to drop an example database:\n\nDROP DATABASE;\n\nDefault Value:\n\nBy default, MySQL 8.0 does not contain any example or test databases.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": " SELECT * FROM information_schema.SCHEMATA where SCHEMA_NAME not in ('mysql','information_schema', 'sys', 'performance_schema');"
    },
    "custom_item_26": {
        "description": "4.4 Harden Usage for 'local_infile' on MySQL Clients",
        "info": "The local_infile parameter dictates whether files located on the MySQL client's computer can be loaded or selected via LOAD DATA INFILE or SELECT local_file.\n\nRationale:\n\nFor MySQL client programs and connectors prior to 8.0.21, disabling local_infile reduces an attacker's ability to read sensitive files off the affected server via an SQL injection vulnerability.\n\nImpact:\n\nDisabling local_infile will impact the functionality of solutions that rely on it.",
        "solution": "Upgrade all MySQL clients and connectors to 8.0.21 or higher.\n\nIn the case where using local_infile is needed, the following changes further harden security:\n\nOn client side, secure by:\n\nLimiting the location from where data can be read using --load-data-local-dir.\n\nmysql --local-infile=0 --load-data-local-dir=/my/local/data\n\nAdding TLS connection to assure server identity by requiring verification.\n\nmysql --local-infile=0 --load-data-local-dir=/my/local/data --ssl-mode=VERIFY_IDENTITY\n\nIf local_infile is not in use or if clients are not upgraded - add the following line to the [mysqld] section of the MySQL configuration file and restart the MySQL service:\n\nlocal-infile=0\n\nDefault Value:\n\n0 (OFF)",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|4.7,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'local_infile';",
        "sql_expect": "local_infile"
    },
    "custom_item_27": {
        "description": "4.6 Ensure Symbolic Links are Disabled",
        "info": "The symbolic-links and skip-symbolic-links options for MySQL determine whether symbolic link support is available. When use of symbolic links is enabled, they have different effects depending on the host platform. When symbolic links are disabled, then symbolic links stored in files or entries in tables are not used by the database.\n\nRationale:\n\nPrevents symbolic links from being used for database files. This is especially important when MySQL is executing as root as arbitrary files may be overwritten. The symbolic-links option might allow someone to direct actions by the MySQL server to other files and/or directories.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf)\n\nLocate skip-symbolic-links in the configuration\n\nSet the skip-symbolic-links to YES\n\nNote: If skip-symbolic-links does not exist, add it to the configuration file in the mysqld section.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|PL-8,800-53|SA-8,800-53r5|PL-8,800-53r5|SA-8,CSCv7|13,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-2,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show variables like 'have_symlink';",
        "sql_expect": "have_symlink"
    },
    "custom_item_28": {
        "description": "4.7 Ensure the 'daemon_memcached' Plugin is Disabled",
        "info": "The InnoDB memcached Plugin allows users to access data stored in InnoDB with the memcached protocol.\n\nRationale:\n\nBy default, the plugin doesn't do authentication, which means that anyone with access to the TCP/IP port of the plugin can access and modify the data. However, not all data is exposed by default.",
        "solution": "To remediate this setting, issue the following command in the MySQL command-line client:\n\nuninstall plugin daemon_memcached;\n\nThis uninstalls the memcached plugin from the MySQL server.\n\nDefault Value:\n\ndisabled",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT PLUGIN_NAME, PLUGIN_STATUS FROM information_schema.plugins WHERE PLUGIN_NAME='daemon_memcached'"
    },
    "custom_item_29": {
        "description": "4.8 Ensure the 'secure_file_priv' is Configured Correctly",
        "info": "The secure_file_priv option restricts to paths used by LOAD DATA INFILE or SELECT local_file. It is recommended that this option be set to a file system location that contains only resources expected to be loaded by MySQL. Even better, if data import/export using LOAD DATA INFILE or SELECT local_file is not used, the functionality should be disabled entirely by setting --secure-file-priv to NULL.\n\nRationale:\n\nSetting secure_file_priv reduces an attacker's ability to read sensitive files off the affected server via a SQL injection vulnerability.\n\nImpact:\n\nSolutions that rely on loading data from various sub-directories may be negatively impacted by this change. Consider consolidating load directories under a common parent directory.\n\nThe server checks the value of secure_file_priv at startup and writes a warning to the error log if the value is insecure. A non-NULL value is considered insecure if it is empty, or the value is the data directory or a subdirectory of it, or a directory that is accessible by all users.",
        "solution": "If you are not going to use this feature, remove secure_file_priv from the [mysqld] section of the MySQL configuration file and restart the MySQL service.\n\nIf you need this feature add the following line to the [mysqld] section of the MySQL configuration file and restart the MySQL service:\n\nsecure_file_priv=Default Value:\n\nNo value set.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|13,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SHOW GLOBAL VARIABLES WHERE Variable_name = 'secure_file_priv';",
        "sql_expect": "secure_file_priv"
    },
    "custom_item_30": {
        "description": "5.1 Ensure Only Administrative Users Have Full Database Access",
        "info": "The mysql.user, mysql.db, and other mysql tables ending in _priv list a variety of privileges that can be granted (or denied) to MySQL users. Some of the privileges of concern include: Select_priv, Insert_priv, Update_priv, Delete_priv, Drop_priv, and so on. Typically, these privileges should not be available to every MySQL user and often are reserved for administrative use only. The information_schema.user_privileges provides a consolidated view of all user privileges.\n\nRationale:\n\nLimiting the accessibility of the mysql database will protect the confidentiality, integrity, and availability of the data housed within MySQL. A user which has direct access to mysql.* might view password hashes, change permissions, or alter or destroy information intentionally or unintentionally.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following actions to remediate this setting:\n\nEnumerate non-administrative users resulting from the audit procedure.\n\nFor each non-administrative user, use the REVOKE statement to remove privileges as appropriate.",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.1,CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "select grantee, privilege_type from information_schema.user_privileges where grantee not like ('\\'mysql.%localhost\\'');",
        "sql_expect": "Manual Review Required"
    },
    "custom_item_31": {
        "description": "5.2 Ensure 'FILE' is Not Granted to Non-Administrative Users",
        "info": "The FILE privilege is used to allow or disallow a user from reading and writing files on the server host. Any user with the FILE right granted has the ability to:\n\nRead files from the local file system that are readable by the MySQL server (this includes world-readable files).\n\nWrite files to the local file system where the MySQL server has write access.\n\nRationale:\n\nThe FILE right allows MySQL users to read files from disk and to write files to disk. This may be leveraged by an attacker to further compromise MySQL. It should be noted that the MySQL server should not overwrite existing files.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure.\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE FILE ON *.* FROM '';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'FILE';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_32": {
        "description": "5.4 Ensure 'SUPER' is Not Granted to Non-Administrative Users",
        "info": "The SUPER privilege is a powerful and far-reaching privilege and should not be granted lightly. In MySQL 8.0, SUPER is deprecated and will be removed in a future version of MySQL.\n\nThe SUPER privilege shown in the INFORMATION_SCHEMA.USER_PRIVILEGES table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.\n\nIn MySQL 8.0, SUPER is deprecated and will be removed in a future version of MySQL. Migrating Accounts from SUPER to Dynamic Privileges is recommended.\n\nRationale:\n\nThe SUPER privilege allows principals to perform many actions, including view and terminate currently executing MySQL statements (including statements used to manage passwords). This privilege also provides the ability to configure MySQL, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.\n\nIt is more secure to migrate administrative users off SUPER and instead assign the specific and minimal set of mysql Dynamic Privileges needed to perform their tasks.\n\nImpact:\n\nWhen the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE SUPER ON *.* FROM '';\n\nNext minimize administrator rights\n\nAssess the minimal set of Dynamic Permissions needed by a user to perform their duties.\n\nFor each user assign the appropriate Dynamic Permission and then revoke thatSUPER capability.\nFor example, if administrator 'u1'@'localhost' requires SUPER for binary log purging and system variable modification, these statements make the required changes to the account thus limiting rights to what is needed:\n\nGRANT BINLOG_ADMIN, SYSTEM_VARIABLES_ADMIN ON *.* TO 'u1'@'localhost';\nREVOKE SUPER ON *.* FROM 'u1'@'localhost';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SUPER';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_33": {
        "description": "5.5 Ensure 'SHUTDOWN' is Not Granted to Non-Administrative Users",
        "info": "The SHUTDOWN privilege simply enables use of the shutdown option to the mysqladmin command, which allows a user with the SHUTDOWN privilege the ability to shut down the MySQL server.\n\nRationale:\n\nThe SHUTDOWN privilege allows principals to shutdown MySQL. This may be leveraged by an attacker to negatively impact the availability of MySQL.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure.\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE SHUTDOWN ON *.* FROM '';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'SHUTDOWN';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_34": {
        "description": "5.6 Ensure 'CREATE USER' is Not Granted to Non-Administrative Users",
        "info": "The CREATE USER privilege governs the right of a given user to add or remove users, change existing users' names, or revoke existing users' privileges.\n\nRationale:\n\nReducing the number of users granted the CREATE USER right minimizes the number of users able to add/drop users, alter existing users' names, and manipulate existing users' privileges.\n\nImpact:\n\nUsers that are denied the CREATE USER privilege will not only be unable to create a user, but they may be unable to drop a user, rename a user, or otherwise revoke a given user's privileges.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE CREATE USER ON *.* FROM '';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'CREATE USER';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_35": {
        "description": "5.7 Ensure 'GRANT OPTION' is Not Granted to Non-Administrative Users",
        "info": "The GRANT OPTION privilege exists in different contexts (mysql.user, mysql.db) for the purpose of governing the ability of a privileged user to manipulate the privileges of other users.\n\nRationale:\n\nThe GRANT OPTION privilege allows a principal to grant other principals additional privileges. This may be used by an attacker to compromise MySQL.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-administrative users found in the result sets of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-administrative user):\n\nREVOKE GRANT OPTION ON *.* FROM '';",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14.6,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT DISTINCT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE IS_GRANTABLE = 'YES';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_36": {
        "description": "5.8 Ensure 'REPLICATION SLAVE' is Not Granted to Non-Administrative Users",
        "info": "The REPLICATION SLAVE privilege governs whether a given user (in the context of the source server) can request updates that have been made on the source server.\n\nRationale:\n\nThe REPLICATION SLAVE privilege allows a principal to fetch binlog files containing all data changing statements and/or changes to table data from the source. This may be used by an attacker to read/fetch sensitive data from MySQL.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the non-replica users found in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the non-replica user):\n\nREVOKE REPLICATION SLAVE ON *.* FROM '';\n\nUse the REVOKE statement to remove the REPLICATION SLAVE privilege from users who shouldn't have it.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT GRANTEE FROM INFORMATION_SCHEMA.USER_PRIVILEGES WHERE PRIVILEGE_TYPE = 'REPLICATION SLAVE';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_37": {
        "description": "5.9 Ensure DML/DDL Grants are Limited to Specific Databases and Users",
        "info": "DML/DDL includes the set of privileges used to modify or create data structures. This includes INSERT, SELECT, UPDATE, DELETE, DROP, CREATE, and ALTER privileges.\n\nRationale:\n\nINSERT, SELECT, UPDATE, DELETE, DROP, CREATE, and ALTER are powerful privileges in any database. Such privileges should be limited only to those users requiring such rights. By limiting the users with these rights and ensuring that they are limited to specific databases, the attack surface of the database is reduced.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Perform the following steps to remediate this setting:\n\nEnumerate the unauthorized users, hosts, and databases returned in the result set of the audit procedure\n\nFor each user, issue the following SQL statement (replacewith the unauthorized user,with host name, andwith the database name):\n\nREVOKE SELECT ON.FROM;\nREVOKE INSERT ON.FROM;\nREVOKE UPDATE ON.FROM;\nREVOKE DELETE ON.FROM;\nREVOKE CREATE ON.FROMREVOKE DROP ON.FROM;\nREVOKE ALTER ON.FROM;",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT User,Host,Db FROM mysql.db WHERE Select_priv='Y' OR Insert_priv='Y' OR Update_priv='Y' OR Delete_priv='Y' OR Create_priv='Y' OR Drop_priv='Y' OR Alter_priv='Y';",
        "sql_expect": "ManualReviewRequired"
    },
    "custom_item_38": {
        "description": "6.1 Ensure 'log_error' is configured correctly",
        "info": "The error log contains information about events such as mysqld starting and stopping, when a table needs to be checked or repaired, and, depending on the host operating system, stack traces when mysqld fails.\n\nRationale:\n\nEnabling error logging can increase the ability to detect malicious attempts against MySQL, and other critical messages. For example, if the error log is not enabled then a connection error could go unnoticed.\n\nWhen configured to stderr MySQL will send log data to the console. Logging to the console is useful, but remember it is ephemeral. This is not recommended due to the fact that logging to console does not provide a means to force restricted access via permissions strictly to MySQL and dedicated MySQL audit accounts. This may compromise the confidentiality of the MySQL log data. Furthermore use caution if co-mingling log data from multiple sources as that can complicate log inspection. Additionally from a security auditing perspective, it's difficult and error prone to verify logging is correct using stderr or redirected stderr.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf or my.ini).\n\nSet the log-error option to the path for the error log.\n\nDefault Value:\n\n./stderr.err",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SHOW variables LIKE 'log_error';",
        "sql_expect": "log_error"
    },
    "custom_item_39": {
        "description": "6.2 Ensure Log Files are Stored on a Non-System Partition",
        "info": "MySQL log files can be set in the MySQL configuration to exist anywhere on the filesystem. It is common practice to ensure that the system filesystem is left uncluttered by application logs. System filesystems include the root (/), /var, or /usr.\n\nRationale:\n\nMoving the MySQL logs off the system partition will reduce the probability of denial of service via the exhaustion of available disk space to the operating system.",
        "solution": "Perform the following actions to remediate this setting:\n\nOpen the MySQL configuration file (my.cnf)\n\nLocate the log-bin entry and set it to a file not on root (/), /var, or /usr",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "show GLOBAL VARIABLES WHERE Variable_Name = 'log_bin_basename' AND Value LIKE 'C:%' OR Variable_Name = 'log_bin_basename' AND Value = '/' OR Variable_Name = 'log_bin_basename' AND Value = '/var%' OR Variable_Name = 'log_bin_basename' AND Value = '/usr%';"
    },
    "custom_item_40": {
        "description": "7.1 Ensure default_authentication_plugin is Set to a Secure Option",
        "info": "The -default-authentication-plugin system variable governs two things:\n\nAuthentication plugin used by a new user account if a plugin is not specified explicitly through CREATE USER statement\n\nInitial authentication data payload generated by server in case of a new connection.\n\nCaching SHA-2 Authentication is the new default in MySQL 8.0. It provides stronger password protection than the prior Native Authentication and provides better performance than SHA2 Authentication. Alternatively, there are additional methods to securely connect using Lightweight Directory Access Protocol (LDAP) and Active Directory authentication.\n\nRationale:\n\nMySQL Native Authentication relies on the Secure Hash Algorithm 1 (SHA1) algorithm and the National Institute of Standards and Technology (NIST) has suggested to stop using it.\n\nThe MySQL Native Authentication plugin leverages this weak hashing algorithm that can be quickly brute forced.",
        "solution": "Configure mysql to default to the caching_sha2_password plugin.\n\nRequire caching_sha2_password plugin to be used by default for new accounts.\n\nEdit my.cnf, in the section [mysqld] add:\n\ndefault_authentication_plugin=caching_sha2_password\n\nDetermine if any users are using mysql_native_password.\n\nselect host, user, plugin from mysql.user;\n\nMigrate these users from mysql_native_password.\n\nALTER USER user\n  IDENTIFIED WITH caching_sha2_password IDENTIFIED BY RANDOM PASSWORD PASSWORD EXPIRE;\n\nProvide users the random password value through a secure mechanism - on next login they will be forced to change the password.\n\nDefault Value:\n\nNew users default to caching_sha2_password. Migrated users will initially be mysql_native or other authentication method.",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SHOW VARIABLES WHERE Variable_name = 'default_authentication_plugin';",
        "sql_expect": "default_authentication_plugin"
    },
    "custom_item_41": {
        "description": "7.3 Ensure Passwords are Set for All MySQL Accounts",
        "info": "Blank passwords allow a user to login without using a password.\n\nRationale:\n\nWithout a password only knowing the username and the list of allowed hosts will allow someone to connect to the server and assume the identity of the user. This, in effect, bypasses authentication mechanisms.",
        "solution": "For each row returned from the audit procedure, reset the password for the given user using the following statement (as an example):\n\nALTER USER@IDENTIFIED BY RANDOM PASSWORD PASSWORD EXPIRE;\n\nThis resets the password temporarily to a RANDOM string and returns that temporary password as a result.\n\nThe user can then use this temporary password to login and is forced to set the password to one of their choosing upon login.\n\nNote: Replace,with appropriate values.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT User,host FROM mysql.user WHERE (plugin IN('mysql_native_password', 'mysql_old_password','') AND (LENGTH(authentication_string) = 0 OR authentication_string IS NULL)) OR (plugin='sha256_password' AND LENGTH(authentication_string) = 0);"
    },
    "custom_item_42": {
        "description": "7.4 Set 'default_password_lifetime' to Require a Yearly Password Change",
        "info": "Password expiry provides passwords with a time bounded lifetime.\n\nRationale:\n\nThe default_password_lifetime global variable prevents a password being set for an indefinite period. Excessive password expiration requirements do more harm than good, because these requirements make users select predictable passwords, composed of sequential words and numbers that are closely related to each other. More importantly, when events occur that could compromise password security account passwords should be expired immediately.\n\nImpact:\n\nScripted clients or users dependent on automated login in a controlled environment will need to consider their authentication procedures. The server will accept the user but the user is placed in restricted mode. In restricted mode, operations performed within the session result in an error until the user establishes a new account password.",
        "solution": "To remediate this recommendation, execute the following command:\n\nSET GLOBAL default_password_lifetime=365;\n\nDefault Value:\n\n360",
        "reference": "800-171|3.1.1,800-53|AC-2(3),800-53r5|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv7|16.10,CSCv8|5.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SHOW VARIABLES LIKE 'default_password_lifetime';",
        "sql_expect": "default_password_lifetime"
    },
    "custom_item_43": {
        "description": "'validate_password_length'",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_length'",
        "sql_expect": "validate_password.length"
    },
    "custom_item_44": {
        "description": "'validate_password_mixed_case_count'",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_mixed_case_count'",
        "sql_expect": "validate_password.mixed_case_count"
    },
    "custom_item_45": {
        "description": "'validate_password_number_count'",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_number_count'",
        "sql_expect": "validate_password.number_count"
    },
    "custom_item_46": {
        "description": "'validate_password_special_char_count'",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_special_char_count'",
        "sql_expect": "validate_password.special_char_count"
    },
    "custom_item_47": {
        "description": "'validate_password_policy'",
        "sql_request": "SHOW VARIABLES LIKE 'validate_password_policy'",
        "sql_expect": "validate_password.policy"
    },
    "custom_item_48": {
        "description": "7.6 Ensure No Users Have Wildcard Hostnames",
        "info": "MySQL can make use of host wildcards when granting permissions to users on specific databases. For example, you may grant a given privilege to ''@'%'.\n\nRationale:\n\nAvoiding the use of wildcards within hostnames helps control the specific locations from which a given user may connect to and interact with the database.",
        "solution": "Perform the following actions to remediate this setting:\n\nEnumerate all users returned after running the audit procedure.\n\nEither ALTER the user's host to be specific or DROP the user.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "select user,host from mysql.user where host = '%' ;"
    },
    "custom_item_49": {
        "description": "7.7 Ensure No Anonymous Accounts Exist",
        "info": "Anonymous accounts are users with empty usernames (''). Anonymous accounts have no passwords, so anyone can use them to connect to the MySQL server.\n\nRationale:\n\nRemoving anonymous accounts will help ensure that only identified and trusted principals are capable of interacting with MySQL.\n\nImpact:\n\nAny applications relying on anonymous database access will be adversely affected by this change.",
        "solution": "Perform the following actions to remediate this setting:\n\nEnumerate the anonymous users returned from executing the audit procedure.\n\nFor each anonymous user, DROP or assign them a name.\n\nNote: As an alternative, you may execute the mysql_secure_installation utility.",
        "reference": "800-171|3.1.1,800-53|AC-2,800-53r5|AC-2,CN-L3|7.1.3.2(d),CSCv7|16.6,CSCv8|5.1,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT user,host FROM mysql.user WHERE user = '';"
    },
    "custom_item_50": {
        "description": "have_ssl' is Set to 'YES'",
        "sql_request": "SHOW variables WHERE variable_name = 'have_ssl';",
        "sql_expect": "have_ssl"
    },
    "custom_item_51": {
        "description": "have_openssl' is Set to 'YES'",
        "sql_request": "SHOW variables WHERE variable_name = 'have_openssl';",
        "sql_expect": "have_openssl"
    },
    "custom_item_52": {
        "description": "8.1 Ensure 'require_secure_transport' is Set to 'ON' and/or 'have_ssl' is Set to 'YES'",
        "info": "All network traffic must use SSL/TLS when traveling over untrusted networks.\n\nRationale:\n\nEnabling Secure Sockets Layer (SSL) will allow clients to encrypt network traffic and verify the identity of the server. The SSL/TLS-protected MySQL protocol helps to prevent eavesdropping and man-in-the-middle attacks.\n\nImpact:\n\nEnabling SSL could have impact on network traffic inspection.",
        "solution": "Follow the procedures as documented in the MySQL 8.0 Reference Manual to setup SSL.\n\nSet global policy to force SSL for all connections:\n\nset persist require_secure_transport=ON;\n\nDefault Value:\n\nDISABLED",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "select @@require_secure_transport;",
        "sql_expect": "(ON|1)"
    },
    "custom_item_53": {
        "description": "8.2 Ensure 'ssl_type' is Set to 'ANY', 'X509', or 'SPECIFIED' for All Remote Users",
        "info": "All network traffic must use SSL/TLS when traveling over untrusted networks.\n\nSSL/TLS should be enforced on a per-user basis for users which enter the system through the network.\n\nRationale:\n\nThe SSL/TLS-protected MySQL protocol helps to prevent eavesdropping and man-in-the-middle attacks.\n\nImpact:\n\nWhen SSL/TLS is enforced then clients which do not use SSL will not be able to connect. If the server is not configured for SSL/TLS then accounts for which SSL/TLS is mandatory will not be able to connect.",
        "solution": "Use the ALTER USER statement to require the use of SSL:\n\nALTER USER 'my_user'@'app1.example.com' REQUIRE X509;\n\nNote: REQUIRE SSL only enforces SSL. There are additional options REQUIRE ISSUER, REQUIRE SUBJECT which can be used to further restrict the connection.\n\nDefault Value:\n\nOn the server-side SSL is ON by default --ssl (permits but does not require secure connections) and require_secure_transport is OFF (turning ON allows only secure connections)",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT user, host, ssl_type FROM mysql.user WHERE NOT HOST IN ('::1', '127.0.0.1', 'localhost');",
        "sql_expect": ".+"
    },
    "custom_item_54": {
        "description": "max_connections is set",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_connections';",
        "sql_expect": "max_connections"
    },
    "custom_item_55": {
        "description": "8.3 Set Maximum Connection Limits for Server and per User",
        "info": "Limiting concurrent connections to a MySQL server can be used to reduce risk of Denial of Service (DoS) attacks performed by exhausting connection resources.\n\nRationale:\n\nLimiting the number of concurrent sessions at the server and per user level helps to reduce the risk of DoS attacks. MySQL provides mechanisms to limit the number of simultaneous connections that can be made at the server level or by any given account.",
        "solution": "Connect to the MySQL Database as an administrator.\n\nFor example, to set the global default per user to 50 run the command:\n\nSET PERSIST max_user_connections=50;\n\nTo control the maximum number of clients the server permits to connect simultaneously, set the max_connections system variable:\n\nSET PERSIST max_connections=1000;\n\nAdditionally, this max user connections can be set per user as well as for a given period of time period using CREATE or ALTER.\n\nFor example:\n\nALTER USER 'fred'@'localhost'\nWITH MAX_CONNECTIONS_PER_HOUR 5\nMAX_USER_CONNECTIONS 2;\n\nDefault Value:\n\nThe default value of max_connections is 151, max_user_connections is 0 (unlimited, thus limited by max_connections).",
        "reference": "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,LEVEL|1M,NIAv2|NS49",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'max_user_connections';",
        "sql_expect": "max_user_connections"
    },
    "custom_item_56": {
        "description": "ssl_verify_server_cert setting on 8.0.23 or greater",
        "sql_request": "select ssl_verify_server_cert from mysql.replica_source_info;",
        "sql_expect": "1"
    },
    "custom_item_57": {
        "description": "9.2 Ensure 'SOURCE_SSL_VERIFY_SERVER_CERT' is Set to 'YES' or '1'",
        "info": "In the MySQL REPLICA (SLAVE is deprecated as of 8.0.22) context the setting SOURCE_SSL_VERIFY_SERVER_CERT (MASTER_SSL_VERIFY_SERVER_CERT is deprecated as of 8.0.22) indicates whether the REPLICA should verify the SOURCE's certificate. This configuration item may be set to Yes or No, and unless SSL has been enabled on the REPLICA, the value will be ignored.\n\nRationale:\n\nWhen SSL is in use certificate verification is important to authenticate the party to which a connection is being made. In this case, the REPLICA (client) should verify the SOURCE's (server's) certificate to authenticate the SOURCE prior to continuing the connection.\n\nImpact:\n\nWhen using CHANGE REPLICATION SOURCE TO, (CHANGE MASTER is deprecated as of 8.0.23) be aware of the following:\n\nREPLICA processes need to be stopped prior to executing CHANGE SOURCE TO\n\nUse of CHANGE REPLICATION SOURCE TO starts new relay logs without keeping the old ones unless explicitly told to keep them\n\nWhen CHANGE REPLICATION SOURCE TO is invoked, some information is dumped to the error log (previous values for SOURCE_HOST, SOURCE_PORT, SOURCE_LOG_FILE, and SOURCE_LOG_POS)\n\nInvoking CHANGE REPLICATION SOURCE TO will implicitly commit any ongoing transactions in the session where the CHANGE REPLICATION SOURCE was run, but not all ongoing transactions on the database.",
        "solution": "To remediate this setting, you must use the CHANGE SOURCE TO command.\nFrom 8.0.23:\n\nSTOP REPLICA; -- required if replication was already running\nCHANGE REPLICATION SOURCE TO SOURCE_SSL_VERIFY_SERVER_CERT=1;\nSTART REPLICA; -- required if you want to restart replication\n\nPrior to 8.0.23:\n\nSTOP SLAVE; -- required if replication was already running\nCHANGE MASTER TO MASTER_SSL_VERIFY_SERVER_CERT=1;\nSTART SLAVE; -- required if you want to restart replication",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv8|13.9,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "select ssl_verify_server_cert from mysql.slave_master_info;",
        "sql_expect": "1"
    },
    "custom_item_58": {
        "description": "9.4 Ensure 'super_priv' is Not Set to 'Y' for Replication Users",
        "info": "The SUPER privilege found in the mysql.user table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more.\n\nRationale:\n\nThe SUPER privilege allows principals to perform many actions, including view and terminate currently executing MySQL statements (including statements used to manage passwords). This privilege also provides the ability to configure MySQL, such as enable/disable logging, alter data, disable/enable features. Limiting the accounts that have the SUPER privilege reduces the chances that an attacker can exploit these capabilities.\n\nImpact:\n\nWhen the SUPER privilege is denied to a given user, that user will be unable to take advantage of certain capabilities, such as certain mysqladmin options.",
        "solution": "Execute the following steps to remediate this setting:\n\nEnumerate the replication users found in the result set of the audit procedure\n\nFor each replication user, issue the following SQL statement (replace repl with your replication user's name):\n\nREVOKE SUPER ON *.* FROM 'repl';\n\nNote: Prior to 8.0.21 if MySQL Replica Set was used to create the replications administrator (call to dba.configureReplicaSetInstance in MySQL Shell) after performing the above revoke you will need to grant the following dynamic privilege.\n\nGRANT REPLICATION_SLAVE_ADMIN ON *.* TO 'repl WITH GRANT OPTION;",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "select user, host from mysql.user where user='repl' and Super_priv = 'Y';"
    },
    "custom_item_59": {
        "description": "10.1 Ensure All Group Replication Traffic is Secured",
        "info": "MySQL Group communication connections and distributed recovery connections can be secured using SSL.\n\nRationale:\n\nSSL encryption ensures data cannot be seen over the network for Group Replication.",
        "solution": "Edit my.cnf and set group_replication_ssl_mode, for example:\n\ngroup_replication_ssl_mode=REQUIRED\n\nAcceptable values are:\n\nREQUIRED - Establish a secure connection if the server supports secure connections.\n\nVERIFY_CA - Like REQUIRED, but additionally verify the server TLS certificate against the configured Certificate Authority (CA) certificates.\n\nVERIFY_IDENTITY - Like VERIFY_CA, but additionally verify that the server certificate matches the host to which the connection is being established.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15112",
        "sql_request": "select @@group_replication_ssl_mode;",
        "sql_expect": "REQUIRED|VERIFY_CA|VERIFY_IDENTITY"
    }
}