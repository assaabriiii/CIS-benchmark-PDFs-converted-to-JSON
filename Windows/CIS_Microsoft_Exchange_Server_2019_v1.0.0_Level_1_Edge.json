{
    "custom_item_1": {
        "description": "Test secure string",
        "value_data": ".*",
        "powershell_args": "hostname",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_2": {
        "description": "CIS_Microsoft_Exchange_Server_2019_v1.0.0_Level_1_Edge.audit from CIS Microsoft Exchange Server 2019 Benchmark v1.0.0",
        "info": "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "reference": "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2",
        "value_data": "[\\s]+15\\.2[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer -Identity $ENV:COMPUTERNAME | Format-Table Name, AdminDisplayVersion, IsEdgeServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_3": {
        "description": "Platform check",
        "value_data": "[\\s]+15\\.2[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer -Identity $ENV:COMPUTERNAME | Format-Table Name, AdminDisplayVersion, IsEdgeServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_4": {
        "description": "1.1 Ensure 'Enable sender ID agent' is configured",
        "info": "The Sender ID agent is an antispam agent enabled on Exchange servers that perform the Edge Transport server role. Sender ID tries to verify that every e-mail message originates from the Internet domain from which it claims to have been sent. Sender ID checks the address of the server that sends the message against a registered list of servers that the domain owner has authorized to send e-mail.\n\nRationale:\n\nSpam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software. Rejecting messages that have evidence of spoofing will reduce the possibility of users falling victim to phishing attacks.\n\nImpact:\n\nSome legitimate messages may be blocked.",
        "solution": "To implement the recommended state, execute the below cmdlet:\n\nSet-SenderIDConfig -Enabled $true -SpoofedDomainAction Reject\n\nDefault Value:\n\nEnabled: True\n\nSpoofedDomainAction: StampStatus",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SenderIdConfig ; $settings | Format-List Name, Enabled, SpoofedDomainAction; If ($settings | Where {($_.Enabled -ne $true) -Or ($_.SpoofedDomainAction -ne 'Reject')}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_5": {
        "description": "1.2 Ensure 'Configure sender filtering' is set to 'Enabled'",
        "info": "Sender filtering compares a list of blocked senders that's maintained by the Exchange administrator.\n\nNote: For more information on how to create the list for blocked senders, please visit: Use the Exchange Management Shell to configure blocked senders and domains for sender filtering\n\nNote #2: Sender filtering is enabled (by default) on a system performing the Edge Transport server role.\n\nRationale:\n\nSpam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software.\n\nImpact:\n\nSome legitimate messages may be blocked.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SenderFilterConfig -Enabled $true\n\nDefault Value:\n\nTrue",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "Enabled[\\s]+:[\\s]+True",
        "powershell_args": "Get-SenderFilterConfig | Format-List -property Enabled",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_6": {
        "description": "1.3 Ensure 'Sender reputation' is configured",
        "info": "Sender reputation filters all messages from all receive connectors on that system and only messages from external sources are filtered. External sources are defined as non-authenticated sources, which are considered anonymous internet sources.\n\nThis recommendation configures several parameters:\n\nEnabled parameter enables or disables sender reputation on the Exchange server.\n\nSenderBlockingEnabled parameter specifies whether sender reputation blocks senders whose sending system fails an open proxy test.\n\nOpenProxyDetectionEnabled parameter specifies whether sender reputation tries to determine whether the sender's address is an open proxy by connecting to the originating IP address.\n\nSrlBlockThreshold specifies the SRL rating that must be met or exceeded for sender reputation to block a sender.\n\nRationale:\n\nSender reputation is part of the Microsoft Exchange anti-spam functionality that can help with the filtering and blocking of spam messages. Malicious actors can exploit open proxy servers to send spam, launch attacks, or engage in other attacks while masking their identity. When Exchange checks if the sender is an OpenProxy this can help mitigate attacks from those types of senders.\n\nImpact:\n\nSome legitimate messages may be blocked if the threshold is set too high.\n\nWarning: If a proxy server for outbound Internet access is used, the properties of the proxy server must be defined by using the ProxyServerName, ProxyServerPort, and ProxyServerType parameters.\n\nNote: The values of OpenProxyDetectionEnabled and SenderBlockingEnabled can both be set to $true, but they both can't be set to $false. If one value is $true and the other is $false, and the $true value is changed to $false, the parameter that was previously $false will automatically change to $true.\n\nNote #2: Open proxy server detection requires the following open outbound TCP ports: 23, 80, 1080, 1081, 3128, and 6588.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SenderReputationConfig -Enabled $true -SenderBlockingEnabled $true -OpenProxyDetectionEnabled $true -SrlBlockThreshold 6\n\nDefault Value:\n\nSenderBlockingEnabled True\n\nOpenProxyDetectionEnabled True\n\nSrlBlockThreshold 7",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SenderIDConfig ; $settings | Format-List Name, SenderBlockingEnabled, OpenProxyDetectionEnabled, SrlBlockThreshold; If ($settings | Where {($_.SrlBlockThreshold -ne 6) -Or ($_.SenderBlockingEnabled -ne $true) -Or ($_.OpenProxyDetectionEnabled -ne $true)}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_7": {
        "description": "1.4 Ensure 'Blank sender field' is configured",
        "info": "When the Sender Filter Agent takes on messages from blocked senders or domains, the Action parameter is what is used when deciding what to do with these messages.\n\nRationale:\n\nAnonymous emails (messages with blank sender fields) cannot be replied to. Emails that are sent with blank sender fields could be trying to hide their true origin and allows them to avoid responses and possibly spam receivers of the message. It is less risky and more resource-efficient to filter these messages upon receipt rather than forwarding them to be evaluated and risking possible infection.\n\nImpact:\n\nAnonymous emails are automatically rejected",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SenderFilterConfig -Action Reject -BlankSenderBlockingEnabled $true\n\nDefault Value:\n\nAction Reject\n\nBlankSenderBlockingEnabled False",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SenderFilterConfig ; $settings | Format-List Name, Action, BlankSenderBlockingEnabled; If ($settings | Where {($_.Action -ne 'Reject') -Or ($_.BlankSenderBlockingEnabled -ne $true)}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_8": {
        "description": "1.5 Ensure 'Spam quarantine mailbox exists' is set to ''",
        "info": "This parameter is used to specify an SMTP address to be used as a spam quarantine mailbox.\n\nNote: All messages that are equal to or greater than the value set in the SCLQuarantineEnabled parameter are sent to the SMTP address set in the QuarantineMailbox parameter.\n\nRationale:\n\nA spam quarantine mailbox is necessary to temporarily host filtered messages for evaluation by administrators or users. Having an archive such as this can be useful to recover messages that have been wrongfully filtered, prevent data loss, and can be helpful in providing a base of analysis so that refinements can be made to the filter in the future.\n\nImpact:\n\nThis mailbox should be monitored by an administrator for potential of blocking sender.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ContentFilterConfig -QuarantineMailbox <'QuarantineMailbox SmtpAddress'>\n\nDefault Value:\n\nNot Configured.",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1M,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-ContentFilterConfig ; $settings | Format-List Name, QuarantineMailbox; If ($settings | Where {$_.QuarantineMailbox -eq $none}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_9": {
        "description": "1.6 Ensure 'SCL Quarantine' is 'Enabled'",
        "info": "Spam Confidence Level (SCL) is a rating assigned to incoming email messages by the Content Filter agent in Exchange Server. It is a measure of the likelihood that an email is spam based on various content analysis techniques and spam detection algorithms. The SCL value ranges from 0 to 9, with 9 being the highest level of confidence that the email is spam.\n\nEnsure SCLQuarantineEnabled is set to True\n\nRationale:\n\nE-mails with a high Spam Confidence Level (SCL) will be quarantined. This involves moving it to a designated quarantine e-mail address, separating it from the regular inbox of the recipient in order to prevent users interacting with malicious e-mails.\n\nImpact:\n\nFalse positives may occur when setting SCLQuarantineThreshold to lower values.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ContentFilterConfig -SCLQuarantineEnabled $true -SCLRejectThreshold 8 -SCLQuarantineThreshold 6\n\nNOTE: The SCLRejectThreshold must be greater than the SCLQuarantineThreshold when enabling the Quarantine and is why it is changed in this instance.\n\nDefault Value:\n\nSCLQuarantineEnabled: False\n\nSCLQuarantineThreshold: 9\n\nSCLRejectThreshold: 7",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-ContentFilterConfig ; $settings | Format-List Name, QuarantineMailbox, SCLQuarantineEnabled, SCLQuarantineThreshold; If ($settings | Where {($_.SCLQuarantineEnabled -ne $true) -Or ($_.SCLQuarantineThreshold -gt 6)}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_10": {
        "description": "1.7 Ensure 'Nonexistent recipients' is set to 'True'",
        "info": "This parameter is used to decide if messages whose recipient doesn't exist in the organization are blocked. When this parameter is set to $true, the Recipient Filter Agent blocks these messages.\n\nNote: The Set-RecipientFilterConfig cmdlet must be enabled\n\nRationale:\n\nSpam originators may use a technique that involves first creating fabricated names, and then monitors for rejected emails due to non-existent recipients. Emails with names who are not rejected are then used for future spam mailings. To deprive the spam originator of valuable information, it is recommended to receive all messages, then evaluate and dispose of them as deemed necessary.\n\nImpact:\n\nSome legitimate messages might be blocked.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-RecipientFilterConfig -RecipientValidationEnabled $true\n\nDefault Value:\n\nFalse",
        "reference": "800-53|SI-8(2),800-53r5|SI-8(2),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8(2),LEVEL|1M,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-RecipientFilterConfig ; $settings | Format-List Name, RecipientValidationEnabled; If ($settings | Where {$_.RecipientValidationEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_11": {
        "description": "1.8 Ensure 'Attachment Filtering Agent' is configured",
        "info": "The attachment filtering on Edge Transport servers restricts attachments that users receive in email messages. Attachment filtering is performed by the Attachment Filtering agent, which is available only on Edge Transport servers, and is unchanged from Exchange Server 2010.\n\nEnsure the Attachment Filtering Agent is Enabled, and the extension filtering list is configured to the desired state.\n\nRationale:\n\nAttachment filtering will allow the blocking of file extensions that are regularly abused by bad actors for nefarious purposes, including phishing, malware distribution, and macros. The list of extensions in the audit and remediation sections includes a collection found in the CIS Microsoft 365 Benchmark, Microsoft Office Benchmark, DISA STIG, and the Exchange Server defaults.\n\nImpact:\n\nAttachments on emails that match the filtering list will be removed and replaced with a text file. The original message will be sent to the recipient along with the replaced attachment. This is the default behavior.",
        "solution": "Execute the following cmdlet to enable the Filtering Agent:\n\nEnable-TransportAgent 'Attachment Filtering Agent'\n\nExecute the bellow script to create the desired attachment filtering state:\n\n$attachmentExtensions = @(\n    '*.ace', '*.ade', '*.adp', '*.ani', '*.app', '*.appx', '*.arj', '*.asx', '*.bas', '*.bat', '*.cab', '*.chm',\n    '*.cmd', '*.com', '*.cpl', '*.crt', '*.csh', '*.dbf', '*.dcr', '*.deb', '*.dex', '*.dif', '*.dir', '*.dll',\n    '*.doc', '*.dot', '*.docm', '*.elf', '*.exe', '*.fxp', '*.hlp', '*.hta', '*.htc', '*.htm', '*.html', '*.img',\n    '*.inf', '*.ins', '*.iso', '*.isp', '*.jar', '*.jnlp', '*.js', '*.jse', '*.kext', '*.ksh', '*.lha', '*.lib',\n    '*.lnk', '*.lzh', '*.macho', '*.mda', '*.mdb', '*.mde', '*.mdt', '*.mdw', '*.mdz', '*.mht', '*.mhtml', '*.msc',\n    '*.msi', '*.msix', '*.msp', '*.mst', '*.ops', '*.pcd', '*.pif', '*.plg', '*.ppa', '*.ppt', '*.ppam', '*.prf',\n    '*.prg', '*.ps1', '*.ps11', '*.ps11xml', '*.ps1xml', '*.ps2', '*.ps2xml', '*.psc1', '*.psc2', '*.reg', '*.rev',\n    '*.scf', '*.scr', '*.sct', '*.shb', '*.shs', '*.shtm', '*.shtml', '*.slk', '*.spl', '*.stm', '*.swf', '*.sys',\n    '*.uif', '*.url', '*.vb', '*.vbe', '*.vbs', '*.vxd', '*.wsc', '*.wsf', '*.wsh', '*.xlam', '*.xla', '*.xlc',\n    '*.xll', '*.xls', '*.xlsm', '*.xlt', '*.xlw', '*.xml', '*.xnk', '*.xz', '*.z'\n)\n\nforeach ($extension in $attachmentExtensions) {\n    $result = Add-AttachmentFilterEntry -Name $extension -Type FileName -ErrorAction SilentlyContinue\n\n    if ($result) {\n        Write-Host 'Successfully added attachment $extension' -ForegroundColor Green\n    } else {\n        Write-Host 'Attachment $extension already exists in the list.' -ForegroundColor Red\n    }\n}\n\nDefault Value:\n\nBy default these extensions are blocked in Exchange:\n\n*.ade, *.adp, *.app, *.asx, *.bas, *.bat, *.chm, *.cmd, *.com, *.cpl, *.crt, *.csh, *.exe, *.fxp, *.hlp, *.hta, *.inf, *.ins, *.isp, *.js, *.jse, *.ksh, *.lnk, *.mda, *.mdb, *.mde, *.mdt, *.mdw, *.mdz, *.msc, *.msi, *.msp, *.mst, *.ops, *.pcd, *.pif, *.prf, *.prg, *.ps1, *.ps11, *.ps11xml, *.ps1xml, *.ps2, *.ps2xml, *.psc1, *.psc2, *.reg, *.scf, *.scr, *.sct, *.shb, *.shs, *.url, *.vb, *.vbe, *.vbs, *.wsc, *.wsf, *.wsh, *.xnk",
        "reference": "800-171|3.14.2,800-171|3.14.4,800-171|3.14.5,800-53|SI-3,800-53|SI-8,800-53r5|SI-3,800-53r5|SI-8,CN-L3|7.1.3.6(b),CN-L3|8.1.4.5,CN-L3|8.1.9.6(a),CN-L3|8.1.9.6(b),CN-L3|8.1.10.5(b),CN-L3|8.1.10.7(a),CN-L3|8.1.10.7(b),CSCv8|9.6,CSF|DE.CM-4,CSF|DE.DP-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.2.1,ITSG-33|SI-3,ITSG-33|SI-8,LEVEL|1A,NIAv2|GS8a,PCI-DSSv3.2.1|5.1,PCI-DSSv3.2.1|5.1.1,PCI-DSSv4.0|5.2.1,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,TBA-FIISB|49.2.1,TBA-FIISB|49.2.2,TBA-FIISB|49.3.1,TBA-FIISB|49.3.2,TBA-FIISB|50.2.1,TBA-FIISB|51.2.4,TBA-FIISB|51.2.7",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All extensions from the reference list are present.",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_12": {
        "description": "1.9 Ensure 'Maximum receive size: Connector level' is set to '25'",
        "info": "This setting limits the size of a message a user can receive. Receive size includes the header This includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.\n\nRationale:\n\nThis setting somewhat limits the impact a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages.\n\nImpact:\n\nUsers will not be able to receive messages larger than the limit.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ReceiveConnector 'Connection from Contoso.com' -MaxMessageSize 25MB\n\nOR\n\nPerform the following actions:\n\nLaunch the EAC (Exchange Administrative Center).\n\nGo to 'Mail Flow' on the left and click on the 'Receive Connectors' tab.\n\nDouble-click on the receive connector to be modified.\n\nChange the Maximum receive message size (MB): to25and click Save.\n\nDefault Value:\n\n36 MB (37,748,736 bytes)",
        "reference": "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-ReceiveConnector; $settings | Format-List Name, MaxMessageSize; If ($settings | Where {$_.MaxMessageSize -NotLike '25 MB*'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_13": {
        "description": "1.10 Ensure 'Transport Pickup Directory Path' is not set",
        "info": "The Pickup directory is used by the Transport service on Mailbox servers and Edge Transport servers to insert message files directly into the transport pipeline. When properly formatted email message files are copied to the Pickup directory, they are submitted for delivery automatically. It is a legacy feature that can be used by administrators for mail flow testing, or by applications that must create and submit their own messages.\n\nEnsure PickupDirectoryPath is set to $null\n\nRationale:\n\nDisabling the Pickup directory is recommended to prevent potential abuse by attackers or insiders seeking to exploit side channel attacks. Dropping a file in the Pickup folder bypasses the normal authentication process of Exchange, creating a risk of sensitive data leakage or malicious email distribution through this unauthenticated side channel.\n\nImpact:\n\nThe directory will be unavailable for testing purposes unless an administrator explicitly enables it and then later disables it. If an application requires access to this directory, then additional controls should be enabled such as restricting NTFS permissions on the folder.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet to disable the Pickup Directory on the Edge Transport server:\n\nGet-TransportService | Set-TransportService -PickupDirectoryPath $null\n\nDefault Value:\n\n%programfiles%\\Microsoft\\Exchange Server\\V15\\TransportRoles\\Pickup",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "PickupDirectoryPath[\\s]+:[\\s]*$",
        "powershell_args": "Get-TransportService | Format-List -property PickupDirectoryPath",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_14": {
        "description": "1.11 Ensure 'Exchange recipient filter' is set to 'True'",
        "info": "This policy setting specifies whether the Recipient Filter agent is enabled on the system. The recipient filter uses a recipient block list to identify messages that aren't allowed to enter the organization. The recipient filter also uses the local recipient directory to reject messages sent to invalid recipients.\n\nRationale:\n\nSpam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software. Rejecting messages that have evidence of spoofing will reduce the possibility of users falling victim to phishing attacks.\n\nImpact:\n\nLegitimate email could be blocked by the agent.\n\nNote: The recipient Filter agent is available on Mailbox servers, but it shouldn't be configured. When recipient filtering on a Mailbox server detects one invalid or blocked recipient in a message that contains other valid recipients, the message is rejected.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-RecipientFilterConfig -Enabled $true\n\nDefault Value:\n\nTrue",
        "reference": "800-53|SI-8(2),800-53r5|SI-8(2),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8(2),LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "Enabled[\\s]+:[\\s]+True",
        "powershell_args": "Get-RecipientFilterConfig | Format-List -property Enabled",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_15": {
        "description": "1.12 Ensure 'Internet-facing receive connectors' is set to 'Tls, BasicAuth, BasicAuthRequireTLS'",
        "info": "This policy setting configures the advertised and accepted authentication mechanisms for the receive connector.\n\nThe primary function of receive connectors in the transport service is to accept authenticated and encrypted Simple Mail Transfer Protocol (SMTP) connections from other transport services on the local Mailbox server or remote Mailbox servers in the organization.\n\nNote: Some available values have dependencies and exclusions:\n\nNone is not compatible with other values.\n\nBasicAuthRequireTLS requires BasicAuth and Tls.\n\nExternalAuthoritative can only be combined with Tls.\n\nTls is required when RequireTLS parameter is $true.\n\nExternalAuthoritative, requires PermissionGroups parameter to be ExchangeServers.\n\nRationale:\n\nConfiguring this setting enables the encryption of email between servers. This reduces the risk of eavesdropping, interception, and alteration of the email.\n\nImpact:\n\nThere should be no impact to mail flow. If TLS connection is not established, BasicAuth will be used.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ReceiveConnector -Identity <'IdentityName'> -AuthMechanism 'Tls, BasicAuth, BasicAuthRequireTLS'\n\nNote: If more than one receive connector exists on the Edge Transport server, run this command to update all receive connectors.\n\nGet-ReceiveConnector | Set-ReceiveConnector -AuthMechanism 'Tls, BasicAuth, BasicAuthRequireTLS'\n\nDefault Value:\n\nN/A",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-ReceiveConnector ; $settings | Format-List Name, Identity, AuthMechanism; If ($settings | Where {$_.AuthMechanism -ne 'Tls, BasicAuth,\nBasicAuthRequireTLS'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_16": {
        "description": "4.1 Ensure 'Receive connector: Configure protocol logging' is set to 'Verbose'",
        "info": "A protocol log is a record of the SMTP activity between messaging servers as part of message delivery. This SMTP activity occurs on Send connectors and Receive connectors that are configured with the transport service on Mailbox servers and Edge Transport servers.\n\nRationale:\n\nIf events are not recorded, it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.\n\nImpact:\n\nAdditional storage space will be required for the log file.\n\nNote: The default file size for the protocol log is 10MB and is stored for a maximum of 30 days. This may need to be adjusted to adhere to company retention policies.\n\nWarning: Do not enable Protocol logging on an Edge Transport server that has been subscribed to the Exchange organization by using EdgeSync. Those changes need to be made in the Transport service on the Mailbox server. The changes are then replicated to the Edge Transport server the next time EdgeSync synchronization occurs.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ReceiveConnector 'IDENTITY' -ProtocolLoggingLevel Verbose\n\nOR\n\nPerform the following actions:\n\nLaunch the EAC (Exchange Administrative Center).\n\nGo to 'Mail Flow' on the left and click on the 'Receive Connectors' tab.\n\nDouble-click on the receive connector to be modified.\n\nChange the Protocol logging level to Verbose and click Save.\n\nDefault Value:\n\nNone",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-ReceiveConnector ; $settings | Format-List Name, ProtocolLoggingLevel; If ($settings | Where {$_.ProtocolLoggingLevel -ne 'Verbose'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_17": {
        "description": "4.3 Ensure 'Turn on connectivity logging' is set to 'True'",
        "info": "A connectivity log is a record of the SMTP connection activity of the outbound message delivery queues to the destination Mailbox server, smart host, or domain. Connectivity logging can be configured with the transport service on Mailbox servers and Edge Transport servers.\n\nRationale:\n\nIf events are not recorded, it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.\n\nImpact:\n\nAdditional storage space will be required for the log file.\n\nNote: The default file size for the protocol log is 10MB and is stored for a maximum of 30 days. This may need to be adjusted to adhere to company retention policies.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-TransportService 'EXCHANGE1' -ConnectivityLogEnabled $true\n\nOR\n\nPerform the following actions:\n\nLaunch the EAC (Exchange Administrative Center).\n\nGo to 'Servers' on the left and click on the 'Servers' tab.\n\nDouble-click the server and go to the 'Transport logs' settings.\n\nEnsure the Enable connectivity log box is checked and click Save.\n\nDefault Value:\n\nFalse",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-TransportService ; $settings | Format-List Name, ConnectivityLogEnabled; If ($settings | Where {$_.ConnectivityLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_18": {
        "description": "4.4 Ensure 'Send connector: Configure protocol logging' is set to 'Verbose'",
        "info": "A protocol log is a record of the SMTP activity between messaging servers as part of message delivery. This SMTP activity occurs on Send connectors and Receive connectors that are configured with the transport service on Mailbox servers and Edge Transport servers.\n\nRationale:\n\nIf events are not recorded, it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.\n\nImpact:\n\nAdditional storage space will be required for the log file.\n\nNote: The default file size for the protocol log is 10MB and is stored for a maximum of 30 days. This may need to be adjusted to adhere to company retention policies.\n\nWarning: Do not enable Protocol logging on an Edge Transport server that has been subscribed to the Exchange organization by using EdgeSync. Those changes need to be made in the Transport service on the Mailbox server. The changes are then replicated to the Edge Transport server the next time EdgeSync synchronization occurs.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SendConnector 'IDENTITY' -ProtocolLoggingLevel Verbose\n\nOR\n\nPerform the following actions:\n\nLaunch the EAC (Exchange Administrative Center).\n\nGo to 'Mail Flow' on the left and click on the 'Send Connectors' tab.\n\nDouble-click on the send connector to be modified.\n\nChange the Protocol logging level to Verbose and click Save.\n\nDefault Value:\n\nNone",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SendConnector ; $settings | Format-List Name, ProtocolLogginglevel; If ($settings | Where {$_.ProtocolLogginglevel -ne 'Verbose'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_19": {
        "description": "4.5 Ensure 'Message tracking logging' is set to 'True'",
        "info": "A message tracking log provides a detailed log of all message activity as messages are transferred to and from a computer running Exchange. The message tracking log can be configured with the transport service on Mailbox servers and Edge Transport servers.\n\nRationale:\n\nIf events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.\n\nImpact:\n\nNone - This is the default behavior.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-TransportService 'EXCHANGE1' -MessageTrackingLogEnabled $true\n\nDefault Value:\n\nTrue",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|8.6,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/12442",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-TransportService ; $settings | Format-List Name, MessageTrackingLogEnabled; If ($settings | Where {$_.MessageTrackingLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    }
}