{
    "custom_item_1": {
        "description": "Test secure string",
        "value_data": ".*",
        "powershell_args": "hostname",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_2": {
        "description": "CIS_Microsoft_Exchange_Server_2016_Level_1_UM_v1.0.0.audit from CIS Microsoft Exchange Server 2016 v1.0.0 Benchmark",
        "info": "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "reference": "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2",
        "value_data": "[\\s]+15\\.1[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsUnifiedMessagingServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_3": {
        "description": "Platform check",
        "value_data": "[\\s]+15\\.1[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsUnifiedMessagingServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_4": {
        "description": "2.10 Set 'Configure startup mode' to 'TLS'",
        "info": "Use this setting to start the UM Server in secure mode. This forces all dial plans to use TLS.\n\nRationale:\n\nCommunications between other VOIP systems and Exchange that are not protected by TLS are vulnerable to being captured by a malicious third party.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-UMService -Identity Exchange1 -UMStartUpMode TLS",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-UMService ; $settings | Format-List Identity, UMStartUpMode; If ($settings | Where {$_.UMStartUpMode -ne 'TLS'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_5": {
        "description": "2.12 Set 'Configure dial plan security' to 'Secured'",
        "info": "Use this setting to protect individual dial plans if the UM Server cannot be started in TLS Mode. To use this setting, the UM Server must be started in DUAL Mode.\n\nRationale:\n\nIf the UM role is not started in secure mode, each dial plan is individually vulnerable to traffic being captured by a malicious third party.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-UMDialPlan -identity MySecureDialPlan -VoIPSecurity Secured",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-UMDialPlan ; $settings | Format-List Identity, VoIPSecurity; If ($settings | Where {$_.VoIPSecurity -ne 'Secured'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_6": {
        "description": "2.13 Set 'Allow access to voicemail without requiring a PIN' to 'False'",
        "info": "Use this setting to ensure PIN access to mailbox data via voice is required.\n\nRationale:\n\nIf PINLess access is enabled, the mailbox data is unsecured and vulnerable to capture when being accessed via the phone",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-UMMailboxPolicy -id MyUMMailboxPolicy -AllowPinlessVoiceMailAccess $false",
        "reference": "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-UMMailboxPolicy ; $settings | Format-List Identity, AllowPinlessVoiceMailAccess; If ($settings | Where {$_.AllowPinlessVoiceMailAccess -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_7": {
        "description": "3.1 Set cmdlets 'Turn on Administrator Audit Logging' to 'True'",
        "info": "Administrator audit logging is used to provide a log of the settings that are changed by administrators anywhere in the system. By default this setting is turned on to ensure discovery of configuration related security breaches.\n\nRationale:\n\nAdministrators may be able to reconfigure the system to expose a vulnerability with no record of the changes made.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-AdminAuditLogConfig -AdminAuditLogCmdlets *",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "AdminAuditLogCmdlets[\\s]+:[\\s]+\\{\\*\\}",
        "powershell_args": "Get-AdminAuditLogConfig | Format-List -property AdminAuditLogCmdlets",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_8": {
        "description": "3.11 Set mailbox 'Turn on Administrator Audit Logging' to 'True'",
        "info": "Administrator audit logging is used to provide a log of the settings that are changed by administrators anywhere in the system. By default this setting is turned on to ensure discovery of configuration related security breaches.\n\nRationale:\n\nAdministrators may be able to reconfigure the system to expose a vulnerability with no record of the changes made.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-AdminAuditLogConfig -AdminAuditLogEnabled $true",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-AdminAuditLogConfig ; $settings | Format-List Identity, AdminAuditLogEnabled; If ($settings | Where {$_.AdminAuditLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    }
}