{
    "custom_item_1": {
        "description": "Test secure string",
        "value_data": ".*",
        "powershell_args": "hostname",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_2": {
        "description": "CIS_Microsoft_Exchange_Server_2016_Level_1_Edge_v1.0.0.audit from CIS Microsoft Exchange Server 2016 v1.0.0 Benchmark",
        "info": "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "reference": "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2",
        "value_data": "[\\s]+15\\.1[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsEdgeServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_3": {
        "description": "Platform check",
        "value_data": "[\\s]+15\\.1[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsEdgeServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_4": {
        "description": "1.1 Set 'Maximum send size - connector level' to '10240'",
        "info": "This setting limits the total size of messages at the connector level. This includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.\n\nRationale:\n\nThis setting somewhat limits the impact a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SendConnector 'Connection to Contoso.com' -MaxMessageSize 10240KB",
        "reference": "800-53|SC-5(1),800-53r5|SC-5(1),CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5(1),LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "Get-SendConnector | Format-List Identity, MaxMessageSize; if ( [int64]( (Get-SendConnector).MaxMessageSize -Replace '.*\\(' -Replace ' .*' )/1KB -gt 10240) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_5": {
        "description": "1.3 Set 'Enable Sender ID agent' to 'True'",
        "info": "The Sender ID agent is an antispam agent enabled on Exchange servers that perform the Edge Transport server role. Sender ID tries to verify that every e-mail message originates from the Internet domain from which it claims to have been sent. Sender ID checks the address of the server that sends the message against a registered list of servers that the domain owner has authorized to send e-mail.\n\nRationale:\n\nSpam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software.",
        "solution": "To remediate this settings, execute the following cmdlet:\n\nSet-SenderIDConfig -Enabled $true",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "Enabled[\\s]+:[\\s]+True",
        "powershell_args": "Get-SenderIDConfig | Format-List -property Enabled",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_6": {
        "description": "1.4 Set 'External send connector authentication: DNS Routing' to 'True'",
        "info": "Select this option to use DNS to route outbound mail. If enabled the connector will use DNS to resolve the IP address of the remote SMTP server.\n\nRationale:\n\nBasic authentication sends credentials across the network in plaintext. DNS routing helps protect connections from tampering or interception by unauthorized users.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SendConnector 'Connection to Contoso.com' -DNSRoutingEnabled $true",
        "reference": "800-53|SC-11,800-53r5|SC-11,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-11,ITSG-33|SC-11a.,LEVEL|1M,NIAv2|NS8,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SendConnector ; $settings | Format-List Identity, DNSRoutingEnabled; If ($settings | Where {$_.DNSRoutingEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_7": {
        "description": "1.6 Set 'Enable Sender reputation' to 'True' - SenderBlockingEnabled",
        "info": "When sender reputation is enabled on a computer, sender reputation filters all messages from all Receive connectors on that computer. Only messages from external sources are filtered. External sources are defined as non-authenticated sources, which are considered anonymous Internet sources.\n\nRationale:\n\nSpam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SenderReputationConfig -SenderBlockingEnabled $true -OpenProxyDetectionEnabled $true",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "SenderBlockingEnabled[\\s]+:[\\s]+True",
        "powershell_args": "Get-SenderReputationConfig | Format-List -property SenderBlockingEnabled",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_8": {
        "description": "1.6 Set 'Enable Sender reputation' to 'True' - OpenProxyDetectionEnabled",
        "info": "When sender reputation is enabled on a computer, sender reputation filters all messages from all Receive connectors on that computer. Only messages from external sources are filtered. External sources are defined as non-authenticated sources, which are considered anonymous Internet sources.\n\nRationale:\n\nSpam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SenderReputationConfig -SenderBlockingEnabled $true -OpenProxyDetectionEnabled $true",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "OpenProxyDetectionEnabled[\\s]+:[\\s]+True",
        "powershell_args": "Get-SenderReputationConfig | Format-List -property OpenProxyDetectionEnabled",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_9": {
        "description": "1.8 Set 'External send connector authentication: Ignore Start TLS' to 'False'",
        "info": "If this setting is enabled then you will not be able to configure mutual authentication TLS, referred to as 'External send connector authentication: Domain Security' in this baseline.\n\nRationale:\n\nBasic authentication sends credentials across the network in plaintext. TLS helps protect credentials from interception by unauthorized users.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nset-SendConnector -identity-IgnoreSTARTTLS: $false",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SendConnector ; $settings | Format-List Identity, IgnoreSTARTTLS; If ($settings | Where {$_.IgnoreSTARTTLS -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_10": {
        "description": "1.10 Set receive connector 'Configure Protocol logging' to 'Verbose'",
        "info": "A protocol log is a record of the SMTP activity between messaging servers as part of message delivery. This SMTP activity occurs on Send connectors and Receive connectors that are configured on Hub Transport servers and Edge Transport servers. By default, protocol logging is disabled.\n\nRationale:\n\nIf events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ReceiveConnector '' -ProtocolLoggingLevel Verbose",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-ReceiveConnector ; $settings | Format-List Identity, ProtocolLoggingLevel; If ($settings | Where {$_.ProtocolLoggingLevel -ne 'Verbose'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_11": {
        "description": "1.11 Set send connector 'Configure Protocol logging' to 'Verbose'",
        "info": "A protocol log is a record of the SMTP activity between messaging servers as part of message delivery. This SMTP activity occurs on Send connectors and Receive connectors that are configured on Hub Transport servers and Edge Transport servers. By default, protocol logging is disabled.\n\nRationale:\n\nIf events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SendConnector 'IDENTITY' -ProtocolLoggingLevel Verbose",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SendConnector ; $settings | Format-List Identity, ProtocolLoggingLevel; If ($settings | Where {$_.ProtocolLoggingLevel -ne 'Verbose'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_12": {
        "description": "1.12 Set 'External send connector authentication: Domain Security' to 'True'",
        "info": "It is preferable to use Exchange Authentication or IPsec for external send connectors. However, if you must use Basic authentication to enable Domain Security, using (Mutual Auth TLS) for external send connectors helps to protect credentials and e-mail sent to other organizations.\n\n\tIf enabled, the Send connector will attempt to establish a mutual Transport Layer Security (TLS) connection with remote servers when sending mail. There are additional configuration steps required before you can start using TLS. For more information about how to configure mutual TLS, see Using Domain Security: Configuring Mutual TLS [http://technet.microsoft.com/en-us/library/bb123543(EXCHG.140).aspx].\n\nRationale:\n\nBasic authentication sends credentials across the network in plaintext. Domain Security (Mutual Auth TLS) helps protect credentials from interception by unauthorized users.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nset-sendconnector -Identity-DomainSecureEnabled $true",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-SendConnector ; $settings | Format-List Identity, DomainSecureEnabled; If ($settings | Where {$_.DomainSecureEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_13": {
        "description": "1.16 Set 'Turn on Connectivity logging' to 'True'",
        "info": "A connectivity log is a record of the SMTP connection activity of the outbound message delivery queues to the destination Mailbox server, smart host, or domain. Connectivity logging is available on Hub Transport servers and Edge Transport servers. By default, connectivity logging is disabled.\n\nRationale:\n\nIf events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-TransportService EXCHANGE1 -ConnectivityLogEnabled $true",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-TransportService ; $settings | Format-List Identity, ConnectivityLogEnabled; If ($settings | Where {$_.ConnectivityLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    }
}