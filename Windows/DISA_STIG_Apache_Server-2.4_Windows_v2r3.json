{
    "custom_item_1": {
        "description": "Apache HTTP Server 2.4.x is installed and running on the system",
        "value_data": "Automatic",
        "service_name": "@HTTPD_SERVICE@"
    },
    "custom_item_2": {
        "description": "AS24-W1-000010 - The Apache web server must limit the number of allowed simultaneous session requests.",
        "info": "Apache web server management includes the ability to control the number of users and user sessions that utilize an Apache web server. Limiting the number of allowed users and sessions per user is helpful in limiting risks related to several types of denial-of-service (DoS) attacks.\n\nAlthough there is some latitude concerning the settings, they should follow DoD-recommended values, but the settings should be configurable to allow for future DoD direction. While the DoD will specify recommended values, the values can be adjusted to accommodate the operational requirement of a given system.",
        "solution": "With an editor, open the configuration file:\\conf\\extra\\httpd-default\n\nSearch for the following directive:\n\nMaxKeepAliveRequests\n\nSet the 'MaxKeepAliveRequests' directive to a value of '100' or greater. Add the 'MaxKeepAliveRequests' directive if it does not exist.\n\nIt is recommended that the 'MaxKeepAliveRequests' directive be explicitly set to prevent unexpected results if the defaults change with updated software.",
        "reference": "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-214306r879511_rule,STIG-ID|AS24-W1-000010,STIG-Legacy|SV-102415,STIG-Legacy|V-92327,Vuln-ID|V-214306",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_DEFAULT_LOCATION@"
    },
    "custom_item_3": {
        "description": "AS24-W1-000020 - The Apache web server must perform server-side session management - usertrack_module",
        "info": "Session management is the practice of protecting the bulk of the user authorization and identity information. Storing of this data can occur on the client system or on the server.\n\nWhen the session information is stored on the client, the session ID, along with the user authorization and identity information, is sent along with each client request and is stored in a cookie, embedded in the uniform resource locator (URL), or placed in a hidden field on the displayed form. Each of these offers advantages and disadvantages. The biggest disadvantage to all three is the possibility of the hijacking of a session along with all of the user's credentials.\n\nWhen the user authorization and identity information is stored on the server in a protected and encrypted database, the communication between the client and Apache web server will only send the session identifier, and the server can then retrieve user credentials for the session when needed. If, during transmission, the session were to be hijacked, the user's credentials would not be compromised.",
        "solution": "Uncomment the 'usertrack_module' module line and the 'session_module' module in the <'INSTALL PATH'>\\conf\\httpd.conf file.\n\nRestart the Apache service.\n\nAdditional documentation can be found at:\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_usertrack.html\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_session.html",
        "reference": "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-214307r879511_rule,STIG-ID|AS24-W1-000020,STIG-Legacy|SV-102417,STIG-Legacy|V-92329,Vuln-ID|V-214307",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_4": {
        "description": "AS24-W1-000020 - The Apache web server must perform server-side session management - session_module",
        "info": "Session management is the practice of protecting the bulk of the user authorization and identity information. Storing of this data can occur on the client system or on the server.\n\nWhen the session information is stored on the client, the session ID, along with the user authorization and identity information, is sent along with each client request and is stored in a cookie, embedded in the uniform resource locator (URL), or placed in a hidden field on the displayed form. Each of these offers advantages and disadvantages. The biggest disadvantage to all three is the possibility of the hijacking of a session along with all of the user's credentials.\n\nWhen the user authorization and identity information is stored on the server in a protected and encrypted database, the communication between the client and Apache web server will only send the session identifier, and the server can then retrieve user credentials for the session when needed. If, during transmission, the session were to be hijacked, the user's credentials would not be compromised.",
        "solution": "Uncomment the 'usertrack_module' module line and the 'session_module' module in the <'INSTALL PATH'>\\conf\\httpd.conf file.\n\nRestart the Apache service.\n\nAdditional documentation can be found at:\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_usertrack.html\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_session.html",
        "reference": "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-214307r879511_rule,STIG-ID|AS24-W1-000020,STIG-Legacy|SV-102417,STIG-Legacy|V-92329,Vuln-ID|V-214307",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_5": {
        "description": "AS24-W1-000030 - The Apache web server must use encryption strength in accordance with the categorization of data hosted by the Apache web server when remote connections are provided - ssl_module",
        "info": "The Apache web server has several remote communications channels. Examples are user requests via http/https, communication to a backend database, and communication to authenticate users. The encryption used to communicate must match the data that is being retrieved or presented.\n\nMethods of communication are 'http' for publicly displayed information, 'https' to encrypt when user data is being transmitted, VPN tunneling, or other encryption methods to a database.\n\nSatisfies: SRG-APP-000014-WSR-000006, SRG-APP-000015-WSR-000014, SRG-APP-000033-WSR-000169, SRG-APP-000179-WSR-000110, SRG-APP-000179-WSR-000111, SRG-APP-000439-WSR-000152, SRG-APP-000439-WSR-000154, SRG-APP-000439-WSR-000188, SRG-APP-000442-WSR-000182",
        "solution": "Ensure the 'ssl_module' is loaded in the httpd.conf file (not commented out).\n\nEnsure the 'SSLProtocol' is added and looks like the following in the <'INSTALL PATH'>\\conf\\httpd.conf file:\n\nSSLProtocol -ALL +TLSv1.2\n\nRestart the Apache service.",
        "reference": "800-171|3.1.1,800-171|3.1.13,800-171|3.13.8,800-53|AC-3,800-53|AC-17(2),800-53|IA-7,800-53|SC-8,800-53|SC-8(2),800-53r5|AC-3,800-53r5|AC-17(2),800-53r5|IA-7,800-53r5|SC-8,800-53r5|SC-8(2),CAT|II,CCI|CCI-000068,CCI|CCI-000213,CCI|CCI-000803,CCI|CCI-001453,CCI|CCI-002418,CCI|CCI-002422,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.2(f),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-3,CSF|PR.AC-4,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-3,CSF|PR.PT-4,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-17(2),ITSG-33|IA-7,ITSG-33|IA-7a.,ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T4.2.1,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.4.2,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.3.3,NESA|T7.4.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,NIAv2|SS29,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-214308r879519_rule,STIG-ID|AS24-W1-000030,STIG-Legacy|SV-102419,STIG-Legacy|V-92331,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,TBA-FIISB|31.1,Vuln-ID|V-214308",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_6": {
        "description": "AS24-W1-000030 - The Apache web server must use encryption strength in accordance with the categorization of data hosted by the Apache web server when remote connections are provided - SSLProtocol",
        "info": "The Apache web server has several remote communications channels. Examples are user requests via http/https, communication to a backend database, and communication to authenticate users. The encryption used to communicate must match the data that is being retrieved or presented.\n\nMethods of communication are 'http' for publicly displayed information, 'https' to encrypt when user data is being transmitted, VPN tunneling, or other encryption methods to a database.\n\nSatisfies: SRG-APP-000014-WSR-000006, SRG-APP-000015-WSR-000014, SRG-APP-000033-WSR-000169, SRG-APP-000179-WSR-000110, SRG-APP-000179-WSR-000111, SRG-APP-000439-WSR-000152, SRG-APP-000439-WSR-000154, SRG-APP-000439-WSR-000188, SRG-APP-000442-WSR-000182",
        "solution": "Ensure the 'ssl_module' is loaded in the httpd.conf file (not commented out).\n\nEnsure the 'SSLProtocol' is added and looks like the following in the <'INSTALL PATH'>\\conf\\httpd.conf file:\n\nSSLProtocol -ALL +TLSv1.2\n\nRestart the Apache service.",
        "reference": "800-171|3.1.1,800-171|3.1.13,800-171|3.13.8,800-53|AC-3,800-53|AC-17(2),800-53|IA-7,800-53|SC-8,800-53|SC-8(2),800-53r5|AC-3,800-53r5|AC-17(2),800-53r5|IA-7,800-53r5|SC-8,800-53r5|SC-8(2),CAT|II,CCI|CCI-000068,CCI|CCI-000213,CCI|CCI-000803,CCI|CCI-001453,CCI|CCI-002418,CCI|CCI-002422,CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.2(f),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-3,CSF|PR.AC-4,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-3,CSF|PR.PT-4,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-17(2),ITSG-33|IA-7,ITSG-33|IA-7a.,ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T4.2.1,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.4.2,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.3.3,NESA|T7.4.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,NIAv2|SS29,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-214308r879519_rule,STIG-ID|AS24-W1-000030,STIG-Legacy|SV-102419,STIG-Legacy|V-92331,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,TBA-FIISB|31.1,Vuln-ID|V-214308",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_7": {
        "description": "AS24-W1-000065 - System logging must be enabled.",
        "info": "The server error logs are invaluable because they can also be used to identify potential problems and enable proactive remediation. Log data can reveal anomalous behavior such as 'not found' or 'unauthorized' errors that may be an evidence of attack attempts. Failure to enable error logging can significantly reduce the ability of Web Administrators to detect or remediate problems. The CustomLog directive specifies the log file, syslog facility, or piped logging utility.",
        "solution": "Edit the httpd.conf file and enter the name, path, and level for the CustomLog.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-214309r881525_rule,STIG-ID|AS24-W1-000065,STIG-Legacy|SV-102425,STIG-Legacy|V-92337,SWIFT-CSCv1|2.3,Vuln-ID|V-214309",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_8": {
        "description": "AS24-W1-000070 - The Apache web server must generate, at a minimum, log records for system startup and shutdown, system access, and system authentication events.",
        "info": "Log records can be generated from various components within the Apache web server (e.g., httpd, plug-ins to external backends, etc.). From a web server perspective, certain specific Apache web server functionalities may be logged as well. The Apache web server must allow the definition of what events are to be logged. As conditions change, the number and types of events to be logged may change, and the Apache web server must be able to facilitate these changes.\n\nThe minimum list of logged events should be those pertaining to system startup and shutdown, system access, and system authentication events. If these events are not logged at a minimum, any type of forensic investigation would be missing pertinent information needed to replay what occurred.\n\nSatisfies: SRG-APP-000089-WSR-000047, SRG-APP-000092-WSR-000055",
        "solution": "Uncomment the 'log_config_module' module line in the <'INSTALL PATH'>\\conf\\httpd.conf file.\n\nRestart the Apache service.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53|AU-14(1),800-53r5|AU-12a.,800-53r5|AU-14(1),CAT|II,CCI|CCI-000169,CCI|CCI-001464,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,ITSG-33|AU-14,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214310r879559_rule,STIG-ID|AS24-W1-000070,STIG-Legacy|SV-102427,STIG-Legacy|V-92339,SWIFT-CSCv1|6.4,Vuln-ID|V-214310",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_9": {
        "description": "AS24-W1-000090 - The Apache web server must produce log records containing sufficient information to establish what type of events occurred.",
        "info": "Web server logging capability is critical for accurate forensic analysis. Without sufficient and accurate information, a correct replay of the events cannot be determined.\n\nAscertaining the correct type of event that occurred is important during forensic analysis. The correct determination of the event and when it occurred is important in relation to other events that happened at that same time.\n\nWithout sufficient information establishing what type of log event occurred, investigation into the cause of event is severely hindered. Log record content that may be necessary to satisfy the requirement of this control includes but is not limited to time stamps, source and destination IP addresses, user/process identifiers, event descriptions, application-specific events, success/fail indications, file names involved, access control, and flow control rules invoked.\n\nSatisfies: SRG-APP-000095-WSR-000056, SRG-APP-000096-WSR-000057, SRG-APP-000097-WSR-000058, SRG-APP-000098-WSR-000059, SRG-APP-000099-WSR-000061, SRG-APP-000100-WSR-000064",
        "solution": "Configure the 'LogFormat' in the 'httpd.conf' file to look like the following:\n\nLogFormat '%a %A %h %H %l %m %s %t %u %U \\'%{Referer}i\\' ' combined\n\nRestart the Apache service.\n\nNOTE: Your log format may be using different variables based on your environment, however, it should be verified to be producing the same end result of logged elements.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000130,CCI|CCI-000131,CCI|CCI-000132,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-001487,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214311r879563_rule,STIG-ID|AS24-W1-000090,STIG-Legacy|SV-102431,STIG-Legacy|V-92343,SWIFT-CSCv1|6.4,Vuln-ID|V-214311",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_10": {
        "description": "AS24-W1-000130 - An Apache web server, behind a load balancer or proxy server, must produce log records containing the client IP information as the source and destination and not the load balancer or proxy IP information with each event.",
        "info": "Apache web server logging capability is critical for accurate forensic analysis. Without sufficient and accurate information, a correct replay of the events cannot be determined.\n\nAscertaining the correct source, e.g., source IP, of the events is important during forensic analysis. Correctly determining the source will add information to the overall reconstruction of the logable event. By determining the source of the event correctly, analysis of the enterprise can be undertaken to determine if the event compromised other assets within the enterprise.\n\nWithout sufficient information establishing the source of the logged event, investigation into the cause of event is severely hindered. Log record content that may be necessary to satisfy the requirement of this control includes but is not limited to time stamps, source and destination IP addresses, user/process identifiers, event descriptions, application-specific events, success/fail indications, file names involved, access control, and flow control rules invoked.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Access the proxy server through which inbound web traffic is passed and configure settings to pass web traffic to the Apache web server transparently.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000133,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214312r879566_rule,STIG-ID|AS24-W1-000130,STIG-Legacy|SV-102439,STIG-Legacy|V-92351,SWIFT-CSCv1|6.4,Vuln-ID|V-214312",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "powershell_args": "get-content @HTTPD_CONF_LOCATION@\\\\httpd.conf | select-string -Pattern '^\\s*(CustomLog|ErrorLog|BufferedLog)'"
    },
    "custom_item_11": {
        "description": "AS24-W1-000180 - The Apache web server log files must only be accessible by privileged users.",
        "info": "Log data is essential in the investigation of events. If log data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be difficult, if not impossible, to achieve. In addition, access to log records provides information an attacker could potentially use to their advantage since each event record might contain communication ports, protocols, services, trust relationships, user names, etc.\n\nThe web server must protect the log data from unauthorized read, write, copy, etc. This can be done by the web server if the web server is also doing the logging function. The web server may also use an external log system. In either case, the logs must be protected from access by non-privileged users.",
        "solution": "To maintain the integrity of the data that is being captured in the log files, ensure that only the members of the Auditors group, Administrators, and the user assigned to run the web server software are granted permissions to read the log files.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000162,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214314r879576_rule,STIG-ID|AS24-W1-000180,STIG-Legacy|SV-102447,STIG-Legacy|V-92359,Vuln-ID|V-214314",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "powershell_args": "$file = '@HTTPD_LOG_PATH@\\\\*'; $status = 'PASSED'; $acls = (icacls $file); foreach ($acl in $acls) { if (!$acl) { continue } elseif ($acl -like '*NT AUTHORITY\\SYSTEM:*') { $acl; continue } elseif ($acl -like '*ADMINISTRATORS:*') { $acl; continue } elseif ($acl -like '*Auditors:*') { $acl; continue } elseif ($acl -like '*Web Managers:*') { $acl; continue } elseif ($acl -like '*@HTTPD_LOG_OWNER@:*') { $acl; continue } elseif ($acl -like 'Successfully processed *') { continue } else { $acl + '- WARNING - extra permissions'; $status = 'FAILED' } } ''; 'STATUS: '+$status"
    },
    "custom_item_12": {
        "description": "AS24-W1-000200 - The log information from the Apache web server must be protected from unauthorized deletion and modification.",
        "info": "Log data is essential in the investigation of events. The accuracy of the information is always pertinent. Information that is not accurate does not help in the revealing of potential security risks and may hinder the early discovery of a system compromise. One of the first steps an attacker will undertake is the modification or deletion of log records to cover his tracks and prolong discovery.\n\nThe web server must protect the log data from unauthorized modification. This can be done by the web server if the web server is also doing the logging function. The web server may also use an external log system. In either case, the logs must be protected from modification by non-privileged users.\n\nSatisfies: SRG-APP-000120-WSR-000070, SRG-APP-000119-WSR-000069\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Obtain the log location by reviewing the <'INSTALL PATH'>\\conf\\httpd.conf file.\n\nClick the 'Browse' button and navigate to the directory where the log files are stored.\n\nRight-click the log file name to review and click 'Properties'.\n\nClick the 'Security' tab.\n\nSet the log file permissions for the appropriate group(s).\n\nClick 'OK'.\n\nSelect 'Apply' in the 'Actions' pane.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000163,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214315r879578_rule,STIG-ID|AS24-W1-000200,STIG-Legacy|SV-102451,STIG-Legacy|V-92363,Vuln-ID|V-214315",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "powershell_args": "icacls @HTTPD_LOG_PATH@\\\\*"
    },
    "custom_item_13": {
        "description": "AS24-W1-000960 - The Apache web server software must be a vendor-supported version.",
        "info": "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Without this notification, the security personnel may be unaware of an impending failure of the audit capability and system operation may be adversely affected.\n\nAudit processing failures include software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.\n\nThis requirement applies to each audit data storage repository (i.e., distinct information system component where audit records are stored), the centralized audit storage capacity of organizations (i.e., all audit data storage repositories combined), or both.\n\nNOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.",
        "solution": "Work with the SIEM administrator to configure an alert when no audit data is received from Apache based on the defined schedule of connections.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-214360r879887_rule,STIG-ID|AS24-W1-000970,STIG-Legacy|SV-104685,STIG-Legacy|V-94855,SWIFT-CSCv1|2.3,Vuln-ID|V-214360",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "MEDIUMdescription": "AS24-W1-000970 - The Apache web server must alert the ISSO and SA (at a minimum) in the event of an audit processing failure.",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf",
        "expect": "Manual Review Required",
        "powershell_args": "@HTTPD_EXECUTABLE_LOCATION@ -v"
    },
    "custom_item_14": {
        "description": "AS24-W1-000250 - The Apache web server must only contain services and functions necessary for operation - SetHandler server-status",
        "info": "A web server can provide many features, services, and processes. Some of these may be deemed unnecessary or too unsecure to run on a production DoD system.\n\nThe web server must provide the capability to disable, uninstall, or deactivate functionality and services that are deemed to be non-essential to the web server mission or can adversely impact server performance.",
        "solution": "Review all pre-installed content and remove content that is not required. In particular, look for the unnecessary content that may be found in the document root directory, a configuration directory such as conf/extra directory, or as a UNIX/Linux package\n\nRemove the default index.html or welcome page if it is a separate package. If the default welcome page is part of the main Apache httpd package as it is on Red Hat Linux, comment out the configuration as shown below. Removing a file such as the 'welcome.conf' is not recommended as it may be replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n#### Options -Indexes\n## ErrorDocument 403 /error/noindex.html\n##Remove the Apache User Manual content or comment out configurations referencing the manual:\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration:\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any Server Information handler configuration:\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-info\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status:\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler perl-script\n## PerlResponseHandler Apache2::Status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##The default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the inclusion of conf/extra/proxyhtml.conf is not commented out in 'httpd.conf':\n\n# Server-pool management (MPM specific)\n#Include conf/extra/httpd-mpm.conf\n# Multi-language error messages\n#Include conf/extra/httpd-multilang-errordoc.conf\n# Fancy directory listings\n#Include conf/extra/httpd-autoindex.conf\n# Language settings\n#Include conf/extra/httpd-languages.conf\n# User home directories\n#Include conf/extra/httpd-userdir.conf\n# Real-time info on requests and configuration\n#Include conf/extra/httpd-info.conf\n# Virtual hosts\n#Include conf/extra/httpd-vhosts.conf\n# Local access to the Apache HTTP Server Manual\n#Include conf/extra/httpd-manual.conf\n# Distributed authoring and versioning (WebDAV)\n#Include conf/extra/httpd-dav.conf\n# Various default settings\n#Include conf/extra/httpd-default.conf\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n#Include conf/extra/httpd-ssl.conf\n\nFor applications developed in-house, ensure that development artifacts (sample data and scripts; unused libraries, components, debug code; or tools) are not included in the deployed software or accessible in the production environment.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214319r879587_rule,STIG-ID|AS24-W1-000250,STIG-Legacy|SV-102459,STIG-Legacy|V-92371,SWIFT-CSCv1|2.3,Vuln-ID|V-214319",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_15": {
        "description": "AS24-W1-000250 - The Apache web server must only contain services and functions necessary for operation - SetHandler server-info",
        "info": "A web server can provide many features, services, and processes. Some of these may be deemed unnecessary or too unsecure to run on a production DoD system.\n\nThe web server must provide the capability to disable, uninstall, or deactivate functionality and services that are deemed to be non-essential to the web server mission or can adversely impact server performance.",
        "solution": "Review all pre-installed content and remove content that is not required. In particular, look for the unnecessary content that may be found in the document root directory, a configuration directory such as conf/extra directory, or as a UNIX/Linux package\n\nRemove the default index.html or welcome page if it is a separate package. If the default welcome page is part of the main Apache httpd package as it is on Red Hat Linux, comment out the configuration as shown below. Removing a file such as the 'welcome.conf' is not recommended as it may be replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n#### Options -Indexes\n## ErrorDocument 403 /error/noindex.html\n##Remove the Apache User Manual content or comment out configurations referencing the manual:\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration:\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any Server Information handler configuration:\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-info\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status:\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler perl-script\n## PerlResponseHandler Apache2::Status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##The default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the inclusion of conf/extra/proxyhtml.conf is not commented out in 'httpd.conf':\n\n# Server-pool management (MPM specific)\n#Include conf/extra/httpd-mpm.conf\n# Multi-language error messages\n#Include conf/extra/httpd-multilang-errordoc.conf\n# Fancy directory listings\n#Include conf/extra/httpd-autoindex.conf\n# Language settings\n#Include conf/extra/httpd-languages.conf\n# User home directories\n#Include conf/extra/httpd-userdir.conf\n# Real-time info on requests and configuration\n#Include conf/extra/httpd-info.conf\n# Virtual hosts\n#Include conf/extra/httpd-vhosts.conf\n# Local access to the Apache HTTP Server Manual\n#Include conf/extra/httpd-manual.conf\n# Distributed authoring and versioning (WebDAV)\n#Include conf/extra/httpd-dav.conf\n# Various default settings\n#Include conf/extra/httpd-default.conf\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n#Include conf/extra/httpd-ssl.conf\n\nFor applications developed in-house, ensure that development artifacts (sample data and scripts; unused libraries, components, debug code; or tools) are not included in the deployed software or accessible in the production environment.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214319r879587_rule,STIG-ID|AS24-W1-000250,STIG-Legacy|SV-102459,STIG-Legacy|V-92371,SWIFT-CSCv1|2.3,Vuln-ID|V-214319",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_16": {
        "description": "AS24-W1-000250 - The Apache web server must only contain services and functions necessary for operation - SetHandler other",
        "info": "A web server can provide many features, services, and processes. Some of these may be deemed unnecessary or too unsecure to run on a production DoD system.\n\nThe web server must provide the capability to disable, uninstall, or deactivate functionality and services that are deemed to be non-essential to the web server mission or can adversely impact server performance.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Review all pre-installed content and remove content that is not required. In particular, look for the unnecessary content that may be found in the document root directory, a configuration directory such as conf/extra directory, or as a UNIX/Linux package\n\nRemove the default index.html or welcome page if it is a separate package. If the default welcome page is part of the main Apache httpd package as it is on Red Hat Linux, comment out the configuration as shown below. Removing a file such as the 'welcome.conf' is not recommended as it may be replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n#### Options -Indexes\n## ErrorDocument 403 /error/noindex.html\n##Remove the Apache User Manual content or comment out configurations referencing the manual:\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration:\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any Server Information handler configuration:\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-info\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status:\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler perl-script\n## PerlResponseHandler Apache2::Status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##The default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the inclusion of conf/extra/proxyhtml.conf is not commented out in 'httpd.conf':\n\n# Server-pool management (MPM specific)\n#Include conf/extra/httpd-mpm.conf\n# Multi-language error messages\n#Include conf/extra/httpd-multilang-errordoc.conf\n# Fancy directory listings\n#Include conf/extra/httpd-autoindex.conf\n# Language settings\n#Include conf/extra/httpd-languages.conf\n# User home directories\n#Include conf/extra/httpd-userdir.conf\n# Real-time info on requests and configuration\n#Include conf/extra/httpd-info.conf\n# Virtual hosts\n#Include conf/extra/httpd-vhosts.conf\n# Local access to the Apache HTTP Server Manual\n#Include conf/extra/httpd-manual.conf\n# Distributed authoring and versioning (WebDAV)\n#Include conf/extra/httpd-dav.conf\n# Various default settings\n#Include conf/extra/httpd-default.conf\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n#Include conf/extra/httpd-ssl.conf\n\nFor applications developed in-house, ensure that development artifacts (sample data and scripts; unused libraries, components, debug code; or tools) are not included in the deployed software or accessible in the production environment.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214319r879587_rule,STIG-ID|AS24-W1-000250,STIG-Legacy|SV-102459,STIG-Legacy|V-92371,SWIFT-CSCv1|2.3,Vuln-ID|V-214319",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_17": {
        "description": "AS24-W1-000250 - The Apache web server must only contain services and functions necessary for operation - conf/extra/proxy-html.conf",
        "info": "A web server can provide many features, services, and processes. Some of these may be deemed unnecessary or too unsecure to run on a production DoD system.\n\nThe web server must provide the capability to disable, uninstall, or deactivate functionality and services that are deemed to be non-essential to the web server mission or can adversely impact server performance.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Review all pre-installed content and remove content that is not required. In particular, look for the unnecessary content that may be found in the document root directory, a configuration directory such as conf/extra directory, or as a UNIX/Linux package\n\nRemove the default index.html or welcome page if it is a separate package. If the default welcome page is part of the main Apache httpd package as it is on Red Hat Linux, comment out the configuration as shown below. Removing a file such as the 'welcome.conf' is not recommended as it may be replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n#### Options -Indexes\n## ErrorDocument 403 /error/noindex.html\n##Remove the Apache User Manual content or comment out configurations referencing the manual:\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration:\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any Server Information handler configuration:\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler server-info\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status:\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n#### SetHandler perl-script\n## PerlResponseHandler Apache2::Status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##The default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the inclusion of conf/extra/proxyhtml.conf is not commented out in 'httpd.conf':\n\n# Server-pool management (MPM specific)\n#Include conf/extra/httpd-mpm.conf\n# Multi-language error messages\n#Include conf/extra/httpd-multilang-errordoc.conf\n# Fancy directory listings\n#Include conf/extra/httpd-autoindex.conf\n# Language settings\n#Include conf/extra/httpd-languages.conf\n# User home directories\n#Include conf/extra/httpd-userdir.conf\n# Real-time info on requests and configuration\n#Include conf/extra/httpd-info.conf\n# Virtual hosts\n#Include conf/extra/httpd-vhosts.conf\n# Local access to the Apache HTTP Server Manual\n#Include conf/extra/httpd-manual.conf\n# Distributed authoring and versioning (WebDAV)\n#Include conf/extra/httpd-dav.conf\n# Various default settings\n#Include conf/extra/httpd-default.conf\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n#Include conf/extra/httpd-ssl.conf\n\nFor applications developed in-house, ensure that development artifacts (sample data and scripts; unused libraries, components, debug code; or tools) are not included in the deployed software or accessible in the production environment.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214319r879587_rule,STIG-ID|AS24-W1-000250,STIG-Legacy|SV-102459,STIG-Legacy|V-92371,SWIFT-CSCv1|2.3,Vuln-ID|V-214319",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_18": {
        "description": "AS24-W1-000260 - The Apache web server must not be a proxy server.",
        "info": "A web server should be primarily a web server or a proxy server but not both, for the same reasons that other multi-use servers are not recommended. Scanning for web servers that will also proxy requests into an otherwise protected network is a very common attack, making the attack anonymous.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and remove the following modules:\n\nproxy_module\nproxy_ajp_module\nproxy_balancer_module\nproxy_ftp_module\nproxy_http_module\nproxy_connect_module",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214320r879587_rule,STIG-ID|AS24-W1-000260,STIG-Legacy|SV-102461,STIG-Legacy|V-92373,SWIFT-CSCv1|2.3,Vuln-ID|V-214320",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_19": {
        "description": "AS24-W1-000300 - The Apache web server must have resource mappings set to disable the serving of certain file types.",
        "info": "Resource mapping is the process of tying a particular file type to a process in the web server that can serve that type of file to a requesting client and to identify which file types are not to be delivered to a client.\n\nBy not specifying which files can and cannot be served to a user, the web server could deliver to a user web server configuration files, log files, password files, etc.\n\nThe web server must only allow hosted application file types to be served to a user, and all other types must be disabled.\n\nSatisfies: SRG-APP-000141-WSR-000081, SRG-APP-000141-WSR-000083",
        "solution": "Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\nIf 'Action' or 'AddHandler' exist and they configure .exe, .dll, .com, .bat, or .csh, remove those references.\n\nRestart the Apache service.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214323r879587_rule,STIG-ID|AS24-W1-000300,STIG-Legacy|SV-102469,STIG-Legacy|V-92381,SWIFT-CSCv1|2.3,Vuln-ID|V-214323",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_20": {
        "description": "AS24-W1-000310 - The Apache web server must allow the mappings to unused and vulnerable scripts to be removed.",
        "info": "Scripts allow server-side processing on behalf of the hosted application user or as processes needed in the implementation of hosted applications. Removing scripts not needed for application operation or deemed vulnerable helps to secure the web server.\n\nTo ensure scripts are not added to the web server and run maliciously, script mappings that are not needed or used by the web server for hosted application operation must be removed.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Remove any scripts in cgi-bin directory if they are not needed for application operation.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214324r879587_rule,STIG-ID|AS24-W1-000310,STIG-Legacy|SV-102471,STIG-Legacy|V-92383,SWIFT-CSCv1|2.3,Vuln-ID|V-214324",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf",
        "expect": "Manual Review Required"
    },
    "custom_item_21": {
        "description": "AS24-W1-000330 - The Apache web server must have Web Distributed Authoring (WebDAV) disabled.",
        "info": "A web server can be installed with functionality that, just by its nature, is not secure. WebDAV is an extension to the HTTP protocol that, when developed, was meant to allow users to create, change, and move documents on a server, typically a web server or web share. Allowing this functionality, development, and deployment is much easier for web authors.\n\nWebDAV is not widely used and has serious security concerns because it may allow clients to modify unauthorized files on the web server.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and remove the following modules:\n\ndav_module\ndav_fs_module\ndav_lock_module\n\nRestart the Apache service.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-214325r879587_rule,STIG-ID|AS24-W1-000330,STIG-Legacy|SV-102475,STIG-Legacy|V-92387,SWIFT-CSCv1|2.3,Vuln-ID|V-214325",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_22": {
        "description": "AS24-W1-000360 - The Apache web server must be configured to use a specified IP address and port - IP or Port Only",
        "info": "The web server must be configured to listen on a specified IP address and port. Without specifying an IP address and port for the web server to use, the web server will listen on all IP addresses available to the hosting server. If the web server has multiple IP addresses, i.e., a management IP address, the web server will also accept connections on the management IP address.\n\nAccessing the hosted application through an IP address normally used for non-application functions opens the possibility of user access to resources, utilities, files, ports, and protocols that are protected on the desired application IP address.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and set the 'Listen' directive to listen on a specific IP address and port.\n\nRestart the Apache service.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CAT|II,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-214326r879588_rule,STIG-ID|AS24-W1-000360,STIG-Legacy|SV-102477,STIG-Legacy|V-92389,SWIFT-CSCv1|2.3,Vuln-ID|V-214326",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_23": {
        "description": "AS24-W1-000360 - The Apache web server must be configured to use a specified IP address and port - Zero IPs Only",
        "info": "The web server must be configured to listen on a specified IP address and port. Without specifying an IP address and port for the web server to use, the web server will listen on all IP addresses available to the hosting server. If the web server has multiple IP addresses, i.e., a management IP address, the web server will also accept connections on the management IP address.\n\nAccessing the hosted application through an IP address normally used for non-application functions opens the possibility of user access to resources, utilities, files, ports, and protocols that are protected on the desired application IP address.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and set the 'Listen' directive to listen on a specific IP address and port.\n\nRestart the Apache service.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CAT|II,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-214326r879588_rule,STIG-ID|AS24-W1-000360,STIG-Legacy|SV-102477,STIG-Legacy|V-92389,SWIFT-CSCv1|2.3,Vuln-ID|V-214326",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_24": {
        "description": "AS24-W1-000370 - The Apache web server must encrypt passwords during transmission.",
        "info": "Data used to authenticate, especially passwords, needs to be protected at all times, and encryption is the standard method for protecting authentication data during transmission. Data used to authenticate can be passed to and from the web server for many reasons.\n\nExamples include data passed from a user to the web server through an HTTPS connection for authentication, the web server authenticating to a backend database for data retrieval and posting, and the web server authenticating to a clustered web server manager for an update.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and set the value of 'SSLVerifyClient' to 'require'.\n\nRestart the Apache service.",
        "reference": "800-171|3.5.10,800-53|IA-5(1)(c),800-53r5|IA-5(1)(c),CAT|II,CCI|CCI-000197,CSF|PR.AC-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-214327r879609_rule,STIG-ID|AS24-W1-000370,STIG-Legacy|SV-102479,STIG-Legacy|V-92391,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-214327",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_25": {
        "description": "AS24-W1-000380 - The Apache web server must perform RFC 5280-compliant certification path validation.",
        "info": "A certificate's certification path is the path from the end entity certificate to a trusted root certification authority (CA). Certification path validation is necessary for a relying party to make an informed decision regarding acceptance of an end entity certificate. Certification path validation includes checks such as certificate issuer trust, time validity, and revocation status for each certificate in the certification path. Revocation status information for CA and subject certificates in a certification path is commonly provided via certificate revocation lists (CRLs) or online certificate status protocol (OCSP) responses.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure the web server's trust store to trust only DoD-approved PKIs (e.g., DoD PKI, DoD ECA, and DoD-approved external partners).\n\nRestart the Apache service.",
        "reference": "800-171|3.5.2,800-53|IA-5(2)(a),800-53r5|IA-5(2)(a),CAT|II,CCI|CCI-000185,CSF|PR.AC-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(2)(a),NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-214328r879612_rule,STIG-ID|AS24-W1-000380,STIG-Legacy|SV-102481,STIG-Legacy|V-92393,Vuln-ID|V-214328",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_26": {
        "description": "AS24-W1-000460 - The Apache web server must invalidate session identifiers upon hosted application user logout or other session termination.",
        "info": "Captured sessions can be reused in 'replay' attacks. This requirement limits the ability of adversaries from capturing and continuing to employ previously valid session IDs.\n\nSession IDs are tokens generated by web applications to uniquely identify an application user's session. Unique session IDs help to reduce predictability of said identifiers. When a user logs out, or when any other session termination event occurs, the web server must terminate the user session to minimize the potential for an attacker to hijack that particular user session.",
        "solution": "Open the <'INSTALL PATH'>\\conf\\httpd.conf file.\n\nSet the 'SessionMaxAge' directive to a value of no more than '600'.\nAdd the directive if it does not exist.\n\nRestart the Apache service.",
        "reference": "800-171|3.13.15,800-53|SC-23(1),800-53r5|SC-23(1),CAT|II,CCI|CCI-001185,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(1),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214331r879637_rule,STIG-ID|AS24-W1-000460,STIG-Legacy|SV-102493,STIG-Legacy|V-92405,Vuln-ID|V-214331",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_27": {
        "description": "AS24-W1-000470 - Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application - Header HttpOnly secure",
        "info": "Cookies are used to exchange data between the web server and the client. Cookies, such as a session cookie, may contain session information and user credentials used to maintain a persistent connection between the user and the hosted application since HTTP/HTTPS is a stateless protocol.\n\nWhen the cookie parameters are not set properly (i.e., domain and path parameters), cookies can be shared within hosted applications residing on the same web server or to applications hosted on different web servers residing on the same domain.",
        "solution": "Add this line to 'httpd.conf' file:\n\nHeader always edit Set-Cookie ^(.*)$ $1;HttpOnly;secure\n\nAdd the secure attribute to the JavaScript set cookie:\n\nfunction setCookie() { document.cookie = 'ALEPH_SESSION_ID = $SESS; path = /; secure'; }\n\nHttpOnly cannot be used since by definition this is a cookie set by JavaScript.\n\nRestart the Apache service.",
        "reference": "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001664,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214332r879638_rule,STIG-ID|AS24-W1-000470,STIG-Legacy|SV-102495,STIG-Legacy|V-92407,Vuln-ID|V-214332",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_28": {
        "description": "AS24-W1-000480 - The Apache web server must accept only system-generated session identifiers.",
        "info": "Communication between a client and the web server is done using the HTTP protocol, but HTTP is a stateless protocol. To maintain a connection or session, a web server will generate a session identifier (ID) for each client session when the session is initiated. The session ID allows the web server to track a user session and, in many cases, the user, if the user previously logged on to a hosted application.\n\nWhen a web server accepts session identifiers that are not generated by the web server, the web server creates an environment where session hijacking, such as session fixation, could be used to access hosted applications through session IDs that have already been authenticated. Forcing the web server to only accept web server-generated session IDs and to create new session IDs once a user is authenticated will limit session hijacking.\n\nSatisfies: SRG-APP-000223-WSR-000145, SRG-APP-000224-WSR-000135, SRG-APP-000224-WSR-000137, SRG-APP-000224-WSR-000138",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and load the 'mod_unique_id' module.\n\nRestart the Apache service.",
        "reference": "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,CCI|CCI-001664,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214333r879638_rule,STIG-ID|AS24-W1-000480,STIG-Legacy|SV-102497,STIG-Legacy|V-92409,Vuln-ID|V-214333",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_29": {
        "description": "AS24-W1-000500 - The Apache web server must generate unique session identifiers that cannot be reliably reproduced.",
        "info": "Communication between a client and the Apache web server is done using the HTTP protocol, but HTTP is a stateless protocol. To maintain a connection or session, a web server will generate a session identifier (ID) for each client session when the session is initiated. The session ID allows the Apache web server to track a user session and, in many cases, the user, if the user previously logged on to a hosted application.\n\nUnique session IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Unique session identifiers help to reduce predictability of generated identifiers. Unique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, the attacker will have more difficulty in hijacking the session or otherwise manipulating valid sessions.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and load the 'mod_unique_id' module.\n\nRestart the Apache service.",
        "reference": "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214334r879639_rule,STIG-ID|AS24-W1-000500,STIG-Legacy|SV-102501,STIG-Legacy|V-92413,Vuln-ID|V-214334",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_30": {
        "description": "AS24-W1-000530 - The Apache web server must generate unique session identifiers with definable entropy - ssl_module",
        "info": "Generating a session identifier (ID) that is not easily guessed through brute force is essential to deter several types of session attacks. By knowing the session ID, an attacker can hijack a user session that has already been user authenticated by the hosted application. The attacker does not need to guess user identifiers and passwords or have a secure token since the user session has already been authenticated.\n\nRandom and unique session IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Random session identifiers help to reduce predictability of said identifiers. The session ID must be unpredictable (random enough) to prevent guessing attacks, where an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good Pseudo Random Number Generator (PRNG) must be used.\n\nUnique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions.\n\nAt least half of a session ID must be created using a definable source of entropy (PRNG).",
        "solution": "Edit the <'INSTALLED PATH'>\\conf\\httpd.conf file and load the 'ssl_module' module.\n\nSet the 'SSLRandomSeed' directives to the following:\n\nSSLRandomSeed startup builtin\nSSLRandomSeed connect builtin\n\nRestart the Apache service.",
        "reference": "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214335r879639_rule,STIG-ID|AS24-W1-000530,STIG-Legacy|SV-102507,STIG-Legacy|V-92419,Vuln-ID|V-214335",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_31": {
        "description": "AS24-W1-000530 - The Apache web server must generate unique session identifiers with definable entropy - SSLRandomSeed startup",
        "info": "Generating a session identifier (ID) that is not easily guessed through brute force is essential to deter several types of session attacks. By knowing the session ID, an attacker can hijack a user session that has already been user authenticated by the hosted application. The attacker does not need to guess user identifiers and passwords or have a secure token since the user session has already been authenticated.\n\nRandom and unique session IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Random session identifiers help to reduce predictability of said identifiers. The session ID must be unpredictable (random enough) to prevent guessing attacks, where an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good Pseudo Random Number Generator (PRNG) must be used.\n\nUnique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions.\n\nAt least half of a session ID must be created using a definable source of entropy (PRNG).",
        "solution": "Edit the <'INSTALLED PATH'>\\conf\\httpd.conf file and load the 'ssl_module' module.\n\nSet the 'SSLRandomSeed' directives to the following:\n\nSSLRandomSeed startup builtin\nSSLRandomSeed connect builtin\n\nRestart the Apache service.",
        "reference": "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214335r879639_rule,STIG-ID|AS24-W1-000530,STIG-Legacy|SV-102507,STIG-Legacy|V-92419,Vuln-ID|V-214335",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_32": {
        "description": "AS24-W1-000530 - The Apache web server must generate unique session identifiers with definable entropy - SSLRandomSeed connect",
        "info": "Generating a session identifier (ID) that is not easily guessed through brute force is essential to deter several types of session attacks. By knowing the session ID, an attacker can hijack a user session that has already been user authenticated by the hosted application. The attacker does not need to guess user identifiers and passwords or have a secure token since the user session has already been authenticated.\n\nRandom and unique session IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Random session identifiers help to reduce predictability of said identifiers. The session ID must be unpredictable (random enough) to prevent guessing attacks, where an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good Pseudo Random Number Generator (PRNG) must be used.\n\nUnique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions.\n\nAt least half of a session ID must be created using a definable source of entropy (PRNG).",
        "solution": "Edit the <'INSTALLED PATH'>\\conf\\httpd.conf file and load the 'ssl_module' module.\n\nSet the 'SSLRandomSeed' directives to the following:\n\nSSLRandomSeed startup builtin\nSSLRandomSeed connect builtin\n\nRestart the Apache service.",
        "reference": "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214335r879639_rule,STIG-ID|AS24-W1-000530,STIG-Legacy|SV-102507,STIG-Legacy|V-92419,Vuln-ID|V-214335",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_33": {
        "description": "AS24-W1-000590 - The Apache web server must restrict the ability of users to launch denial-of-service (DoS) attacks against other information systems or networks.",
        "info": "Apache web server can limit the ability of the web server being used in a DoS attack through several methods. The methods employed will depend upon the hosted applications and their resource needs for proper operation.\n\nAn example setting that could be used to limit the ability of the web server being used in a DoS attack is bandwidth throttling.",
        "solution": "Review the <'INSTALLED PATH'>\\conf\\httpd.conf file.\n\nAdd or modify the 'Timeout' directive in the Apache configuration to have a value of '10' seconds or less.\n\n'Timeout 10'\n\nRestart the Apache service.",
        "reference": "800-53|SC-5(1),800-53r5|SC-5(1),CAT|II,CCI|CCI-001094,CSF|DE.CM-1,CSF|PR.DS-4,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5(1),NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1,Rule-ID|SV-214338r879650_rule,STIG-ID|AS24-W1-000590,STIG-Legacy|SV-102515,STIG-Legacy|V-92427,Vuln-ID|V-214338",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_34": {
        "description": "AS24-W1-000620 - Warning and error messages displayed to clients must be modified to minimize the identity of the Apache web server, patches, loaded modules, and directory paths.",
        "info": "Information needed by an attacker to begin looking for possible vulnerabilities in a web server includes any information about the web server, backend systems being accessed, and plug-ins or modules being used.\n\nWeb servers will often display error messages to client users, displaying enough information to aid in the debugging of the error. The information given back in error messages may display the web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage.\n\nThis information could be used by an attacker to blueprint what type of attacks might be successful. The information given to users must be minimized to not aid in the blueprinting of the Apache web server.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and use the 'ErrorDocument' directive to enable custom error pages.\n\nErrorDocument 500 'Sorry, our script crashed. Oh dear'\nErrorDocument 500 /cgi-bin/crash-recover\nErrorDocument 500 http://error.example.com/server_error.html\nErrorDocument 404 /errors/not_found.html\nErrorDocument 401 /subscription/how_to_subscribe.html\n\nThe syntax of the ErrorDocument directive is:\n\nErrorDocument <3-digit-code>Restart the Apache service.\n\nAdditional Information:\n\nhttps://httpd.apache.org/docs/2.4/custom-error.html",
        "reference": "800-53|SI-11a.,800-53r5|SI-11a.,CAT|II,CCI|CCI-001312,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11b.,Rule-ID|SV-214339r879655_rule,STIG-ID|AS24-W1-000620,STIG-Legacy|SV-102517,STIG-Legacy|V-92429,Vuln-ID|V-214339",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_35": {
        "description": "AS24-W1-000630 - Debugging and trace information used to diagnose the Apache web server must be disabled.",
        "info": "Information needed by an attacker to begin looking for possible vulnerabilities in a web server includes any information about the web server and plug-ins or modules being used. When debugging or trace information is enabled in a production web server, information about the web server, such as web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage may be displayed. Since this information may be placed in logs and general messages during normal operation of the web server, an attacker does not need to cause an error condition to gain this information.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and add or set the value of 'TraceEnable' to 'Off'.\n\nRestart the Apache service.",
        "reference": "800-53|SI-11a.,800-53r5|SI-11a.,CAT|II,CCI|CCI-001312,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11b.,Rule-ID|SV-214340r879655_rule,STIG-ID|AS24-W1-000630,STIG-Legacy|SV-102519,STIG-Legacy|V-92431,Vuln-ID|V-214340",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_36": {
        "description": "AS24-W1-000640 - The Apache web server must set an absolute timeout for sessions.",
        "info": "Leaving sessions open indefinitely is a major security risk. An attacker can easily use an already authenticated session to access the hosted application as the previously authenticated user. By closing sessions after an absolute period of time, the user is forced to reauthenticate, guaranteeing the session is still in use. Enabling an absolute timeout for sessions closes sessions that are still active. Examples would be a runaway process accessing the Apache web server or an attacker using a hijacked session to slowly probe the Apache web server.",
        "solution": "Open the <'INSTALL PATH'>\\conf\\httpd.conf file.\n\nSet the 'SessionMaxAge' directive to a value of '600' or less; add the directive if it does not exist.\n\nRestart the Apache service.",
        "reference": "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CAT|II,CCI|CCI-002361,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,Rule-ID|SV-214341r879673_rule,STIG-ID|AS24-W1-000640,STIG-Legacy|SV-102521,STIG-Legacy|V-92433,Vuln-ID|V-214341",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_37": {
        "description": "AS24-W1-000650 - The Apache web server must set an inactive timeout for completing the TLS handshake - mod_reqtimeout",
        "info": "Leaving sessions open indefinitely is a major security risk. An attacker can easily use an already authenticated session to access the hosted application as the previously authenticated user.\n\nTimeouts for completing the TLS handshake, receiving the request headers and/or the request body from the client. If the client fails to complete each of these stages within the configured time, a 408 REQUEST TIME OUT error is sent.\n\nFor SSL virtual hosts, the handshake timeout values is the time needed to do the initial SSL handshake. If the user's browser is configured to query certificate revocation lists and the CRL server is not reachable, the initial SSL handshake may take a significant time until the browser gives up waiting for the CRL. Therefore the handshake timeout should take this possible overhead into consideration for SSL virtual hosts (if necessary). The body timeout values include the time needed for SSL renegotiation (if necessary).",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and load the 'mod_reqtimeout' module.\n\nSet the 'RequestReadTimeout' directive to a value compatible with the organization's operations.\n\nRestart the Apache service.",
        "reference": "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CAT|II,CCI|CCI-002361,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,Rule-ID|SV-214342r879673_rule,STIG-ID|AS24-W1-000650,STIG-Legacy|SV-102523,STIG-Legacy|V-92435,Vuln-ID|V-214342",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_38": {
        "description": "AS24-W1-000650 - The Apache web server must set an inactive timeout for completing the TLS handshake - RequestReadTimeout",
        "info": "Leaving sessions open indefinitely is a major security risk. An attacker can easily use an already authenticated session to access the hosted application as the previously authenticated user.\n\nTimeouts for completing the TLS handshake, receiving the request headers and/or the request body from the client. If the client fails to complete each of these stages within the configured time, a 408 REQUEST TIME OUT error is sent.\n\nFor SSL virtual hosts, the handshake timeout values is the time needed to do the initial SSL handshake. If the user's browser is configured to query certificate revocation lists and the CRL server is not reachable, the initial SSL handshake may take a significant time until the browser gives up waiting for the CRL. Therefore the handshake timeout should take this possible overhead into consideration for SSL virtual hosts (if necessary). The body timeout values include the time needed for SSL renegotiation (if necessary).",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and load the 'mod_reqtimeout' module.\n\nSet the 'RequestReadTimeout' directive to a value compatible with the organization's operations.\n\nRestart the Apache service.",
        "reference": "800-171|3.1.11,800-53|AC-12,800-53r5|AC-12,CAT|II,CCI|CCI-002361,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-12,NIAv2|NS49,Rule-ID|SV-214342r879673_rule,STIG-ID|AS24-W1-000650,STIG-Legacy|SV-102523,STIG-Legacy|V-92435,Vuln-ID|V-214342",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_39": {
        "description": "AS24-W1-000670 - The Apache web server must restrict inbound connections from nonsecure zones.",
        "info": "Remote access to the Apache web server is any access that communicates through an external, non-organization-controlled network. Remote access can be used to access hosted applications or to perform management functions.\n\nA web server can be accessed remotely and must be capable of restricting access from what the DoD defines as nonsecure zones. Nonsecure zones are defined as any IP, subnet, or region that is defined as a threat to the organization. The nonsecure zones must be defined for public web servers logically located in a DMZ, as well as private web servers with perimeter protection devices. By restricting access from nonsecure zones, through the internal Apache web server access list, the Apache web server can stop or slow denial-of-service (DoS) attacks on the Apache web server.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure the 'http.conf' file to include restrictions.\n\nExample:Require not host phishers.example.com moreidiots.exampleRestart the Apache service.",
        "reference": "800-171|3.1.12,800-53|AC-17(1),800-53r5|AC-17(1),CAT|II,CCI|CCI-002314,CN-L3|8.1.4.4(c),CN-L3|8.1.10.6(i),CSF|PR.AC-3,CSF|PR.PT-4,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.2.2,ITSG-33|AC-17(1),NESA|T5.4.4,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-214343r879692_rule,STIG-ID|AS24-W1-000670,STIG-Legacy|SV-102527,STIG-Legacy|V-92439,SWIFT-CSCv1|2.6,Vuln-ID|V-214343",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_40": {
        "description": "AS24-W1-000700 - An Apache web server that is part of a web server cluster must route all remote management through a centrally managed access control point - mod_proxy",
        "info": "A web server cluster is a group of independent Apache web servers that are managed as a single system for higher availability, easier manageability, and greater scalability. Without having centralized control of the web server cluster, management of the cluster becomes difficult. It is critical that remote management of the cluster be done through a designated management system acting as a single access point.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and load the 'mod_proxy' module.\n\nSet the 'ProxyPass' directive.\n\nRestart the Apache service.",
        "reference": "800-171|3.3.1,800-53|AU-3(2),800-53r5|PL-9,CAT|II,CCI|CCI-001844,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3(2),NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214346r879729_rule,STIG-ID|AS24-W1-000700,STIG-Legacy|SV-102533,STIG-Legacy|V-92445,SWIFT-CSCv1|6.4,Vuln-ID|V-214346",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_41": {
        "description": "AS24-W1-000700 - An Apache web server that is part of a web server cluster must route all remote management through a centrally managed access control point - ProxyPass",
        "info": "A web server cluster is a group of independent Apache web servers that are managed as a single system for higher availability, easier manageability, and greater scalability. Without having centralized control of the web server cluster, management of the cluster becomes difficult. It is critical that remote management of the cluster be done through a designated management system acting as a single access point.",
        "solution": "Edit the <'INSTALL PATH'>\\conf\\httpd.conf file and load the 'mod_proxy' module.\n\nSet the 'ProxyPass' directive.\n\nRestart the Apache service.",
        "reference": "800-171|3.3.1,800-53|AU-3(2),800-53r5|PL-9,CAT|II,CCI|CCI-001844,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3(2),NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214346r879729_rule,STIG-ID|AS24-W1-000700,STIG-Legacy|SV-102533,STIG-Legacy|V-92445,SWIFT-CSCv1|6.4,Vuln-ID|V-214346",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_42": {
        "description": "AS24-W1-000760 - The Apache web server must generate log records that can be mapped to Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT) with a minimum granularity of one second - log_config_module",
        "info": "If time stamps are not consistently applied and there is no common time reference, it is difficult to perform forensic analysis across multiple devices and log records.\n\nTime stamps generated by the Apache web server include date and time. Time is commonly expressed in UTC, a modern continuation of GMT, or local time with an offset from UTC.\n\nWithout sufficient granularity of time stamps, it is not possible to adequately determine the chronological order of records.\n\nTime stamps generated by the Apache web server include date and time and must be to a granularity of one second.\n\nSatisfies: SRG-APP-000375-WSR-000171, SRG-APP-000374-WSR-000172",
        "solution": "In a command line, navigate to '<'INSTALLED PATH'>\\bin'. Run 'httpd -M' to view a list of installed modules.\n\nIf 'log_config_module' is not listed, enable this module.\n\nIn a command line, navigate to '<'INSTALLED PATH'>\\bin'. Determine the location of the 'httpd.conf' file by running the following command:\n\nhttpd -V\n\nReview the 'HTTPD_ROOT' path.\n\nNavigate to the 'HTTPD_ROOT'/conf directory.\n\nEdit the 'httpd.conf' file.\n\nDetermine if the 'LogFormat' directive exists. If it does not exist, ensure the 'LogFormat' line contains the '%t' flag.",
        "reference": "800-171|3.3.7,800-53|AU-8b.,800-53r5|AU-8b.,CAT|II,CCI|CCI-001890,CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,NESA|T3.6.7,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214351r879748_rule,STIG-ID|AS24-W1-000760,STIG-Legacy|SV-104687,STIG-Legacy|V-94857,TBA-FIISB|37.4,Vuln-ID|V-214351",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_43": {
        "description": "AS24-W1-000760 - The Apache web server must generate log records that can be mapped to Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT) with a minimum granularity of one second - LogFormat %t",
        "info": "If time stamps are not consistently applied and there is no common time reference, it is difficult to perform forensic analysis across multiple devices and log records.\n\nTime stamps generated by the Apache web server include date and time. Time is commonly expressed in UTC, a modern continuation of GMT, or local time with an offset from UTC.\n\nWithout sufficient granularity of time stamps, it is not possible to adequately determine the chronological order of records.\n\nTime stamps generated by the Apache web server include date and time and must be to a granularity of one second.\n\nSatisfies: SRG-APP-000375-WSR-000171, SRG-APP-000374-WSR-000172",
        "solution": "In a command line, navigate to '<'INSTALLED PATH'>\\bin'. Run 'httpd -M' to view a list of installed modules.\n\nIf 'log_config_module' is not listed, enable this module.\n\nIn a command line, navigate to '<'INSTALLED PATH'>\\bin'. Determine the location of the 'httpd.conf' file by running the following command:\n\nhttpd -V\n\nReview the 'HTTPD_ROOT' path.\n\nNavigate to the 'HTTPD_ROOT'/conf directory.\n\nEdit the 'httpd.conf' file.\n\nDetermine if the 'LogFormat' directive exists. If it does not exist, ensure the 'LogFormat' line contains the '%t' flag.",
        "reference": "800-171|3.3.7,800-53|AU-8b.,800-53r5|AU-8b.,CAT|II,CCI|CCI-001890,CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,NESA|T3.6.7,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-214351r879748_rule,STIG-ID|AS24-W1-000760,STIG-Legacy|SV-104687,STIG-Legacy|V-94857,TBA-FIISB|37.4,Vuln-ID|V-214351",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_44": {
        "description": "AS24-W1-000800 - The Apache web server must only accept client certificates issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs).",
        "info": "Non-DoD-approved PKIs have not been evaluated to ensure they have security controls and identity vetting procedures in place that are sufficient for DoD systems to rely on the identity asserted in the certificate. PKIs lacking sufficient security controls and identity vetting procedures risk being compromised and issuing certificates that enable adversaries to impersonate legitimate users.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure the web server's trust store to trust only DoD-approved PKIs (e.g., DoD PKI, DoD ECA, and DoD-approved external partners).",
        "reference": "800-171|3.13.15,800-53|SC-23(5),800-53r5|SC-23(5),CAT|II,CCI|CCI-002470,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-214352r879798_rule,STIG-ID|AS24-W1-000800,STIG-Legacy|SV-102933,STIG-Legacy|V-92845,Vuln-ID|V-214352",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_45": {
        "description": "AS24-W1-000820 - The Apache web server must be protected from being stopped by a non-privileged user.",
        "info": "An attacker has at least two reasons to stop a web server. The first is to cause a denial of service (DoS), and the second is to put in place changes the attacker made to the web server configuration.\n\nTo prohibit an attacker from stopping the Apache web server, the process ID (pid) of the web server and the utilities used to start/stop it must be protected from access by non-privileged users. By knowing the 'pid' and having access to the Apache web server utilities, a non-privileged user has a greater capability of stopping the server, whether intentionally or unintentionally.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Restrict access to the web administration tool to only the Web Manager and the Web Manager's designees.",
        "reference": "800-53|SC-5,800-53r5|SC-5,CAT|II,CCI|CCI-002385,CSF|DE.CM-1,CSF|PR.DS-4,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1,Rule-ID|SV-214353r879806_rule,STIG-ID|AS24-W1-000820,STIG-Legacy|SV-102551,STIG-Legacy|V-92463,Vuln-ID|V-214353",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_46": {
        "description": "AS24-W1-000830 - The Apache web server must be tuned to handle the operational requirements of the hosted application.",
        "info": "A denial of service (DoS) can occur when the Apache web server is so overwhelmed that it can no longer respond to additional requests. A web server not properly tuned may become overwhelmed and cause a DoS condition even with expected traffic from users. To avoid a DoS, the Apache web server must be tuned to handle the expected traffic for the hosted applications.",
        "solution": "Add or modify the 'Timeout' directive in the Apache configuration to have a value of '10' seconds or less.\n\n'Timeout 10'\n\nRestart the Apache service.",
        "reference": "800-53|SC-5,800-53r5|SC-5,CAT|II,CCI|CCI-002385,CSF|DE.CM-1,CSF|PR.DS-4,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1,Rule-ID|SV-214354r879806_rule,STIG-ID|AS24-W1-000830,STIG-Legacy|SV-102553,STIG-Legacy|V-92465,Vuln-ID|V-214354",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_47": {
        "description": "AS24-W1-000860 - The Apache web server cookies, such as session cookies, sent to the client using SSL/TLS must not be compressed.",
        "info": "A cookie is used when a web server needs to share data with the client's browser. The data is often used to remember the client when the client returns to the hosted application at a later date. A session cookie is a special type of cookie used to remember the client during the session. The cookie will contain the session identifier (ID) and may contain authentication data to the hosted application. To protect this data from easily being compromised, the cookie can be encrypted.\n\nWhen a cookie is sent encrypted via SSL/TLS, an attacker must spend a great deal of time and resources to decrypt the cookie. If, along with encryption, the cookie is compressed, the attacker can now use a combination of plaintext injection and inadvertent information leakage through data compression to reduce the time needed to decrypt the cookie. This attack is called Compression Ratio Info-leak Made Easy (CRIME).\n\nCookies shared between the Apache web server and the client when encrypted should not also be compressed.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files for the 'SSLCompression' directive. If the directive is present, set it to 'Off'.\n\nRestart the Apache service.",
        "reference": "800-171|3.13.8,800-53|SC-8,800-53r5|SC-8,CAT|II,CCI|CCI-002418,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8,ITSG-33|SC-8a.,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-214355r879810_rule,STIG-ID|AS24-W1-000860,STIG-Legacy|SV-102557,STIG-Legacy|V-92469,Vuln-ID|V-214355",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "value_data": "@HTTPD_CONF_LOCATION@\\\\httpd.conf"
    },
    "custom_item_48": {
        "description": "AS24-W1-000930 - The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).",
        "info": "Security flaws with software applications are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.\n\nThe Apache web server will be configured to check for and install security-relevant software updates from an authoritative source within an identified time period from the availability of the update. By default, this time period will be every 24 hours.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Install the current version of the web server software and maintain appropriate service packs and patches.",
        "reference": "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CAT|II,CCI|CCI-002605,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-214356r879827_rule,STIG-ID|AS24-W1-000930,STIG-Legacy|SV-102563,STIG-Legacy|V-92475,SWIFT-CSCv1|2.2,Vuln-ID|V-214356",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_49": {
        "description": "AS24-W1-000940 - All accounts installed with the Apache web server software and tools must have passwords assigned and default passwords changed.",
        "info": "During installation of the Apache web server software, accounts are created for the Apache web server to operate properly. The accounts installed can have either no password installed or a default password, which will be known and documented by the vendor and the user community.\n\nThe first things an attacker will try when presented with a logon screen are the default user identifiers with default passwords. Installed applications may also install accounts with no password, making the logon even easier. Once the Apache web server is installed, the passwords for any created accounts should be changed and documented. The new passwords must meet the requirements for all passwords, i.e., upper/lower characters, numbers, special characters, time until change, reuse policy, etc.\n\nService accounts or system accounts that have no logon capability do not need to have passwords set or changed.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Access 'Apps' menu. Under 'Administrative Tools', select 'Computer Management'.\n\nIn left pane, expand 'Local Users and Groups' and click on 'Users'.\n\nChange passwords for any local accounts that are present and are used by Apache Web Server.\n\nDevelop an internal process for changing passwords on a regular basis.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-214357r879887_rule,STIG-ID|AS24-W1-000940,STIG-Legacy|SV-102565,STIG-Legacy|V-92477,SWIFT-CSCv1|2.3,Vuln-ID|V-214357",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip"
    },
    "custom_item_50": {
        "description": "AS24-W1-000950 - The Apache web server must be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.",
        "info": "Configuring the Apache web server to implement organization-wide security implementation guides and security checklists guarantees compliance with federal standards and establishes a common security baseline across the DoD that reflects the most restrictive security posture consistent with operational requirements.\n\nConfiguration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the system. Security-related parameters are parameters impacting the security state of the Apache web server, including the parameters required to satisfy other security control requirements.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Ensure the website enforces the use of IANA well-known ports for 'HTTP' and 'HTTPS'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|III,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-214358r879887_rule,STIG-ID|AS24-W1-000950,STIG-Legacy|SV-102567,STIG-Legacy|V-92479,SWIFT-CSCv1|2.3,Vuln-ID|V-214358",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "powershell_args": "netstat.exe -ano | select-string LISTENING"
    },
    "custom_item_51": {
        "description": "AS24-W1-000960 - The Apache web server software must be a vendor-supported version.",
        "info": "Many vulnerabilities are associated with older versions of web server software. As hot fixes and patches are issued, these solutions are included in the next version of the server software. Maintaining the web server at a current version makes the efforts of a malicious user to exploit the web service more difficult.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Install the current version of the web server software and maintain appropriate service packs and patches.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|I,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|Apache_Server_2-4_Windows_Server_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-214359r879887_rule,STIG-ID|AS24-W1-000960,STIG-Legacy|SV-102569,STIG-Legacy|V-92481,SWIFT-CSCv1|2.3,Vuln-ID|V-214359",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Apache_Server_2-4_Windows_Y23M01_STIG.zip",
        "powershell_args": "@HTTPD_EXECUTABLE_LOCATION@ -v"
    }
}