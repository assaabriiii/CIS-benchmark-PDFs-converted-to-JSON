{
    "custom_item_1": {
        "description": "Verify IIS is installed.",
        "value_data": "(internet|iis)",
        "reg_key": "HKLM\\SYSTEM\\CurrentControlSet\\Services\\W3SVC",
        "reg_item": "ImagePath"
    },
    "custom_item_2": {
        "description": "Verify IIS 10 installed.",
        "value_data": "^Version @PRODUCT_VERSION@[\\s]*$",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp",
        "reg_item": "VersionString"
    },
    "custom_item_3": {
        "description": "Windows Server 2016/2019/2022 and Windows 10",
        "value_data": "^[a-zA-Z0-9\\(\\)\\s]*@PLATFORM_VERSION@[a-zA-Z0-9\\(\\)\\s]*$",
        "reg_key": "HKLM\\Software\\Microsoft\\Windows Nt\\Currentversion",
        "reg_item": "ProductName"
    },
    "custom_item_4": {
        "description": "1.1 Ensure 'Web content' is on non-system partition",
        "info": "Web resources published through IIS are mapped via Virtual Directories to physical locations on disk. It is recommended to map all Virtual Directories to a non-system disk volume.\n\nRationale:\n\nIsolating web content from system files may reduce the probability of web sites/applications exhausting system disk space. It can also reduce the file IO vulnerability in the web site/application from affecting the confidentiality and/or integrity of system files.\n\nImpact:\n\nOnce the configuration is changed all content from the root drive to the new drive including ACLs and empty directories will need to copied.",
        "reference": "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|14,CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1M,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "physicalPath:(\\%SystemDrive\\%|C:)",
        "appcmd_args": "list vdir"
    },
    "custom_item_5": {
        "description": "1.2 Ensure 'Host headers' are on all sites",
        "info": "Host headers provide the ability to host multiple websites on the same IP address and port. It is recommended that host headers be configured for all sites.\n\nNote: Wildcard host headers are now supported.\n\nRationale:\n\nRequiring a Host header for all sites may reduce the probability of DNS rebinding attacks successfully compromising or abusing site data or functionality and IP-based scans successfully identifying or interacting with a target application hosted on IIS.\n\nImpact:\n\nIf a wildcard DNS entry exists and a wildcard host header is used, it may be serving data to more domains than intended.",
        "solution": "Obtain a listing of all sites by using the following appcmd.exe command:\nEnter the following command in AppCmd.exe to configure the host header:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.applicationHost/sites /'[name=''].bindings.[protocol='http',bindingInformation='*:80:'].bindingInformation:'*:80:''  /commit:apphost\n\nOR\n\nEnter the following command in PowerShell to configure the host header:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.applicationHost/sites/site[@name='']/bindings/binding[@protocol='http' and @bindingInformation='*:80:']' -name 'bindingInformation' -value '*:80:'\n\nOR\n\nPerform the following in IIS Manager to configure host headers for the Default Web Site:\n\nOpen IIS Manager\n\nIn the Connections pane expand the Sites node and select Default Web Site\n\nIn the Actions pane click Bindings\n\nIn the Site Bindings dialog box, select the binding for which host headers are going to be configured, Port 80 in this example\n\nClick Edit\n\nUnder host name, enter the sites FQDN, such asClick OK, then Close\n\nNote: Requiring a host header may impair site functionality for HTTP/1.0 clients.\n\nDefault Value:\n\nBy default, host headers are not required or set up automatically.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "\\(id:[0-9]*,bindings:.*https*/[0-9\\.\\*]+:[0-9]*:,.*state:[A-Za-z]*\\)",
        "appcmd_args": "list sites"
    },
    "custom_item_6": {
        "description": "1.3 Ensure 'Directory browsing' is set to Disabled",
        "info": "Directory browsing allows the contents of a directory to be displayed upon request from a web client. If directory browsing is enabled for a directory in Internet Information Services, users receive a page that lists the contents of the directory when the following two conditions are met:\n\nNo specific file is requested in the URL\n\nThe Default Documents feature is disabled in IIS, or if it is enabled, IIS is unable to locate a file in the directory that matches a name specified in the IIS default document list\n\nNote: If directory browsing is enabled (an exception to this recommendation), make sure that it is only enabled on the particular directory or directories that need to be shared.\n\nRationale:\n\nEnsuring that directory browsing is disabled may reduce the probability of disclosing sensitive content that is inadvertently accessible via IIS.\n\nImpact:\n\nUsers will not be able to see the contents of directories.",
        "solution": "Directory Browsing can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts. To disable directory browsing at the server level using an appcmd.exe command:\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:directoryBrowse /enabled:false\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -Filter system.webserver/directorybrowse -PSPath iis:\\ -Name Enabled  -Value False\n\nDefault Value:\n\nIn IIS, directory browsing is disabled by default.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|18,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "false",
        "appcmd_args": "list config /section:directoryBrowse /text:enabled"
    },
    "custom_item_7": {
        "description": "1.4 Ensure 'application pool identity' is configured for all application pools",
        "info": "Application Pool Identities are the actual users/authorities that will run the worker process - w3wp.exe. Assigning the correct user authority will help ensure that applications can function properly, while not giving overly permissive permissions on the system. These identities can further be used in ACLs to protect system content. It is recommended that each Application Pool run under a unique identity.\n\nIIS has additional built-in least privilege identities intended for use by Application Pools. It is recommended that the default Application Pool Identity be changed to a least privilege principle other than Network Service. Furthermore, it is recommended that all application pool identities be assigned a unique least privilege principal.\n\nTo achieve isolation in IIS, application pools can be run as separate identities. IIS can be configured to automatically use the application pool identity if no anonymous user account is configured for a Web site. This can greatly reduce the number of accounts needed for Web sites and make management of the accounts easier. It is recommended the Application Pool Identity be set as the Anonymous User Identity.\n\nThe name of the Application Pool account corresponds to the name of the Application Pool. Application Pool Identities were introduced in Windows Server 2008 SP2. It is recommended that Application Pools be set to run as ApplicationPoolIdentity unless there is an underlying reason that the application pool needs to run as a specified end user account. One example where this is needed is for web farms using Kerberos authentication.\n\nRationale:\n\nSetting Application Pools to use unique least privilege identities such as ApplicationPoolIdentity reduces the potential harm the identity could cause should the application ever become compromised.\n\nAdditionally, it will simplify application pools configuration and account management.\n\nImpact:\n\nIf Application Pool Identities are not set properly to users/authorities applications may not function properly.",
        "solution": "The default Application Pool identity may be set for an application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, directly editing the configuration files, or by writing WMI scripts. Perform the following to change the default identity to the built-in ApplicationPoolIdentity in the IIS Manager GUI:\n\nOpen the IIS Manager GUI\n\nIn the connections pane, expand the server node and click Application Pools\n\nOn the Application Pools page, select the DefaultAppPool, and then click Advanced Settings in the Actions pane\n\nFor the Identity property, click the '...' button to open the Application Pool Identity dialog box\n\nSelect the Built-in account option choose ApplicationPoolIdentity from the list, or input a unique application user created for this purpose\n\nRestart IIS\n\nTo change the ApplicationPool identity to the built-in ApplicationPoolIdentity using AppCmd.exe, run the following from a command prompt:\n\nEnter the following command in AppCmd.exe to configure\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:applicationPools /[name=''].processModel.identityType:ApplicationPoolIdentity\n\nOR\n\nTo change the ApplicationPool identity to the built-in ApplicationPoolIdentity using PowerShell:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.applicationHost/applicationPools/add[@name='']/processModel' -name 'identityType' -value 'ApplicationPoolIdentity'\n\nThe example code above will set just the DefaultAppPool. Run this command for each configured Application Pool. Additionally, ApplicationPoolIdentity can be made the default for all Application Pools by using the Set Application Pool Defaults action on the Application Pools node.\n\nIf using a custom defined Windows user such as a dedicated service account, that user will need to be a member of the IIS_IUSRS group. The IIS_IUSRS group has access to all the necessary file and system resources so that an account, when added to this group, can seamlessly act as an application pool identity.\n\nDefault Value:\n\nBy Default, the DefaultAppPool in IIS is configured to use the ApplicationPoolIdentity account.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|18,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^(ApplicationPoolIdentity|SpecificUser)[\\s]*$",
        "appcmd_args": "list config /section:applicationpools /text:[name='{}'].processModel.identityType",
        "appcmd_list": "list AppPools"
    },
    "custom_item_8": {
        "description": "1.5 Ensure 'unique application pools' is set for sites",
        "info": "Application Pool Identities allows Application Pools to be run under unique accounts without the need to create and manage local or domain accounts.\n\nIt is recommended that all Sites run under unique, dedicated Application Pools.\n\nRationale:\n\nBy setting sites to run under unique Application Pools, resource-intensive applications can be assigned to their own application pools which could improve server and application performance. In addition, it can help maintain application availability: if an application in one pool fails, applications in other pools are not affected. Last, isolating applications helps mitigate the potential risk of one application being allowed access to the resources of another application. It is also recommended to stop any application pool that is not in use or was created by an installation such as .Net 4.0.\n\nImpact:\n\nAll sites will need to be run under unique dedicated Application Pools.",
        "solution": "The following appcmd.exe command will set the application pool for a given application:\n\n%systemroot%\\system32\\inetsrv\\appcmd set app '/' /applicationpool:The output of this command will be similar to the following: APP object 'Default Web Site/' changed (applicationPool:DefaultAppPool)\nRun the above command to ensure a unique application pool is assigned for each site listed\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-ItemProperty -Path 'IIS:\\Sites\\' -Name applicationPool -ValueOR\n\nOpen IIS Manager\n\nOpen the Sites node underneath the machine node\n\nSelect the Site to be changed\n\nIn the Actions pane, select Basic Settings\n\nClick the Select... box next to the Application Pool text box\n\nSelect the desired Application Pool\n\nOnce selected, click OK\n\nDefault Value:\n\nBy default, all Sites created will use the Default Application Pool (DefaultAppPool).",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^[\\s]*([2-9]|[1-9][0-9]+)[\\s]",
        "powershell_args": "& $Env:SystemRoot/System32/InetSrv/appcmd.exe list apps | Select-String -Pattern '/. \\(applicationPool' | % { $_.ToString().Split(':')[1].Trim(')') } | Group-Object | Format-Table Count,Name"
    },
    "custom_item_9": {
        "description": "Confirm applicationHost.config is available in standard location.",
        "value_data": "%systemroot%\\system32\\inetsrv\\config\\applicationHost.config"
    },
    "custom_item_10": {
        "description": "1.6 Ensure 'application pool identity' is configured for anonymous user identity",
        "info": "To achieve isolation in IIS, application pools can be run as separate identities. IIS can be configured to automatically use the application pool identity if no anonymous user account is configured for a web site. This can greatly reduce the number of accounts needed for Web sites and make management of the accounts easier.\n\nIt is recommended the Application Pool Identity be set as the Anonymous User Identity.\n\nRationale:\n\nConfiguring the anonymous user identity to use the application pool identity will help ensure site isolation - provided sites are set to use the application pool identity. Since a unique principal will run each application pool, it will ensure the identity is least privilege. Additionally, it will simplify Site management.\n\nImpact:\n\nN/A",
        "solution": "The Anonymous User Identity can be set to Application Pool Identity by using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, directly editing the configuration files, or by writing WMI scripts. Perform the following to set the username attribute of the anonymousAuthentication node in the IIS Manager GUI:\n\nOpen the IIS Manager GUI and navigate to the desired server, site, or application\n\nIn Features View, find and double-click the Authentication icon\n\nSelect the Anonymous Authentication option and in the Actions pane select Edit...\n\nChoose Application pool identity in the modal window and then press the OK button\n\nOR\n\nTo use AppCmd.exe to configure anonymousAuthentication at the server level, the command would look like this:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config -section:anonymousAuthentication /username:'' --password\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-ItemProperty -Path IIS:\\AppPools\\-Name passAnonymousToken -Value True\n\nDefault Value:\n\nThe default identity for the anonymous user is the IUSR virtual account.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "%systemroot%\\system32\\inetsrv\\config\\applicationHost.config"
    },
    "custom_item_11": {
        "description": "1.7 Ensure' WebDav' feature is disabled",
        "info": "WebDAV is an extension to the HTTP protocol which allows clients to create, move, and delete files and resources on the web server.\n\nNote: The WebDAV feature must be enabled for this functionality to be available in IIS.\n\nRationale:\n\nWebDAV is not widely used, and it has serious security concerns because it may allow clients to modify unauthorized files on the web server. Therefore, the WebDav feature should be disabled.\n\nImpact:\n\nThe WebDav feature will not be available in IIS.",
        "solution": "To disable this feature using PowerShell, enter the following command:\n\nUninstall-WindowsFeature Web-DAV-Publishing\n\nVerify that Success is True\n\nDefault Value:\n\nThe default state of WebDAV Publishing is disabled",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-6,800-53|CM-7,800-53|PL-8,800-53|SA-8,800-53r5|CM-6,800-53r5|CM-7,800-53r5|PL-8,800-53r5|SA-8,CSCv7|9.2,CSCv8|4.8,CSCv8|16.10,CSF|ID.AM-3,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|SS15a,NIAv2|VL2,PCI-DSSv3.2.1|2.2.2,QCSC-v1|4.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "Available",
        "powershell_args": "Get-WindowsFeature Web-DAV-Publishing | Select 'InstallState' | Format-Table -HideTableHeaders"
    },
    "custom_item_12": {
        "description": "2.1 Ensure 'global authorization rule' is set to restrict access",
        "info": "IIS introduced URL Authorization, which allows the addition of Authorization rules to the actual URL, instead of the underlying file system resource, as a way to protect it. Authorization rules can be configured at the server, web site, folder (including Virtual Directories), or file level. The native URL Authorization module applies to all requests, whether they are .NET managed or other types of files (e.g., static files or ASP files). It is recommended that URL Authorization be configured to only grant access to the necessary security principals.\n\nRationale:\n\nConfiguring a global Authorization rule that restricts access will ensure inheritance of the settings down through the hierarchy of web directories; if that content is copied elsewhere, the authorization rules flow with it. This will ensure access to current and future content is only granted to the appropriate principals, mitigating risk of accidental or unauthorized access.\n\nImpact:\n\nIf not set properly, the authorization rule could restrict assess at a level that is not intended to be restricted.",
        "solution": "To configure URL Authorization at the server level using command line utilities:\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config  -section:system.webServer/security/authorization /-'[users='*',roles='',verbs='']'\n\n%systemroot%\\system32\\inetsrv\\appcmd set config  -section:system.webServer/security/authorization /+'[accessType='Allow',roles='Administrators']'\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nRemove-WebConfigurationProperty  -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/authorization' -name '.' -AtElement @{users='*';roles='';verbs=''}\n\nAdd-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/authorization' -name '.' -value @{accessType='Allow';roles='Administrators'}\n\nOR\n\nTo configure URL Authorization at the server level using IIS Manager:\n\nConnect to Internet Information Services (IIS Manager)\n\nSelect the server\n\nSelect Authorization Rules\n\nRemove the 'Allow All Users' rule\n\nClick Add Allow Rule...\n\nAllow access to the user(s), user groups, or roles that are authorized across all of the web sites and applications (e.g. the Administrators group)\n\nDefault Value:\n\nThe default server-level setting is to allow all users access.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|18,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "",
        "appcmd_args": "list config /section:system.webserver/security/authorization"
    },
    "custom_item_13": {
        "description": "2.2 Ensure access to sensitive site features is restricted to authenticated principals only",
        "info": "IIS supports both challenge-based and login redirection-based authentication methods. Challenge-based authentication methods, such as Integrated Windows Authentication, require a client to respond correctly to a server-initiated challenge. A login redirection-based authentication method such as Forms Authentication relies on redirection to a login page to determine the identity of the principal. Challenge-based authentication and login redirection-based authentication methods cannot be used in conjunction with one another.\n\nPublic servers/sites are typically configured to use Anonymous Authentication. This method typically works, provided the content or services is intended for use by the public. When sites, applications, or specific content containers are not intended for anonymous public use, an appropriate authentication mechanism should be utilized. Authentication will help confirm the identity of clients who request access to sites, application, and content. IIS provides the following authentication modules by default:\n\nAnonymous Authentication - allows anonymous users to access sites, applications, and/or content\n\nIntegrated Windows Authentication - authenticates users using the NTLM or Kerberos protocols; Kerberos v5 requires a connection to Active Directory\n\nASP.NET Impersonation - allows ASP.NET applications to run under a security context different from the default security context for an application\n\nForms Authentication - enables a user to login to the configured space with a valid username and password which is then validated against a database or other credentials store\n\nBasic authentication - requires a valid username and password to access content\n\nClient Certificate Mapping Authentication - allows automatic authentication of users who log on with client certificates that have been configured; requires SSL\n\nDigest Authentication - uses Windows domain controller to authenticate users who request access\n\nNote that none of the challenge-based authentication modules can be used at the same time Forms Authentication is enabled for certain applications/content. Forms Authentication does not rely on IIS authentication, so anonymous access for the ASP.NET application can be configured if Forms Authentication will be used.\n\nIt is recommended that sites containing sensitive information, confidential data, or non-public web services be configured with a credentials-based authentication mechanism.\n\nRationale:\n\nConfiguring authentication will help mitigate the risk of unauthorized users accessing data and/or services, and in some cases reduce the potential harm that can be done to a system.\n\nImpact:\n\nAuthentication will be restricted to the method that is applied.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "When configuring an authentication module for the first time, each mechanism must be completely configured before use.\nEnabling authentication can be performed by using the user interface (UI), running AppCmd.exe commands in a command-line window, editing configuration files directly, or by writing WMI scripts. To verify an authentication mechanism is in place for sensitive content using the IIS Manager GUI:\n\nOpen IIS Manager and navigate to level with sensitive content\n\nIn Features View, double-click Authentication\n\nOn the Authentication page, make sure an authentication module is enabled, while anonymous authentication is enabled (Forms Authentication can have anonymous as well)\n\nIf necessary, select the desired authentication module, then in the Actions pane, click Enable\n\nOR\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config  -section:system.web/authentication /mode:OR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -location '' -filter 'system.webServer/security/authentication/anonymousAuthentication' -name 'enabled' -value 'False'\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -location '' -filter 'system.webServer/security/authentication/windowsAuthentication' -name 'enabled' -value 'True'\n\nDefault Value:\n\nThe default installation of IIS supports Anonymous Authentication without further electing additional methods.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1M,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "ManualReviewRequired",
        "powershell_args": "foreach ($item in $(Get-Website)) { $path = 'IIS:\\Sites\\'+$item.Name; $a = Get-WebConfiguration -PSPath $path -Filter /system.webServer/security/authentication/* | where {$_.enabled -eq 'True'}; $b = Get-WebConfiguration -PSPath $path -Filter /system.web/authentication; $obj = [PSCustomObject]@{Site=$item.name; AuthMode=$b.mode; AuthMethod=$a.SectionPath; Enabled=$a.enabled; }; $obj | Format-List Site,AuthMode,AuthMethod,Enabled }"
    },
    "custom_item_14": {
        "description": "Verify .net extensibility is installed - NetFxExtensibility45",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp\\Components",
        "reg_item": "NetFxExtensibility45"
    },
    "custom_item_15": {
        "description": "Verify .net extensibility is installed - ASPNET45",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp\\Components",
        "reg_item": "ASPNET45"
    },
    "custom_item_16": {
        "description": "2.3 Ensure 'forms authentication' require SSL - Default",
        "info": "Forms-based authentication can pass credentials across the network in clear text. It is therefore imperative that the traffic between client and server be encrypted using SSL, especially in cases where the site is publicly accessible. It is recommended that communications with any portion of a site using Forms Authentication be encrypted using SSL.\n\nNOTE Due to identified security vulnerabilities, SSL no longer provides adequate protection for a sensitive information.\n\nRationale:\n\nRequiring SSL for Forms Authentication will protect the confidentiality of credentials during the login process, helping mitigate the risk of stolen user information.\n\nImpact:\n\nNone.",
        "solution": "Open IIS Manager and navigate to the appropriate tier\n\nIn Features View, double-click Authentication\n\nOn the Authentication page, select Forms Authentication\n\nIn the Actions pane, click Edit\n\nCheck the Requires SSL checkbox in the cookie settings section, click OK\n\nOR\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config  -section:system.web/authentication /mode:Forms\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/Default Web Site'  -filter 'system.web/authentication/forms' -name 'requireSSL' -value 'True'\n\nDefault Value:\n\nSSL is not required when Forms Authentication is enabled.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "true",
        "appcmd_args": "list config /section:system.web/authentication /text:forms.requireSSL"
    },
    "custom_item_17": {
        "description": "2.3 Ensure 'forms authentication' require SSL - Applications",
        "info": "Forms-based authentication can pass credentials across the network in clear text. It is therefore imperative that the traffic between client and server be encrypted using SSL, especially in cases where the site is publicly accessible. It is recommended that communications with any portion of a site using Forms Authentication be encrypted using SSL.\n\nNOTE Due to identified security vulnerabilities, SSL no longer provides adequate protection for a sensitive information.\n\nRationale:\n\nRequiring SSL for Forms Authentication will protect the confidentiality of credentials during the login process, helping mitigate the risk of stolen user information.\n\nImpact:\n\nNone.",
        "solution": "Open IIS Manager and navigate to the appropriate tier\n\nIn Features View, double-click Authentication\n\nOn the Authentication page, select Forms Authentication\n\nIn the Actions pane, click Edit\n\nCheck the Requires SSL checkbox in the cookie settings section, click OK\n\nOR\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config  -section:system.web/authentication /mode:Forms\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/Default Web Site'  -filter 'system.web/authentication/forms' -name 'requireSSL' -value 'True'\n\nDefault Value:\n\nSSL is not required when Forms Authentication is enabled.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": ".*failed.*",
        "powershell_args": "function testAuth { param($p) $path='IIS:Sites\\'+$p; If (((Get-WebConfigurationProperty -PSPath $path -filter /system.web/authentication/forms -name requireSSL).Value -eq $False) -and (((Get-WebConfiguration -PSPath $path -filter /system.web/authentication).mode) -eq 'Forms')) { $p + ': failed' } else { $p + ': success' } } ; Get-Website | foreach { $site = $_.Name ; testAuth($site) ; Get-WebApplication -Site $site | foreach { $app = $_.Path ; testAuth($site+$app) } }"
    },
    "custom_item_18": {
        "description": "2.5 Ensure 'cookie protection mode' is configured for forms authentication - Default",
        "info": "The cookie protection mode defines the protection Forms Authentication cookies will be given within a configured application. The four cookie protection modes that can be defined are:\n\nEncryption and validation - Specifies that the application use both data validation and encryption to help protect the cookie; this option uses the configured data validation algorithm (based on the machine key) and triple-DES (3DES) for encryption, if available and if the key is long enough (48 bytes or more)\n\nNone - Specifies that both encryption and validation are disabled for sites that are using cookies only for personalization and have weaker security requirements\n\nEncryption - Specifies that the cookie is encrypted by using Triple-DES or DES, but data validation is not performed on the cookie; cookies used in this manner might be subject to plain text attacks\n\nValidation - Specifies that a validation scheme verifies that the contents of an encrypted cookie have not been changed in transit\n\nIt is recommended that cookie protection mode always encrypt and validate Forms Authentication cookies.\n\nRationale:\n\nBy encrypting and validating the cookie, the confidentiality and integrity of data within the cookie is assured. This helps mitigate the risk of attacks such as session hijacking and impersonation.\n\nImpact:\n\nProtection Forms Authentication cookies will restricted to the mode defined.",
        "solution": "Cookie protection mode can be configured by using the user interface (UI), by running Appcmd.exe commands in a command-line window, by editing configuration files directly, or by writing WMI scripts. Using IIS Manager:\n\nOpen IIS Manager and navigate to the level where Forms Authentication is enabled\n\nIn Features View, double-click Authentication\n\nOn the Authentication page, select Forms Authentication\n\nIn the Actions pane, click Edit\n\nIn the Cookie settings section, verify the drop-down for Protection mode is set for Encryption and validation\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/'  -filter 'system.web/authentication/forms' -name 'protection' -value 'All'\n\nDefault Value:\n\nWhen cookies are used for Forms Authentication, the default cookie protection mode is All, meaning the application encrypts and validates the cookie.",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|18,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "All",
        "appcmd_args": "list config /section:system.web/authentication /text:forms.protection"
    },
    "custom_item_19": {
        "description": "2.5 Ensure 'cookie protection mode' is configured for forms authentication - Applications",
        "info": "The cookie protection mode defines the protection Forms Authentication cookies will be given within a configured application. The four cookie protection modes that can be defined are:\n\nEncryption and validation - Specifies that the application use both data validation and encryption to help protect the cookie; this option uses the configured data validation algorithm (based on the machine key) and triple-DES (3DES) for encryption, if available and if the key is long enough (48 bytes or more)\n\nNone - Specifies that both encryption and validation are disabled for sites that are using cookies only for personalization and have weaker security requirements\n\nEncryption - Specifies that the cookie is encrypted by using Triple-DES or DES, but data validation is not performed on the cookie; cookies used in this manner might be subject to plain text attacks\n\nValidation - Specifies that a validation scheme verifies that the contents of an encrypted cookie have not been changed in transit\n\nIt is recommended that cookie protection mode always encrypt and validate Forms Authentication cookies.\n\nRationale:\n\nBy encrypting and validating the cookie, the confidentiality and integrity of data within the cookie is assured. This helps mitigate the risk of attacks such as session hijacking and impersonation.\n\nImpact:\n\nProtection Forms Authentication cookies will restricted to the mode defined.",
        "solution": "Cookie protection mode can be configured by using the user interface (UI), by running Appcmd.exe commands in a command-line window, by editing configuration files directly, or by writing WMI scripts. Using IIS Manager:\n\nOpen IIS Manager and navigate to the level where Forms Authentication is enabled\n\nIn Features View, double-click Authentication\n\nOn the Authentication page, select Forms Authentication\n\nIn the Actions pane, click Edit\n\nIn the Cookie settings section, verify the drop-down for Protection mode is set for Encryption and validation\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/'  -filter 'system.web/authentication/forms' -name 'protection' -value 'All'\n\nDefault Value:\n\nWhen cookies are used for Forms Authentication, the default cookie protection mode is All, meaning the application encrypts and validates the cookie.",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|18,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "All",
        "appcmd_args": "list config {} /section:system.web/authentication /text:forms.protection",
        "appcmd_filter": "list config {} /section:system.web/authentication /text:mode",
        "appcmd_filter_value": "Forms",
        "appcmd_list": "list apps"
    },
    "custom_item_20": {
        "description": "Verify basic authentication is installed",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp\\Components",
        "reg_item": "BasicAuthentication"
    },
    "custom_item_21": {
        "description": "2.6 Ensure transport layer security for 'basic authentication' is configured",
        "info": "Basic Authentication can pass credentials across the network in clear text. It is therefore imperative that the traffic between client and server be encrypted, especially in cases where the site is publicly accessible and is recommended that TLS be configured and required for any Site or Application using Basic Authentication.\n\nRationale:\n\nCredentials sent in clear text can be easily intercepted by malicious code or persons. Enforcing the use of Transport Layer Security will help mitigate the chances of hijacked credentials.\n\nImpact:\n\nCredentials will not be passed across the network in plain text.",
        "solution": "To protect Basic Authentication with transport layer security:\n\nOpen IIS Manager\n\nIn the Connections pane on the left, select the server to be configured\n\nIn the Connections pane, expand the server, then expand Sites and select the site to be configured\n\nIn the Actions pane, click Bindings; the Site Bindings dialog appears\n\nIf an HTTPS binding is available, click Close and see below 'To require SSL'\n\nIf no HTTPS binding is visible, perform the following steps\n\nTo add an HTTPS binding:\n\nIn the Site Bindings dialog, click Add; the Add Site Binding dialog appears\n\nUnder Type, select https\n\nUnder SSL certificate, select an X.509 certificate\n\nClick OK, then close\n\nTo require SSL:\n\nIn Features View, double-click SSL Settings\n\nOn the SSL Settings page, select Require SSL.\n\nIn the Actions pane, click Apply\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -location '' -filter 'system.webServer/security/access' -name 'sslFlags' -value 'Ssl'\n\nDefault Value:\n\nTransport Layer Security is not enabled by default when Basic Authentication is configured.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^Ssl(,.*|)[\\s]*$",
        "appcmd_args": "list config {} /section:system.webServer/security/access /text:sslFlags",
        "appcmd_filter": "list config {} /section:system.webServer/security/authentication/basicAuthentication /text:enabled",
        "appcmd_filter_value": "true",
        "appcmd_list": "list apps"
    },
    "custom_item_22": {
        "description": "2.7 Ensure 'passwordFormat' is not set to clear - Default",
        "info": "Theelement of theelement allows optional definitions of name and password for IIS Manager User accounts within the configuration file. Forms based authentication also uses these elements to define the users. IIS Manager Users can use the administration interface to connect to sites and applications in which they've been granted authorization.\n\nNote: Theelement only applies when the default provider, ConfigurationAuthenticationProvider, is configured as the authentication provider.\n\nIt is recommended that passwordFormat be set to a value other than Clear, such as SHA1.\n\nRationale:\n\nAuthentication credentials should always be protected to reduce the risk of stolen authentication credentials.\n\nImpact:\n\npasswordFormat will be encrypted.",
        "solution": "Authentication mode is configurable at the machine.config, root-level web.config, or application-level web.config:\n\nLocate and open the configuration file where the credentials are stored\n\nFind theelement\n\nIf present, ensure passwordFormat is not set to Clear\n\nChange passwordFormat to SHA1\n\nThe clear text passwords will need to be replaced with the appropriate hashed version.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/'  -filter 'system.web/authentication/forms/credentials' -name 'passwordFormat' -value 'SHA1'\n\nDefault Value:\n\nThe default passwordFormat method is SHA1.",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "Clear",
        "appcmd_args": "list config /section:system.web/authentication /text:forms.credentials.passwordFormat"
    },
    "custom_item_23": {
        "description": "2.7 Ensure 'passwordFormat' is not set to clear - Applications",
        "info": "Theelement of theelement allows optional definitions of name and password for IIS Manager User accounts within the configuration file. Forms based authentication also uses these elements to define the users. IIS Manager Users can use the administration interface to connect to sites and applications in which they've been granted authorization.\n\nNote: Theelement only applies when the default provider, ConfigurationAuthenticationProvider, is configured as the authentication provider.\n\nIt is recommended that passwordFormat be set to a value other than Clear, such as SHA1.\n\nRationale:\n\nAuthentication credentials should always be protected to reduce the risk of stolen authentication credentials.\n\nImpact:\n\npasswordFormat will be encrypted.",
        "solution": "Authentication mode is configurable at the machine.config, root-level web.config, or application-level web.config:\n\nLocate and open the configuration file where the credentials are stored\n\nFind theelement\n\nIf present, ensure passwordFormat is not set to Clear\n\nChange passwordFormat to SHA1\n\nThe clear text passwords will need to be replaced with the appropriate hashed version.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/'  -filter 'system.web/authentication/forms/credentials' -name 'passwordFormat' -value 'SHA1'\n\nDefault Value:\n\nThe default passwordFormat method is SHA1.",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "Clear",
        "appcmd_args": "list config {} /section:system.web/authentication /text:forms.credentials.passwordFormat",
        "appcmd_filter": "list config {} /section:system.web/authentication /text:mode",
        "appcmd_filter_value": "Forms",
        "appcmd_list": "list apps"
    },
    "custom_item_24": {
        "description": "Verify .net extensibility is installed - ASPNET45",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp\\Components",
        "reg_item": "ASPNET45"
    },
    "custom_item_25": {
        "description": "Verify .net extensibility is installed - NetFxExtensibility45",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp\\Components",
        "reg_item": "NetFxExtensibility45"
    },
    "custom_item_26": {
        "description": "3.1 Ensure 'deployment method retail' is set",
        "info": "Theswitch is intended for use by production IIS servers. This switch is used to help applications run with the best possible performance and least possible security information leakages by disabling the application's ability to generate trace output on a page, disabling the ability to display detailed error messages to end users, and disabling the debug switch. Often times, switches and options that are developer-focused, such as failed request tracing and debugging, are enabled during active development.\n\nIt is recommended that the deployment method on any production server be set to retail.\n\nRationale:\n\nUtilizing the switch specifically intended for production IIS servers will eliminate the risk of vital application and system information leakages that would otherwise occur if tracing or debug were to be left enabled, or customErrors were to be left off.\n\nImpact:\n\nN/A",
        "solution": "Open the machine.config file located in: %systemroot%\\Microsoft.NET\\Framework\\\\CONFIG\n\nAdd the linewithin thesection\n\nIf systems are 64-bit, do the same for the machine.config located in: %systemroot%\\Microsoft.NET\\Framework\\\\CONFIG\n\nDefault Value:\n\nThetag is not included in the machine.config by default.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "true",
        "appcmd_args": "list config /section:system.web/deployment /text:retail"
    },
    "custom_item_27": {
        "description": "3.4 Ensure IIS HTTP detailed errors are hidden from displaying remotely - Default",
        "info": "A Web site's error pages are often set to show detailed error information for troubleshooting purposes during testing or initial deployment. To prevent unauthorized users from viewing this privileged information, detailed error pages must not be seen by remote users. This setting can be modified in the errorMode attribute setting for a Web site's error pages. By default, the errorMode attribute is set in the Web.config file for the Web site or application and is located in theelement of thesection.\n\nIt is recommended that custom errors be prevented from displaying remotely.\n\nRationale:\n\nThe information contained in custom error messages can provide clues as to how applications function, opening up unnecessary attack vectors. Ensuring custom errors are never displayed remotely can help mitigate the risk of malicious persons obtaining information as to how the application works.\n\nImpact:\n\nCustom errors will not be viewable remotely.",
        "solution": "The following describes how to change the errorMode attribute to DetailedLocalOnly or Custom for a Web site by using IIS Manager:\n\nOpen IIS Manager with Administrative privileges\n\nIn the Connections pane on the left, expand the server, then expand the Sites folder\n\nSelect the Web site or application to be configured\n\nIn Features View, select Error Pages, in the Actions pane, select Open Feature\n\nIn the Actions pane, select Edit Feature Settings\n\nIn the Edit Error Pages Settings dialog, under Error Responses, select either Custom error pages or Detailed errors for local requests and custom error pages for remote requests\n\nClick OK and exit the Edit Error Pages Settings dialog\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/'  -filter 'system.webServer/httpErrors' -name 'errorMode' -value 'DetailedLocalOnly'\n\nDefault Value:\n\nThe default errorMode is DetailedLocalOnly.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "DetailedLocalOnly",
        "appcmd_args": "list config /section:system.webServer/httpErrors /text:errorMode"
    },
    "custom_item_28": {
        "description": "3.4 Ensure IIS HTTP detailed errors are hidden from displaying remotely - Applications",
        "info": "A Web site's error pages are often set to show detailed error information for troubleshooting purposes during testing or initial deployment. To prevent unauthorized users from viewing this privileged information, detailed error pages must not be seen by remote users. This setting can be modified in the errorMode attribute setting for a Web site's error pages. By default, the errorMode attribute is set in the Web.config file for the Web site or application and is located in theelement of thesection.\n\nIt is recommended that custom errors be prevented from displaying remotely.\n\nRationale:\n\nThe information contained in custom error messages can provide clues as to how applications function, opening up unnecessary attack vectors. Ensuring custom errors are never displayed remotely can help mitigate the risk of malicious persons obtaining information as to how the application works.\n\nImpact:\n\nCustom errors will not be viewable remotely.",
        "solution": "The following describes how to change the errorMode attribute to DetailedLocalOnly or Custom for a Web site by using IIS Manager:\n\nOpen IIS Manager with Administrative privileges\n\nIn the Connections pane on the left, expand the server, then expand the Sites folder\n\nSelect the Web site or application to be configured\n\nIn Features View, select Error Pages, in the Actions pane, select Open Feature\n\nIn the Actions pane, select Edit Feature Settings\n\nIn the Edit Error Pages Settings dialog, under Error Responses, select either Custom error pages or Detailed errors for local requests and custom error pages for remote requests\n\nClick OK and exit the Edit Error Pages Settings dialog\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST/'  -filter 'system.webServer/httpErrors' -name 'errorMode' -value 'DetailedLocalOnly'\n\nDefault Value:\n\nThe default errorMode is DetailedLocalOnly.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "DetailedLocalOnly",
        "appcmd_args": "list config {} /section:system.webServer/httpErrors /text:errorMode",
        "appcmd_list": "list apps"
    },
    "custom_item_29": {
        "description": "3.7 Ensure 'cookies' are set with HttpOnly attribute - Default",
        "info": "The httpOnlyCookies attribute of the httpCookies node determines if IIS will set the HttpOnly flag on HTTP cookies it sets. The HttpOnly flag indicates to the user agent that the cookie must not be accessible by client-side script (i.e document.cookie).\n\nIt is recommended that the httpOnlyCookies attribute be set to true.\n\nRationale:\n\nWhen cookies are set with the HttpOnly flag, they cannot be accessed by client-side scripting running in the user's browser. Preventing client-side scripting from accessing cookie content may reduce the probability of a cross site scripting attack materializing into a successful session hijack.\n\nImpact:\n\nN/A",
        "solution": "Locate and open the application's web.config file\n\nAdd thetag within:Setting the value of the httpOnlyCookies attribute of the httpCookies element to true will add the HttpOnly flag to all the cookies set by the application. All modern versions of browsers recognize HttpOnly attribute; older versions will either treat them as normal cookies or simply ignore them altogether.\n\nDefault Value:\n\nBy default, ASP.NET 2.0 does not force cookies to httpOnly.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "true",
        "appcmd_args": "list config /section:system.web/httpCookies /text:httpOnlyCookies"
    },
    "custom_item_30": {
        "description": "3.7 Ensure 'cookies' are set with HttpOnly attribute - Applications",
        "info": "The httpOnlyCookies attribute of the httpCookies node determines if IIS will set the HttpOnly flag on HTTP cookies it sets. The HttpOnly flag indicates to the user agent that the cookie must not be accessible by client-side script (i.e document.cookie).\n\nIt is recommended that the httpOnlyCookies attribute be set to true.\n\nRationale:\n\nWhen cookies are set with the HttpOnly flag, they cannot be accessed by client-side scripting running in the user's browser. Preventing client-side scripting from accessing cookie content may reduce the probability of a cross site scripting attack materializing into a successful session hijack.\n\nImpact:\n\nN/A",
        "solution": "Locate and open the application's web.config file\n\nAdd thetag within:Setting the value of the httpOnlyCookies attribute of the httpCookies element to true will add the HttpOnly flag to all the cookies set by the application. All modern versions of browsers recognize HttpOnly attribute; older versions will either treat them as normal cookies or simply ignore them altogether.\n\nDefault Value:\n\nBy default, ASP.NET 2.0 does not force cookies to httpOnly.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "true",
        "appcmd_args": "list config {} /section:system.web/httpCookies /text:httpOnlyCookies",
        "appcmd_list": "list apps"
    },
    "custom_item_31": {
        "description": "3.9 Ensure 'MachineKey validation method - .Net 4.5' is configured - Default",
        "info": "The machineKey element of the ASP.NET web.config specifies the algorithm and keys that ASP.NET will use for encryption. The Machine Key feature can be managed to specify hashing and encryption settings for application services such as view state, Forms authentication, membership and roles, and anonymous identification.\n\nThe following validation methods are available:\n\nAdvanced Encryption Standard (AES) is relatively easy to implement and requires little memory. AES has a key size of 128, 192, or 256 bits. This method uses the same private key to encrypt and decrypt data, whereas a public-key method must use a pair of keys\n\nMessage Digest 5 (MD5) is used for digital signing of applications. This method produces a 128-bit message digest, which is a compressed form of the original data\n\nSecure Hash Algorithm (SHA1) is considered more secure than MD5 because it produces a 160-bit message digest\n\nTriple Data Encryption Standard (TripleDES) is a minor variation of Data Encryption Standard (DES). It is three times slower than regular DES but can be more secure because it has a key size of 192 bits. If performance is not a primary consideration, consider using TripleDES\n\nSecure Hash Algorithm (SHA-2) is a family of two similar hash functions, with different block sizes known as SHA-256 and SHA-512. They differ in the word size; SHAS-256 used 32-bit words and SHA-512 uses 64-bit words.\n\nIt is recommended that SHA-2 methods be configured for use at the global level.\n\nRationale:\n\nSHA-2 is the strongest hashing algorithm supported by the validation property so it should be used as the validation method for the MachineKey in .Net 4.5.\n\nImpact:\n\nN/A",
        "solution": "Machine key encryption can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts. To set the Machine Key encryption at the global level using an appcmd.exe command:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:machineKey /validation:Note: When Appcmd.exe is used to configure theelement at the global level in IIS, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT'  -filter 'system.web/machineKey' -name 'validation' -value ''\n\nDefault Value:\n\nThe default Machine Key validation method is SHA256.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^(HMACSHA256|HMACSHA512)[\\s]*$",
        "appcmd_args": "list config /section:machineKey /text:validation"
    },
    "custom_item_32": {
        "description": "3.9 Ensure 'MachineKey validation method - .Net 4.5' is configured - Applications",
        "info": "The machineKey element of the ASP.NET web.config specifies the algorithm and keys that ASP.NET will use for encryption. The Machine Key feature can be managed to specify hashing and encryption settings for application services such as view state, Forms authentication, membership and roles, and anonymous identification.\n\nThe following validation methods are available:\n\nAdvanced Encryption Standard (AES) is relatively easy to implement and requires little memory. AES has a key size of 128, 192, or 256 bits. This method uses the same private key to encrypt and decrypt data, whereas a public-key method must use a pair of keys\n\nMessage Digest 5 (MD5) is used for digital signing of applications. This method produces a 128-bit message digest, which is a compressed form of the original data\n\nSecure Hash Algorithm (SHA1) is considered more secure than MD5 because it produces a 160-bit message digest\n\nTriple Data Encryption Standard (TripleDES) is a minor variation of Data Encryption Standard (DES). It is three times slower than regular DES but can be more secure because it has a key size of 192 bits. If performance is not a primary consideration, consider using TripleDES\n\nSecure Hash Algorithm (SHA-2) is a family of two similar hash functions, with different block sizes known as SHA-256 and SHA-512. They differ in the word size; SHAS-256 used 32-bit words and SHA-512 uses 64-bit words.\n\nIt is recommended that SHA-2 methods be configured for use at the global level.\n\nRationale:\n\nSHA-2 is the strongest hashing algorithm supported by the validation property so it should be used as the validation method for the MachineKey in .Net 4.5.\n\nImpact:\n\nN/A",
        "solution": "Machine key encryption can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts. To set the Machine Key encryption at the global level using an appcmd.exe command:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:machineKey /validation:Note: When Appcmd.exe is used to configure theelement at the global level in IIS, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT'  -filter 'system.web/machineKey' -name 'validation' -value ''\n\nDefault Value:\n\nThe default Machine Key validation method is SHA256.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": ".*failed.*",
        "powershell_args": "function testMK { param($p) $path='IIS:Sites\\'+$p; $v=(Get-WebConfigurationProperty -PSPath $path -filter /system.web/machinekey -name validation); If (($v -eq 'HMACSHA256') -or ($v -eq 'HMACSHA512')) { $p+' ('+$v+'): passed' } else { $p+' ('+$v+'): failed' } }; Get-Website | foreach { $site=$_.Name; testMK($site); Get-WebApplication -Site $site | foreach { $app=$_.Path; testMK($site+$app) } }"
    },
    "custom_item_33": {
        "description": "Verify .Net 2.0 is installed",
        "value_data": "HKLM\\Software\\Microsoft\\Net Framework Setup\\Ndp\\V2.0.50727"
    },
    "custom_item_34": {
        "description": "Verify asp.net is installed",
        "reg_key": "HKLM\\Software\\Microsoft\\Net Framework Setup\\Ndp\\V2.0.50727",
        "reg_item": "Install"
    },
    "custom_item_35": {
        "description": "3.10 Ensure global .NET trust level is configured - Default",
        "info": "An application's trust level determines the permissions that are granted by the ASP.NET code access security (CAS) policy. CAS defines two trust categories: full trust and partial trust. An application that has full trust permissions may access all resource types on a server and perform privileged operations, while applications that run with partial trust have varying levels of operating permissions and access to resources.\n\nThe possible values for the Level property of the TrustSection class are:\n\nFull: Specifies unrestricted permissions and grants the ASP.NET application permissions to access any resource that is subject to operating system security; all privileged operations are supported\n\nHigh: specifies a high level of code access security which limits the application from doing the following:\n\nCall unmanaged code\n\nCall serviced components\n\nWrite to the event log\n\nAccess Microsoft Windows Message Queuing queues\n\nAccess ODBC, OLD DB, or Oracle data sources\n\nMedium: specifies a medium level of code access security, which means that in addition to the restrictions for High, the ASP.NET application cannot do any of the following things:\n\nAccess files outside the application directory\n\nAccess the registry\n\nLow: specifies a low level of code access security, which means that in addition to the restrictions for Medium, the application is prevented from performing any of the following actions:\n\nWrite to the file system\n\nCall the System.Security.CodeAccessPermission.Assert method to expand permissions to resources\n\nMinimal: specifies a minimal level of code access security, which means that the application has only execute permission\n\nIt is recommended that the global .NET Trust Level be set to Medium or lower.\n\nRationale:\n\nThe CAS determines the permissions that are granted to the application on the server. Setting a minimal level of trust that is compatible with the applications will limit the potential harm that a compromised application could cause to a system.\n\nImpact:\n\nIf not set properly, the application may not run.",
        "solution": "Trust level can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts. To set the .Net Trust Level to Medium at the server level using an appcmd.exe command:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:trust /level:Medium\n\nWhen Appcmd.exe is used to configure the element at the global level in IIS, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT'  -filter 'system.web/trust' -name 'level' -value 'Medium'\n\nDefault Value:\n\nBy default, ASP.NET web applications run under the full trust setting.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^(Medium|Low|Minimal)[\\s]*$",
        "appcmd_args": "list config /section:trust /text:level"
    },
    "custom_item_36": {
        "description": "3.10 Ensure global .NET trust level is configured - Applications",
        "info": "An application's trust level determines the permissions that are granted by the ASP.NET code access security (CAS) policy. CAS defines two trust categories: full trust and partial trust. An application that has full trust permissions may access all resource types on a server and perform privileged operations, while applications that run with partial trust have varying levels of operating permissions and access to resources.\n\nThe possible values for the Level property of the TrustSection class are:\n\nFull: Specifies unrestricted permissions and grants the ASP.NET application permissions to access any resource that is subject to operating system security; all privileged operations are supported\n\nHigh: specifies a high level of code access security which limits the application from doing the following:\n\nCall unmanaged code\n\nCall serviced components\n\nWrite to the event log\n\nAccess Microsoft Windows Message Queuing queues\n\nAccess ODBC, OLD DB, or Oracle data sources\n\nMedium: specifies a medium level of code access security, which means that in addition to the restrictions for High, the ASP.NET application cannot do any of the following things:\n\nAccess files outside the application directory\n\nAccess the registry\n\nLow: specifies a low level of code access security, which means that in addition to the restrictions for Medium, the application is prevented from performing any of the following actions:\n\nWrite to the file system\n\nCall the System.Security.CodeAccessPermission.Assert method to expand permissions to resources\n\nMinimal: specifies a minimal level of code access security, which means that the application has only execute permission\n\nIt is recommended that the global .NET Trust Level be set to Medium or lower.\n\nRationale:\n\nThe CAS determines the permissions that are granted to the application on the server. Setting a minimal level of trust that is compatible with the applications will limit the potential harm that a compromised application could cause to a system.\n\nImpact:\n\nIf not set properly, the application may not run.",
        "solution": "Trust level can be set by using the UI, running appcmd.exe commands, by editing configuration files directly, or by writing WMI scripts. To set the .Net Trust Level to Medium at the server level using an appcmd.exe command:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /commit:WEBROOT /section:trust /level:Medium\n\nWhen Appcmd.exe is used to configure the element at the global level in IIS, the /commit:WEBROOT switch must be included so that configuration changes are made to the root web.config file instead of ApplicationHost.config.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT'  -filter 'system.web/trust' -name 'level' -value 'Medium'\n\nDefault Value:\n\nBy default, ASP.NET web applications run under the full trust setting.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^(Medium|Low|Minimal)[\\s]*$",
        "appcmd_args": "list config {} /section:trust /text:level",
        "appcmd_list": "list apps"
    },
    "custom_item_37": {
        "description": "4.5 Ensure Double-Encoded requests will be rejected - Default",
        "info": "This Request Filter feature prevents attacks that rely on double-encoded requests and applies if an attacker submits a double-encoded request to IIS. When the double-encoded requests filter is enabled, IIS will go through a two iteration process of normalizing the request. If the first normalization differs from the second, the request is rejected and the error code is logged as a 404.11. The double-encoded requests filter was the VerifyNormalization option in UrlScan.\n\nIt is recommended that double-encoded requests be rejected.\n\nRationale:\n\nThis feature will help prevent attacks that rely on URLs that have been crafted to contain double-encoded request(s).\n\nImpact:\n\nDouble-encoded requests will be rejected.",
        "solution": "The allowDoubleEscaping Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files. To configure using the IIS Manager GUI:\n\nOpen Internet Information Services (IIS) Manager\n\nIn the Connections pane, select the site, application, or directory to be configured\n\nIn the Home pane, double-click Request Filtering\n\nClick Edit Feature Settings... in the Actions pane\n\nUnder the General section, uncheck Allow double escaping\n\nIf a file name in a URL includes '+' then allowDoubleEscaping must be set to true to allow functionality.\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:requestfiltering /allowDoubleEscaping:false\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.webServer/security/requestFiltering' -name 'allowDoubleEscaping' -value 'True'\n\nDefault Value:\n\nWhen Request Filtering is installed on a system, the default behavior is to not allow double-encoded requests.",
        "reference": "800-53|SI-16,800-53r5|SI-16,CSCv7|18,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "false",
        "appcmd_args": "list config /section:system.webServer/security/requestFiltering /text:allowDoubleEscaping"
    },
    "custom_item_38": {
        "description": "4.5 Ensure Double-Encoded requests will be rejected - Applications",
        "info": "This Request Filter feature prevents attacks that rely on double-encoded requests and applies if an attacker submits a double-encoded request to IIS. When the double-encoded requests filter is enabled, IIS will go through a two iteration process of normalizing the request. If the first normalization differs from the second, the request is rejected and the error code is logged as a 404.11. The double-encoded requests filter was the VerifyNormalization option in UrlScan.\n\nIt is recommended that double-encoded requests be rejected.\n\nRationale:\n\nThis feature will help prevent attacks that rely on URLs that have been crafted to contain double-encoded request(s).\n\nImpact:\n\nDouble-encoded requests will be rejected.",
        "solution": "The allowDoubleEscaping Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files. To configure using the IIS Manager GUI:\n\nOpen Internet Information Services (IIS) Manager\n\nIn the Connections pane, select the site, application, or directory to be configured\n\nIn the Home pane, double-click Request Filtering\n\nClick Edit Feature Settings... in the Actions pane\n\nUnder the General section, uncheck Allow double escaping\n\nIf a file name in a URL includes '+' then allowDoubleEscaping must be set to true to allow functionality.\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:requestfiltering /allowDoubleEscaping:false\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.webServer/security/requestFiltering' -name 'allowDoubleEscaping' -value 'True'\n\nDefault Value:\n\nWhen Request Filtering is installed on a system, the default behavior is to not allow double-encoded requests.",
        "reference": "800-53|SI-16,800-53r5|SI-16,CSCv7|18,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "false",
        "appcmd_args": "list config {} /section:system.webServer/security/requestFiltering /text:allowDoubleEscaping",
        "appcmd_list": "list apps"
    },
    "custom_item_39": {
        "description": "4.6 Ensure 'HTTP Trace Method' is disabled - Default",
        "info": "The HTTP TRACE method returns the contents of client HTTP requests in the entity-body of the TRACE response. Attackers could leverage this behavior to access sensitive information, such as authentication data or cookies, contained in the HTTP headers of the request. One such way to mitigate this is by using theelement of thecollection. Theelement replaces the [AllowVerbs] and [DenyVerbs] features in UrlScan.\n\nIt is recommended the HTTP TRACE method be denied.\n\nRationale:\n\nAttackers may abuse HTTP TRACE functionality to gain access to information in HTTP headers such as cookies and authentication data. This risk can be mitigated by not allowing the TRACE verb.\n\nImpact:\n\nContents of client HTTP requests in the entity-body of the TRACE response will not be available.",
        "solution": "Open Internet Information Services (IIS) Manager\n\nIn the Connections pane, select the site, application, or directory to be configured\n\nIn the Home pane, double-click Request Filtering\n\nIn the Request Filtering pane, click the HTTP verbs tab, and then click Deny Verb... in the Actions pane\n\nIn the Deny Verb dialog box, enter the TRACE, and then click OK\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:requestfiltering /+verbs.[verb='TRACE',allowed='false']\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nAdd-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/requestFiltering/verbs' -name '.' -value @{verb='TRACE';allowed='False'}\n\nDefault Value:\n\nThe TRACE verb is not filtered by default.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "",
        "appcmd_args": "list config /section:system.webServer/security/requestFiltering /xml:*"
    },
    "custom_item_40": {
        "description": "4.6 Ensure 'HTTP Trace Method' is disabled - Applications",
        "info": "The HTTP TRACE method returns the contents of client HTTP requests in the entity-body of the TRACE response. Attackers could leverage this behavior to access sensitive information, such as authentication data or cookies, contained in the HTTP headers of the request. One such way to mitigate this is by using theelement of thecollection. Theelement replaces the [AllowVerbs] and [DenyVerbs] features in UrlScan.\n\nIt is recommended the HTTP TRACE method be denied.\n\nRationale:\n\nAttackers may abuse HTTP TRACE functionality to gain access to information in HTTP headers such as cookies and authentication data. This risk can be mitigated by not allowing the TRACE verb.\n\nImpact:\n\nContents of client HTTP requests in the entity-body of the TRACE response will not be available.",
        "solution": "Open Internet Information Services (IIS) Manager\n\nIn the Connections pane, select the site, application, or directory to be configured\n\nIn the Home pane, double-click Request Filtering\n\nIn the Request Filtering pane, click the HTTP verbs tab, and then click Deny Verb... in the Actions pane\n\nIn the Deny Verb dialog box, enter the TRACE, and then click OK\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:requestfiltering /+verbs.[verb='TRACE',allowed='false']\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nAdd-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/requestFiltering/verbs' -name '.' -value @{verb='TRACE';allowed='False'}\n\nDefault Value:\n\nThe TRACE verb is not filtered by default.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1M,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "",
        "appcmd_args": "list config /section:system.webServer/security/requestFiltering /xml:*",
        "appcmd_list": "list apps"
    },
    "custom_item_41": {
        "description": "4.7 Ensure Unlisted File Extensions are not allowed - Default",
        "info": "The FileExtensions Request Filter allows administrators to define specific extensions their web server(s) will allow and disallow. The property allowUnlisted will cover all other file extensions not explicitly allowed or denied. Often times, extensions such as .config, .bat, .exe, to name a few, should never be served. The AllowExtensions and DenyExtensions options are the UrlScan equivalents.\n\nIt is recommended that all extensions be disallowed at the most global level possible, with only those necessary being allowed.\n\nRationale:\n\nDisallowing all but the necessary file extensions can greatly reduce the attack surface of applications and servers.\n\nImpact:\n\nIf not set properly, file extensions that are needed will be rejected.",
        "solution": "The allowUnlisted Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files. To configure at the server level using the IIS Manager GUI:\n\nOpen Internet Information Services (IIS) Manager\n\nIn the Connections pane, select the server\n\nIn the Home pane, double-click Request Filtering\n\nClick Edit Feature Settings... in the Actions pane\n\nUnder the General section, uncheck Allow unlisted file name extensions\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:requestfiltering /fileExtensions.allowunlisted:false\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/requestFiltering/fileExtensions' -name 'allowUnlisted' -value 'False'\n\nDefault Value:\n\nThe default Request Filtering configuration allows all unlisted file extensions to be requested.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "false",
        "appcmd_args": "list config /section:system.webServer/security/requestFiltering /text:fileExtensions.allowUnlisted"
    },
    "custom_item_42": {
        "description": "4.7 Ensure Unlisted File Extensions are not allowed - Applications",
        "info": "The FileExtensions Request Filter allows administrators to define specific extensions their web server(s) will allow and disallow. The property allowUnlisted will cover all other file extensions not explicitly allowed or denied. Often times, extensions such as .config, .bat, .exe, to name a few, should never be served. The AllowExtensions and DenyExtensions options are the UrlScan equivalents.\n\nIt is recommended that all extensions be disallowed at the most global level possible, with only those necessary being allowed.\n\nRationale:\n\nDisallowing all but the necessary file extensions can greatly reduce the attack surface of applications and servers.\n\nImpact:\n\nIf not set properly, file extensions that are needed will be rejected.",
        "solution": "The allowUnlisted Request Filter may be set for a server, website, or application using the IIS Manager GUI, using AppCmd.exe commands in a command-line window, and/or directly editing the configuration files. To configure at the server level using the IIS Manager GUI:\n\nOpen Internet Information Services (IIS) Manager\n\nIn the Connections pane, select the server\n\nIn the Home pane, double-click Request Filtering\n\nClick Edit Feature Settings... in the Actions pane\n\nUnder the General section, uncheck Allow unlisted file name extensions\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:requestfiltering /fileExtensions.allowunlisted:false\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/requestFiltering/fileExtensions' -name 'allowUnlisted' -value 'False'\n\nDefault Value:\n\nThe default Request Filtering configuration allows all unlisted file extensions to be requested.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "false",
        "appcmd_args": "list config {} /section:system.webServer/security/requestFiltering /text:fileExtensions.allowUnlisted",
        "appcmd_list": "list apps"
    },
    "custom_item_43": {
        "description": "4.8 Ensure Handler is not granted Write and Script/Execute - Default",
        "info": "Handler mappings can be configured to give permissions to Read, Write, Script, or Execute depending on what the use is for - reading static content, uploading files, executing scripts, etc.\n\nIt is recommended to grant a handler either Execute/Script or Write permissions, but not both.\n\nRationale:\n\nBy allowing both Execute/Script and Write permissions, a handler can run malicious code on the target server. Ensuring these two permissions are never together will help lower the risk of malicious code being executed on the server.\n\nImpact:\n\nN/A",
        "solution": "The accessPolicy attribute in thesection of either the ApplicationHost.config (server-wide) or web.config (site or application) must not have Write present when Script or Execute are present. To resolve this issue for a Web server, the attribute in thesection of the ApplicationHost.config file for the server must manually be edited. To edit the ApplicationHost.config file by using Notepad, perform the following steps:\n\nOpen Notepad as Administrator\n\nOpen the ApplicationHost.config file in %systemroot%\\system32\\inetsrv\\config\n\nEdit thesection accessPolicy attribute so that Write is not present when Script or Execute are present\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:handlers /accessPolicy:Read,Script\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/handlers' -name 'accessPolicy' -value 'Read,Script'\n\nNote: This configuration change cannot be made by using IIS Manager.\n\nDefault Value:\n\nThe default handlers accessPolicy is Read, Script.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|18,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1M,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "Write.*[\\s](Execute|Script).*[\\s]*$",
        "appcmd_args": "list config /section:system.webServer/handlers /text:accessPolicy"
    },
    "custom_item_44": {
        "description": "4.8 Ensure Handler is not granted Write and Script/Execute - Applications",
        "info": "Handler mappings can be configured to give permissions to Read, Write, Script, or Execute depending on what the use is for - reading static content, uploading files, executing scripts, etc.\n\nIt is recommended to grant a handler either Execute/Script or Write permissions, but not both.\n\nRationale:\n\nBy allowing both Execute/Script and Write permissions, a handler can run malicious code on the target server. Ensuring these two permissions are never together will help lower the risk of malicious code being executed on the server.\n\nImpact:\n\nN/A",
        "solution": "The accessPolicy attribute in thesection of either the ApplicationHost.config (server-wide) or web.config (site or application) must not have Write present when Script or Execute are present. To resolve this issue for a Web server, the attribute in thesection of the ApplicationHost.config file for the server must manually be edited. To edit the ApplicationHost.config file by using Notepad, perform the following steps:\n\nOpen Notepad as Administrator\n\nOpen the ApplicationHost.config file in %systemroot%\\system32\\inetsrv\\config\n\nEdit thesection accessPolicy attribute so that Write is not present when Script or Execute are present\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config /section:handlers /accessPolicy:Read,Script\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/handlers' -name 'accessPolicy' -value 'Read,Script'\n\nNote: This configuration change cannot be made by using IIS Manager.\n\nDefault Value:\n\nThe default handlers accessPolicy is Read, Script.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|18,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1M,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "Write.*[\\s](Execute|Script).*[\\s]*$",
        "appcmd_args": "list config {} /section:system.webServer/handlers /text:accessPolicy",
        "appcmd_list": "list apps"
    },
    "custom_item_45": {
        "description": "4.9 Ensure 'notListedIsapisAllowed' is set to false",
        "info": "The notListedIsapisAllowed attribute is a server-level setting that is located in the ApplicationHost.config file in theelement of thesection under. This element ensures that malicious users cannot copy unauthorized ISAPI binaries to the Web server and then run them.\n\nIt is recommended that notListedIsapisAllowed be set to false.\n\nRationale:\n\nRestricting this attribute to false will help prevent potentially malicious ISAPI extensions from being run.\n\nImpact:\n\nUnauthorized ISAPI binaries will not be allowed.",
        "solution": "To use IIS Manager to set the notListedIsapisAllowed attribute to false:\n\nOpen IIS Manager as Administrator\n\nIn the Connections pane on the left, select server to be configured\n\nIn Features View, select ISAPI and CGI Restrictions; in the Actions pane, select Open Feature\n\nIn the Actions pane, select Edit Feature Settings\n\nIn the Edit ISAPI and CGI Restrictions Settings dialog, clear the Allow unspecified ISAPI modules check box, if checked\n\nClick OK\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.webServer/security/isapiCgiRestriction /notListedIsapisAllowed:false\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/isapiCgiRestriction' -name 'notListedIsapisAllowed' -value 'False'\n\nDefault Value:\n\nThe default value for notListedIsapisAllowed is false.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "false",
        "appcmd_args": "list config /section:system.webServer/security/isapiCgiRestriction /text:notListedIsapisAllowed"
    },
    "custom_item_46": {
        "description": "4.10 Ensure 'notListedCgisAllowed' is set to false",
        "info": "The notListedCgisAllowed attribute is a server-level setting that is located in the ApplicationHost.config file in theelement of thesection under. This element ensures that malicious users cannot copy unauthorized CGI binaries to the Web server and then run them.\n\nIt is recommended that notListedCgisAllowed be set to false.\n\nRationale:\n\nRestricting this attribute to false will help prevent unlisted CGI extensions, including potentially malicious CGI scripts from being run.\n\nImpact:\n\nUnlisted CGI extensions will not be allowed.",
        "solution": "To set the notListedCgisAllowed attribute to false using IIS Manager:\n\nOpen IIS Manager as Administrator\n\nIn the Connections pane on the left, select the server to configure\n\nIn Features View, select ISAPI and CGI Restrictions; in the Actions pane, select Open Feature\n\nIn the Actions pane, select Edit Feature Settings\n\nIn the Edit ISAPI and CGI Restrictions Settings dialog, clear the Allow unspecified CGI modules check box\n\nClick OK\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.webServer/security/isapiCgiRestriction /notListedCgisAllowed:false\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/isapiCgiRestriction' -name 'notListedCgisAllowed' -value 'False'\n\nDefault Value:\n\nThe default value for notListedCgisAllowed is false.",
        "reference": "800-171|3.13.1,800-171|3.13.2,800-53|SA-8,800-53r5|SA-8,CSCv7|18,CSF|PR.IP-2,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SA-8,ITSG-33|SA-8a.,LEVEL|1A,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.6.5,NIAv2|SS3,NIAv2|VL2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "false",
        "appcmd_args": "list config /section:system.webServer/security/isapiCgiRestriction /text:notListedCgisAllowed"
    },
    "custom_item_47": {
        "description": "4.11 Ensure 'Dynamic IP Address Restrictions' is enabled - maxConcurrentRequests",
        "info": "Dynamic IP address filtering allows administrators to configure the server to block access for IPs that exceed the specified number of requests or request frequency.\n\nNote: Ensure that you receive the Forbidden page once the block has been enforced.\n\nRationale:\n\nIIS Dynamic IP Address Restrictions capability can be used to thwart DDos attacks. This is complimentary to the IP Addresses and Domain names Restrictions lists that can be manually maintained within IIS. In contrast, Dynamic IP address filtering allows administrators to configure the server to block access for IPs that exceed the specified request threshold. The default action Deny action for restrictions is to return a Forbidden response to the client.\n\nImpact:\n\nClients will receive a forbidden response when the specified number of requests or request frequency is exceeded.",
        "solution": "Open IIS Manager.\n\nOpen the IP Address and Domain Restrictions feature.\n\nClick Edit Dynamic Restrictions Settings..\n\nCheck the Deny IP Address based on the number of concurrent requests and the Deny IP Address based on the number of requests over a period of time boxes. The values can be tweaked as needed for your specific environment.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/dynamicIpSecurity/denyByConcurrentRequests' -name 'enabled' -value 'True'\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/dynamicIpSecurity/denyByConcurrentRequests' -name 'maxConcurrentRequests' -valueDefault Value:\n\nBy default Dynamic IP Restrictions are not enabled.",
        "reference": "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "@MAX_CONCURRENT_REQUESTS@",
        "appcmd_args": "list config /section:system.webServer/security/dynamicIpSecurity /text:denyByConcurrentRequests.maxConcurrentRequests"
    },
    "custom_item_48": {
        "description": "4.11 Ensure 'Dynamic IP Address Restrictions' is enabled - Deny By Concurrent Requests",
        "info": "Dynamic IP address filtering allows administrators to configure the server to block access for IPs that exceed the specified number of requests or request frequency.\n\nNote: Ensure that you receive the Forbidden page once the block has been enforced.\n\nRationale:\n\nIIS Dynamic IP Address Restrictions capability can be used to thwart DDos attacks. This is complimentary to the IP Addresses and Domain names Restrictions lists that can be manually maintained within IIS. In contrast, Dynamic IP address filtering allows administrators to configure the server to block access for IPs that exceed the specified request threshold. The default action Deny action for restrictions is to return a Forbidden response to the client.\n\nImpact:\n\nClients will receive a forbidden response when the specified number of requests or request frequency is exceeded.",
        "solution": "Open IIS Manager.\n\nOpen the IP Address and Domain Restrictions feature.\n\nClick Edit Dynamic Restrictions Settings..\n\nCheck the Deny IP Address based on the number of concurrent requests and the Deny IP Address based on the number of requests over a period of time boxes. The values can be tweaked as needed for your specific environment.\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/dynamicIpSecurity/denyByConcurrentRequests' -name 'enabled' -value 'True'\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.webServer/security/dynamicIpSecurity/denyByConcurrentRequests' -name 'maxConcurrentRequests' -valueDefault Value:\n\nBy default Dynamic IP Restrictions are not enabled.",
        "reference": "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9.5,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1M,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "true",
        "appcmd_args": "list config /section:system.webServer/security/dynamicIpSecurity /text:denyByConcurrentRequests.enabled"
    },
    "custom_item_49": {
        "description": "5.1 Ensure Default IIS web log location is moved",
        "info": "IIS will log relatively detailed information on every request. These logs are usually the first item looked at in a security response and can be the most valuable. Malicious users are aware of this and will often try to remove evidence of their activities.\n\nIt is recommended that the default location for IIS log files be changed to a restricted, non-system drive.\n\nRationale:\n\nMoving IIS logging to a restricted, non-system drive will help mitigate the risk of logs being maliciously altered, removed, or lost in the event of system drive failure(s).\n\nImpact:\n\nIf an administrator needs access to the log file, that does not have drive permission, they will be unable to view that file.",
        "solution": "Moving the default log location can be easily accomplished using the Logging feature in the IIS Management UI, AppCmd.exe, or PowerShell.\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd set config -section:sites -siteDefaults.logfile.directory:OR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/logFile' -name 'directory' -valueMoving log file stores to a non-system drive or partition separate from where web applications run and/or content is served is preferred. Additionally, folder-level NTFS permissions should be set as restrictive as possible; Administrators and SYSTEM are typically the only principals requiring access.\n\nWhile standard IIS logs can be moved and edited using IIS Manager, additional management tool add-ons are required in order to manage logs generated by other IIS features, such as Request Filtering and IIS Advanced Logging. These add-ons can be obtained using the Web Platform Installer or from Microsoft's site. The HTTPErr logging location can be changed by adding a registry key.\n\nDefault Value:\n\nThe default location for web logs in IIS is: %SystemDrive%\\inetpub\\logs\\LogFiles.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^(\\%SystemDrive\\%|C:)",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:siteDefaults.logfile.directory"
    },
    "custom_item_50": {
        "description": "Verify log format is W3c",
        "value_data": "W3C",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:siteDefaults.logfile.logFormat"
    },
    "custom_item_51": {
        "description": "5.3 Ensure 'ETW Logging' is enabled",
        "info": "Event Tracing for Windows (ETW) is a Windows feature that allows Administrators to send logging information to another location. This information is then compiled on the server and can be queried.\n\nRationale:\n\nIIS flushes log information to disk, therefore prior to IIS, administrators do not have access to real-time logging information. Text-based log files can also be difficult and time consuming to process. By enabling ETW, administrators have access to use standard query tools for viewing real-time logging information.\n\nImpact:\n\nA dedicated server hosting Event Tracing for Windows (ETW) will be needed.",
        "solution": "To configure ETW logging:\n\nOpen IIS Manager\n\nSelect the server or site to enable ETW\n\nSelect Logging.\n\nEnsure Log file format is W3C.\n\nSelect Both log file and ETW event\n\nSave your settings.",
        "reference": "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.6,CSCv7|6.8,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|1M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^.*ETW.*[\\s]*$",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:siteDefaults.logfile.logTargetW3C"
    },
    "custom_item_52": {
        "description": "5.3 Ensure 'ETW Logging' is enabled",
        "info": "Event Tracing for Windows (ETW) is a Windows feature that allows Administrators to send logging information to another location. This information is then compiled on the server and can be queried.\n\nRationale:\n\nIIS flushes log information to disk, therefore prior to IIS, administrators do not have access to real-time logging information. Text-based log files can also be difficult and time consuming to process. By enabling ETW, administrators have access to use standard query tools for viewing real-time logging information.\n\nImpact:\n\nA dedicated server hosting Event Tracing for Windows (ETW) will be needed.",
        "solution": "To configure ETW logging:\n\nOpen IIS Manager\n\nSelect the server or site to enable ETW\n\nSelect Logging.\n\nEnsure Log file format is W3C.\n\nSelect Both log file and ETW event\n\nSave your settings.",
        "reference": "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.6,CSCv7|6.8,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|1M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "W3C",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:siteDefaults.logfile.logFormat"
    },
    "custom_item_53": {
        "description": "5.3 Ensure 'ETW Logging' is enabled - Sites logFormat W3C with ETW target",
        "info": "Event Tracing for Windows (ETW) is a Windows feature that allows Administrators to send logging information to another location. This information is then compiled on the server and can be queried.\n\nRationale:\n\nIIS flushes log information to disk, therefore prior to IIS, administrators do not have access to real-time logging information. Text-based log files can also be difficult and time consuming to process. By enabling ETW, administrators have access to use standard query tools for viewing real-time logging information.\n\nImpact:\n\nA dedicated server hosting Event Tracing for Windows (ETW) will be needed.",
        "solution": "To configure ETW logging:\n\nOpen IIS Manager\n\nSelect the server or site to enable ETW\n\nSelect Logging.\n\nEnsure Log file format is W3C.\n\nSelect Both log file and ETW event\n\nSave your settings.",
        "reference": "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.6,CSCv7|6.8,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|1M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "^.*ETW.*[\\s]*$",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:[name='{}'].logfile.logTargetW3C",
        "appcmd_filter": "list config /section:system.applicationHost/sites /text:[name='{}'].logfile.logFormat",
        "appcmd_filter_value": "W3C",
        "appcmd_list": "list sites"
    },
    "custom_item_54": {
        "description": "5.3 Ensure 'ETW Logging' is enabled - Sites logFormat W3C",
        "info": "Event Tracing for Windows (ETW) is a Windows feature that allows Administrators to send logging information to another location. This information is then compiled on the server and can be queried.\n\nRationale:\n\nIIS flushes log information to disk, therefore prior to IIS, administrators do not have access to real-time logging information. Text-based log files can also be difficult and time consuming to process. By enabling ETW, administrators have access to use standard query tools for viewing real-time logging information.\n\nImpact:\n\nA dedicated server hosting Event Tracing for Windows (ETW) will be needed.",
        "solution": "To configure ETW logging:\n\nOpen IIS Manager\n\nSelect the server or site to enable ETW\n\nSelect Logging.\n\nEnsure Log file format is W3C.\n\nSelect Both log file and ETW event\n\nSave your settings.",
        "reference": "800-171|3.3.1,800-171|3.3.5,800-53|AU-6(3),800-53r5|AU-6(3),CN-L3|7.1.3.3(d),CSCv7|6.6,CSCv7|6.8,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6(3),LEVEL|1M,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "W3C",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:[name='{}'].logfile.logFormat",
        "appcmd_list": "list sites"
    },
    "custom_item_55": {
        "description": "Verify FTP service is installed",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp\\Components",
        "reg_item": "FTPSvc"
    },
    "custom_item_56": {
        "description": "6.1 Ensure FTP requests are encrypted - Control Channel Default",
        "info": "FTP Publishing Service for IIS supports adding an SSL certificate to an FTP site. Using an SSL certificate with an FTP site is also known as FTP-S or FTP over Secure Socket Layers (SSL). FTP-S is an RFC standard (RFC 4217) where an SSL certificate is added to an FTP site and thereby making it possible to perform secure file transfers.\n\nRationale:\n\nBy using SSL, the FTP transmission is encrypted and secured from point to point and all FTP traffic as well as credentials are thereby guarded against interception.\n\nImpact:\n\nSSL will be needed for the FTP transmission.",
        "solution": "To configure FTP over SSL at the server level using AppCmd.exe or PowerShell:\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.applicationHost/sites /siteDefaults.ftpServer.security.ssl.controlChannelPolicy:'SslRequire' /siteDefaults.ftpServer.security.ssl.dataChannelPolicy:'SslRequire'  /commit:apphost\n\nOR\n\nEnter the following commands in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'controlChannelPolicy' -value 'SslRequire'\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'dataChannelPolicy' -value 'SslRequire'\n\nDefault Value:\n\nBy default, FTP sites are not SSL enabled.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "SslRequire",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:siteDefaults.ftpServer.security.ssl.controlChannelPolicy"
    },
    "custom_item_57": {
        "description": "6.1 Ensure FTP requests are encrypted - Data Channel Default",
        "info": "FTP Publishing Service for IIS supports adding an SSL certificate to an FTP site. Using an SSL certificate with an FTP site is also known as FTP-S or FTP over Secure Socket Layers (SSL). FTP-S is an RFC standard (RFC 4217) where an SSL certificate is added to an FTP site and thereby making it possible to perform secure file transfers.\n\nRationale:\n\nBy using SSL, the FTP transmission is encrypted and secured from point to point and all FTP traffic as well as credentials are thereby guarded against interception.\n\nImpact:\n\nSSL will be needed for the FTP transmission.",
        "solution": "To configure FTP over SSL at the server level using AppCmd.exe or PowerShell:\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.applicationHost/sites /siteDefaults.ftpServer.security.ssl.controlChannelPolicy:'SslRequire' /siteDefaults.ftpServer.security.ssl.dataChannelPolicy:'SslRequire'  /commit:apphost\n\nOR\n\nEnter the following commands in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'controlChannelPolicy' -value 'SslRequire'\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'dataChannelPolicy' -value 'SslRequire'\n\nDefault Value:\n\nBy default, FTP sites are not SSL enabled.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "SslRequire",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:siteDefaults.ftpServer.security.ssl.dataChannelPolicy",
        "appcmd_list": "list sites"
    },
    "custom_item_58": {
        "description": "6.1 Ensure FTP requests are encrypted - Control Channel Sites",
        "info": "FTP Publishing Service for IIS supports adding an SSL certificate to an FTP site. Using an SSL certificate with an FTP site is also known as FTP-S or FTP over Secure Socket Layers (SSL). FTP-S is an RFC standard (RFC 4217) where an SSL certificate is added to an FTP site and thereby making it possible to perform secure file transfers.\n\nRationale:\n\nBy using SSL, the FTP transmission is encrypted and secured from point to point and all FTP traffic as well as credentials are thereby guarded against interception.\n\nImpact:\n\nSSL will be needed for the FTP transmission.",
        "solution": "To configure FTP over SSL at the server level using AppCmd.exe or PowerShell:\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.applicationHost/sites /siteDefaults.ftpServer.security.ssl.controlChannelPolicy:'SslRequire' /siteDefaults.ftpServer.security.ssl.dataChannelPolicy:'SslRequire'  /commit:apphost\n\nOR\n\nEnter the following commands in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'controlChannelPolicy' -value 'SslRequire'\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'dataChannelPolicy' -value 'SslRequire'\n\nDefault Value:\n\nBy default, FTP sites are not SSL enabled.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "SslRequire",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:[name='{}'].ftpServer.security.ssl.controlChannelPolicy",
        "appcmd_filter": "list config /section:system.applicationHost/sites /text:[name='{}'].bindings.[protocol='ftp'].protocol",
        "appcmd_filter_value": "ftp",
        "appcmd_list": "list sites"
    },
    "custom_item_59": {
        "description": "6.1 Ensure FTP requests are encrypted - Data Channel Sites",
        "info": "FTP Publishing Service for IIS supports adding an SSL certificate to an FTP site. Using an SSL certificate with an FTP site is also known as FTP-S or FTP over Secure Socket Layers (SSL). FTP-S is an RFC standard (RFC 4217) where an SSL certificate is added to an FTP site and thereby making it possible to perform secure file transfers.\n\nRationale:\n\nBy using SSL, the FTP transmission is encrypted and secured from point to point and all FTP traffic as well as credentials are thereby guarded against interception.\n\nImpact:\n\nSSL will be needed for the FTP transmission.",
        "solution": "To configure FTP over SSL at the server level using AppCmd.exe or PowerShell:\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.applicationHost/sites /siteDefaults.ftpServer.security.ssl.controlChannelPolicy:'SslRequire' /siteDefaults.ftpServer.security.ssl.dataChannelPolicy:'SslRequire'  /commit:apphost\n\nOR\n\nEnter the following commands in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'controlChannelPolicy' -value 'SslRequire'\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST' -filter 'system.applicationHost/sites/siteDefaults/ftpServer/security/ssl' -name 'dataChannelPolicy' -value 'SslRequire'\n\nDefault Value:\n\nBy default, FTP sites are not SSL enabled.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1M,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "SslRequire",
        "appcmd_args": "list config /section:system.applicationHost/sites /text:[name='{}'].ftpServer.security.ssl.dataChannelPolicy",
        "appcmd_filter": "list config /section:system.applicationHost/sites /text:[name='{}'].bindings.[protocol='ftp'].protocol",
        "appcmd_filter_value": "ftp",
        "appcmd_list": "list sites"
    },
    "custom_item_60": {
        "description": "Verify FTP service is installed",
        "reg_key": "HKLM\\Software\\Microsoft\\Inetstp\\Components",
        "reg_item": "FTPSvc"
    },
    "custom_item_61": {
        "description": "6.2 Ensure FTP Logon attempt restrictions is enabled",
        "info": "FTP Logon attempt restrictions is a built-in network security feature to automatically block brute force FTP attacks. This can be used to mitigate a malicious client from attempting a brute-force attack on a discovered account, such as the local administrator account.\n\nRationale:\n\nSuccessful brute force FTP attacks can allow an otherwise unauthorized user to make changes to data that should not be made. This could allow the unauthorized user to modify website code by uploading malicious software or even changing functionality for items such as online payments.\n\nImpact:\n\nN/A",
        "solution": "To configure FTP Logon Attempt Restrictions at the server level using AppCmd.exe or PowerShell:\n\nEnter the following command in AppCmd.exe to configure:\n\n%systemroot%\\system32\\inetsrv\\appcmd.exe set config  -section:system.ftpServer/security/authentication /denyByFailure.enabled:'True'  /commit:apphost\n\nOR\n\nEnter the following command in PowerShell to configure:\n\nSet-WebConfigurationProperty -pspath 'MACHINE/WEBROOT/APPHOST'  -filter 'system.ftpServer/security/authentication/denyByFailure' -name 'enabled' -value 'True'\n\nDefault Value:\n\nBy default, this feature is not enabled when FTP is installed.",
        "reference": "800-53|SI-16,800-53r5|SI-16,CSCv7|9.1,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1M",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "value_data": "true",
        "appcmd_args": "list config /section:system.ftpServer/security/authentication /text:denyByFailure.enabled"
    },
    "custom_item_62": {
        "description": "SSL 2.0 key exists",
        "value_data": "HKLM\\System\\Currentcontrolset\\Control\\Securityproviders\\Schannel\\Protocols\\Ssl 2.0"
    },
    "custom_item_63": {
        "description": "7.2 Ensure SSLv2 is Disabled",
        "info": "The SSLv2 protocol is not considered cryptographically secure, therefore should be disabled.\n\nRationale:\n\nDisabling weak protocols will help ensure the confidentiality and integrity of in-transit data.\n\nImpact:\n\nThe SSLv2 protocol will not be available for use.",
        "solution": "Perform the following to disable SSL 2.0:\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Client:Enabled\n\nSet the following Registry key to 1.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server:DisabledByDefault\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Client:DisabledByDefault\n\nTo disable using PowerShell enter the following command:\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server' -Force | Out-Null\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Client' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Client' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Server' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 2.0\\Client' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null\n\nDefault Value:\n\nEnabled",
        "reference": "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|14.4,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1A,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\Securityproviders\\Schannel\\Protocols\\SSL 2.0\\Server",
        "reg_item": "Enabled"
    },
    "custom_item_64": {
        "description": "7.3 Ensure SSLv3 is Disabled",
        "info": "The SSLv3 protocol is not considered cryptographically secure, therefore should be disabled.\n\nRationale:\n\nDisabling weak protocols will help ensure the confidentiality and integrity of in-transit data.\n\nImpact:\n\nThe SSLv3 protocol will not be available.",
        "solution": "Perform the following to disable SSL 3.0:\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Client:Enabled\n\nSet the following Registry key to 1.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server:DisabledByDefault\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Client:DisabledByDefault\n\nTo disable using PowerShell enter the following command:\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server' -Force | Out-Null\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Client' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Client' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Server' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\SSL 3.0\\Client' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null\n\nDefault Value:\n\nEnabled",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\Securityproviders\\Schannel\\Protocols\\SSL 3.0\\Server",
        "reg_item": "Enabled"
    },
    "custom_item_65": {
        "description": "7.4 Ensure TLS 1.0 is Disabled",
        "info": "The TLS 1.0 protocol is not considered cryptographically secure, therefore should be disabled.\n\nRationale:\n\nDisabling weak protocols will help ensure the confidentiality and integrity of in-transit data.\n\nImpact:\n\nThe TLS 1.0 protocol will not be available.",
        "solution": "Perform the following to disable TLS 1.0:\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Client:Enabled\n\nSet the following Registry key to 1.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server:DisabledByDefault\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Client:DisabledByDefault\n\nTo disable using PowerShell enter the following command:\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server' -Force | Out-Null\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Client' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Client' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Client' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Protocols\\TLS 1.0\\Server",
        "reg_item": "Enabled"
    },
    "custom_item_66": {
        "description": "7.5 Ensure TLS 1.1 is Disabled",
        "info": "The TLS 1.1 protocol is not considered cryptographically secure, therefore should be disabled.\n\nRationale:\n\nDisabling weak protocols will help ensure the confidentiality and integrity of in-transit data.\n\nImpact:\n\nTLS 1.1 may be needed for backward compatibility.\n\nWarning: Fully test the application to ensure that backwards compatibility is not needed. If it is, build in exceptions as necessary for backwards compatibility.",
        "solution": "Perform the following to disable TLS 1.1:\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Client:Enabled\n\nSet the following Registry key to 1.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server:DisabledByDefault\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Client:DisabledByDefault\n\nTo disable using PowerShell enter the following command:\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server' -Force | Out-Null\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Client' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Client' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Server' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\Client' -name 'DisabledByDefault' -value '1' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|14.4,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1A,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Protocols\\TLS 1.1\\Server",
        "reg_item": "Enabled"
    },
    "custom_item_67": {
        "description": "Protocols TLS 1.2 key exists",
        "value_data": "HKLM\\System\\Currentcontrolset\\Control\\Securityproviders\\Schannel\\Protocols\\Tls 1.2"
    },
    "custom_item_68": {
        "description": "7.6 Ensure TLS 1.2 is Enabled",
        "info": "TLS 1.2 is the most recent and mature protocol for protecting the confidentiality and integrity of HTTP traffic.\n\nRationale:\n\nEnabling this protocol will help ensure the confidentiality and integrity of data in transit.\n\nImpact:\n\nN/A",
        "solution": "Perform the following to enable TLS 1.2:\n\nSet the following Registry key to 1.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server:Enabled\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server:DisabledByDefault\n\nTo enable using PowerShell enter the following command:\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server' -name 'Enabled' -value '1' -PropertyType 'DWord' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server' -name 'DisabledByDefault' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Protocols\\TLS 1.2\\Server",
        "reg_item": "Enabled"
    },
    "custom_item_69": {
        "description": "7.7 Ensure NULL Cipher Suites is Disabled",
        "info": "The NULL cipher does not provide data confidentiality or integrity, therefore it is recommended that the NULL cipher be disabled.\n\nRationale:\n\nBy disabling the NULL cipher, there is a better chance of maintaining data confidentiality and integrity.\n\nImpact:\n\nThe NULL cipher suite will not be available.",
        "solution": "Perform the following to disable NULL cipher:\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\NULL:Enabled\n\nTo disable using PowerShell enter the following command:\n\nNew-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\NULL' -Force | Out-Null\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\NULL' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Ciphers\\NULL",
        "reg_item": "Enabled"
    },
    "custom_item_70": {
        "description": "7.8 Ensure DES Cipher Suites is Disabled",
        "info": "The DES Cipher Suite is considered a weak symmetric-key cipher, therefore it is recommended that it be disabled.\n\nRationale:\n\nBy disabling DES, there is a better chance of maintaining data confidentiality and integrity.\n\nImpact:\n\nThe DES Cipher Suite will not be avaiable.",
        "solution": "Perform the following to disable DES 56/56 cipher:\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\DES 56/56:Enabled\n\nTo disable using PowerShell enter the following command:\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('DES 56/56')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\DES 56/56' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Ciphers\\DES 56/56",
        "reg_item": "Enabled"
    },
    "custom_item_71": {
        "description": "7.9 Ensure RC4 Cipher Suites is Disabled - RC4 40/128",
        "info": "The RC4 Cipher Suites are considered insecure, therefore should be disabled.\n\nNote: RC4 cipher enabled by default on Server 2012 and 2012 R2 is RC4 128/128.\n\nRationale:\n\nThe use of RC4 may increase an adversaries ability to read sensitive information sent over SSL/TLS.\n\nImpact:\n\nThe RC4 Cipher Suites will not be available. The use of RC4 in TLS and SSL could allow an attacker to perform man-in-the-middle attacks and recover plaintext from encrypted sessions.",
        "solution": "Perform the following to disable RC4 40/128, RC4 56/128, RC4 64/128, RC4 128/128 ciphers:\n\nSet the following Registry keys to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128:Enabled\n\nTo disable using PowerShell enter the following commands:\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 40/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 56/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 64/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 128/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Ciphers\\Rc4 40/128",
        "reg_item": "Enabled"
    },
    "custom_item_72": {
        "description": "7.9 Ensure RC4 Cipher Suites is Disabled - RC4 56/128",
        "info": "The RC4 Cipher Suites are considered insecure, therefore should be disabled.\n\nNote: RC4 cipher enabled by default on Server 2012 and 2012 R2 is RC4 128/128.\n\nRationale:\n\nThe use of RC4 may increase an adversaries ability to read sensitive information sent over SSL/TLS.\n\nImpact:\n\nThe RC4 Cipher Suites will not be available. The use of RC4 in TLS and SSL could allow an attacker to perform man-in-the-middle attacks and recover plaintext from encrypted sessions.",
        "solution": "Perform the following to disable RC4 40/128, RC4 56/128, RC4 64/128, RC4 128/128 ciphers:\n\nSet the following Registry keys to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128:Enabled\n\nTo disable using PowerShell enter the following commands:\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 40/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 56/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 64/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 128/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Ciphers\\RC4 56/128",
        "reg_item": "Enabled"
    },
    "custom_item_73": {
        "description": "7.9 Ensure RC4 Cipher Suites is Disabled - RC4 64/128",
        "info": "The RC4 Cipher Suites are considered insecure, therefore should be disabled.\n\nNote: RC4 cipher enabled by default on Server 2012 and 2012 R2 is RC4 128/128.\n\nRationale:\n\nThe use of RC4 may increase an adversaries ability to read sensitive information sent over SSL/TLS.\n\nImpact:\n\nThe RC4 Cipher Suites will not be available. The use of RC4 in TLS and SSL could allow an attacker to perform man-in-the-middle attacks and recover plaintext from encrypted sessions.",
        "solution": "Perform the following to disable RC4 40/128, RC4 56/128, RC4 64/128, RC4 128/128 ciphers:\n\nSet the following Registry keys to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128:Enabled\n\nTo disable using PowerShell enter the following commands:\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 40/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 56/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 64/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 128/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Ciphers\\RC4 64/128",
        "reg_item": "Enabled"
    },
    "custom_item_74": {
        "description": "7.9 Ensure RC4 Cipher Suites is Disabled - RC4 128/128",
        "info": "The RC4 Cipher Suites are considered insecure, therefore should be disabled.\n\nNote: RC4 cipher enabled by default on Server 2012 and 2012 R2 is RC4 128/128.\n\nRationale:\n\nThe use of RC4 may increase an adversaries ability to read sensitive information sent over SSL/TLS.\n\nImpact:\n\nThe RC4 Cipher Suites will not be available. The use of RC4 in TLS and SSL could allow an attacker to perform man-in-the-middle attacks and recover plaintext from encrypted sessions.",
        "solution": "Perform the following to disable RC4 40/128, RC4 56/128, RC4 64/128, RC4 128/128 ciphers:\n\nSet the following Registry keys to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128:Enabled\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128:Enabled\n\nTo disable using PowerShell enter the following commands:\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 40/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 40/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 56/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 56/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 64/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 64/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('RC4 128/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\RC4 128/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Ciphers\\RC4 128/128",
        "reg_item": "Enabled"
    },
    "custom_item_75": {
        "description": "7.10 Ensure AES 128/128 Cipher Suite is Disabled",
        "info": "The AES 128/128 Cipher Suite is not considered secure and therefore should be disabled, if possible.\n\nRationale:\n\nThis item is Scored for the following reasons and should be disabled:\n\nEnabling AES 256/256 is recommended.\n\nThis cipher does not suffer from known practical attacks.\n\nImpact:\n\nWarning: Enabling AES 128/128 may be required for client compatibility.",
        "solution": "Perform the following to disable AES 128/128 cipher:\n\nSet the following Registry key to 0.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 128/128:Enabled\n\nTo disable using PowerShell enter the following command:\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('AES 128/128')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 128/128' -name 'Enabled' -value '0' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\Currentcontrolset\\Control\\SecurityProviders\\Schannel\\Ciphers\\AES 128/128",
        "reg_item": "Enabled"
    },
    "custom_item_76": {
        "description": "AES 256/256 key exists",
        "value_data": "HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256"
    },
    "custom_item_77": {
        "description": "7.11 Ensure AES 256/256 Cipher Suite is Enabled",
        "info": "AES 256/256 is the most recent and mature cipher suite for protecting the confidentiality and integrity of HTTP traffic. Enabling AES 256/256 is recommended.\n\nNote: AES 256/256 is enabled by default starting with Server 2012 and 2012 R2.\n\nRationale:\n\nEnabling this cipher will help ensure the confidentiality and integrity of data in transit.\n\nImpact:\n\nN/A",
        "solution": "Perform the following to enable AES 256/256 cipher:\n\nSet the following Registry key to 1.\n\nHKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256:Enabled\n\nTo enable using PowerShell enter the following command:\n\n(Get-Item 'HKLM:\\').OpenSubKey('SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers', $true).CreateSubKey('AES 256/256')\n\nNew-ItemProperty -path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256' -name 'Enabled' -value '1' -PropertyType 'DWord' -Force | Out-Null",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/13949",
        "reg_key": "HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Ciphers\\AES 256/256",
        "reg_item": "Enabled"
    }
}