{
    "custom_item_1": {
        "description": "Test secure string",
        "value_data": ".*",
        "powershell_args": "hostname",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_2": {
        "description": "CIS_Microsoft_Exchange_Server_2016_Level_1_Hub_v1.0.0.audit from CIS Microsoft Exchange Server 2016 v1.0.0 Benchmark",
        "info": "NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "reference": "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,SWIFT-CSCv1|2.2",
        "value_data": "[\\s]+15\\.1[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsHubTransportServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_3": {
        "description": "Platform check",
        "value_data": "[\\s]+15\\.1[\\s]+.*[\\s]+True",
        "powershell_args": "If (Get-ExchangeServer) { Get-ExchangeServer | Format-Table Name, AdminDisplayVersion, IsHubTransportServer } Else { 'No Exchange servers found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_4": {
        "description": "1.2 Set 'Maximum receive size - organization level' to '10240'",
        "info": "This limit includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, either the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.\n\nRationale:\n\nThis setting somewhat limits the impact that a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-TransportConfig -MaxReceiveSize 10240KB",
        "reference": "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1M,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "Get-TransportConfig | Format-List MaxReceiveSize; if ([int64]((Get-TransportConfig).MaxReceiveSize -Replace '.*\\(' -Replace ' .*' )/1KB -gt 10240) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_5": {
        "description": "1.5 Set 'Configure Sender Filtering' to 'Enabled'",
        "info": "By default, sender filtering is enabled on a computer performing the Edge Transport server role for inbound messages from the Internet that are not authenticated. These messages are handled as external messages. You can disable the Sender Filter agent in individual computer configurations by using the Exchange admin center or the Exchange Management Shell. When you enable the Sender Filter agent on a computer running Exchange, it filters all messages from all Receive connectors on that computer. Only messages from external sources are filtered. External sources are defined as non-authenticated sources. These are considered anonymous Internet sources.\n\nRationale:\n\nSpam consumes a large amount of network bandwidth and server capacity. In addition, it is often the source of malicious software.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-SenderFilterConfig -Enabled $true",
        "reference": "800-53|SI-8a.,800-53r5|SI-8a.,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-8a.,LEVEL|1A,QCSC-v1|3.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "Enabled[\\s]+:[\\s]+True",
        "powershell_args": "Get-SenderFilterConfig | Format-List -property Enabled",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_6": {
        "description": "1.7 Set 'Maximum number of recipients - organization level' to '5000'",
        "info": "You can use this setting to control the total number of message recipients. When a message is first composed, the recipients exist in the To:, Cc:, and Bcc: header fields. When the message is submitted for delivery, the message recipients are converted into RCPT TO: entries in the message envelope. A distribution group is counted as a single recipient during message submission.\n\nRationale:\n\nThis setting somewhat limits the impact that a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the number of recipients for any single message.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-TransportService -Identity 'Server01' -PickupDirectoryMaxRecipientsPerMessage 5000",
        "reference": "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-TransportService; $settings | Format-List Identity, PickupDirectoryMaxRecipientsPerMessage; If ($settings | Where {$_.PickupDirectoryMaxRecipientsPerMessage -gt 5000}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_7": {
        "description": "1.13 Set 'Message tracking logging - Transport' to 'True'",
        "info": "A message tracking log provides a detailed log of all message activity as messages are transferred to and from a computer running Exchange. Message tracking is available on Hub Transport servers, Edge Transport servers, and Mailbox servers. By default, message tracking is enabled.\n\nRationale:\n\nIf events are not recorded it may be difficult or impossible to determine the root cause of system problems or the unauthorized activities of malicious users.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-TransportService EXCHANGE1 -MessageTrackingLogEnabled $true",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1A,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-TransportService ; $settings | Format-List Identity, MessageTrackingLogEnabled; If ($settings | Where {$_.MessageTrackingLogEnabled -ne $true}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_8": {
        "description": "1.17 Set 'Maximum send size - organization level' to '10240'",
        "info": "This limit includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.\n\nRationale:\n\nThis setting somewhat limits the impact that a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of outgoing messages.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-TransportConfig -MaxSendSize 10240KB",
        "reference": "800-53|SC-5(1),800-53r5|SC-5(1),CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5(1),LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "Get-TransportConfig | Format-List MaxSendSize; if ([int]((Get-TransportConfig).MaxSendSize -Replace '.*\\(' -Replace ' .*' )/1KB -gt 10240) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_9": {
        "description": "1.18 Set 'Maximum receive size - connector level' to '10240'",
        "info": "You can use this setting to limit the total size of messages at the connector level. This includes the message header, the message body, and any attachments. For internal message flow, Exchange Server uses the custom X-MS-Exchange-Organization-OriginalSize message header to record the original message size of the message as it enters the Exchange Server organization. Whenever the message is checked against the specified message size limits, the lower value of the current message size or the original message size header is used. The size of the message can change because of content conversion, encoding, and agent processing.\n\nRationale:\n\nThis setting somewhat limits the impact a malicious user or a computer with malware can have on the Exchange infrastructure by restricting the size of incoming messages.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ReceiveConnector 'Connection from Contoso.com' -MaxMessageSize 10240KB",
        "reference": "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$pass = $true; Get-ReceiveConnector | Format-List Identity, MaxMessageSize; foreach ($item in (Get-ReceiveConnector).MaxMessageSize -Replace '.*\\(' -Replace ' .*' ) { if (([int]$item)/1KB -gt 10240) { $pass = $false } }; If ($pass) { 'All policies compliant' } Else { 'Non compliant policies found' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_10": {
        "description": "3.3 Set 'Turn on script execution' to 'RemoteSigned'",
        "info": "Use this setting to configure the script execution policy that controls what script types users can run.\n\nRationale:\n\nUnsigned scripts are at greater risk of containing unauthorized code.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-ExecutionPolicy RemoteSigned",
        "reference": "800-171|3.4.8,800-53|CM-7(5)(b),800-53r5|CM-7(5)(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "RemoteSigned",
        "powershell_args": "Get-ExecutionPolicy",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_11": {
        "description": "3.5 Set 'Enable automatic replies to remote domains' to 'False'",
        "info": "You can use this setting to determine if the server automatically replies to remote domains.\n\nRationale:\n\nAttackers can use automated messages to determine whether a user account is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-RemoteDomain -Identity Default -AutoReplyEnabled $false",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-RemoteDomain ; $settings | Format-List Identity, AutoReplyEnabled; If ($settings | Where {$_.AutoReplyEnabled -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_12": {
        "description": "3.7 Set 'Enable non-delivery reports to remote domains' to 'False'",
        "info": "You can use this setting to determines if the server automatically sends delivery reports to remote domains.\n\nRationale:\n\nAttackers can use automated messages to determine whether a user account is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-RemoteDomain -Identity Contoso -NDREnabled $false",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-RemoteDomain ; $settings | Format-List Identity, NDREnabled; If ($settings | Where {$_.NDREnabled -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_13": {
        "description": "3.8 Set 'Enable OOF messages to remote domains' to 'None'",
        "info": "You can use this setting to determine if the server automatically forwards out-of-office messages to remote domains.\n\nRationale:\n\nAttackers can use automated messages to determine whether a user is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-RemoteDomain 'RemoteDomain' -AllowedOOFType None",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-RemoteDomain ; $settings | Format-List Identity, AllowedOOFType; If ($settings | Where {$_.AllowedOOFType -ne 'None'}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    },
    "custom_item_14": {
        "description": "3.9 Set 'Enable automatic forwards to remote domains' to 'False'",
        "info": "You can use this setting to determine if the server sends automatic forwards to remote domains.\n\nRationale:\n\nAttackers can use automated messages to determine whether a user account is active, in the office, traveling, and so on. An attacker might use this information to conduct other types of attacks.",
        "solution": "To implement the recommended state, execute the following PowerShell cmdlet:\n\nSet-RemoteDomain -Identity Contoso -AutoForwardEnabled $false",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/1514",
        "value_data": "All policies compliant",
        "powershell_args": "$settings = Get-RemoteDomain ; $settings | Format-List Identity, AutoForwardEnabled; If ($settings | Where {$_.AutoForwardEnabled -ne $false}) { 'Non compliant policies found' } Else { 'All policies compliant' }",
        "secure_string": "@SECURE_STRING@"
    }
}