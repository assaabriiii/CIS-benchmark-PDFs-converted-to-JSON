{
    "custom_item_1": {
        "description": "Check if this is a Docker Host",
        "cmd": "/usr/bin/docker version --format '{{.Server.Platform.Name}}'",
        "expect": "^Docker Engine - Enterprise.*$"
    },
    "custom_item_2": {
        "system": "Linux",
        "description": "DKER-EE-001870 - The Docker Enterprise self-signed certificates in Universal Control Plane (UCP) must be replaced with DoD trusted, signed certificates.",
        "info": "Docker Enterprise includes the following capabilities that are considered non-essential:\n\n*NOTE: disabling these capabilities negatively affects the operation of Docker Trusted Registry (DTR) and should be disregarded when UCP and DTR are installed. The security capabilities provided by UCP and DTR offset any potential vulnerabilities associated with not disabling these essential capabilities the Engine provides.\n\n(Docker Engine - Enterprise: Standalone) - The majority of these items were originally identified as part of the CIS Docker Benchmark, which as of the CIS Docker Benchmark v1.2.0, are still applicable to Docker Engine - Enterprise 18.09\n- inter-container communication (icc)* (CIS Docker Benchmark Recommendation 2.1)\n- insecure registry communication (CIS Docker Benchmark Recommendation 2.4)\n- AUFS storage driver (applicable on Linux only) (CIS Docker Benchmark Recommendation 2.5)\n- listening on the TCP Daemon socket\n- userland proxy for loopback traffic* (CIS Docker Benchmark Recommendation 2.15)\n- experimental features (CIS Docker Benchmark Recommendation 2.17)\n- Swarm Mode (CIS Docker Benchmark Recommendation 7.1)\n\n(Docker Engine - Enterprise: As part of a UCP cluster)\n- insecure registry communication (CIS Docker Benchmark Recommendation 2.4)\n- AUFS storage driver (applicable on Linux only) (CIS Docker Benchmark Recommendation 2.5)\n- listening on the TCP Daemon socket\n- experimental features (CIS Docker Benchmark Recommendation 2.17)\n\n(UCP)\n- Managed user database\n- self-signed certificates\n- periodic usage reporting and API tracking\n- allow users and administrators to schedule containers on all nodes, including UCP managers and DTR nodes\n\n(DTR)\n- periodic data usage/analytics reporting\n- create repository on push\n- self-signed certificates\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "This fix only applies to the UCP component of Docker Enterprise.\n\nIntegrate UCP with a trusted certificate authority CA.\n\nvia UI:\n\nIn the UCP web console, navigate to 'Admin Settings' | 'Certificates'. Fill in (or click on the 'Upload' links) the 'CA Certificate' field with the contents of the external public CA certificate. Assuming the user generated a server certificate from that CA for UCP, also fill in the 'Server Certificate' and 'Private Key' fields with the contents of the public/private certificates respectively. The 'Server Certificate' field must include both the UCP server certificate and any intermediate certificates. Click on the 'Save' button.\n\nIf DTR was previously integrated with this UCP cluster, execute a 'dtr reconfigure' command as a superuser on one of the UCP Manager nodes in the cluster to re-configure DTR with the updated UCP certificates.\n\nvia CLI:\nLinux: As a superuser, execute the following commands on each UCP Manager node in the cluster and in the directory where keys and certificates are located:\n\nCreate a container that attaches to the same volume where certificates are stored:\n\ndocker create --name replace-certs -v ucp-controller-server-certs:/data busybox\n\nCopy keys and certificates to the container's volumes:\n\ndocker cp cert.pem replace-certs:/data/cert.pem\ndocker cp ca.pem replace-certs:/data/ca.pem\ndocker cp key.pem replace-certs:/data/key.pem\n\nRemove the container, since it is no longer needed:\n\ndocker rm replace-certs\n\nRestart the container, since it is no longer needed:\n\ndocker rm replace-certs\n\nRestart the ucp-controller container:\n\ndocker restart ucp-controller\n\nIf DTR was previously integrated with this UCP cluster, execute a 'dtr reconfigure' command as a superuser on one of the UCP Manager nodes in the cluster to re-configure DTR with the updated UCP certificates.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|Docker_Enterprise_2-x_Linux-UNIX_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-235793r627506_rule,STIG-ID|DKER-EE-001870,STIG-Legacy|SV-104757,STIG-Legacy|V-95619,SWIFT-CSCv1|2.3,Vuln-ID|V-235793",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Docker_Enterprise_2-x_Linux-UNIX_V2R1_STIG.zip",
        "cmd": "/usr/bin/echo '' | /usr/bin/openssl s_client -connect @UCP_IP@:@UCP_PORT@ | /usr/bin/openssl x509 -noout -text",
        "expect": "Manual_Review"
    },
    "custom_item_3": {
        "system": "Linux",
        "description": "DKER-EE-003920 - Universal Control Plane (UCP) must be integrated with a trusted certificate authority (CA) in Docker Enterprise.",
        "info": "Both the UCP and Docker Trusted Registry (DTR) components of Docker Enterprise leverage the same authentication and authorization backplane known as eNZi. The eNZi backplane includes its own managed user database, and also allows for LDAP integration in UCP and DTR. To meet the requirements of this control, configure LDAP integration. UCP also includes two certificate authorities for establishing root of trust. One CA is used to sign client bundles and the other is used for TLS communication between UCP components and nodes. Both of these CAs should be integrated with an external, trusted CA. DTR should be integrated with this same external, trusted CA as well.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "This fix only applies to the UCP component of Docker Enterprise.\n\nIntegrate UCP with a trusted CA.\n\nvia UI:\n\nIn the UCP web console, navigate to 'Admin Settings' | 'Certificates'. Fill in (or click on the 'Upload' links) the 'CA Certificate' field with the contents of your public CA certificate. Assuming the user has generated a server certificate from that CA for UCP, also fill in the 'Server Certificate' and 'Private Key' fields with the contents of the public/private certificates respectively. The 'Server Certificate' field must include both the UCP server certificate and any intermediate certificates. Click on the 'Save' button.\n\nIf DTR was previously integrated with this UCP cluster, execute a 'dtr reconfigure' command as a superuser on one of the UCP Manager nodes in the cluster to re-configure DTR with the updated UCP certificates.\n\nvia CLI:\nLinux : As a superuser, execute the following commands on each UCP Manager node in the cluster and in the directory where keys and certificates are stored:\n\nCreate a container that attaches to the same volume where certificates are stored:\n\ndocker create --name replace-certs -v ucp-controller-server-certs:/data busybox\n\nCopy keys and certificates to the container's volumes:\n\ndocker cp cert.pem replace-certs:/data/cert.pem\ndocker cp ca.pem replace-certs:/data/ca.pem\ndocker cp key.pem replace-certs:/data/key.pem\n\nRemove the container, since it is no longer needed:\n\ndocker rm replace-certs\n\nRestart the container, since it is no longer needed:\n\ndocker rm replace-certs\n\nRestart the ucp-controller container:\n\ndocker restart ucp-controller\n\nIf DTR was previously integrated with this UCP cluster, execute a 'dtr reconfigure' command as a superuser on one of the UCP Manager nodes in the cluster to re-configure DTR with the updated UCP certificates.",
        "reference": "800-171|3.13.15,800-53|SC-23(5),800-53r5|SC-23(5),CAT|II,CCI|CCI-002470,DISA_Benchmark|Docker_Enterprise_2-x_Linux-UNIX_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23,ITSG-33|SC-23a.,NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-235841r627650_rule,STIG-ID|DKER-EE-003920,STIG-Legacy|SV-104853,STIG-Legacy|V-95715,Vuln-ID|V-235841",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Docker_Enterprise_2-x_Linux-UNIX_V2R1_STIG.zip",
        "cmd": "/usr/bin/echo '' | /usr/bin/openssl s_client -connect @UCP_IP@:@UCP_PORT@ | /usr/bin/openssl x509 -noout -text",
        "expect": "Manual_Review"
    },
    "custom_item_4": {
        "system": "Linux",
        "description": "DKER-EE-006190 - Docker Enterprise Universal Control Plane (UCP) must be integrated with a trusted certificate authority (CA).",
        "info": "When integrating the UCP and Docker Trusted Registry (DTR) management consoles with an external, trusted certificate authority (CA), both UCP and DTR will validate these certificate chains per the requirements set forth by the System Security Plan (SSP).\n\nUCP establishes mutual TLS authentication for all Engine - Enterprise nodes in a cluster using a built-in certificate authority which inherently meets the requirements of this control. This is described below.\n\nThe UCP component of Docker Enterprise includes a built-in public key infrastructure (PKI) system. When a UCP cluster is initialized, the first node designates itself as a manager node. That node subsequently generates a new root CA along with a key pair, which are used to secure communications with other UCP manager and worker nodes that are joined to the cluster. One can also specify his/her own externally-generated root CA upon initialization of a UCP cluster. The manager node also generates two tokens to use when joining additional nodes to the cluster: one worker token and one manager token. Each token includes the digest of the root CA's certificate and a randomly generated secret. When a node joins the cluster, the joining node uses the digest to validate the root CA certificate from the remote manager. The remote manager uses the secret to ensure the joining node is an approved node. Each time a new node joins the cluster, the manager issues a certificate to the node. The certificate contains a randomly generated node ID to identify the node under the certificate common name (CN) and the role under the organizational unit (OU). The node ID serves as the cryptographically secure node identity for the lifetime of the node in the current UCP cluster. In this mutual TLS architecture, all nodes encrypt communications using a minimum of TLS 1.2. This information can also be referenced at https://docs.docker.com/engine/swarm/how-swarm-mode-works/pki/.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "This fix only applies to the UCP component of Docker Enterprise.\n\nIntegrate UCP with a trusted CA.\n\nvia UI:\n\nIn the UCP web console, navigate to 'Admin Settings' | 'Certificates'. Fill in (or click on the 'Upload' links) the 'CA Certificate' field with the contents of the trusted CA certificate. Assuming the user generated a server certificate from that CA for UCP, also fill in the 'Server Certificate' and 'Private Key' fields with the contents of the public/private certificates respectively. The 'Server Certificate' field must include both the UCP server certificate and any intermediate certificates. Click on the 'Save' button.\n\nIf DTR was previously integrated with this UCP cluster, execute a 'dtr reconfigure' command as a superuser on one of the UCP Manager nodes in the cluster to re-configure DTR with the updated UCP certificates.\n\nvia CLI:\nLinux: As a superuser, execute the following commands on each UCP Manager node in the cluster and in the directory where keys and certificates are located:\n\nCreate a container that attaches to the same volume where certificates are stored:\n\ndocker create --name replace-certs -v ucp-controller-server-certs:/data busybox\n\nCopy keys and certificates to the container's volumes:\n\ndocker cp cert.pem replace-certs:/data/cert.pem\ndocker cp ca.pem replace-certs:/data/ca.pem\ndocker cp key.pem replace-certs:/data/key.pem\n\nRemove the container, since it is no longer needed:\n\ndocker rm replace-certs\n\nRestart the ucp-controller container:\n\ndocker restart ucp-controller\n\nIf DTR was previously integrated with this UCP cluster, execute a 'dtr reconfigure' command as a superuser on one of the UCP Manager nodes in the cluster to re-configure DTR with the updated UCP certificates.",
        "reference": "800-171|3.5.2,800-53|IA-5(2)(a),800-53r5|IA-5(2)(a),CAT|II,CCI|CCI-000185,CSF|PR.AC-1,DISA_Benchmark|Docker_Enterprise_2-x_Linux-UNIX_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(2)(a),NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-235871r627740_rule,STIG-ID|DKER-EE-006190,STIG-Legacy|SV-104917,STIG-Legacy|V-95779,Vuln-ID|V-235871",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_Docker_Enterprise_2-x_Linux-UNIX_V2R1_STIG.zip",
        "cmd": "/usr/bin/echo '' | /usr/bin/openssl s_client -connect @UCP_IP@:@UCP_PORT@ | /usr/bin/openssl x509 -noout -text",
        "expect": "Manual_Review"
    }
}