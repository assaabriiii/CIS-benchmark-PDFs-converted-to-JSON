{
    "custom_item_1": {
        "description": "Aliyun is installed",
        "file": "/etc/os-release",
        "regex": "^NAME=",
        "expect": "Aliyun Linux"
    },
    "custom_item_2": {
        "system": "Linux",
        "description": "1.1.6 Ensure separate partition exists for /var",
        "info": "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.\n\nRationale:\n\nSince the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate partition.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var .\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/mount | /usr/bin/grep 'on /var '",
        "expect": ".* on /var type .*"
    },
    "custom_item_3": {
        "system": "Linux",
        "description": "1.1.7 Ensure separate partition exists for /var/tmp",
        "info": "The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications.\n\nRationale:\n\nSince the /var/tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. In addition, making /var/tmp its own file system allows an administrator to set the noexec option on the mount, making /var/tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system setuid program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/mount | /usr/bin/grep 'on /var/tmp '",
        "expect": ".* on /var/tmp type .*"
    },
    "custom_item_4": {
        "system": "Linux",
        "description": "1.1.11 Ensure separate partition exists for /var/log",
        "info": "The /var/log directory is used by system services to store log data .\n\nRationale:\n\nThere are two important reasons to ensure that system logs are stored on a separate partition: protection against resource exhaustion (since logs can grow quite large) and protection of audit data.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log .\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|3.1,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/mount | /usr/bin/grep 'on /var/log '",
        "expect": ".* on /var/log type .*"
    },
    "custom_item_5": {
        "system": "Linux",
        "description": "1.1.12 Ensure separate partition exists for /var/log/audit",
        "info": "The auditing daemon, auditd , stores log data in the /var/log/audit directory.\n\nRationale:\n\nThere are two important reasons to ensure that data gathered by auditd is stored on a separate partition: protection against resource exhaustion (since the audit.log file can grow quite large) and protection of audit data. The audit daemon calculates how much free space is left and performs actions based on the results. If other processes (such as syslog ) consume space in the same partition as auditd , it may not perform as desired.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit .\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|3.1,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/mount | /usr/bin/grep 'on /var/log/audit '",
        "expect": ".* on /var/log/audit type .*"
    },
    "custom_item_6": {
        "system": "Linux",
        "description": "1.1.13 Ensure separate partition exists for /home",
        "info": "The /home directory is used to support disk storage needs of local users.\n\nRationale:\n\nIf the system is intended to support local users, create a separate partition for the /home directory to protect against resource exhaustion and restrict the type of files that can be stored under /home .",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /home .\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\nImpact:\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/mount | /usr/bin/grep 'on /home '",
        "expect": ".* on /home type .*"
    },
    "custom_item_7": {
        "system": "Linux",
        "description": "1.6.1.1 Ensure SELinux is not disabled in bootloader configuration - selinux",
        "info": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters.\n\nRationale:\n\nSELinux must be enabled at boot time in your grub configuration to ensure that the controls it provides are not overridden.",
        "solution": "Edit /etc/default/grub and remove all instances of selinux=0 and enforcing=0 from all CMDLINE_LINUX parameters:\n\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"\nGRUB_CMDLINE_LINUX=\"\"\nRun the following command to update the grub2 configuration:\n# grub2-mkconfig -o /boot/grub2/grub.cfg",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/boot/grub2/grub.cfg",
        "regex": "^[\\\\s]*linux.*",
        "expect": "[\\\\s]*[Ss][Ee][Ll][Ii][Nn][Uu][Xx][\\\\s]*=[\\\\s]*0"
    },
    "custom_item_8": {
        "system": "Linux",
        "description": "1.6.1.1 Ensure SELinux is not disabled in bootloader configuration - enforcing",
        "info": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters.\n\nRationale:\n\nSELinux must be enabled at boot time in your grub configuration to ensure that the controls it provides are not overridden.",
        "solution": "Edit /etc/default/grub and remove all instances of selinux=0 and enforcing=0 from all CMDLINE_LINUX parameters:\n\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"\nGRUB_CMDLINE_LINUX=\"\"\n\nRun the following command to update the grub2 configuration:\n\n# grub2-mkconfig -o /boot/grub2/grub.cfg",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/boot/grub2/grub.cfg",
        "regex": "^[\\\\s]*linux.*",
        "expect": "[\\\\s]*[Ee][Nn][Ff][Oo][Rr][Cc][Ii][Nn][Gg][\\\\s]*=[\\\\s]*0"
    },
    "custom_item_9": {
        "system": "Linux",
        "description": "1.6.1.2 Ensure the SELinux state is enforcing - sestatus",
        "info": "Set SELinux to enable when the system is booted.\n\nRationale:\n\nSELinux must be enabled at boot time in to ensure that the controls it provides are in effect at all times. If the system is running, resetting the config file may cause some risks.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUX parameter:\n\nSELINUX=enforcing",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/sestatus",
        "expect": "^[\\\\s]*Current[\\\\s]+mode:[\\\\s]+[Ee][Nn][Ff][Oo][Rr][Cc][Ii][Nn][Gg]$"
    },
    "custom_item_10": {
        "system": "Linux",
        "description": "1.6.1.2 Ensure the SELinux state is enforcing - /etc/selinux/config",
        "info": "Set SELinux to enable when the system is booted.\n\nRationale:\n\nSELinux must be enabled at boot time in to ensure that the controls it provides are in effect at all times. If the system is running, resetting the config file may cause some risks.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUX parameter:\n\nSELINUX=enforcing",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/selinux/config",
        "regex": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=",
        "expect": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=[\\\\s]*[eE][nN][fF][oO][rR][cC][iI][nN][gG][\\\\s]*$"
    },
    "custom_item_11": {
        "system": "Linux",
        "description": "1.6.1.3 Ensure SELinux policy is configured - sestatus",
        "info": "Configure SELinux to meet or exceed the default targeted policy, which constrains daemons and system software only.\n\nRationale:\n\nSecurity configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that at least the default recommendations are met. If the system is running, resetting the config file may cause some risks.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:\n\nSELINUXTYPE=targeted",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/sestatus",
        "expect": "^[\\\\s]*Loaded policy name:[\\\\s]+[Tt][Aa][Rr][Gg][Ee][Tt][Ee][Dd]$"
    },
    "custom_item_12": {
        "system": "Linux",
        "description": "1.6.1.3 Ensure SELinux policy is configured - /etc/selinux/config",
        "info": "Configure SELinux to meet or exceed the default targeted policy, which constrains daemons and system software only.\n\nRationale:\n\nSecurity configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that at least the default recommendations are met. If the system is running, resetting the config file may cause some risks.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:\n\nSELINUXTYPE=targeted",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/selinux/config",
        "regex": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE][\\\\s]*=",
        "expect": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE][\\\\s]*=[\\\\s]*[Tt][Aa][Rr][Gg][Ee][Tt][Ee][Dd][\\\\s]*$"
    },
    "custom_item_13": {
        "system": "Linux",
        "description": "1.6.1.4 Ensure SETroubleshoot is not installed",
        "info": "The SETroubleshoot service notifies desktop users of SELinux denials through a user-friendly interface. The service provides important information around configuration errors, unauthorized intrusions, and other potential errors.\n\nRationale:\n\nThe SETroubleshoot service is an unnecessary daemon to have running on a server, especially if X Windows is disabled.",
        "solution": "Run the following command to uninstall s etroubleshoot :\n\n# yum remove setroubleshoot",
        "reference": "800-171|3.4.9,800-53|CM-11,800-53r5|CM-11,CSCv7|2.6,CSF|DE.CM-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,LEVEL|2S,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "rpm": "setroubleshoot-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_14": {
        "system": "Linux",
        "description": "1.6.1.5 Ensure the MCS Translation Service (mcstrans) is not installed",
        "info": "The mcstransd daemon provides category label information to client processes requesting information. The label translations are defined in /etc/selinux/targeted/setrans.conf\n\nRationale:\n\nSince this service is not used very often, remove it to reduce the amount of potentially vulnerable code running on the system.",
        "solution": "Run the following command to uninstall mcstrans:\n\n# yum remove mcstrans",
        "reference": "800-171|3.4.9,800-53|CM-11,800-53r5|CM-11,CSCv7|2.6,CSF|DE.CM-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,LEVEL|2S,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "rpm": "mcstrans-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_15": {
        "system": "Linux",
        "description": "1.6.1.6 Ensure no unconfined daemons exist",
        "info": "Daemons that are not defined in SELinux policy will inherit the security context of their parent process.\n\nRationale:\n\nSince daemons are launched and descend from the init process, they will inherit the security context label initrc_t . This could cause the unintended consequence of giving the process more permission than it requires.",
        "solution": "Investigate any unconfined daemons found during the audit action. They may need to have an existing security context assigned to them or a policy built for them.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/ps -eZ | /usr/bin/egrep \"initrc\" | /usr/bin/egrep -vw \"tr|ps|egrep|bash|awk\" | /usr/bin/awk -F: '{ print $NF } END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_16": {
        "system": "Linux",
        "description": "1.6.2 Ensure SELinux is installed",
        "info": "SELinux provides Mandatory Access Controls.\n\nRationale:\n\nWithout a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.",
        "solution": "Run the following command to install libselinux :\n\n# yum install libselinux",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|2.2,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "rpm": "libselinux-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_17": {
        "system": "Linux",
        "description": "3.6 Disable IPv6",
        "info": "Although IPv6 has many advantages over IPv4, not all organizations have IPv6 or dual stack configurations implemented.\n\nRationale:\n\nIf IPv6 or dual stack is not to be used, it is recommended that IPv6 be disabled to reduce the attack surface of the system.",
        "solution": "Edit /etc/default/grub and remove add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters:\n\nGRUB_CMDLINE_LINUX=\"ipv6.disable=1\"\n\nRun the following command to update the grub2 configuration:\n\n# grub2-mkconfig -o /boot/grub2/grub.cfg",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1NS,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/grep '^[[:space:]]*linux' /boot/grub2/grub.cfg",
        "expect": "ipv6\\.disable[\\\\s]*=[\\\\s]*1[\\\\s]*"
    },
    "custom_item_18": {
        "system": "Linux",
        "description": "4.1.1.1 Ensure audit log storage size is configured",
        "info": "Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.\n\nRationale:\n\nIt is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.",
        "solution": "Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:\n\nmax_log_file =Run the following command:\n# service auditd restart",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2NS,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)max_log_file(?-i)[\\\\s]*=",
        "expect": "^[\\\\s]*(?i)max_log_file(?-i)[\\\\s]*=[\\\\s]*@MAX_AUDIT_LOG_FILE_SIZE@[\\\\s]*$"
    },
    "custom_item_19": {
        "system": "Linux",
        "description": "4.1.1.2 Ensure system is disabled when audit logs are full - email",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
        "solution": "Set the following parameters in /etc/audit/auditd.conf:\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)email(?-i)[\\\\s]*$"
    },
    "custom_item_20": {
        "system": "Linux",
        "description": "4.1.1.2 Ensure system is disabled when audit logs are full - root",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
        "solution": "Set the following parameters in /etc/audit/auditd.conf:\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)action_mail_acct(?-i)[\\\\s]*=",
        "expect": "^[\\\\s]*(?i)action_mail_acct(?-i)[\\\\s]*=[\\\\s]*(?i)root(?-i)[\\\\s]*$"
    },
    "custom_item_21": {
        "system": "Linux",
        "description": "4.1.1.2 Ensure system is disabled when audit logs are full - halt",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
        "solution": "Set the following parameters in /etc/audit/auditd.conf:\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)admin_space_left_action(?-i)[\\\\s]*=",
        "expect": "^[\\\\s]*(?i)admin_space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)halt(?-i)[\\\\s]*$"
    },
    "custom_item_22": {
        "system": "Linux",
        "description": "4.1.1.3 Ensure audit logs are not automatically deleted",
        "info": "The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.\n\nRationale:\n\nIn high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.",
        "solution": "Set the following parameter in /etc/audit/auditd.conf:\n\nmax_log_file_action = keep_logs",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*",
        "expect": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*=[\\\\s]*(?i)keep_logs(?-i)[\\\\s]*$"
    },
    "custom_item_23": {
        "system": "Linux",
        "description": "4.1.2 Ensure auditd service is enabled",
        "info": "Turn on the auditd daemon to record system events.\n\nRationale:\n\nThe capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
        "solution": "Run the following command to enable auditd :\n\n# systemctl enable auditd\n\n# systemctl start auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|9.1,CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/systemctl is-enabled auditd | /usr/bin/awk '{print} END {if(NR==0) print \"disabled\" }'",
        "expect": "enabled"
    },
    "custom_item_24": {
        "system": "Linux",
        "description": "4.1.3 Ensure auditing for processes that start prior to auditd is enabled",
        "info": "Configure grub so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.\n\nRationale:\n\nAudit events need to be captured on processes that start up prior to auditd, so that potential malicious activity cannot go undetected.",
        "solution": "Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX:\n\nGRUB_CMDLINE_LINUX=\"audit=1\"\nRun the following command to update the grub2 configuration:\n# grub2-mkconfig -o /boot/grub2/grub.cfg",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/boot/grub2/grub.cfg",
        "regex": "^[\\\\s]*linux[\\\\s]+",
        "expect": "^[\\\\s]*linux[\\\\s]+.*audit=1.*[\\\\s]*$"
    },
    "custom_item_25": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - auditctl adjtimex (32-bit)",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep -E '^[\\\\s]+-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-S[\\\\s]+stime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$'  | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_26": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - adjtimex (32-bit)",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]+-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-S[\\\\s]+stime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$",
        "expect": "^[\\\\s]+-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-S[\\\\s]+stime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_27": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - auditctl clock_settime (32-bit)",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep -E '^-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change$'  | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_28": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - clock_settime (32-bit)",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+.*clock_settime",
        "expect": "-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+.*clock_settime"
    },
    "custom_item_29": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - auditctl /etc/localtime",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep -P '^-w[\\\\s]+\\\\/etc\\\\/localtime[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+time-change$' | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_30": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - /etc/localtime",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "-w[\\\\s]+/etc/localtime[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+.*time-change",
        "expect": "-w[\\\\s]+/etc/localtime[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+.*time-change"
    },
    "custom_item_31": {
        "description": "OS is 64 bit",
        "cmd": "/usr/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_32": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - auditctl adjtimex",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep -E '^[\\\\s]+-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$'  | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_33": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - adjtimex",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]+-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$",
        "expect": "^[\\\\s]+-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_34": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - auditctl clock_settime",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep -E '^-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$'  | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_35": {
        "system": "Linux",
        "description": "4.1.4 Ensure events that modify date and time information are collected - clock_settime",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n\nFor 64 bit systems add the following lines to the /etc/audit/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$",
        "expect": "-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_36": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep identity",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/group[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_37": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - /etc/group",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/group[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/group[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_38": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/passwd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep identity",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/passwd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_39": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - /etc/passwd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/passwd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/passwd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_40": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/gshadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep identity",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/gshadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_41": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - /etc/gshadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/gshadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/gshadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_42": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/shadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep identity",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/shadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_43": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - /etc/shadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/shadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/shadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_44": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - auditctl /etc/security/opasswd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep identity",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/security\\\\/opasswd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_45": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify user/group information are collected - /etc/security/opasswd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/security\\\\/opasswd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/security\\\\/opasswd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_46": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - auditctl sethostname (32-bit)",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep system-locale",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_47": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - sethostname (32-bit)",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_48": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - auditctl /etc/issue",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep system-locale",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/issue[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_49": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - /etc/issue",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_50": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - auditctl /etc/issue.net",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep system-locale",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/issue\\\\.net[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_51": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - /etc/issue.net",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue\\\\.net[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue\\\\.net[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_52": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - auditctl /etc/hosts",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep system-locale",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/hosts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_53": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - /etc/hosts",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/hosts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/hosts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_54": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - auditctl /etc/sysconfig/network",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep system-locale",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/sysconfig/network[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_55": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - /etc/sysconfig/network",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/etc/sysconfig/network[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/sysconfig/network[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_56": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - auditctl /etc/sysconfig/network-scripts",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep system-locale",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/sysconfig/network-scripts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_57": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - /etc/sysconfig/network-scripts",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/etc/sysconfig/network-scripts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/sysconfig/network-scripts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_58": {
        "description": "OS is 64 bit",
        "cmd": "/usr/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_59": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - auditctl sethostname (64-bit)",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep system-locale",
        "expect": "^-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale$"
    },
    "custom_item_60": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify the system's network environment are collected - sethostname (64-bit)",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses), /etc/sysconfig/network file and /etc/sysconfig/network-scripts/ directory (containing network interface scripts and configurations).\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network and /etc/sysconfig/network-scripts/ is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier \"system-locale.\"",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale\n\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n-w /etc/sysconfig/network-scripts/ -p wa -k system-locale",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale$",
        "expect": "^-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale$"
    },
    "custom_item_61": {
        "description": "Check selinux is installed",
        "rpm": "libselinux-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_62": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/selinux",
        "info": "Monitor SELinux mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or directory.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/etc/selinux/?[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+MAC-policy[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/selinux/?[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+MAC-policy[\\\\s]*$"
    },
    "custom_item_63": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected - /usr/share/selinux",
        "info": "Monitor SELinux mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux or directory.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/usr/share/selinux/?[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+MAC-policy[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/usr/share/selinux/?[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+MAC-policy[\\\\s]*$"
    },
    "custom_item_64": {
        "system": "Linux",
        "description": "4.1.8 Ensure login and logout events are collected - /var/log/faillog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The /var/run/failock directory maintains records of login failures via the pam_faillock module.\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/log/lastlog -p wa -k logins\n-w /var/run/faillock/ -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/faillog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/faillog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_65": {
        "system": "Linux",
        "description": "4.1.8 Ensure login and logout events are collected - /var/log/faillock",
        "info": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The /var/run/failock directory maintains records of login failures via the pam_faillock module.\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/log/lastlog -p wa -k logins\n-w /var/run/faillock/ -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/run/faillock/[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/run/faillock/[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_66": {
        "system": "Linux",
        "description": "4.1.9 Ensure session initiation information is collected - auditctl /var/run/utmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep session",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/run/utmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_67": {
        "system": "Linux",
        "description": "4.1.9 Ensure session initiation information is collected - /var/run/utmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/run/utmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/run/utmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_68": {
        "system": "Linux",
        "description": "4.1.9 Ensure session initiation information is collected - auditctl /var/log/wtmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep logins",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/wtmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_69": {
        "system": "Linux",
        "description": "4.1.9 Ensure session initiation information is collected - /var/log/wtmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/wtmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/wtmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_70": {
        "system": "Linux",
        "description": "4.1.9 Ensure session initiation information is collected - auditctl /var/log/btmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep logins",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/btmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_71": {
        "system": "Linux",
        "description": "4.1.9 Ensure session initiation information is collected - /var/log/btmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. All audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/btmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/btmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_72": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chmod/fchmod/fchmodat (32-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep perm_mod",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chmod.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_73": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - chmod/fchmod/fchmodat (32-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chmod.*-k[\\\\s]+perm_mod[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chmod.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_74": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chown/fchown/fchownat (32-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep perm_mod",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chown.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_75": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - chown/fchown/fchownat (32-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chown.*-k[\\\\s]+perm_mod[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chown.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_76": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl setxattr/lsetxattr/fsetxattr (32-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep perm_mod",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+setxattr.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_77": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - setxattr/lsetxattr/fsetxattr (32-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+setxattr.*-k[\\\\s]+perm_mod[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+setxattr.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_78": {
        "description": "OS is 64 bit",
        "cmd": "/usr/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_79": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chmod/fchmod/fchmodat (64-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep perm_mod",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chmod.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_80": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - chmod/fchmod/fchmodat (64-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chmod.*-k[\\\\s]+perm_mod[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chmod.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_81": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl chown/fchown/fchownat (64-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep perm_mod",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chown.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_82": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - chown/fchown/fchownat (64-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chown.*-k[\\\\s]+perm_mod[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chown.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_83": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - auditctl setxattr/lsetxattr/fsetxattr (64-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep perm_mod",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+setxattr.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_84": {
        "system": "Linux",
        "description": "4.1.10 Ensure discretionary access control permission modification events are collected - setxattr/lsetxattr/fsetxattr (64-bit)",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The chmod , fchmod and fchmodat system calls affect the permissions associated with a file. The chown , fchown , fchownat and lchown system calls affect owner and group attributes on a file. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr , lremovexattr , fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system user ids (auid >= 1000) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+setxattr.*-k[\\\\s]+perm_mod[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+setxattr.*-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_85": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EACCES (32-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep access",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EACCES.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_86": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EACCES (32-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EACCES.*k[\\\\s]+access[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EACCES.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_87": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EPERM (32-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep access",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EPERM.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_88": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EPERM (32-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EPERM.*k[\\\\s]+access[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EPERM.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_89": {
        "description": "OS is 64 bit",
        "cmd": "/usr/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_90": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EACCES (64-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep access",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EACCES.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_91": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EACCES (64-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EACCES.*k[\\\\s]+access[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EACCES.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_92": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - auditctl EPERM (64-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep access",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EPERM.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_93": {
        "system": "Linux",
        "description": "4.1.11 Ensure unsuccessful unauthorized file access attempts are collected - EPERM (64-bit)",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation ( creat ), opening ( open , openat ) and truncation ( truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 1000), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EPERM.*k[\\\\s]+access[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat.*-F[\\\\s]+exit=-EPERM.*k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_94": {
        "system": "Linux",
        "description": "4.1.12 Ensure use of privileged commands is collected",
        "info": "Monitor privileged programs (those that have the setuid and/or setgid bit set on execution) to determine if unprivileged users are running these commands.\n\nRationale:\n\nExecution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "IFS=$'\\\\n'; LINES=$(/usr/bin/find / -xdev \\\\( -perm -4000 -o -perm -2000 \\\\) -type f); for LINE in $LINES; do LINE=\"-a always,exit -F path=$LINE -F perm=x -F auid>=@MIN_UID@ -F auid!=4294967295 -k privileged\"; if [ $(/usr/bin/grep -- \"$LINE\" /etc/audit/audit.rules | wc -l) -eq 0 ] ; then /usr/bin/echo \"$LINE - not found in /etc/audit/audit.rules\"; else /usr/bin/echo \"All audit.rules matching\"; fi; done",
        "expect": "All audit.rules matching"
    },
    "custom_item_95": {
        "system": "Linux",
        "description": "4.1.13 Ensure successful file system mounts are collected - auditctl (32-bit)",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep mounts",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_96": {
        "system": "Linux",
        "description": "4.1.13 Ensure successful file system mounts are collected - (32-bit)",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_97": {
        "description": "OS is 64 bit",
        "cmd": "/usr/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_98": {
        "system": "Linux",
        "description": "4.1.13 Ensure successful file system mounts are collected - auditctl (64-bit)",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep mounts",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_99": {
        "system": "Linux",
        "description": "4.1.13 Ensure successful file system mounts are collected - (64-bit)",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open , creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$",
        "expect": "^[\\\\s]*-a[\\\\s]+(always,exit|exit,always)[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_100": {
        "system": "Linux",
        "description": "4.1.14 Ensure file deletion events by users are collected - auditctl (32-bit)",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep delete",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_101": {
        "system": "Linux",
        "description": "4.1.14 Ensure file deletion events by users are collected - (32-bit)",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]+$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_102": {
        "description": "OS is 64 bit",
        "cmd": "/usr/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_103": {
        "system": "Linux",
        "description": "4.1.14 Ensure file deletion events by users are collected - auditctl (64-bit)",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep delete",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_104": {
        "system": "Linux",
        "description": "4.1.14 Ensure file deletion events by users are collected - (64-bit)",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]+$",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=@MIN_UID@[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_105": {
        "system": "Linux",
        "description": "4.1.15 Ensure changes to system administration scope (sudoers) is collected - auditctl /etc/sudoers",
        "info": "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity.",
        "solution": "Add the following line to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep scope",
        "expect": "^[\\\\s]*-w[\\\\s]+\\/etc\\/sudoers[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$"
    },
    "custom_item_106": {
        "system": "Linux",
        "description": "4.1.15 Ensure changes to system administration scope (sudoers) is collected - /etc/sudoers",
        "info": "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity.",
        "solution": "Add the following line to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\/etc\\/sudoers[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\/etc\\/sudoers[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$"
    },
    "custom_item_107": {
        "system": "Linux",
        "description": "4.1.15 Ensure changes to system administration scope (sudoers) is collected - auditctl /etc/sudoers.d",
        "info": "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity.",
        "solution": "Add the following line to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep scope",
        "expect": "^[\\\\s]*-w[\\\\s]+\\/etc\\/sudoers\\.d[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$"
    },
    "custom_item_108": {
        "system": "Linux",
        "description": "4.1.15 Ensure changes to system administration scope (sudoers) is collected - /etc/sudoers.d",
        "info": "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity.",
        "solution": "Add the following line to the /etc/audit/rules.d/audit.rules file:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.8,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\/etc\\/sudoers.d[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+\\/etc\\/sudoers.d[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$"
    },
    "custom_item_109": {
        "system": "Linux",
        "description": "4.1.16 Ensure system administrator actions (sudolog) are collected - auditctl",
        "info": "Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log . Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.\n\nRationale:\n\nChanges in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/log/sudo.log -p wa -k actions",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/sbin/auditctl -l | /bin/grep actions",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/sudo\\\\.log[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+actions[\\\\s]*$"
    },
    "custom_item_110": {
        "system": "Linux",
        "description": "4.1.16 Ensure system administrator actions (sudolog) are collected",
        "info": "Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log . Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.\n\nRationale:\n\nChanges in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.",
        "solution": "Add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /var/log/sudo.log -p wa -k actions",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/sudo\\\\.log[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+actions[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/sudo\\\\.log[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+actions[\\\\s]*$"
    },
    "custom_item_111": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - auditctl insmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep modules",
        "expect": "^[\\\\s]*-w[\\\\s]+/sbin/insmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_112": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - insmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/rules.d/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/sbin/insmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/sbin/insmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_113": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - auditctl rmmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep modules",
        "expect": "^[\\\\s]*-w[\\\\s]+/sbin/rmmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_114": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - rmmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/rules.d/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/sbin/rmmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/sbin/rmmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_115": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - auditctl modprobe",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep modules",
        "expect": "^[\\\\s]*-w[\\\\s]+/sbin/modprobe[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_116": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - modprobe",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/audit/rules.d/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/sbin/modprobe[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$",
        "expect": "^[\\\\s]*-w[\\\\s]+/sbin/modprobe[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_117": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - init_module/delete_module (32-bit)",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep modules",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_118": {
        "description": "OS is 64 bit",
        "cmd": "/usr/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_119": {
        "system": "Linux",
        "description": "4.1.17 Ensure kernel module loading and unloading is collected - init_module/delete_module (64-bit)",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "For 32 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems add the following lines to the /etc/audit/rules.d/audit.rules file:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|2S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/sbin/auditctl -l | /usr/bin/grep modules",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_120": {
        "system": "Linux",
        "description": "4.1.18 Ensure the audit configuration is immutable",
        "info": "Set system audit so that audit rules cannot be modified with auditctl . Setting the flag \"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.\n\nRationale:\n\nIn immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.",
        "solution": "Add the following line to the end of the /etc/audit/rules.d/audit.rules file.\n-e 2",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/egrep -v \"^$\" /etc/audit/audit.rules | /usr/bin/tail -1",
        "expect": "^[\\\\s]*-e[\\\\s]+2[\\\\s]*$"
    },
    "custom_item_121": {
        "system": "Linux",
        "description": "5.2.6 Ensure SSH X11 forwarding is disabled",
        "info": "The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.\n\nRationale:\n\nDisable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.",
        "solution": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n\nX11Forwarding no\nRestart sshd :\nsystemctl restart sshd",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|3.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/ssh/sshd_config",
        "regex": "^[\\\\s]*(?i)X11Forwarding(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)X11Forwarding(?-i)[\\\\s]+no[\\\\s]*$"
    },
    "custom_item_122": {
        "system": "Linux",
        "description": "5.4.5 Ensure default user shell timeout is 900 seconds or less - /etc/bashrc",
        "info": "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in seconds.\n\nRationale:\n\nHaving no timeout value associated with a shell could allow an unauthorized user access to another user's shell session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening.",
        "solution": "Edit the /etc/bashrc and /etc/profile files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows:\n\nTMOUT=600",
        "reference": "800-171|3.1.10,800-53|AC-11,800-53r5|AC-11,CN-L3|8.1.4.1(b),CSCv7|16.11,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.11.2.8,ITSG-33|AC-11,LEVEL|2S,NIAv2|AM23c,NIAv2|AM23d,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/bashrc",
        "regex": "^[\\\\s]*TMOUT[\\\\s]*",
        "expect": "^[\\\\s]*TMOUT[\\\\s]*=[\\\\s]*(900|[1-8][0-9]{2}|[0-9]{1,2})[\\\\s]*$"
    },
    "custom_item_123": {
        "system": "Linux",
        "description": "5.4.5 Ensure default user shell timeout is 900 seconds or less - /etc/profile",
        "info": "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in seconds.\n\nRationale:\n\nHaving no timeout value associated with a shell could allow an unauthorized user access to another user's shell session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening.",
        "solution": "Edit the /etc/bashrc and /etc/profile files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows:\n\nTMOUT=600",
        "reference": "800-171|3.1.10,800-53|AC-11,800-53r5|AC-11,CN-L3|8.1.4.1(b),CSCv7|16.11,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.11.2.8,ITSG-33|AC-11,LEVEL|2S,NIAv2|AM23c,NIAv2|AM23d,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "file": "/etc/profile",
        "regex": "^[\\\\s]*TMOUT[\\\\s]*",
        "expect": "^[\\\\s]*TMOUT[\\\\s]*=[\\\\s]*(900|[1-8][0-9]{2}|[0-9]{1,2})[\\\\s]*$"
    },
    "custom_item_124": {
        "system": "Linux",
        "description": "6.1.1 Audit system file permissions",
        "info": "The RPM package manager has a number of useful options. One of these, the --verify (or -V ) option, can be used to verify that system packages are correctly installed. The --verify option can be used to verify a particular package or to verify all system packages. If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option:\n\nCode   Meaning\nS      File size differs.\nM      File mode differs (includes permissions and file type).\n5      The MD5 checksum differs.\nD      The major and minor version numbers differ on a device file.\nL      A mismatch occurs in a link.\nU      The file ownership differs.\nG      The file group owner differs.\nT      The file time (mtime) differs.\nThe rpm -qf command can be used to determine which package a particular file belongs to. For example the following commands determines which package the /bin/bash file belongs to:\n# rpm -qf /bin/bash\nbash-4.1.2-29.el6.x86_64\nTo verify the settings for the package that controls the /bin/bash file, run the following:\n# rpm -V bash-4.1.2-29.el6.x86_64\n.M.......    /bin/bash\nNote that you can feed the output of the rpm -qf command to the rpm -V command:\n# rpm -V `rpm -qf /etc/passwd`\n.M...... c /etc/passwd\nS.5....T c /etc/printcap\n\nRationale:\n\nIt is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor.",
        "solution": "Correct any discrepancies found and rerun the audit until output is clean or risk is mitigated or accepted.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2NS,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2449",
        "cmd": "/usr/bin/rpm -Va --nomtime --nosize --nomd5 --nolinkto | /usr/bin/awk '{ print } END { if (NR==0) print \"none\" }'",
        "expect": "none"
    }
}