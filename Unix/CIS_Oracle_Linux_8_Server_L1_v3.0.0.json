{
    "custom_item_1": {
        "description": "6.1.11 Ensure world writable files and directories are secured",
        "info": "World writable files are the least secure. Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity. See the chmod(2) man page for more information.\n\nSetting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.\n\nData in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.\n\nThis feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user.",
        "solution": "- World Writable Files:\n - It is recommended that write access is removed from other with the command ( chmod o-w), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.\n\n - World Writable Directories:\n - Set the sticky bit on all world writable directories with the command ( chmod a+t)\n\nRun the following script to:\n\n - Remove other write permission from any world writable files\n - Add the sticky bit to all world writable directories\n\n#!/usr/bin/env bash\n\n{\n   l_smask='01000'\n   a_path=(); a_arr=() # Initialize array\n   a_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \"/sys/kernel/security/apparmor/*\" -a ! -path \"/snap/*\" -a ! -path \"/sys/fs/cgroup/memory/*\" -a ! -path \"/sys/fs/selinux/*\")\n   while read -r l_bfs; do\n      a_path+=( -a ! -path \"\"$l_bfs\"/*\")\n   done < <(findmnt -Dkerno fstype,target | awk '$1 ~ /^\\s*(nfs|proc|smb)/ {print $2}')\n   # Populate array with files\n   while IFS= read -r -d $'\\0' l_file; do\n      [ -e \"$l_file\" ] && a_arr+=(\"$(stat -Lc '%n^%#a' \"$l_file\")\")\n   done < <(find / \\( \"${a_path[@]}\" \\) \\( -type f -o -type d \\) -perm -0002 -print0 2>/dev/null)\n   while IFS=\"^\" read -r l_fname l_mode; do # Test files in the array\n      if [ -f \"$l_fname\" ]; then # Remove excess permissions from WW files\n         echo -e \" - File: \\\\\"$l_fname\\\\\" is mode: \\\\\"$l_mode\\\\\"\\n - removing write permission on \\\\\"$l_fname\\\\\" from \\\\\"other\\\\\"\"\n         chmod o-w \"$l_fname\"\n      fi\n      if [ -d \"$l_fname\" ]; then\n         if [ ! $(( $l_mode & $l_smask )) -gt 0 ]; then # Add sticky bit\n            echo -e \" - Directory: \\\\\"$l_fname\\\\\" is mode: \\\\\"$l_mode\\\\\" and doesn't have the sticky bit set\\n - Adding the sticky bit\"\n            chmod a+t \"$l_fname\"\n         fi\n      fi\n   done < <(printf '%s\\n' \"${a_arr[@]}\")\n   unset a_path; unset a_arr # Remove array\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "find_world_writeable_files",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_2": {
        "description": "6.1.12 Ensure no unowned or ungrouped files or directories exist",
        "info": "Administrators may delete users or groups from the system and neglect to remove all files and/or directories owned by those users or groups.\n\nA new user or group who is assigned a deleted user's user ID or group ID may then end up \"owning\" a deleted user or group's files, and thus have more access on the system than was intended.",
        "solution": "Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "find_orphan_files",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_3": {
        "description": "6.1.13 Ensure SUID and SGID files are reviewed",
        "info": "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID or SGID program is to enable users to perform functions (such as changing their password) that require root privileges.\n\nThere are valid reasons for SUID and SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different checksum than what from the package. This is an indication that the binary may have been replaced.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "find_suid_sgid_files",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_4": {
        "description": "6.2.3 Ensure all groups in /etc/passwd exist in /etc/group",
        "info": "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group\n\nGroups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.",
        "solution": "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.",
        "reference": "800-171|3.1.1,800-53|AC-2c.,800-53r5|AC-2c.,CN-L3|7.1.3.2(d),CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2c.,LEVEL|1A,NESA|T5.2.1,NESA|T5.2.2,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|1.1.5,PCI-DSSv3.2.1|7.1.1,PCI-DSSv3.2.1|7.1.3,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "passwd_invalid_gid"
    },
    "custom_item_5": {
        "description": "6.2.4 Ensure no duplicate UIDs exist",
        "info": "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.\n\nUsers must be assigned unique UIDs for accountability and to ensure appropriate access protections.",
        "solution": "Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "passwd_duplicate_uid"
    },
    "custom_item_6": {
        "description": "6.2.5 Ensure no duplicate GIDs exist",
        "info": "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.\n\nUser groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.",
        "solution": "Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "group_duplicate_gid"
    },
    "custom_item_7": {
        "description": "6.2.6 Ensure no duplicate user names exist",
        "info": "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the username.\n\nIf a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd For example, if \"test4\" has a UID of 1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use UID 1000. Effectively, the UID is shared, which is a security problem.",
        "solution": "Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "passwd_duplicate_username"
    },
    "custom_item_8": {
        "description": "6.2.7 Ensure no duplicate group names exist",
        "info": "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.\n\nIf a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group Effectively, the GID is shared, which is a security problem.",
        "solution": "Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "group_duplicate_name"
    },
    "custom_item_9": {
        "description": "6.2.9 Ensure root is the only UID 0 account",
        "info": "Any account with UID 0 has superuser privileges on the system.\n\nThis access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.",
        "solution": "Remove any users other than root with UID 0 or assign them a new UID if appropriate.",
        "reference": "800-171|3.1.5,800-53|AC-6(5),800-53r5|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "name": "passwd_zero_uid"
    },
    "custom_item_10": {
        "description": "Oracle Linux 8 is installed",
        "file": "/etc/system-release",
        "regex": "^[\\\\s]*Oracle Linux Server release",
        "expect": "^[\\\\s]*Oracle Linux Server release @PLATFORM_VERSION@"
    },
    "custom_item_11": {
        "description": "1.1.1.1 Ensure cramfs kernel module is not available",
        "info": "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the cramfs module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory\n - Unload cramfs from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"cramfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n   {\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"cramfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\n\n -- INFO --\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n   }",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_12": {
        "description": "1.1.1.2 Ensure freevxfs kernel module is not available",
        "info": "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the freevxfs module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory\n - Unload freevxfs from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"freevxfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n   {\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"freevxfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\n\n -- INFO --\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n   }",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_13": {
        "description": "1.1.1.3 Ensure hfs kernel module is not available",
        "info": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the hfs module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory\n - Unload hfs from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"hfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"hfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_14": {
        "description": "1.1.1.4 Ensure hfsplus kernel module is not available",
        "info": "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the hfsplus module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory\n - Unload hfsplus from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"hfsplus\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"hfsplus\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_15": {
        "description": "1.1.1.5 Ensure jffs2 kernel module is not available",
        "info": "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the jffs2 module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory\n - Unload jffs2 from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"jffs2\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"jffs2\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_16": {
        "description": "1.1.1.8 Ensure usb-storage kernel module is not available",
        "info": "USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.\n\nRestricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.",
        "solution": "Run the following script to disable the usb-storage module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory\n - Unload usb-storage from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"usb-storage\" # set module name\n   l_mtype=\"drivers\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}\n\nImpact:\n\nDisabling the usb-storage module will disable any usage of USB storage devices.\n\nIf requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|13.7,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"usb-storage\" # set module name\n   l_mtype=\"drivers\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_17": {
        "description": "1.1.2.1.1 Ensure /tmp is a separate partition",
        "info": "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.\n\n-IF- an entry for /tmp exists in /etc/fstab it will take precedence over entries in systemd default unit file.\n\nNote: In an environment where the main system is diskless and connected to iSCSI, entries in /etc/fstab may not take precedence.\n\n/tmp can be configured to use tmpfs\n\ntmpfs puts everything into the kernel internal caches and grows and shrinks to accommodate the files it contains and is able to swap unneeded pages out to swap space. It has maximum size limits which can be adjusted on the fly via mount -o remount\n\nSince tmpfs lives completely in the page cache and on swap, all tmpfs pages will be shown as \"Shmem\" in /proc/meminfo and \"Shared\" in free Notice that these counters also include shared memory. The most reliable way to get the count is using df and du\n\ntmpfs has three mount options for sizing:\n\n - size : The limit of allocated bytes for this tmpfs instance. The default is half of your physical RAM without swap. If you oversize your tmpfs instances the machine will deadlock since the OOM handler will not be able to free that memory.\n - nr_blocks : The same as size, but in blocks of PAGE_SIZE.\n - nr_inodes : The maximum number of inodes for this instance. The default is half of the number of your physical RAM pages, or (on a machine with highmem) the number of lowmem RAM pages, whichever is the lower.\n\nThese parameters accept a suffix k, m or g and can be changed on remount. The size parameter also accepts a suffix %to limit this tmpfs instance to that percentage of your physical RAM. The default, when neither size nor nr_blocks is specified, is size=50%\n\nMaking /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.\n\nThis can be accomplished by either mounting tmpfs to /tmp or creating a separate partition for /tmp",
        "solution": "First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.\n\n# systemctl unmask tmp.mount\n\nFor specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab\n\nExample of using tmpfs with specific mount options:\n\ntmpfs\t/tmp\ttmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0\n\nNote: the size=2G is an example of setting a specific size for tmpfs\n\nExample of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:/tmpdefaults,nodev,nosuid,noexec 0 0\n\nImpact:\n\nBy design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.\n\nIf files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp\n\nSince the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.\n\nRunning out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/findmnt -nk /tmp",
        "expect": "^[\\\\s]*/tmp[\\\\s]+"
    },
    "custom_item_18": {
        "description": "1.1.2.1.2 Ensure nodev option set on /tmp partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /tmp",
        "solution": "- IF - a separate partition exists for /tmp\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.\n\nExample:/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /tmp with the configured options:\n\n# mount -o remount /tmp",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/tmp[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_19": {
        "description": "1.1.2.1.3 Ensure nosuid option set on /tmp partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp",
        "solution": "- IF - a separate partition exists for /tmp\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.\n\nExample:/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /tmp with the configured options:\n\n# mount -o remount /tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/tmp[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_20": {
        "description": "1.1.2.1.4 Ensure noexec option set on /tmp partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp",
        "solution": "- IF - a separate partition exists for /tmp\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.\n\nExample:/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /tmp with the configured options:\n\n# mount -o remount /tmp\n\nImpact:\n\nSetting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/tmp[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_21": {
        "description": "1.1.2.2.1 Ensure /dev/shm is a separate partition",
        "info": "The /dev/shm directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC).\n\nMaking /dev/shm its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.\n\nThis can be accomplished by mounting tmpfs to /dev/shm",
        "solution": "For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab\n\nExample:\n\ntmpfs\t/dev/shm\ttmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0\n\nImpact:\n\nSince the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.\n\n/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "[\\\\s]+/dev/shm[\\\\s]+"
    },
    "custom_item_22": {
        "description": "1.1.2.2.2 Ensure nodev option set on /dev/shm partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.",
        "solution": "- IF - a separate partition exists for /dev/shm\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.\n\nExample:\n\ntmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /dev/shm with the configured options:\n\n# mount -o remount /dev/shm\n\nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_23": {
        "description": "1.1.2.2.3 Ensure nosuid option set on /dev/shm partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSetting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
        "solution": "- IF - a separate partition exists for /dev/shm\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.\n\nExample:\n\ntmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /dev/shm with the configured options:\n\n# mount -o remount /dev/shm\n\nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_24": {
        "description": "1.1.2.2.4 Ensure noexec option set on /dev/shm partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSetting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.",
        "solution": "- IF - a separate partition exists for /dev/shm\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.\n\nExample:\n\ntmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /dev/shm with the configured options:\n\n# mount -o remount /dev/shm\n\nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_25": {
        "description": "1.1.2.3.2 Ensure nodev option set on /home partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /home filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /home",
        "solution": "- IF - a separate partition exists for /home\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.\n\nExample:/homedefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /home with the configured options:\n\n# mount -o remount /home",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/home[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_26": {
        "description": "1.1.2.3.3 Ensure nosuid option set on /home partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home",
        "solution": "- IF - a separate partition exists for /home\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.\n\nExample:/homedefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /home with the configured options:\n\n# mount -o remount /home",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/home[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_27": {
        "description": "1.1.2.4.2 Ensure nodev option set on /var partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var",
        "solution": "- IF - a separate partition exists for /var\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.\n\nExample:/vardefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var with the configured options:\n\n# mount -o remount /var",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_28": {
        "description": "1.1.2.4.3 Ensure nosuid option set on /var partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var",
        "solution": "- IF - a separate partition exists for /var\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.\n\nExample:/vardefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var with the configured options:\n\n# mount -o remount /var",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_29": {
        "description": "1.1.2.5.2 Ensure nodev option set on /var/tmp partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/tmp",
        "solution": "- IF - a separate partition exists for /var/tmp\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.\n\nExample:/var/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/tmp with the configured options:\n\n# mount -o remount /var/tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/tmp[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_30": {
        "description": "1.1.2.5.3 Ensure nosuid option set on /var/tmp partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp",
        "solution": "- IF - a separate partition exists for /var/tmp\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.\n\nExample:/var/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/tmp with the configured options:\n\n# mount -o remount /var/tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/tmp[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_31": {
        "description": "1.1.2.5.4 Ensure noexec option set on /var/tmp partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp",
        "solution": "- IF - a separate partition exists for /var/tmp\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.\n\nExample:/var/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/tmp with the configured options:\n\n# mount -o remount /var/tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/tmp[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_32": {
        "description": "1.1.2.6.2 Ensure nodev option set on /var/log partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log",
        "solution": "- IF - a separate partition exists for /var/log\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.\n\nExample:/var/logdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log with the configured options:\n\n# mount -o remount /var/log",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_33": {
        "description": "1.1.2.6.3 Ensure nosuid option set on /var/log partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log",
        "solution": "- IF - a separate partition exists for /var/log\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.\n\nExample:/var/logdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log with the configured options:\n\n# mount -o remount /var/log",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_34": {
        "description": "1.1.2.6.4 Ensure noexec option set on /var/log partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log",
        "solution": "- IF - a separate partition exists for /var/log\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.\n\nExample:/var/logdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log with the configured options:\n\n# mount -o remount /var/log",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_35": {
        "description": "1.1.2.7.2 Ensure nodev option set on /var/log/audit partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log/audit",
        "solution": "- IF - a separate partition exists for /var/log/audit\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.\n\nExample:/var/log/auditdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log/audit with the configured options:\n\n# mount -o remount /var/log/audit",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log/audit[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_36": {
        "description": "1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit",
        "solution": "- IF - a separate partition exists for /var/log/audit\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.\n\nExample:/var/log/auditdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log/audit with the configured options:\n\n# mount -o remount /var/log/audit",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log/audit[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_37": {
        "description": "1.1.2.7.4 Ensure noexec option set on /var/log/audit partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit",
        "solution": "- IF - a separate partition exists for /var/log/audit\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.\n\nExample:/var/log/auditdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log/audit with the configured options:\n\n# mount -o remount /var/log/audit",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log/audit[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_38": {
        "description": "1.2.1 Ensure GPG keys are configured",
        "info": "The RPM Package Manager implements GPG key signing to verify package integrity during and after installation.\n\nIt is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system. To this end, verify that GPG keys are configured correctly for your system.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Update your package manager GPG keys in accordance with site policy.",
        "reference": "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "rpm -q gpg-pubkey --queryformat '%{name}-%{version}-%{release} --> %{summary}\\\\n'",
        "expect": "^Manual Review Required$"
    },
    "custom_item_39": {
        "description": "Global configuration is set correctly",
        "file": "/etc/dnf/dnf.conf",
        "regex": "^[\\\\s]*gpgcheck[\\\\s]*=",
        "expect": "^[\\\\s]*gpgcheck[\\\\s]*=[\\\\s]*1[\\\\s]*$"
    },
    "custom_item_40": {
        "description": "yum.repos.d configuration is set correctly",
        "file": "/etc/yum.repos.d/*",
        "regex": "^[\\\\s]*gpgcheck[\\\\s]*=",
        "expect": "^[\\\\s]*gpgcheck[\\\\s]*=[\\\\s]*(0|[2-9]|[1-9][0-9]+|[a-zA-Z_]+)\\\\b"
    },
    "custom_item_41": {
        "description": "1.2.4 Ensure package manager repositories are configured",
        "info": "Systems need to have the respective package manager repositories configured to ensure that the system is able to receive the latest patches and updates.\n\nIf a system's package repositories are misconfigured, important patches may not be identified or a rogue repository could introduce compromised software.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure your package manager repositories according to site policy.",
        "reference": "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/dnf repolist",
        "expect": "^Manual Review Required$"
    },
    "custom_item_42": {
        "description": "Check to make sure no system reboot is required",
        "cmd": "/bin/dnf needs-restarting -r",
        "expect": "Reboot should not be necessary."
    },
    "custom_item_43": {
        "description": "Ensure updates, patches, and additional security software are installed",
        "cmd": "/bin/dnf check-update | /bin/awk '{print} END {if (NR == 1) print \"pass\"; else print}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_44": {
        "description": "1.3.1 Ensure bootloader password is set",
        "info": "Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters.\n\nRequiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off SELinux at boot time).",
        "solution": "Create an encrypted password with grub2-setpassword :\n\n# grub2-setpassword\n\nEnter password:Confirm password:Impact:\n\nIf password protection is enabled, only the designated superuser can edit a GRUB 2 menu item by pressing e or access the GRUB 2 command line by pressing c\n\nIf GRUB 2 is set up to boot automatically to a password-protected menu entry the user has no option to back out of the password prompt to select another menu entry. Holding the SHIFT key will not display the menu in this case. The user must enter the correct username and password. If unable, the configuration files will have to be edited via the LiveCD or other means to fix the problem",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#/bin/bash\n  {\n   l_grub_password_file=\"$(find /boot -type f -name 'user.cfg' ! -empty)\"\n   if [ -f \"$l_grub_password_file\" ]; then\n      awk -F. '/^\\\\s*GRUB2_PASSWORD=\\\\S+/ {print $1\".\"$2\".\"$3}' \"$l_grub_password_file\"\n   fi\n   }",
        "expect": "GRUB2_PASSWORD=grub.pbkdf2.sha512",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_45": {
        "description": "1.3.2 Ensure permissions on bootloader config are configured",
        "info": "The grub files contain information on boot settings and passwords for unlocking boot options.\n\nSetting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.",
        "solution": "Run the following to update the mode, ownership, and group ownership of the grub configuration files:\n\n-IF- the system uses UEFI (Files located in /boot/efi/EFI/* )\n\nEdit /etc/fstab and add the fmask=0077 uid=0 and gid=0 options:\n\nExample:/boot/efi vfat defaults,umask=0027,fmask=0077,uid=0,gid=0 0 0\n\nNote: This may require a re-boot to enable the change\n\n-OR-\n\n-IF- the system uses BIOS (Files located in /boot/grub2/* )\n\nRun the following commands to set ownership and permissions on your grub configuration file(s):\n\n# [ -f /boot/grub2/grub.cfg ] && chown root:root /boot/grub2/grub.cfg\n# [ -f /boot/grub2/grub.cfg ] && chmod u-x,go-rwx /boot/grub2/grub.cfg\n\n# [ -f /boot/grub2/grubenv ] && chown root:root /boot/grub2/grubenv\n# [ -f /boot/grub2/grubenv ] && chmod u-x,go-rwx /boot/grub2/grubenv\n\n# [ -f /boot/grub2/user.cfg ] && chown root:root /boot/grub2/user.cfg\n# [ -f /boot/grub2/user.cfg ] && chmod u-x,go-rwx /boot/grub2/user.cfg",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   file_mug_chk()\n   {\n      l_out=\"\" l_out2=\"\"\n      [[ \"$(dirname \"$l_file\")\" =~ ^\\\\/boot\\\\/efi\\\\/EFI ]] && l_pmask=\"0077\" || l_pmask=\"0177\"\n      l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n      if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then\n         l_out2=\"$l_out2\\\\n   - Is mode \\\\\"$l_mode\\\\\" and should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n      else\n         l_out=\"$l_out\\\\n   - Is correctly mode: \\\\\"$l_mode\\\\\" which is mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n      fi\n      if [ \"$l_user\" = \"root\" ]; then\n         l_out=\"$l_out\\\\n   - Is correctly owned by user: \\\\\"$l_user\\\\\"\"\n      else\n         l_out2=\"$l_out2\\\\n   - Is owned by user: \\\\\"$l_user\\\\\" and should be owned by user: \\\\\"root\\\\\"\"\n      fi\n      if [ \"$l_group\" = \"root\" ]; then\n         l_out=\"$l_out\\\\n   - Is correctly group-owned by group: \\\\\"$l_user\\\\\"\"\n      else\n         l_out2=\"$l_out2\\\\n   - Is group-owned by group: \\\\\"$l_user\\\\\" and should be group-owned by group: \\\\\"root\\\\\"\"\n      fi\n      [ -n \"$l_out\" ] && l_output=\"$l_output\\\\n  - File: \\\\\"$l_file\\\\\"$l_out\\\\n\"\n      [ -n \"$l_out2\" ] && l_output2=\"$l_output2\\\\n  - File: \\\\\"$l_file\\\\\"$l_out2\\\\n\"\n   }\n   while IFS= read -r -d $'\\\\0' l_gfile; do\n      while read -r l_file l_mode l_user l_group; do\n         file_mug_chk\n      done <<< \"$(stat -Lc '%n %#a %U %G' \"$l_gfile\")\"\n   done < <(find /boot -type f \\\\( -name 'grub*' -o -name 'user.cfg' \\\\) -print0)\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  *** PASS ***\\\\n- * Correctly set * :\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \" - * Correctly set * :\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_46": {
        "description": "1.4.1 Ensure address space layout randomization (ASLR) is enabled",
        "info": "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.\n\nRandomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - kernel.randomize_va_space = 2\n\nExample:\n\n# printf \"\nkernel.randomize_va_space = 2\n\" >> /etc/sysctl.d/60-kernel_sysctl.conf\n\nRun the following command to set the active kernel parameter:\n\n# sysctl -w kernel.randomize_va_space=2\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"kernel.randomize_va_space=2\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_47": {
        "description": "1.4.2 Ensure ptrace_scope is restricted",
        "info": "The ptrace() system call provides a means by which one process (the \"tracer\") may observe and control the execution of another process (the \"tracee\"), and examine and change the tracee's memory and registers.\n\nIf one application is compromised, it would be possible for an attacker to attach to other running processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract additional credentials and continue to expand the scope of their attack.\n\nEnabling restricted mode will limit the ability of a compromised process to PTRACE_ATTACH on other processes running under the same user. With restricted mode, ptrace will continue to work with root user.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - kernel.yama.ptrace_scope = 1\n\nExample:\n\n# printf \"\nkernel.yama.ptrace_scope = 1\n\" >> /etc/sysctl.d/60-kernel_sysctl.conf\n\nRun the following command to set the active kernel parameter:\n\n# sysctl -w kernel.yama.ptrace_scope=1\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"kernel.yama.ptrace_scope=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_48": {
        "description": "1.4.3 Ensure core dump backtraces are disabled",
        "info": "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file.\n\nA core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems, increasing the risk to the system.",
        "solution": "Create or edit the file /etc/systemd/coredump.conf or a file in the /etc/systemd/coredump.conf.d directory ending inconf\n\nEdit or add the following line:\n\nProcessSizeMax=0",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"ProcessSizeMax=0\")\n   l_systemd_config_file=\"/etc/systemd/coredump.conf\" # Main systemd configuration file\n   config_file_parameter_chk()\n   {\n      unset A_out; declare -A A_out # Check config file(s) setting\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"${l_systemd_parameter^^}\" = \"${l_systemd_parameter_name^^}\" ] && A_out+=([\"$l_systemd_parameter\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/bin/systemd-analyze cat-config \"$l_systemd_config_file\" | grep -Pio '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do\n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\"\n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\"\n            if [ \"${l_systemd_file_parameter_value^^}\" = \"${l_systemd_parameter_value^^}\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is correctly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is incorrectly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_systemd_parameter_value\\\\\"\\\\n\"\n            fi\n         done < <(grep -Pio -- \"^\\\\h*$l_systemd_parameter_name\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_systemd_parameter_name\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and check parameters\n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"\n      l_systemd_parameter_value=\"${l_systemd_parameter_value// /}\"\n      config_file_parameter_chk\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass[\\\\s]*\\\\**$"
    },
    "custom_item_49": {
        "description": "1.4.4 Ensure core dump storage is disabled",
        "info": "A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file.\n\nA core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems.",
        "solution": "Create or edit the file /etc/systemd/coredump.conf or a file in the /etc/systemd/coredump.conf.d directory ending inconf\n\nEdit or add the following line:\n\nStorage=none",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"Storage=none\")\n   l_systemd_config_file=\"/etc/systemd/coredump.conf\" # Main systemd configuration file\n   config_file_parameter_chk()\n   {\n      unset A_out; declare -A A_out # Check config file(s) setting\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"${l_systemd_parameter^^}\" = \"${l_systemd_parameter_name^^}\" ] && A_out+=([\"$l_systemd_parameter\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/bin/systemd-analyze cat-config \"$l_systemd_config_file\" | grep -Pio '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do\n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\"\n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\"\n            if [ \"${l_systemd_file_parameter_value^^}\" = \"${l_systemd_parameter_value^^}\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is correctly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is incorrectly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_systemd_parameter_value\\\\\"\\\\n\"\n            fi\n         done < <(grep -Pio -- \"^\\\\h*$l_systemd_parameter_name\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_systemd_parameter_name\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and check parameters\n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"\n      l_systemd_parameter_value=\"${l_systemd_parameter_value// /}\"\n      config_file_parameter_chk\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_50": {
        "description": "1.5.1.1 Ensure SELinux is installed",
        "info": "SELinux provides Mandatory Access Control.\n\nWithout a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.",
        "solution": "Run the following command to install SELinux :\n\n# dnf install libselinux",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "libselinux-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_51": {
        "description": "1.5.1.2 Ensure SELinux is not disabled in bootloader configuration",
        "info": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters.\n\nSELinux must be enabled at boot time in your grub configuration to ensure that the controls it provides are not overridden.",
        "solution": "Run the following command to remove the selinux=0 and enforcing=0 parameters:\n\ngrubby --update-kernel ALL --remove-args \"selinux=0 enforcing=0\"\n\nRun the following command to remove the selinux=0 and enforcing=0 parameters if they were created by the deprecated grub2-mkconfig command:\n\n# grep -Prsq -- '\\h*([^#\\n\\r]+\\h+)?kernelopts=([^#\\n\\r]+\\h+)?(selinux|enforcing)=0\\b' /boot/grub2 /boot/efi && grub2-mkconfig -o \"$(grep -Prl -- '\\h*([^#\\n\\r]+\\h+)?kernelopts=([^#\\n\\r]+\\h+)?(selinux|enforcing)=0\\b' /boot/grub2 /boot/efi)\"\n\nImpact:\n\nFiles created while SELinux is disabled are not labeled at all. This behavior causes problems when changing to enforcing mode because files are labeled incorrectly or are not labeled at all. To prevent incorrectly labeled and unlabeled files from causing problems, file systems are automatically relabeled when changing from the disabled state to permissive or enforcing mode. This can be a long running process that should be accounted for as it may extend downtime during initial re-boot.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/sbin/grubby --info=ALL | /bin/grep -Po '(selinux|enforcing)=0' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_52": {
        "description": "sestatus",
        "cmd": "/sbin/sestatus",
        "expect": "(?i)^[\\\\s]*Loaded policy name:[\\\\s]+(targeted|mls)$"
    },
    "custom_item_53": {
        "description": "/etc/selinux/config",
        "file": "/etc/selinux/config",
        "regex": "(?i)^[\\\\s]*SELINUXTYPE[\\\\s]*=",
        "expect": "(?i)^[\\\\s]*SELINUXTYPE[\\\\s]*=[\\\\s]*(targeted|mls)[\\\\s]*$"
    },
    "custom_item_54": {
        "description": "/etc/selinux/config",
        "file": "/etc/selinux/config",
        "regex": "(?i)^[\\\\s]*SeLinux[\\\\s]*=",
        "expect": "(?i)^[\\\\s]*SeLinux[\\\\s]*=[\\\\s]*(Enforcing|Permissive)[\\\\s]*$"
    },
    "custom_item_55": {
        "description": "getenforce",
        "cmd": "/sbin/getenforce",
        "expect": "(?i)(Enforcing|Permissive)"
    },
    "custom_item_56": {
        "description": "1.5.1.6 Ensure no unconfined services exist",
        "info": "Unconfined processes run in unconfined domains\n\nFor unconfined processes, SELinux policy rules are applied, but policy rules exist that allow processes running in unconfined domains almost all access. Processes running in unconfined domains fall back to using DAC rules exclusively. If an unconfined process is compromised, SELinux does not prevent an attacker from gaining access to system resources and data, but of course, DAC rules are still used. SELinux is a security enhancement on top of DAC rules - it does not replace them",
        "solution": "Investigate any unconfined processes found during the audit action. They may need to have an existing security context assigned to them or a policy built for them.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|9.2,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/ps -eZ | /bin/grep unconfined_service_t | /bin/awk -F: '{ print $NF } END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_57": {
        "description": "1.5.1.7 Ensure the MCS Translation Service (mcstrans) is not installed",
        "info": "The mcstransd daemon provides category label information to client processes requesting information. The label translations are defined in /etc/selinux/targeted/setrans.conf\n\nSince this service is not used very often, remove it to reduce the amount of potentially vulnerable code running on the system.",
        "solution": "Run the following command to uninstall mcstrans :\n\n# dnf remove mcstrans",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "mcstrans-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_58": {
        "description": "1.5.1.8 Ensure SETroubleshoot is not installed",
        "info": "The SETroubleshoot service notifies desktop users of SELinux denials through a user-friendly interface. The service provides important information around configuration errors, unauthorized intrusions, and other potential errors.\n\nThe SETroubleshoot service is an unnecessary daemon to have running on a server, especially if X Windows is disabled.",
        "solution": "Run the following command to uninstall setroubleshoot :\n\n# dnf remove setroubleshoot",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|14.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "setroubleshoot-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_59": {
        "description": "1.6.1 Ensure system wide crypto policy is not set to legacy",
        "info": "When a system-wide policy is set up, the default behavior of applications will be to follow the policy. Applications will be unable to use algorithms andprotocols that do not meet the policy, unless you explicitly request the application to do so.\n\nThe system-wide crypto-policies followed by the crypto core components allow consistently deprecating and disabling algorithms system-wide.\n\nThe LEGACY policy ensures maximum compatibility with version 5 of the operating system and earlier; it is less secure due to an increased attack surface. In addition to the DEFAULT level algorithms and protocols, it includes support for the TLS 1.0 and 1.1 protocols. The algorithms DSA 3DES and RC4 are allowed, while RSA keys and Diffie-Hellman parameters are accepted if they are at least 1023 bits long.\n\nIf the LEGACY system-wide crypto policy is selected, it includes support for TLS 1.0, TLS 1.1, and SSH2 protocols or later. The algorithms DSA, 3DES, and RC4 are allowed, while RSA and Diffie-Hellman parameters are accepted if larger than 1023-bits.\n\nThese legacy protocols and algorithms can make the system vulnerable to attacks, including those listed in RFC 7457",
        "solution": "Run the following command to change the system-wide crypto policy\n\n# update-crypto-policies --setExample:\n\n# update-crypto-policies --set DEFAULT\n\nRun the following to make the updated system-wide crypto policy active\n\n# update-crypto-policies\n\nImpact:\n\nEnvironments that require compatibility with older insecure protocols may require the useof the less secure LEGACY policy level.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/crypto-policies/config",
        "regex": "(?i)^[\\\\s]*LEGACY[\\\\s]*([\\\\s]+#.*)?$",
        "expect": "(?i)^[\\\\s]*LEGACY[\\\\s]*([\\\\s]+#.*)?$"
    },
    "custom_item_60": {
        "description": "sha1_in_certs policy value",
        "cmd": "/bin/grep -Pi -- '^\\\\h*sha1_in_certs\\\\h*=\\\\h*' /etc/crypto-policies/state/CURRENT.pol",
        "expect": "^[\\\\s]*sha1_in_certs[\\\\s]*=[\\\\s]*0[\\\\s]*$"
    },
    "custom_item_61": {
        "description": "Crypto policy settings for hash and sign",
        "cmd": "/bin/grep -Pi -- '^\\\\h*(hash|sign)\\\\h*=\\\\h*([^\\\\r#]+)?-sha1\\\\b' /etc/crypto-policies/state/CURRENT.pol | /bin/awk -F: '{ print $NF } END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_62": {
        "description": "1.6.3 Ensure system wide crypto policy disables cbc for ssh",
        "info": "Cypher Block Chaining (CBC) is an algorithm that uses a block cipher.\n\nA vulnerability exists in SSH messages that employ CBC mode that may allow an attacker to recover plaintext from a block of ciphertext. If exploited, this attack can potentially allow an attacker to recover up to 32 bits of plaintext from an arbitrary block of ciphertext from a connection secured using the SSH protocol.",
        "solution": "Note:\n\n - The commands below are written for the included DEFAULT system-wide crypto policy. If another policy is in use and follows local site policy, replace DEFAULT with the name of your system-wide crypto policy.\n - Multiple subpolicies may be assigned to a policy as a colon separated list. e.g. DEFAULT:NO-SHA1:NO-SSHCBC\n - Any subpolicy not included in the update-crypto-policies --set command will not be applied to the system wide crypto policy.\n - Subpolicies must exist before they can be applied to the system wide crypto policy.\n\nCreate or edit a file in /etc/crypto-policies/policies/modules/ ending inpmod and add or modify one of the the following lines:\n\ncipher@SSH = -*-CBC # Disables the CBC cipher for SSH\n\n-OR-\n\ncipher = -*-CBC # Disables the CBC cipher\n\nExample:\n\n# echo -e \"# This is a subpolicy to disable all CBC mode ciphers\\n# for the SSH protocol (libssh and OpenSSH)\\ncipher@SSH = -*-CBC\" > /etc/crypto-policies/policies/modules/NO-SSHCBC.pmod\n\nRun the following command to update the system-wide cryptographic policy\n\n# update-crypto-policies --set:::Example:\n\nupdate-crypto-policies --set DEFAULT:NO-SHA1:NO-SSHCBC\n\nRun the following command to reboot the system to make your cryptographic settings effective for already running services and applications:\n\n# reboot\n\nImpact:\n\nCBC ciphers might be the only common cyphers when connecting to older SSH clients and servers",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   if grep -Piq -- '^\\\\h*cipher\\\\h*=\\\\h*([^#\\\\n\\\\r]+)?-CBC\\\\b' /etc/crypto-policies/state/CURRENT.pol; then\n      if grep -Piq -- '^\\\\h*cipher@(lib|open)ssh(-server|-client)?\\\\h*=\\\\h*' /etc/crypto-policies/state/CURRENT.pol; then\n         if ! grep -Piq -- '^\\\\h*cipher@(lib|open)ssh(-server|-client)?\\\\h*=\\\\h*([^#\\\\n\\\\r]+)?-CBC\\\\b' /etc/crypto-policies/state/CURRENT.pol; then\n            l_output=\"$l_output\\\\n - Cipher Block Chaining (CBC) is disabled for SSH\"\n         else\n            l_output2=\"$l_output2\\\\n - Cipher Block Chaining (CBC) is enabled for SSH\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - Cipher Block Chaining (CBC) is enabled for SSH\"\n      fi\n   else\n      l_output=\" - Cipher Block Chaining (CBC) is disabled\"\n   fi\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_63": {
        "description": "1.6.4 Ensure system wide crypto policy disables macs less than 128 bits",
        "info": "Message Authentication Code (MAC) algorithm is a family of cryptographic functions that is parameterized by a symmetric key. Each of the functions can act on input data (called a \"message\") of variable length to produce an output value of a specified length. The output value is called the MAC of the input message.\n\nA MAC algorithm can be used to provide data-origin authentication and data-integrity protection\n\nWeak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the tunnel and capture credentials and information.\n\nA MAC algorithm must be computationally infeasible to determine the MAC of a message without knowledge of the key, even if one has already seen the results of using that key to compute the MAC's of other messages.",
        "solution": "Note:\n\n - The commands below are written for the included DEFAULT system-wide crypto policy. If another policy is in use and follows local site policy, replace DEFAULT with the name of your system-wide crypto policy.\n - Multiple subpolicies may be assigned to a policy as a colon separated list. e.g. DEFAULT:NO-SHA1:NO-SSHCBC:NO-WEAKMAC\n - Any subpolicy not included in the update-crypto-policies --set command will not be applied to the system wide crypto policy.\n - Subpolicies must exist before they can be applied to the system wide crypto policy.\n\nCreate or edit a file in /etc/crypto-policies/policies/modules/ ending inpmod and add or modify one of the following lines:\n\nmac = -*-64* # Disables weak macs\n\nExample:\n\n# echo -e \"# This is a subpolicy to disable weak macs\\nmac = -*-64\" > /etc/crypto-policies/policies/modules/NO-WEAKMAC.pmod\n\nRun the following command to update the system-wide cryptographic policy\n\n# update-crypto-policies --set:::Example:\n\nupdate-crypto-policies --set DEFAULT:NO-SHA1:NO-SSHCBC:NO-WEAKMAC\n\nRun the following command to reboot the system to make your cryptographic settings effective for already running services and applications:\n\n# reboot",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/crypto-policies/state/CURRENT.pol",
        "regex": "^\\\\h*mac\\\\h*=\\\\h*([^#\\\\n\\\\r]+)?-64\\\\b",
        "expect": "^\\\\h*mac\\\\h*=\\\\h*([^#\\\\n\\\\r]+)?-64\\\\b"
    },
    "custom_item_64": {
        "description": "/etc/motd exist",
        "file": "/etc/motd"
    },
    "custom_item_65": {
        "description": "mrsv not included in /etc/motd",
        "file": "/etc/motd",
        "regex": "\\\\\\\\[mrsv]",
        "expect": "\\\\\\\\[mrsv]"
    },
    "custom_item_66": {
        "description": "banner text",
        "file": "/etc/motd",
        "content": "@BANNER_TEXT@"
    },
    "custom_item_67": {
        "description": "/etc/issue exist",
        "file": "/etc/issue"
    },
    "custom_item_68": {
        "description": "banner text",
        "file": "/etc/issue",
        "content": "@BANNER_TEXT@"
    },
    "custom_item_69": {
        "description": "mrsv not included in /etc/issue",
        "file": "/etc/issue",
        "regex": "\\\\\\\\[mrsv]",
        "expect": "\\\\\\\\[mrsv]"
    },
    "custom_item_70": {
        "description": "/etc/issue.net exist",
        "file": "/etc/issue.net"
    },
    "custom_item_71": {
        "description": "mrsv not included in /etc/issue.net",
        "file": "/etc/issue.net",
        "regex": "\\\\\\\\[mrsv]",
        "expect": "\\\\\\\\[mrsv]"
    },
    "custom_item_72": {
        "description": "banner text",
        "file": "/etc/issue.net",
        "content": "@BANNER_TEXT@"
    },
    "custom_item_73": {
        "description": "1.7.4 Ensure access to /etc/motd is configured",
        "info": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.\n\n-IF- the /etc/motd file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/motd :\n\n# chown root:root $(readlink -e /etc/motd)\n# chmod u-x,go-wx $(readlink -e /etc/motd)\n\n-OR-\n\nRun the following command to remove the /etc/motd file:\n\n# rm /etc/motd",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/motd",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_74": {
        "description": "1.7.5 Ensure access to /etc/issue is configured",
        "info": "The contents of the /etc/issue file are displayed to users prior to login for local terminals.\n\n-IF- the /etc/issue file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/issue :\n\n# chown root:root $(readlink -e /etc/issue)\n# chmod u-x,go-wx $(readlink -e /etc/issue)",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/issue",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_75": {
        "description": "1.7.6 Ensure access to /etc/issue.net is configured",
        "info": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.\n\n-IF- the /etc/issue.net file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/issue.net :\n\n# chown root:root $(readlink -e /etc/issue.net)\n# chmod u-x,go-wx $(readlink -e /etc/issue.net)",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/issue.net",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_76": {
        "description": "Check GDM installed",
        "rpm": "gdm-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_77": {
        "description": "1.8.10 Ensure XDMCP is not enabled",
        "info": "X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays\n\nXDMCP is inherently insecure.\n\n - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user\n - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.",
        "solution": "Edit the file /etc/gdm/custom.conf and remove the line:\n\nEnable=true",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/gdm/custom.conf",
        "regex": "^[\\\\s]*[Ee]nable[\\\\s]*=",
        "expect": "^[\\\\s]*[Ee]nable[\\\\s]*=[\\\\s]*true[\\\\s]*$"
    },
    "custom_item_78": {
        "description": "1.8.2 Ensure GDM login banner is configured",
        "info": "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.\n\nWarning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.",
        "solution": "Run the following script to verify that the banner message is enabled and set:\n\n#!/usr/bin/env bash\n\n{\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - checking configuration\"\n   done\n   if [ -n \"$l_pkgoutput\" ]; then\n\n      l_gdmprofile=\"gdm\" # Set this to desired profile name IaW Local site policy\n      l_bmessage=\"'Authorized uses only. All activity may be monitored and reported'\" # Set to desired banner message\n      if [ ! -f \"/etc/dconf/profile/$l_gdmprofile\" ]; then\n         echo \"Creating profile \\\\\"$l_gdmprofile\\\\\"\"\n         echo -e \"user-db:user\\nsystem-db:$l_gdmprofile\\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults\" > /etc/dconf/profile/$l_gdmprofile\n      fi\n      if [ ! -d \"/etc/dconf/db/$l_gdmprofile.d/\" ]; then\n         echo \"Creating dconf database directory \\\\\"/etc/dconf/db/$l_gdmprofile.d/\\\\\"\"\n         mkdir /etc/dconf/db/$l_gdmprofile.d/\n      fi\n      if ! grep -Piq '^\\h*banner-message-enable\\h*=\\h*true\\b' /etc/dconf/db/$l_gdmprofile.d/*; then\n         echo \"creating gdm keyfile for machine-wide settings\"\n         if ! grep -Piq -- '^\\h*banner-message-enable\\h*=\\h*' /etc/dconf/db/$l_gdmprofile.d/*; then\n            l_kfile=\"/etc/dconf/db/$l_gdmprofile.d/01-banner-message\"\n            echo -e \"\\n[org/gnome/login-screen]\\nbanner-message-enable=true\" >> \"$l_kfile\"\n         else\n            l_kfile=\"$(grep -Pil -- '^\\h*banner-message-enable\\h*=\\h*' /etc/dconf/db/$l_gdmprofile.d/*)\"\n            ! grep -Pq '^\\h*\\[org\\/gnome\\/login-screen\\]' \"$l_kfile\" && sed -ri '/^\\s*banner-message-enable/ i\\[org/gnome/login-screen]' \"$l_kfile\"\n            ! grep -Pq '^\\h*banner-message-enable\\h*=\\h*true\\b' \"$l_kfile\" && sed -ri 's/^\\s*(banner-message-enable\\s*=\\s*)(\\S+)(\\s*.*$)/\\1true \\3//' \"$l_kfile\"\n # sed -ri '/^\\s*\\[org\\/gnome\\/login-screen\\]/ a\\\\nbanner-message-enable=true' \"$l_kfile\"\n         fi\n      fi\n      if ! grep -Piq \"^\\h*banner-message-text=[\\'\\\\\"]+\\S+\" \"$l_kfile\"; then\n         sed -ri \"/^\\s*banner-message-enable/ a\\banner-message-text=$l_bmessage\" \"$l_kfile\"\n      fi\n      dconf update\n   else\n      echo -e \"\\n\\n - GNOME Desktop Manager isn't installed\\n - Recommendation is Not Applicable\\n - No remediation required\\n\"\n   fi\n}\n\nNote:\n\n -\n\nThere is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.\n\n -\n\nThe banner message cannot be read from an external file.\n\nOR\n\nRun the following command to remove the gdm package:\n\n# dnf remove gdm",
        "reference": "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\n - Package: \\\\\"$l_pn\\\\\" exists on the system\n - checking configuration\"\n   done\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\" l_output2=\"\"\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_gdmfile=\"$(grep -Prils '^\\\\h*banner-message-enable\\\\b' /etc/dconf/db/*.d)\"\n      if [ -n \"$l_gdmfile\" ]; then\n         # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n         l_gdmprofile=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_gdmfile\")\"\n         # Check if banner message is enabled\n         if grep -Pisq '^\\\\h*banner-message-enable=true\\\\b' \"$l_gdmfile\"; then\n            l_output=\"$l_output\n - The \\\\\"banner-message-enable\\\\\" option is enabled in \\\\\"$l_gdmfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\n - The \\\\\"banner-message-enable\\\\\" option is not enabled\"\n         fi\n         l_lsbt=\"$(grep -Pios '^\\\\h*banner-message-text=.*$' \"$l_gdmfile\")\"\n         if [ -n \"$l_lsbt\" ]; then\n            l_output=\"$l_output\n - The \\\\\"banner-message-text\\\\\" option is set in \\\\\"$l_gdmfile\\\\\"\n  - banner-message-text is set to:\n  - \\\\\"$l_lsbt\\\\\"\"\n         else\n            l_output2=\"$l_output2\n - The \\\\\"banner-message-text\\\\\" option is not set\"\n         fi\n         if grep -Pq \"^\\\\h*system-db:$l_gdmprofile\" /etc/dconf/profile/\"$l_gdmprofile\"; then\n            l_output=\"$l_output\n - The \\\\\"$l_gdmprofile\\\\\" profile exists\"\n         else\n            l_output2=\"$l_output2\n - The \\\\\"$l_gdmprofile\\\\\" profile doesn't exist\"\n         fi\n         if [ -f \"/etc/dconf/db/$l_gdmprofile\" ]; then\n            l_output=\"$l_output\n - The \\\\\"$l_gdmprofile\\\\\" profile exists in the dconf database\"\n         else\n            l_output2=\"$l_output2\n - The \\\\\"$l_gdmprofile\\\\\" profile doesn't exist in the dconf database\"\n         fi\n      else\n         l_output2=\"$l_output2\n - The \\\\\"banner-message-enable\\\\\" option isn't configured\"\n      fi\n   else\n      echo -e \"\n - GNOME Desktop Manager isn't installed\n - Recommendation is Not Applicable\n- Audit result:\n  *** PASS ***\n\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi",
        "expect": "PASS"
    },
    "custom_item_79": {
        "description": "1.8.3 Ensure GDM disable-user-list option is enabled",
        "info": "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.\n\nThe disable-user-list option controls if a list of users is displayed on the login screen\n\nDisplaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on.",
        "solution": "Run the following script to enable the disable-user-list option:\n\nNote: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.\n\n#!/usr/bin/env bash\n\n{\n   l_gdmprofile=\"gdm\"\n   if [ ! -f \"/etc/dconf/profile/$l_gdmprofile\" ]; then\n      echo \"Creating profile \\\\\"$l_gdmprofile\\\\\"\"\n      echo -e \"user-db:user\\nsystem-db:$l_gdmprofile\\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults\" > /etc/dconf/profile/$l_gdmprofile\n   fi\n   if [ ! -d \"/etc/dconf/db/$l_gdmprofile.d/\" ]; then\n      echo \"Creating dconf database directory \\\\\"/etc/dconf/db/$l_gdmprofile.d/\\\\\"\"\n      mkdir /etc/dconf/db/$l_gdmprofile.d/\n   fi\n   if ! grep -Piq '^\\h*disable-user-list\\h*=\\h*true\\b' /etc/dconf/db/$l_gdmprofile.d/*; then\n      echo \"creating gdm keyfile for machine-wide settings\"\n      if ! grep -Piq -- '^\\h*\\[org\\/gnome\\/login-screen\\]' /etc/dconf/db/$l_gdmprofile.d/*; then\n         echo -e \"\\n[org/gnome/login-screen]\\n# Do not show the user list\\ndisable-user-list=true\" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen\n      else\n         sed -ri '/^\\s*\\[org\\/gnome\\/login-screen\\]/ a\\# Do not show the user list\\ndisable-user-list=true' $(grep -Pil -- '^\\h*\\[org\\/gnome\\/login-screen\\]' /etc/dconf/db/$l_gdmprofile.d/*)\n      fi\n   fi\n   dconf update\n}\n\nNote: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.\n\nOR\n\nRun the following command to remove the GNOME package:\n\n# dnf remove gdm",
        "reference": "800-171|3.5.11,800-53|IA-6,800-53r5|IA-6,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(d),ITSG-33|IA-6,ITSG-33|IA-6a.,LEVEL|1A,NESA|T5.5.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n{\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   if [ -n \"$l_pkgoutput\" ]; then\n      output=\"\" output2=\"\"\n      l_gdmfile=\"$(grep -Pril '^\\\\h*disable-user-list\\\\h*=\\\\h*true\\\\b' /etc/dconf/db)\"\n      if [ -n \"$l_gdmfile\" ]; then\n         output=\"$output\\\\n - The \\\\\"disable-user-list\\\\\" option is enabled in \\\\\"$l_gdmfile\\\\\"\"\n         l_gdmprofile=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_gdmfile\")\"\n         if grep -Pq \"^\\\\h*system-db:$l_gdmprofile\" /etc/dconf/profile/\"$l_gdmprofile\"; then\n            output=\"$output\\\\n - The \\\\\"$l_gdmprofile\\\\\" exists\"\n         else\n            output2=\"$output2\\\\n - The \\\\\"$l_gdmprofile\\\\\" doesn't exist\"\n         fi\n         if [ -f \"/etc/dconf/db/$l_gdmprofile\" ]; then\n            output=\"$output\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile exists in the dconf database\"\n         else\n            output2=\"$output2\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile doesn't exist in the dconf database\"\n         fi\n      else\n         output2=\"$output2\\\\n - The \\\\\"disable-user-list\\\\\" option is not enabled\"\n      fi\n      if [ -z \"$output2\" ]; then\n         echo -e \"$l_pkgoutput\\\\n- Audit result:\\\\n   *** PASS: ***\\\\n$output\\\\n\"\n      else\n         echo -e \"$l_pkgoutput\\\\n- Audit Result:\\\\n   *** FAIL: ***\\\\n$output2\\\\n\"\n         [ -n \"$output\" ] && echo -e \"$output\\\\n\"\n      fi\n   else\n      echo -e \"\\\\n\\\\n - GNOME Desktop Manager isn't installed\\\\n - Recommendation is Not Applicable\\\\n- Audit result:\\\\n  *** PASS ***\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_80": {
        "description": "1.8.4 Ensure GDM screen locks when the user is idle",
        "info": "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.\n\n - idle-delay=uint32 {n} - Number of seconds of inactivity before the screen goes blank\n - lock-delay=uint32 {n} - Number of seconds after the screen is blank before locking the screen\n\nExample key file:\n\n# Specify the dconf path\n[org/gnome/desktop/session]\n\n# Number of seconds of inactivity before the screen goes blank\n# Set to 0 seconds if you want to deactivate the screensaver.\nidle-delay=uint32 900\n\n# Specify the dconf path\n[org/gnome/desktop/screensaver]\n\n# Number of seconds after the screen is blank before locking the screen\nlock-delay=uint32 5\n\nSetting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.",
        "solution": "Create or edit a file in the /etc/dconf/profile/ and verify it includes the following:\n\nuser-db:user\nsystem-db:{NAME_OF_DCONF_DATABASE}\n\nNote: local is the name of a dconf database used in the examples.\n\nExample:\n\n# echo -e '\\nuser-db:user\\nsystem-db:local' >> /etc/dconf/profile/user\n\nCreate the directory /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/ if it doesn't already exist:\n\nExample:\n\n# mkdir /etc/dconf/db/local.d\n\nCreate the key file `/etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/{FILE_NAME} to provide information for the {NAME_OF_DCONF_DATABASE} database:\n\nExample script:\n\n#!/usr/bin/env bash\n\n{\n   l_key_file=\"/etc/dconf/db/local.d/00-screensaver\"\n   l_idmv=\"900\" # Set max value for idle-delay in seconds (between 1 and 900)\n   l_ldmv=\"5\" # Set max value for lock-delay in seconds (between 0 and 5)\n   {\n      echo '# Specify the dconf path'\n      echo '[org/gnome/desktop/session]'\n      echo ''\n      echo '# Number of seconds of inactivity before the screen goes blank'\n      echo '# Set to 0 seconds if you want to deactivate the screensaver.'\n      echo \"idle-delay=uint32 $l_idmv\"\n      echo ''\n      echo '# Specify the dconf path'\n      echo '[org/gnome/desktop/screensaver]'\n      echo ''\n      echo '# Number of seconds after the screen is blank before locking the screen'\n      echo \"lock-delay=uint32 $l_ldmv\"\n   } > \"$l_key_file\"\n}\n\nNote: You must include the uint32 along with the integer key values as shown.\n\nRun the following command to update the system databases:\n\n# dconf update\n\nNote: Users must log out and back in again before the system-wide settings take effect.",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n{\n   # Check if GNMOE Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\" l_output2=\"\"\n      l_idmv=\"900\" # Set for max value for idle-delay in seconds\n      l_ldmv=\"5\" # Set for max value for lock-delay in seconds\n      # Look for idle-delay to determine profile in use, needed for remaining tests\n      l_kfile=\"$(grep -Psril '^\\\\h*idle-delay\\\\h*=\\\\h*uint32\\\\h+\\\\d+\\\\b' /etc/dconf/db/*/)\" # Determine file containing idle-delay key\n      if [ -n \"$l_kfile\" ]; then\n         # set profile name (This is the name of a dconf database)\n         l_profile=\"$(awk -F'/' '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\" #Set the key profile name\n         l_pdbdir=\"/etc/dconf/db/$l_profile.d\" # Set the key file dconf db directory\n         # Confirm that idle-delay exists, includes unit32, and value is between 1 and max value for idle-delay\n         l_idv=\"$(awk -F 'uint32' '/idle-delay/{print $2}' \"$l_kfile\" | xargs)\"\n         if [ -n \"$l_idv\" ]; then\n            [ \"$l_idv\" -gt \"0\" -a \"$l_idv\" -le \"$l_idmv\" ] && l_output=\"$l_output\\\\n - The \\\\\"idle-delay\\\\\" option is set to \\\\\"$l_idv\\\\\" seconds in \\\\\"$l_kfile\\\\\"\"\n            [ \"$l_idv\" = \"0\" ] && l_output2=\"$l_output2\\\\n - The \\\\\"idle-delay\\\\\" option is set to \\\\\"$l_idv\\\\\" (disabled) in \\\\\"$l_kfile\\\\\"\"\n            [ \"$l_idv\" -gt \"$l_idmv\" ] && l_output2=\"$l_output2\\\\n - The \\\\\"idle-delay\\\\\" option is set to \\\\\"$l_idv\\\\\" seconds (greater than $l_idmv) in \\\\\"$l_kfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"idle-delay\\\\\" option is not set in \\\\\"$l_kfile\\\\\"\"\n         fi\n         # Confirm that lock-delay exists, includes unit32, and value is between 0 and max value for lock-delay\n         l_ldv=\"$(awk -F 'uint32' '/lock-delay/{print $2}' \"$l_kfile\" | xargs)\"\n         if [ -n \"$l_ldv\" ]; then\n            [ \"$l_ldv\" -ge \"0\" -a \"$l_ldv\" -le \"$l_ldmv\" ] && l_output=\"$l_output\\\\n - The \\\\\"lock-delay\\\\\" option is set to \\\\\"$l_ldv\\\\\" seconds in \\\\\"$l_kfile\\\\\"\"\n            [ \"$l_ldv\" -gt \"$l_ldmv\" ] && l_output2=\"$l_output2\\\\n - The \\\\\"lock-delay\\\\\" option is set to \\\\\"$l_ldv\\\\\" seconds (greater than $l_ldmv) in \\\\\"$l_kfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"lock-delay\\\\\" option is not set in \\\\\"$l_kfile\\\\\"\"\n         fi\n         # Confirm that dconf profile exists\n         if grep -Psq \"^\\\\h*system-db:$l_profile\" /etc/dconf/profile/*; then\n            l_output=\"$l_output\\\\n - The \\\\\"$l_profile\\\\\" profile exists\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"$l_profile\\\\\" doesn't exist\"\n         fi\n         # Confirm that dconf profile database file exists\n         if [ -f \"/etc/dconf/db/$l_profile\" ]; then\n            l_output=\"$l_output\\\\n - The \\\\\"$l_profile\\\\\" profile exists in the dconf database\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"$l_profile\\\\\" profile doesn't exist in the dconf database\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - The \\\\\"idle-delay\\\\\" option doesn't exist, remaining tests skipped\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_pkgoutput\" ] && echo -e \"\\\\n$l_pkgoutput\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_81": {
        "description": "1.8.5 Ensure GDM screen locks cannot be overridden",
        "info": "GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.\n\nBy using the lockdown mode in dconf, you can prevent users from changing specific settings.\n\nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.\n\nExample Lock File:\n\n# Lock desktop screensaver settings\n/org/gnome/desktop/session/idle-delay\n/org/gnome/desktop/screensaver/lock-delay\n\nSetting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.\n\nWithout locking down the system settings, user settings take precedence over the system settings.",
        "solution": "Run the following script to ensure screen locks cannot be overridden:\n\n#!/usr/bin/env bash\n\n{\n   # Check if GNMOE Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"y\" && echo -e \"\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - remediating configuration if needed\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      # Look for idle-delay to determine profile in use, needed for remaining tests\n      l_kfd=\"/etc/dconf/db/$(grep -Psril '^\\h*idle-delay\\h*=\\h*uint32\\h+\\d+\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      # Look for lock-delay to determine profile in use, needed for remaining tests\n      l_kfd2=\"/etc/dconf/db/$(grep -Psril '^\\h*lock-delay\\h*=\\h*uint32\\h+\\d+\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      if [ -d \"$l_kfd\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Prilq '^\\h*\\/org\\/gnome\\/desktop\\/session\\/idle-delay\\b' \"$l_kfd\"; then\n            echo \" - \\\\\"idle-delay\\\\\" is locked in \\\\\"$(grep -Pril '^\\h*\\/org\\/gnome\\/desktop\\/session\\/idle-delay\\b' \"$l_kfd\")\\\\\"\"\n         else\n            echo \"creating entry to lock \\\\\"idle-delay\\\\\"\"\n            [ ! -d \"$l_kfd\"/locks ] && echo \"creating directory $l_kfd/locks\" && mkdir \"$l_kfd\"/locks\n            {\n               echo -e '\\n# Lock desktop screensaver idle-delay setting'\n               echo '/org/gnome/desktop/session/idle-delay'\n            } >> \"$l_kfd\"/locks/00-screensaver\n         fi\n      else\n         echo -e \" - \\\\\"idle-delay\\\\\" is not set so it can not be locked\\n - Please follow Recommendation \\\\\"Ensure GDM screen locks when the user is idle\\\\\" and follow this Recommendation again\"\n      fi\n      if [ -d \"$l_kfd2\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Prilq '^\\h*\\/org\\/gnome\\/desktop\\/screensaver\\/lock-delay\\b' \"$l_kfd2\"; then\n            echo \" - \\\\\"lock-delay\\\\\" is locked in \\\\\"$(grep -Pril '^\\h*\\/org\\/gnome\\/desktop\\/screensaver\\/lock-delay\\b' \"$l_kfd2\")\\\\\"\"\n         else\n            echo \"creating entry to lock \\\\\"lock-delay\\\\\"\"\n            [ ! -d \"$l_kfd2\"/locks ] && echo \"creating directory $l_kfd2/locks\" && mkdir \"$l_kfd2\"/locks\n            {\n               echo -e '\\n# Lock desktop screensaver lock-delay setting'\n               echo '/org/gnome/desktop/screensaver/lock-delay'\n            } >> \"$l_kfd2\"/locks/00-screensaver\n         fi\n      else\n         echo -e \" - \\\\\"lock-delay\\\\\" is not set so it can not be locked\\n - Please follow Recommendation \\\\\"Ensure GDM screen locks when the user is idle\\\\\" and follow this Recommendation again\"\n      fi\n   else\n      echo -e \" - GNOME Desktop Manager package is not installed on the system\\n - Recommendation is not applicable\"\n   fi\n}\n\nRun the following command to update the system databases:\n\n# dconf update\n\nNote: Users must log out and back in again before the system-wide settings take effect.",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n{\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\" l_output2=\"\"\n      # Look for idle-delay to determine profile in use, needed for remaining tests\n      l_kfd=\"/etc/dconf/db/$(grep -Psril '^\\\\h*idle-delay\\\\h*=\\\\h*uint32\\\\h+\\\\d+\\\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      l_kfd2=\"/etc/dconf/db/$(grep -Psril '^\\\\h*lock-delay\\\\h*=\\\\h*uint32\\\\h+\\\\d+\\\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      if [ -d \"$l_kfd\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Prilq '\\\\/org\\\\/gnome\\\\/desktop\\\\/session\\\\/idle-delay\\\\b' \"$l_kfd\"; then\n            l_output=\"$l_output\\\\n - \\\\\"idle-delay\\\\\" is locked in \\\\\"$(grep -Pril '\\\\/org\\\\/gnome\\\\/desktop\\\\/session\\\\/idle-delay\\\\b' \"$l_kfd\")\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"idle-delay\\\\\" is not locked\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"idle-delay\\\\\" is not set so it can not be locked\"\n      fi\n      if [ -d \"$l_kfd2\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Prilq '\\\\/org\\\\/gnome\\\\/desktop\\\\/screensaver\\\\/lock-delay\\\\b' \"$l_kfd2\"; then\n            l_output=\"$l_output\\\\n - \\\\\"lock-delay\\\\\" is locked in \\\\\"$(grep -Pril '\\\\/org\\\\/gnome\\\\/desktop\\\\/screensaver\\\\/lock-delay\\\\b' \"$l_kfd2\")\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"lock-delay\\\\\" is not locked\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"lock-delay\\\\\" is not set so it can not be locked\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n\t[ -n \"$l_pkgoutput\" ] && echo -e \"\\\\n$l_pkgoutput\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_82": {
        "description": "1.8.6 Ensure GDM automatic mounting of removable media is disabled",
        "info": "By default GNOME automatically mounts removable media when inserted as a convenience to the user.\n\nWith automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.",
        "solution": "Run the following script to disable automatic mounting of media for all GNOME users:\n\n#!/usr/bin/env bash\n\n{\n   l_pkgoutput=\"\"\n   l_gpname=\"local\" # Set to desired dconf profile name (default is local)\n   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\\n\n   # determine system's package manager\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\h*automount\\b' /etc/dconf/db/*.d)\"\n      l_kfile2=\"$(grep -Prils -- '^\\h*automount-open\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n         echo \" - updating dconf profile name to \\\\\"$l_gpname\\\\\"\"\n      elif [ -f \"$l_kfile2\" ]; then\n         l_gpname=\"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile2\")\"\n         echo \" - updating dconf profile name to \\\\\"$l_gpname\\\\\"\"\n      fi\n      # check for consistency (Clean up configuration if needed)\n      if [ -f \"$l_kfile\" ] && [ \"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\" != \"$l_gpname\" ]; then\n         sed -ri \"/^\\s*automount\\s*=/s/^/# /\" \"$l_kfile\"\n         l_kfile=\"/etc/dconf/db/$l_gpname.d/00-media-automount\"\n      fi\n      if [ -f \"$l_kfile2\" ] && [ \"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile2\")\" != \"$l_gpname\" ]; then\n         sed -ri \"/^\\s*automount-open\\s*=/s/^/# /\" \"$l_kfile2\"\n      fi\n      [ -z \"$l_kfile\" ] && l_kfile=\"/etc/dconf/db/$l_gpname.d/00-media-automount\"\n      # Check if profile file exists\n      if grep -Pq -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*; then\n         echo -e \"\\n - dconf database profile exists in: \\\\\"$(grep -Pl -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*)\\\\\"\"\n      else\n         if [ ! -f \"/etc/dconf/profile/user\" ]; then\n            l_gpfile=\"/etc/dconf/profile/user\"\n         else\n            l_gpfile=\"/etc/dconf/profile/user2\"\n         fi\n         echo -e \" - creating dconf database profile\"\n         {\n            echo -e \"\\nuser-db:user\"\n            echo \"system-db:$l_gpname\"\n         } >> \"$l_gpfile\"\n      fi\n      # create dconf directory if it doesn't exists\n      l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n      if [ -d \"$l_gpdir\" ]; then\n         echo \" - The dconf database directory \\\\\"$l_gpdir\\\\\" exists\"\n      else\n         echo \" - creating dconf database directory \\\\\"$l_gpdir\\\\\"\"\n         mkdir \"$l_gpdir\"\n      fi\n      # check automount-open setting\n      if grep -Pqs -- '^\\h*automount-open\\h*=\\h*false\\b' \"$l_kfile\"; then\n         echo \" - \\\\\"automount-open\\\\\" is set to false in: \\\\\"$l_kfile\\\\\"\"\n      else\n         echo \" - creating \\\\\"automount-open\\\\\" entry in \\\\\"$l_kfile\\\\\"\"\n         ! grep -Psq -- '\\^\\h*\\[org\\/gnome\\/desktop\\/media-handling\\]\\b' \"$l_kfile\" && echo '[org/gnome/desktop/media-handling]' >> \"$l_kfile\"\n         sed -ri '/^\\s*\\[org\\/gnome\\/desktop\\/media-handling\\]/a \\\\nautomount-open=false' \"$l_kfile\"\n      fi\n      # check automount setting\n      if grep -Pqs -- '^\\h*automount\\h*=\\h*false\\b' \"$l_kfile\"; then\n         echo \" - \\\\\"automount\\\\\" is set to false in: \\\\\"$l_kfile\\\\\"\"\n      else\n         echo \" - creating \\\\\"automount\\\\\" entry in \\\\\"$l_kfile\\\\\"\"\n         ! grep -Psq -- '\\^\\h*\\[org\\/gnome\\/desktop\\/media-handling\\]\\b' \"$l_kfile\" && echo '[org/gnome/desktop/media-handling]' >> \"$l_kfile\"\n         sed -ri '/^\\s*\\[org\\/gnome\\/desktop\\/media-handling\\]/a \\\\nautomount=false' \"$l_kfile\"\n      fi\n      # update dconf database\n      dconf update\n   else\n      echo -e \"\\n - GNOME Desktop Manager package is not installed on the system\\n - Recommendation is not applicable\"\n   fi\n}\n\nOR\n\nRun the following command to uninstall the GNOME desktop Manager package:\n\n# dnf remove gdm\n\nImpact:\n\nThe use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_pkgoutput=\"\" l_output=\"\" l_output2=\"\"\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\\\h*automount\\\\b' /etc/dconf/db/*.d)\"\n      l_kfile2=\"$(grep -Prils -- '^\\\\h*automount-open\\\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n      elif [ -f \"$l_kfile2\" ]; then\n         l_gpname=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile2\")\"\n      fi\n      # If the profile name exist, continue checks\n      if [ -n \"$l_gpname\" ]; then\n         l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n         # Check if profile file exists\n         if grep -Pq -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*; then\n            l_output=\"$l_output\\\\n - dconf database profile file \\\\\"$(grep -Pl -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*)\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - dconf database profile isn't set\"\n         fi\n         # Check if the dconf database file exists\n         if [ -f \"/etc/dconf/db/$l_gpname\" ]; then\n            l_output=\"$l_output\\\\n - The dconf database \\\\\"$l_gpname\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf database \\\\\"$l_gpname\\\\\" doesn't exist\"\n         fi\n         # check if the dconf database directory exists\n         if [ -d \"$l_gpdir\" ]; then\n            l_output=\"$l_output\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" exitst\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" doesn't exist\"\n         fi\n         # check automount setting\n         if grep -Pqrs -- '^\\\\h*automount\\\\h*=\\\\h*false\\\\b' \"$l_kfile\"; then\n            l_output=\"$l_output\\\\n - \\\\\"automount\\\\\" is set to false in: \\\\\"$l_kfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"automount\\\\\" is not set correctly\"\n         fi\n         # check automount-open setting\n         if grep -Pqs -- '^\\\\h*automount-open\\\\h*=\\\\h*false\\\\b' \"$l_kfile2\"; then\n            l_output=\"$l_output\\\\n - \\\\\"automount-open\\\\\" is set to false in: \\\\\"$l_kfile2\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"automount-open\\\\\" is not set correctly\"\n         fi\n      else\n         # Setings don't exist. Nothing further to check\n         l_output2=\"$l_output2\\\\n - neither \\\\\"automount\\\\\" or \\\\\"automount-open\\\\\" is set\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_83": {
        "description": "1.8.7 Ensure GDM disabling automatic mounting of removable media is not overridden",
        "info": "By default GNOME automatically mounts removable media when inserted as a convenience to the user\n\nBy using the lockdown mode in dconf, you can prevent users from changing specific settings.\n\nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.\n\nExample Lock File:\n\n# Lock automount settings\n/org/gnome/desktop/media-handling/automount\n/org/gnome/desktop/media-handling/automount-open\n\nWith automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.",
        "solution": "Run the following script to lock disable automatic mounting of media for all GNOME users:\n\n#!/usr/bin/env bash\n\n{\n   # Check if GNMOE Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"y\" && echo -e \"\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - remediating configuration if needed\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      # Look for automount to determine profile in use, needed for remaining tests\n      l_kfd=\"/etc/dconf/db/$(grep -Psril '^\\h*automount\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      # Look for automount-open to determine profile in use, needed for remaining tests\n      l_kfd2=\"/etc/dconf/db/$(grep -Psril '^\\h*automount-open\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      if [ -d \"$l_kfd\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Priq '^\\h*\\/org/gnome\\/desktop\\/media-handling\\/automount\\b' \"$l_kfd\"; then\n            echo \" - \\\\\"automount\\\\\" is locked in \\\\\"$(grep -Pril '^\\h*\\/org/gnome\\/desktop\\/media-handling\\/automount\\b' \"$l_kfd\")\\\\\"\"\n         else\n            echo \" - creating entry to lock \\\\\"automount\\\\\"\"\n            [ ! -d \"$l_kfd\"/locks ] && echo \"creating directory $l_kfd/locks\" && mkdir \"$l_kfd\"/locks\n            {\n               echo -e '\\n# Lock desktop media-handling automount setting'\n               echo '/org/gnome/desktop/media-handling/automount'\n            } >> \"$l_kfd\"/locks/00-media-automount\n         fi\n      else\n         echo -e \" - \\\\\"automount\\\\\" is not set so it can not be locked\\n - Please follow Recommendation \\\\\"Ensure GDM automatic mounting of removable media is disabled\\\\\" and follow this Recommendation again\"\n      fi\n      if [ -d \"$l_kfd2\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Priq '^\\h*\\/org/gnome\\/desktop\\/media-handling\\/automount-open\\b' \"$l_kfd2\"; then\n            echo \" - \\\\\"automount-open\\\\\" is locked in \\\\\"$(grep -Pril '^\\h*\\/org/gnome\\/desktop\\/media-handling\\/automount-open\\b' \"$l_kfd2\")\\\\\"\"\n         else\n            echo \" - creating entry to lock \\\\\"automount-open\\\\\"\"\n            [ ! -d \"$l_kfd2\"/locks ] && echo \"creating directory $l_kfd2/locks\" && mkdir \"$l_kfd2\"/locks\n            {\n               echo -e '\\n# Lock desktop media-handling automount-open setting'\n               echo '/org/gnome/desktop/media-handling/automount-open'\n            } >> \"$l_kfd2\"/locks/00-media-automount\n         fi\n      else\n         echo -e \" - \\\\\"automount-open\\\\\" is not set so it can not be locked\\n - Please follow Recommendation \\\\\"Ensure GDM automatic mounting of removable media is disabled\\\\\" and follow this Recommendation again\"\n      fi\n      # update dconf database\n      dconf update\n   else\n      echo -e \" - GNOME Desktop Manager package is not installed on the system\\n - Recommendation is not applicable\"\n   fi\n}\n\nImpact:\n\nThe use of portable hard drives is very common for workstation users",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\" l_output2=\"\"\n      echo -e \"$l_pkgoutput\\\\n\"\n      # Look for idle-delay to determine profile in use, needed for remaining tests\n      l_kfd=\"/etc/dconf/db/$(grep -Psril '^\\\\h*automount\\\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      l_kfd2=\"/etc/dconf/db/$(grep -Psril '^\\\\h*automount-open\\\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      if [ -d \"$l_kfd\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Priq '^\\\\h*\\\\/org/gnome\\\\/desktop\\\\/media-handling\\\\/automount\\\\b' \"$l_kfd\"; then\n            l_output=\"$l_output\\\\n - \\\\\"automount\\\\\" is locked in \\\\\"$(grep -Pril '^\\\\h*\\\\/org/gnome\\\\/desktop\\\\/media-handling\\\\/automount\\\\b' \"$l_kfd\")\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"automount\\\\\" is not locked\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"automount\\\\\" is not set so it can not be locked\"\n      fi\n      if [ -d \"$l_kfd2\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Priq '^\\\\h*\\\\/org/gnome\\\\/desktop\\\\/media-handling\\\\/automount-open\\\\b' \"$l_kfd2\"; then\n            l_output=\"$l_output\\\\n - \\\\\"lautomount-open\\\\\" is locked in \\\\\"$(grep -Pril '^\\\\h*\\\\/org/gnome\\\\/desktop\\\\/media-handling\\\\/automount-open\\\\b' \"$l_kfd2\")\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"automount-open\\\\\" is not locked\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"automount-open\\\\\" is not set so it can not be locked\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_84": {
        "description": "1.8.8 Ensure GDM autorun-never is enabled",
        "info": "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.\n\nMalware on removable media may take advantage of Autorun features when the media is inserted into a system and execute.",
        "solution": "Run the following script to set autorun-never to true for GDM users:\n\n#!/usr/bin/env bash\n\n{\n   l_pkgoutput=\"\" l_output=\"\" l_output2=\"\"\n   l_gpname=\"local\" # Set to desired dconf profile name (default is local)\n   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\\n\n   # determine system's package manager\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - checking configuration\"\n   done\n   echo -e \"$l_pkgoutput\"\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\h*autorun-never\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n         echo \" - updating dconf profile name to \\\\\"$l_gpname\\\\\"\"\n      fi\n      [ ! -f \"$l_kfile\" ] && l_kfile=\"/etc/dconf/db/$l_gpname.d/00-media-autorun\"\n      # Check if profile file exists\n      if grep -Pq -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*; then\n         echo -e \"\\n - dconf database profile exists in: \\\\\"$(grep -Pl -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*)\\\\\"\"\n      else\n         [ ! -f \"/etc/dconf/profile/user\" ] && l_gpfile=\"/etc/dconf/profile/user\" || l_gpfile=\"/etc/dconf/profile/user2\"\n         echo -e \" - creating dconf database profile\"\n         {\n            echo -e \"\\nuser-db:user\"\n            echo \"system-db:$l_gpname\"\n         } >> \"$l_gpfile\"\n      fi\n      # create dconf directory if it doesn't exists\n      l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n      if [ -d \"$l_gpdir\" ]; then\n         echo \" - The dconf database directory \\\\\"$l_gpdir\\\\\" exists\"\n      else\n         echo \" - creating dconf database directory \\\\\"$l_gpdir\\\\\"\"\n         mkdir \"$l_gpdir\"\n      fi\n      # check autorun-never setting\n      if grep -Pqs -- '^\\h*autorun-never\\h*=\\h*true\\b' \"$l_kfile\"; then\n         echo \" - \\\\\"autorun-never\\\\\" is set to true in: \\\\\"$l_kfile\\\\\"\"\n      else\n         echo \" - creating or updating \\\\\"autorun-never\\\\\" entry in \\\\\"$l_kfile\\\\\"\"\n         if grep -Psq -- '^\\h*autorun-never' \"$l_kfile\"; then\n            sed -ri 's/(^\\s*autorun-never\\s*=\\s*)(\\S+)(\\s*.*)$/\\1true \\3/' \"$l_kfile\"\n         else\n            ! grep -Psq -- '\\^\\h*\\[org\\/gnome\\/desktop\\/media-handling\\]\\b' \"$l_kfile\" && echo '[org/gnome/desktop/media-handling]' >> \"$l_kfile\"\n            sed -ri '/^\\s*\\[org\\/gnome\\/desktop\\/media-handling\\]/a \\\\nautorun-never=true' \"$l_kfile\"\n         fi\n      fi\n   else\n      echo -e \"\\n - GNOME Desktop Manager package is not installed on the system\\n - Recommendation is not applicable\"\n   fi\n   # update dconf database\n   dconf update\n}",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_pkgoutput=\"\" l_output=\"\" l_output2=\"\"\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n      echo -e \"$l_pkgoutput\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\\\h*autorun-never\\\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n      fi\n      # If the profile name exist, continue checks\n      if [ -n \"$l_gpname\" ]; then\n         l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n         # Check if profile file exists\n         if grep -Pq -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*; then\n            l_output=\"$l_output\\\\n - dconf database profile file \\\\\"$(grep -Pl -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*)\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - dconf database profile isn't set\"\n         fi\n         # Check if the dconf database file exists\n         if [ -f \"/etc/dconf/db/$l_gpname\" ]; then\n            l_output=\"$l_output\\\\n - The dconf database \\\\\"$l_gpname\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf database \\\\\"$l_gpname\\\\\" doesn't exist\"\n         fi\n         # check if the dconf database directory exists\n         if [ -d \"$l_gpdir\" ]; then\n            l_output=\"$l_output\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" exitst\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" doesn't exist\"\n         fi\n         # check autorun-never setting\n         if grep -Pqrs -- '^\\\\h*autorun-never\\\\h*=\\\\h*true\\\\b' \"$l_kfile\"; then\n            l_output=\"$l_output\\\\n - \\\\\"autorun-never\\\\\" is set to true in: \\\\\"$l_kfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"autorun-never\\\\\" is not set correctly\"\n         fi\n      else\n         # Settings don't exist. Nothing further to check\n         l_output2=\"$l_output2\\\\n - \\\\\"autorun-never\\\\\" is not set\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_85": {
        "description": "1.8.9 Ensure GDM autorun-never is not overridden",
        "info": "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.\n\nBy using the lockdown mode in dconf, you can prevent users from changing specific settings.\n\nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.\n\nExample Lock File:\n\n# Lock desktop media-handling settings\n/org/gnome/desktop/media-handling/autorun-never\n\nMalware on removable media may take advantage of Autorun features when the media is inserted into a system and execute.",
        "solution": "Run the following script to ensure that autorun-never=true cannot be overridden:\n\n#!/usr/bin/env bash\n\n{\n   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"y\" && echo -e \"\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - remediating configuration if needed\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      # Look for autorun to determine profile in use, needed for remaining tests\n      l_kfd=\"/etc/dconf/db/$(grep -Psril '^\\h*autorun-never\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      if [ -d \"$l_kfd\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Priq '^\\h*\\/org/gnome\\/desktop\\/media-handling\\/autorun-never\\b' \"$l_kfd\"; then\n            echo \" - \\\\\"autorun-never\\\\\" is locked in \\\\\"$(grep -Pril '^\\h*\\/org/gnome\\/desktop\\/media-handling\\/autorun-never\\b' \"$l_kfd\")\\\\\"\"\n         else\n            echo \" - creating entry to lock \\\\\"autorun-never\\\\\"\"\n            [ ! -d \"$l_kfd\"/locks ] && echo \"creating directory $l_kfd/locks\" && mkdir \"$l_kfd\"/locks\n            {\n               echo -e '\\n# Lock desktop media-handling autorun-never setting'\n               echo '/org/gnome/desktop/media-handling/autorun-never'\n            } >> \"$l_kfd\"/locks/00-media-autorun\n         fi\n      else\n         echo -e \" - \\\\\"autorun-never\\\\\" is not set so it can not be locked\\n - Please follow Recommendation \\\\\"Ensure GDM autorun-never is enabled\\\\\" and follow this Recommendation again\"\n      fi\n      # update dconf database\n      dconf update\n   else\n      echo -e \" - GNOME Desktop Manager package is not installed on the system\\n - Recommendation is not applicable\"\n   fi\n}",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\" l_output2=\"\"\n      echo -e \"$l_pkgoutput\\\\n\"\n      # Look for idle-delay to determine profile in use, needed for remaining tests\n      l_kfd=\"/etc/dconf/db/$(grep -Psril '^\\\\h*autorun-never\\\\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,\".\");print a[1]}').d\" #set directory of key file to be locked\n      if [ -d \"$l_kfd\" ]; then # If key file directory doesn't exist, options can't be locked\n         if grep -Priq '^\\\\h*\\\\/org/gnome\\\\/desktop\\\\/media-handling\\\\/autorun-never\\\\b' \"$l_kfd\"; then\n            l_output=\"$l_output\\\\n - \\\\\"autorun-never\\\\\" is locked in \\\\\"$(grep -Pril '^\\\\h*\\\\/org/gnome\\\\/desktop\\\\/media-handling\\\\/autorun-never\\\\b' \"$l_kfd\")\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"autorun-never\\\\\" is not locked\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"autorun-never\\\\\" is not set so it can not be locked\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_86": {
        "description": "2.1.1 Ensure time synchronization is in use",
        "info": "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.\n\nNote: If another method for time synchronization is being used, this section may be skipped.\n\nTime synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.",
        "solution": "Run the following command to install chrony :\n\n# dnf install chrony",
        "reference": "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "chrony-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_87": {
        "description": "2.1.2 Ensure chrony is configured",
        "info": "chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on chrony can be found at\n\nhttp://chrony.tuxfamily.org/\n\n. chrony can be configured to be a client and/or a server.\n\nIf chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.",
        "solution": "Add or edit server or pool lines to /etc/chrony.conf or a file in the /etc/chrony.d directory as appropriate:\n\nExample:\n\nserver",
        "reference": "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/chrony.conf /etc/chrony.d/*",
        "regex": "^[\\\\s]*(server|pool)[\\\\s]+@NTP_SERVER@",
        "expect": "^[\\\\s]*(server|pool)[\\\\s]+@NTP_SERVER@",
        "min_occurrences": "1"
    },
    "custom_item_88": {
        "description": "2.1.3 Ensure chrony is not run as the root user",
        "info": "The file /etc/sysconfig/chronyd allows configuration of options for chrony to include the user chrony is run as. By default this is set to the user chrony\n\nServices should not be set to run as the root user",
        "solution": "Edit the file /etc/sysconfig/chronyd and add or modify the following line:\n\nOPTIONS=\"-u chrony\"\n\nRun the following command to reload the chronyd.service configuration:\n\n# systemctl try-reload-or-restart chronyd.service",
        "reference": "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/grep -Psi -- '^\\\\h*OPTIONS=\\\\\"?.*-u\\\\h+root\\\\b' /etc/sysconfig/chronyd | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_89": {
        "description": "autofs",
        "rpm": "autofs-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_90": {
        "description": "2.2.1 Ensure autofs services are not in use",
        "info": "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.\n\nWith automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.",
        "solution": "Run the following commands to stop autofs.service and remove autofs package:\n\n# systemctl stop autofs.service\n# dnf remove autofs\n\n-OR-\n\n-IF- the autofs package is required as a dependency:\n\nRun the following commands to stop and mask autofs.service :\n\n# systemctl stop autofs.service\n# systemctl mask autofs.service\n\nImpact:\n\nThe use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.\n\nThere may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "autofs-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_91": {
        "description": "autofs.service active",
        "cmd": "/bin/systemctl is-active autofs.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_92": {
        "description": "autofs.service enabled",
        "cmd": "/bin/systemctl is-enabled autofs.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_93": {
        "description": "ypserv installed",
        "rpm": "ypserv-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_94": {
        "description": "ypserv.service active",
        "cmd": "/bin/systemctl is-active ypserv.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_95": {
        "description": "ypserv.service enabled",
        "cmd": "/bin/systemctl is-enabled ypserv.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_96": {
        "description": "2.2.10 Ensure nis server services are not in use",
        "info": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.\n\nThe NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.",
        "solution": "Run the following commands to stop ypserv.service and remove ypserv package:\n\n# systemctl stop ypserv.service\n# dnf remove ypserv\n\n-OR-\n\n-IF- the ypserv package is required as a dependency:\n\nRun the following commands to stop and mask ypserv.service :\n\n# systemctl stop ypserv.service\n# systemctl mask ypserv.service\n\nImpact:\n\nThere may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "ypserv-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_97": {
        "description": "Cups installed",
        "rpm": "cups-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_98": {
        "description": "cups.socket cups.service active",
        "cmd": "/bin/systemctl is-active cups.socket cups.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_99": {
        "description": "cups.socket cups.service enabled",
        "cmd": "/bin/systemctl is-enabled cups.socket cups.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_100": {
        "description": "2.2.11 Ensure print server services are not in use",
        "info": "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.\n\nIf the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop cups.socket and cups.service and remove the cups package:\n\n# systemctl stop cups.socket cups.service\n# dnf remove cups\n\n-OR-\n\n-IF- the cups package is required as a dependency:\n\nRun the following commands to stop and mask the cups.socket and cups.service :\n\n# systemctl stop cups.socket cups.service\n# systemctl mask cups.socket cups.service\n\nImpact:\n\nRemoving the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.\n\nThere may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "cups-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_101": {
        "description": "rpcbind exist",
        "rpm": "rpcbind-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_102": {
        "description": "rpcbind.socket rpcbind.service active",
        "cmd": "/bin/systemctl is-active rpcbind.socket rpcbind.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_103": {
        "description": "rpcbind.socket rpcbind.service enabled",
        "cmd": "/bin/systemctl is-enabled rpcbind.socket rpcbind.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_104": {
        "description": "2.2.12 Ensure rpcbind services are not in use",
        "info": "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind.service redirects the client to the proper port number so it can communicate with the requested service.\n\nPortmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.\n\nA small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended to remove rpcbind package to reduce the potential attack surface.",
        "solution": "Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:\n\n# systemctl stop rpcbind.socket rpcbind.service\n# dnf remove rpcbind\n\n-OR-\n\n-IF- the rpcbind package is required as a dependency:\n\nRun the following commands to stop and mask the rpcbind.socket and rpcbind.service :\n\n# systemctl stop rpcbind.socket rpcbind.service\n# systemctl mask rpcbind.socket rpcbind.service\n\nImpact:\n\nMany of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "rpcbind-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_105": {
        "description": "Check rsync installed",
        "rpm": "rsync-daemon-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_106": {
        "description": "Check rsync installed",
        "cmd": "/bin/systemctl is-enabled rsyncd.socket rsyncd.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_107": {
        "description": "rsyncd.socket rsyncd.service active",
        "cmd": "/bin/systemctl is-active rsyncd.socket rsyncd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_108": {
        "description": "2.2.13 Ensure rsync services are not in use",
        "info": "The rsyncd.service can be used to synchronize files between systems over network links.\n\nUnless required, the rsync-daemon package should be removed to reduce the potential attack surface.\n\nThe rsyncd.service presents a security risk as it uses unencrypted protocols for communication.",
        "solution": "Run the following commands to stop rsyncd.socket and rsyncd.service and remove the rsync-daemon package:\n\n# systemctl stop rsyncd.socket rsyncd.service\n# dnf remove rsync-daemon\n\n-OR-\n\n-IF- the rsync-daemon package is required as a dependency:\n\nRun the following commands to stop and mask the rsyncd.socket and rsyncd.service :\n\n# systemctl stop rsyncd.socket rsyncd.service\n# systemctl mask rsyncd.socket rsyncd.service\n\nImpact:\n\nThere may be packages that are dependent on the rsync-daemon package. If the rsync-daemon package is removed, these dependent packages will be removed as well. Before removing the rsync-daemon package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the rsyncd.socket and rsyncd.service leaving the rsync-daemon package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "rsync-daemon-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_109": {
        "description": "net-snmp is installed",
        "rpm": "net-snmp-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_110": {
        "description": "snmpd.service enabled",
        "cmd": "/bin/systemctl is-enabled snmpd.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_111": {
        "description": "snmpd.service active",
        "cmd": "/bin/systemctl is-active snmpd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_112": {
        "description": "2.2.14 Ensure snmp services are not in use",
        "info": "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs.\n\nNet-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.\n\nSupport for SNMPv2 classic (a.k.a. \"SNMPv2 historic\" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.\n\nThe Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.\n\nThe SNMP server can communicate using SNMPv1 which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the net-snmp package should be removed to reduce the attack surface of the system.\n\nNote: If SNMP is required:\n\n - The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured.\n - If SNMP v2 is absolutely necessary, modify the community strings' values.",
        "solution": "Run the following commands to stop snmpd.service and remove net-snmp package:\n\n# systemctl stop snmpd.service\n# dnf remove net-snmp\n\n-OR- If the package is required for dependencies:\n\nRun the following commands to stop and mask the snmpd.service :\n\n# systemctl stop snmpd.service\n# systemctl mask snmpd.service\n\nImpact:\n\nThere may be packages that are dependent on the net-snmp package. If the net-snmp package is removed, these packages will be removed as well.\n\nBefore removing the net-snmp package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the net-snmp package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "net-snmp-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_113": {
        "description": "telnet-server is installed",
        "rpm": "telnet-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_114": {
        "description": "telnet.socket active",
        "cmd": "/bin/systemctl is-active telnet.socket 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_115": {
        "description": "telnet.socket enabled",
        "cmd": "/bin/systemctl is-enabled telnet.socket 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_116": {
        "description": "2.2.15 Ensure telnet server services are not in use",
        "info": "The telnet-server package contains the telnet daemon, which accepts connections from users from other systems via the telnet protocol.\n\nThe telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network traffic the ability to steal credentials. The ssh package provides an encrypted session and stronger security.",
        "solution": "Run the following commands to stop telnet.socket and remove the telnet-server package:\n\n# systemctl stop telnet.socket\n# dnf remove telnet-server\n\n-OR-\n\n-IF- a package is installed and is required for dependencies:\n\nRun the following commands to stop and mask telnet.socket :\n\n# systemctl stop telnet.socket\n# systemctl mask telnet.socket\n\nImpact:\n\nThere may be packages that are dependent on the telnet-server package. If the telnet-server package is removed, these dependent packages will be removed as well. Before removing the telnet-server package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the telnet.socket leaving the telnet-server package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "telnet-server-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_117": {
        "description": "tftp-server is installed",
        "rpm": "tftp-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_118": {
        "description": "tftp.socket tftp.service active",
        "cmd": "/bin/systemctl is-active tftp.socket tftp.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_119": {
        "description": "tftp.socket tftp.service enabled",
        "cmd": "/bin/systemctl is-enabled tftp.socket tftp.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_120": {
        "description": "2.2.16 Ensure tftp server services are not in use",
        "info": "Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.\n\nUnless there is a need to run the system as a TFTP server, it is recommended that the package be removed to reduce the potential attack surface.\n\nTFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files",
        "solution": "Run the following commands to stop tftp.socket and tftp.service and remove the tftp-server package:\n\n# systemctl stop tftp.socket tftp.service\n# dnf remove tftp-server\n\n-OR-\n\n-IF- the tftp-server package is required as a dependency:\n\nRun the following commands to stop and mask tftp.socket and tftp.service :\n\n# systemctl stop tftp.socket tftp.service\n# systemctl mask tftp.socket tftp.service\n\nImpact:\n\nTFTP is often used to provide files for network booting such as for PXE based installation of servers.\n\nThere may be packages that are dependent on the tftp-server package. If the tftp-server package is removed, these dependent packages will be removed as well. Before removing the tftp-server package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the tftp.socket and tftp.service leaving the tftp-server package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "tftp-server-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_121": {
        "description": "squid installed",
        "rpm": "squid-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_122": {
        "description": "squid.service active",
        "cmd": "/bin/systemctl is-active squid.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_123": {
        "description": "squid.service enabled",
        "cmd": "/bin/systemctl is-enabled squid.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_124": {
        "description": "2.2.17 Ensure web proxy server services are not in use",
        "info": "Squid is a standard proxy server used in many distributions and environments.\n\nUnless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.\n\nNote: Several HTTP proxy servers exist. These should be checked and removed unless required.",
        "solution": "Run the following commands to stop squid.service and remove the squid package:\n\n# systemctl stop squid.service\n# dnf remove squid\n\n-OR- If the squid package is required as a dependency:\n\nRun the following commands to stop and mask the squid.service :\n\n# systemctl stop squid.service\n# systemctl mask squid.service\n\nImpact:\n\nThere may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the squid.service leaving the squid package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "squid-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_125": {
        "description": "httpd services exist on the system",
        "rpm": "httpd-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_126": {
        "description": "nginx services exist on the system",
        "rpm": "nginx-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_127": {
        "description": "httpd.socket httpd.service nginx.service active",
        "cmd": "/bin/systemctl is-active httpd.socket httpd.service nginx.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_128": {
        "description": "httpd.socket httpd.service nginx.service enabled",
        "cmd": "/bin/systemctl is-enabled httpd.socket httpd.service nginx.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_129": {
        "description": "nginx services exist on the system",
        "rpm": "nginx-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_130": {
        "description": "httpd services exist on the system",
        "rpm": "httpd-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_131": {
        "description": "xinetd services are installed",
        "rpm": "xinetd-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_132": {
        "description": "xinetd.service enabled",
        "cmd": "/bin/systemctl is-enabled xinetd.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_133": {
        "description": "xinetd.service active",
        "cmd": "/bin/systemctl is-active xinetd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_134": {
        "description": "2.2.19 Ensure xinetd services are not in use",
        "info": "The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.\n\nUnless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.",
        "solution": "Run the following commands to stop xinetd.service and remove the xinetd package:\n\n# systemctl stop xinetd.service\n# dnf remove xinetd\n\n-OR-\n\n-IF- the xinetd package is required as a dependency:\n\nRun the following commands to stop and mask the xinetd.service :\n\n# systemctl stop xinetd.service\n# systemctl mask xinetd.service\n\nImpact:\n\nThere may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "xinetd-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_135": {
        "description": "avahi",
        "rpm": "avahi-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_136": {
        "description": "2.2.2 Ensure avahi daemon services are not in use",
        "info": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.\n\nAutomatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.",
        "solution": "Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi package:\n\n# systemctl stop avahi-daemon.socket avahi-daemon.service\n# dnf remove avahi\n\n-OR-\n\n-IF- the avahi package is required as a dependency:\n\nRun the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :\n\n# systemctl stop avahi-daemon.socket avahi-daemon.service\n# systemctl mask avahi-daemon.socket avahi-daemon.service\n\nImpact:\n\nThere may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "avahi-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_137": {
        "description": "avahi-daemon.socket avahi-daemon.service active",
        "cmd": "/bin/systemctl is-active avahi-daemon.socket avahi-daemon.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_138": {
        "description": "avahi-daemon.socket avahi-daemon.service enabled",
        "cmd": "/bin/systemctl is-enabled avahi-daemon.socket avahi-daemon.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_139": {
        "description": "Loopback on Port 25",
        "cmd": "/sbin/ss -plntu | /bin/grep -P -- ':25\\\\b' | /bin/grep -Pv -- '\\\\h*(127\\\\.0\\\\.0\\\\.1|\\\\[?::1\\\\]?):25\\\\b' | /bin/awk -F: '{ print $NF } END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_140": {
        "description": "Loopback on Port 587",
        "cmd": "/sbin/ss -plntu | /bin/grep -P -- ':587\\\\b' | /bin/grep -Pv -- '\\\\h*(127\\\\.0\\\\.0\\\\.1|\\\\[?::1\\\\]?):587\\\\b' | /bin/awk -F: '{ print $NF } END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_141": {
        "description": "Loopback on Port 465",
        "cmd": "/sbin/ss -plntu | /bin/grep -P -- ':465\\\\b' | /bin/grep -Pv -- '\\\\h*(127\\\\.0\\\\.0\\\\.1|\\\\[?::1\\\\]?):465\\\\b' | /bin/awk -F: '{ print $NF } END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_142": {
        "description": "2.2.22 Ensure only approved services are listening on a network interface",
        "info": "A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.\n\nA listening port is a network port on which an application or process listens on, acting as a communication endpoint.\n\nEach listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.\n\nServices listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Run the following commands to stop the service and remove the package containing the service:\n\n# systemctl stop.socket.service\n# dnf remove-OR- If required packages have a dependency:\n\nRun the following commands to stop and mask the service and socket:\n\n# systemctl stop.socket.service\n# systemctl mask.socket.service\n\nNote: replacewith the appropriate service name.\n\nImpact:\n\nThere may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the.socket and.service leaving the service's package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/sbin/ss -plntu",
        "expect": "^Manual Review Required$"
    },
    "custom_item_143": {
        "description": "dhcp server services exist",
        "rpm": "dhcp-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_144": {
        "description": "dhcpd.service dhcpd6.service enabled",
        "cmd": "/bin/systemctl is-enabled dhcpd.service dhcpd6.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_145": {
        "description": "dhcpd.service dhcpd6.service active",
        "cmd": "/bin/systemctl is-active dhcpd.service dhcpd6.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_146": {
        "description": "2.2.3 Ensure dhcp server services are not in use",
        "info": "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses. There are two versions of the DHCP protocol DHCPv4 and DHCPv6 At startup the server may be started for one or the other via the -4 or -6 arguments.\n\nUnless a system is specifically set up to act as a DHCP server, it is recommended that the dhcp-server package be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop dhcpd.service and dhcpd6.service and remove dhcp-server package:\n\n# systemctl stop dhcpd.service dhcpd6.service\n# dnf remove dhcp-server\n\n-OR-\n\n-IF- the dhcp-server package is required as a dependency:\n\nRun the following commands to stop and mask dhcpd.service and dhcpd6.service :\n\n# systemctl stop dhcpd.service dhcpd6.service\n# systemctl mask dhcpd.service dhcpd6.service\n\nImpact:\n\nThere may be packages that are dependent on the dhcp-server package. If the dhcp-server package is removed, these dependent packages will be removed as well. Before removing the dhcp-server package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the dhcpd.service and dhcpd6.service leaving the dhcp-server package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "dhcp-server-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_147": {
        "description": "dns services exist",
        "rpm": "bind-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_148": {
        "description": "named.service enabled",
        "cmd": "/bin/systemctl is-enabled named.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_149": {
        "description": "named.service active",
        "cmd": "/bin/systemctl is-active named.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_150": {
        "description": "2.2.4 Ensure dns server services are not in use",
        "info": "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.\n\nUnless a system is specifically designated to act as a DNS server, it is recommended that the package be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop named.service and remove bind package:\n\n# systemctl stop named.service\n# dnf remove bind\n\n-OR-\n\n-IF- the bind package is required as a dependency:\n\nRun the following commands to stop and mask named.service :\n\n# systemctl stop named.service\n# systemctl mask named.service\n\nImpact:\n\nThere may be packages that are dependent on the bind package. If the bind package is removed, these dependent packages will be removed as well. Before removing the bind package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the named.service leaving the bind package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "bind-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_151": {
        "description": "dnsmasq services exist",
        "rpm": "dnsmasq-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_152": {
        "description": "dnsmasq.service active",
        "cmd": "/bin/systemctl is-active dnsmasq.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_153": {
        "description": "dnsmasq.service enabled",
        "cmd": "/bin/systemctl is-enabled dnsmasq.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_154": {
        "description": "2.2.5 Ensure dnsmasq services are not in use",
        "info": "dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.\n\nUnless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop dnsmasq.service and remove dnsmasq package:\n\n# systemctl stop dnsmasq.service\n# dnf remove dnsmasq\n\n-OR-\n\n-IF- the dnsmasq package is required as a dependency:\n\nRun the following commands to stop and mask the dnsmasq.service :\n\n# systemctl stop dnsmasq.service\n# systemctl mask dnsmasq.service\n\nImpact:\n\nThere may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "dnsmasq-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_155": {
        "description": "samba services exist",
        "rpm": "samba-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_156": {
        "description": "smb.service enabled",
        "cmd": "/bin/systemctl is-enabled smb.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_157": {
        "description": "smb.service active",
        "cmd": "/bin/systemctl is-active smb.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_158": {
        "description": "2.2.6 Ensure samba file server services are not in use",
        "info": "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.\n\nIf there is no need to mount directories and file systems to Windows systems, then this package can be removed to reduce the potential attack surface.",
        "solution": "Run the following command to stop smb.service and remove samba package:\n\n# systemctl stop smb.service\n# dnf remove samba\n\n-OR-\n\n-IF- the samba package is required as a dependency:\n\nRun the following commands to stop and mask the smb.service :\n\n# systemctl stop smb.service\n# systemctl mask smb.service\n\nImpact:\n\nThere may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the smb.service leaving the samba package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "samba-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_159": {
        "description": "ftp services exist",
        "rpm": "vsftpd-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_160": {
        "description": "vsftpd.service active",
        "cmd": "/bin/systemctl is-active vsftpd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_161": {
        "description": "vsftpd.service enabled",
        "cmd": "/bin/systemctl is-enabled vsftpd.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_162": {
        "description": "2.2.7 Ensure ftp server services are not in use",
        "info": "FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).\n\nUnless there is a need to run the system as a FTP server, it is recommended that the package be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop vsftpd.service and remove vsftpd package:\n\n# systemctl stop vsftpd.service\n# dnf remove vsftpd\n\n-OR-\n\n-IF- the vsftpd package is required as a dependency:\n\nRun the following commands to stop and mask the vsftpd.service :\n\n# systemctl stop vsftpd.service\n# systemctl mask vsftpd.service\n\nNote: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.\n\nImpact:\n\nThere may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "vsftpd-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_163": {
        "description": "dovecot exist on the system",
        "rpm": "dovecot-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_164": {
        "description": "cyrus-imapd exist on the system",
        "rpm": "cyrus-imapd-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_165": {
        "description": "dovecot.socket dovecot.service cyrus-imapd.service active",
        "cmd": "/bin/systemctl is-active dovecot.socket dovecot.service cyrus-imapd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_166": {
        "description": "dovecot.socket dovecot.service cyrus-imapd.service enabled",
        "cmd": "/bin/systemctl is-enabled dovecot.socket dovecot.service cyrus-imapd.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_167": {
        "description": "cyrus-imapd exist on the system",
        "rpm": "cyrus-imapd-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_168": {
        "description": "dovecot exist on the system",
        "rpm": "dovecot-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_169": {
        "description": "nfs-utils exist",
        "rpm": "nfs-utils-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_170": {
        "description": "nfs-server.service enabled",
        "cmd": "/bin/systemctl is-enabled nfs-server.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_171": {
        "description": "nfs-server.service active",
        "cmd": "/bin/systemctl is-active nfs-server.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_172": {
        "description": "2.2.9 Ensure network file system services are not in use",
        "info": "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.\n\nIf the system does not require access to network shares or the ability to provide network file system services for other host's network shares, it is recommended that the nfs-utils package be removed to reduce the attack surface of the system.",
        "solution": "Run the following command to stop nfs-server.service and remove nfs-utils package:\n\n# systemctl stop nfs-server.service\n# dnf remove nfs-utils\n\n-OR-\n\n-IF- the nfs-utils package is required as a dependency:\n\nRun the following commands to stop and mask the nfs-server.service :\n\n# systemctl stop nfs-server.service\n# systemctl mask nfs-server.service\n\nImpact:\n\nMany of the libvirt packages used by Enterprise Linux virtualization are dependent on the nfs-utils package. If the nfs-utils package is removed, these dependent packages will be removed as well. Before removing the nfs-utils package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask the nfs-server.service leaving the nfs-utils package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "nfs-utils-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_173": {
        "description": "2.3.1 Ensure ftp client is not installed",
        "info": "FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).\n\nFTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.",
        "solution": "Run the following command to remove ftp :\n\n# dnf remove ftp",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "ftp-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_174": {
        "description": "2.3.3 Ensure nis client is not installed",
        "info": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.\n\nThe NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.",
        "solution": "Run the following command to remove the ypbind package:\n\n# dnf remove ypbind\n\nImpact:\n\nMany insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "ypbind-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_175": {
        "description": "2.3.4 Ensure telnet client is not installed",
        "info": "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.\n\nThe telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.",
        "solution": "Run the following command to remove the telnet package:\n\n# dnf remove telnet\n\nImpact:\n\nMany insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "telnet-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_176": {
        "description": "2.3.5 Ensure tftp client is not installed",
        "info": "Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.\n\nTFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files",
        "solution": "Run the following command to remove tftp :\n\n# dnf remove tftp",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "tftp-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_177": {
        "description": "3.1.1 Ensure IPv6 status is identified",
        "info": "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.\n\nFeatures of IPv6\n\n - Hierarchical addressing and routing infrastructure\n - Stateful and Stateless configuration\n - Support for quality of service (QoS)\n - An ideal protocol for neighboring node interaction\n\nIETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.\n\n-IF- dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.\n\nNote: It is recommended that IPv6 be enabled and configured unless this is against local site policy\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Enable or disable IPv6 in accordance with system requirements and local site policy\n\nImpact:\n\nIETF RFC 4038 recommends that applications are built with an assumption of dual stack.\n\nWhen enabled, IPv6 will require additional configuration to reduce risk to the system.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && echo -e \"\\\\n - IPv6 is enabled\\\\n\" || echo -e \"\\\\n - IPv6 is not enabled\\\\n\"",
        "expect": "Manual Review Required"
    },
    "custom_item_178": {
        "description": "3.1.2 Ensure wireless interfaces are disabled",
        "info": "Wireless networking is used when wired networks are unavailable.\n\n-IF- wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.",
        "solution": "Run the following script to disable any wireless interfaces:\n\n#!/usr/bin/env bash\n\n{\n   module_fix()\n   {\n      if ! modprobe -n -v \"$l_mname\" | grep -P -- '^\\h*install \\/bin\\/(true|false)'; then\n         echo -e \" - setting module: \\\\\"$l_mname\\\\\" to be un-loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mname\".conf\n      fi\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \" - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n      if ! grep -Pq -- \"^\\h*blacklist\\h+$l_mname\\b\" /etc/modprobe.d/*; then\n         echo -e \" - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mname\".conf\n      fi\n   }\n   if [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then\n      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)\n      for l_mname in $l_dname; do\n         module_fix\n      done\n   fi\n}\n\nImpact:\n\nMany if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|15.4,CSCv7|15.5,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n  {\n        l_output=\"\" l_output2=\"\"\n   module_chk()\n   {\n      # Check how module will be loaded\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n      # Check is the module currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n      # Check if the module is deny listed\n      if modprobe --showconfig | grep -Pq -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pl -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" /etc/modprobe.d/*)\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   if [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then\n      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)\n      for l_mname in $l_dname; do\n         module_chk\n      done\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  ** PASS **\"\n      if [ -z \"$l_output\" ]; then\n         echo -e \"\n - System has no wireless NICs installed\"\n      else\n         echo -e \"\n$l_output\n\"\n      fi\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n  }",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_179": {
        "description": "bluez",
        "rpm": "bluez-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_180": {
        "description": "3.1.3 Ensure bluetooth services are not in use",
        "info": "Bluetooth is a short-range wireless technology standard that is used for exchanging data between devices over short distances. It employs UHF radio waves in the ISM bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire connections.\n\nAn attacker may be able to find a way to access or corrupt your data. One example of this type of activity is bluesnarfing which refers to attackers using a Bluetooth connection to steal information off of your Bluetooth device. Also, viruses or other malicious code can take advantage of Bluetooth technology to infect other devices. If you are infected, your data may be corrupted, compromised, stolen, or lost.",
        "solution": "Run the following commands to stop bluetooth.service and remove the bluez package:\n\n# systemctl stop bluetooth.service\n# dnf remove bluez\n\n-OR-\n\n-IF- the bluez package is required as a dependency:\n\nRun the following commands to stop and mask bluetooth.service :\n\n# systemctl stop bluetooth.service\n# systemctl mask bluetooth.service\n\nNote: A reboot may be required\n\nImpact:\n\nMany personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.\n\nThere may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "bluez-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_181": {
        "description": "bluetooth.service active",
        "cmd": "/bin/systemctl is-active bluetooth.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_182": {
        "description": "bluetooth.service enabled",
        "cmd": "/bin/systemctl is-enabled bluetooth.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_183": {
        "description": "3.3.1 Ensure ip forwarding is disabled",
        "info": "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.\n\nSetting net.ipv4.ip_forward and net.ipv6.conf.all.forwarding to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.ip_forward = 0\n\nExample:\n\n# printf \"\nnet.ipv4.ip_forward = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.ip_forward=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\n-IF- IPv6 is enabled on the system:\n\nSet the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.forwarding = 0\n\nExample:\n\n# printf \"\nnet.ipv6.conf.all.forwarding = 0\n\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv6.conf.all.forwarding=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten\n\nImpact:\n\nIP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.\n\nMany Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.ip_forward=0\" \"net.ipv6.conf.all.forwarding=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_184": {
        "description": "3.3.10 Ensure tcp syn cookies is enabled",
        "info": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.\n\nAttackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. Setting net.ipv4.tcp_syncookies to 1 enables SYN cookies, allowing the system to keep accepting valid connections, even if under a denial of service attack.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.tcp_syncookies = 1\n\nExample:\n\n# printf \"\nnet.ipv4.tcp_syncookies = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.tcp_syncookies=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.tcp_syncookies=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_185": {
        "description": "3.3.11 Ensure ipv6 router advertisements are not accepted",
        "info": "This setting disables the system's ability to accept IPv6 router advertisements.\n\nIt is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes. Setting net.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra to 0 disables the system's ability to accept IPv6 router advertisements.",
        "solution": "-IF- IPv6 is enabled on the system:\n\nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.accept_ra = 0\n - net.ipv6.conf.default.accept_ra = 0\n\nExample:\n\n# printf \"\nnet.ipv6.conf.all.accept_ra = 0\nnet.ipv6.conf.default.accept_ra = 0\n\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv6.conf.all.accept_ra=0\n   sysctl -w net.ipv6.conf.default.accept_ra=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv6.conf.all.accept_ra=0\" \"net.ipv6.conf.default.accept_ra=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_186": {
        "description": "3.3.2 Ensure packet redirect sending is disabled",
        "info": "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.\n\nAn attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.send_redirects = 0\n - net.ipv4.conf.default.send_redirects = 0\n\nExample:\n\n# printf \"\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.conf.all.send_redirects=0\n   sysctl -w net.ipv4.conf.default.send_redirects=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten\n\nImpact:\n\nIP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.send_redirects=0\" \"net.ipv4.conf.default.send_redirects=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_187": {
        "description": "3.3.3 Ensure bogus icmp responses are ignored",
        "info": "Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.\n\nSome routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.icmp_ignore_bogus_error_responses = 1\n\nExample:\n\n# printf \"\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.icmp_ignore_bogus_error_responses=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_188": {
        "description": "3.3.4 Ensure broadcast icmp requests are ignored",
        "info": "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.\n\nAccepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.icmp_echo_ignore_broadcasts = 1\n\nExample:\n\n# printf \"\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.icmp_echo_ignore_broadcasts=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_189": {
        "description": "3.3.5 Ensure icmp redirects are not accepted",
        "info": "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.\n\nICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects net.ipv4.conf.default.accept_redirects net.ipv6.conf.all.accept_redirects and net.ipv6.conf.default.accept_redirects to 0 the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.accept_redirects = 0\n - net.ipv4.conf.default.accept_redirects = 0\n\nExample:\n\n# printf \"\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.conf.all.accept_redirects=0\n   sysctl -w net.ipv4.conf.default.accept_redirects=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\n-IF- IPv6 is enabled on the system:\n\nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.accept_redirects = 0\n - net.ipv6.conf.default.accept_redirects = 0\n\nExample:\n\n# printf \"\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv6.conf.default.accept_redirects = 0\n\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv6.conf.all.accept_redirects=0\n   sysctl -w net.ipv6.conf.default.accept_redirects=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.accept_redirects=0\" \"net.ipv4.conf.default.accept_redirects=0\" \"net.ipv6.conf.all.accept_redirects=0\" \"net.ipv6.conf.default.accept_redirects=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_190": {
        "description": "3.3.6 Ensure secure icmp redirects are not accepted",
        "info": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.\n\nIt is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects and net.ipv4.conf.default.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.secure_redirects = 0\n - net.ipv4.conf.default.secure_redirects = 0\n\nExample:\n\n# printf \"\nnet.ipv4.conf.all.secure_redirects = 0\nnet.ipv4.conf.default.secure_redirects = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following commands to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.conf.all.secure_redirects=0\n   sysctl -w net.ipv4.conf.default.secure_redirects=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n     l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.secure_redirects=0\" \"net.ipv4.conf.default.secure_redirects=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_191": {
        "description": "3.3.7 Ensure reverse path filtering is enabled",
        "info": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).\n\nSetting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.rp_filter = 1\n - net.ipv4.conf.default.rp_filter = 1\n\nExample:\n\n# printf \"\nnet.ipv4.conf.all.rp_filter = 1\nnet.ipv4.conf.default.rp_filter = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following commands to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.conf.all.rp_filter=1\n   sysctl -w net.ipv4.conf.default.rp_filter=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten\n\nImpact:\n\nIf you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n    l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.rp_filter=1\" \"net.ipv4.conf.default.rp_filter=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_192": {
        "description": "3.3.8 Ensure source routed packets are not accepted",
        "info": "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.\n\nSetting net.ipv4.conf.all.accept_source_route net.ipv4.conf.default.accept_source_route net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.accept_source_route = 0\n - net.ipv4.conf.default.accept_source_route = 0\n\nExample:\n\n# printf \"\nnet.ipv4.conf.all.accept_source_route = 0\nnet.ipv4.conf.default.accept_source_route = 0\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.conf.all.accept_source_route=0\n   sysctl -w net.ipv4.conf.default.accept_source_route=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\n-IF- IPv6 is enabled on the system:\n\nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.accept_source_route = 0\n - net.ipv6.conf.default.accept_source_route = 0\n\nExample:\n\n# printf \"\nnet.ipv6.conf.all.accept_source_route = 0\nnet.ipv6.conf.default.accept_source_route = 0\n\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv6.conf.all.accept_source_route=0\n   sysctl -w net.ipv6.conf.default.accept_source_route=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.accept_source_route=0\" \"net.ipv4.conf.default.accept_source_route=0\" \"net.ipv6.conf.all.accept_source_route=0\" \"net.ipv6.conf.default.accept_source_route=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_193": {
        "description": "3.3.9 Ensure suspicious packets are logged",
        "info": "When enabled, this feature logs packets with un-routable source addresses to the kernel log.\n\nSetting net.ipv4.conf.all.log_martians and net.ipv4.conf.default.log_martians to 1` enables this feature. Logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.log_martians = 1\n - net.ipv4.conf.default.log_martians = 1\n\nExample:\n\n# printf \"\nnet.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.default.log_martians = 1\n\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n# {\n   sysctl -w net.ipv4.conf.all.log_martians=1\n   sysctl -w net.ipv4.conf.default.log_martians=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.log_martians=1\" \"net.ipv4.conf.default.log_martians=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_194": {
        "description": "3.4.1.1 Ensure nftables is installed",
        "info": "nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool.\n\nnftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.\n\nnftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.",
        "solution": "Run the following command to install nftables\n\n# dnf install nftables\n\nImpact:\n\nChanging firewall settings while connected over the network can result in being locked out of the system.",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "nftables-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_195": {
        "description": "3.4.1.2 Ensure a single firewall configuration utility is in use",
        "info": "FirewallD - Is a firewall service daemon that provides a dynamic customizable host-based firewall with a D-Bus interface. Being dynamic, it enables creating, changing, and deleting the rules without the necessity to restart the firewall daemon each time the rules are changed\n\nNFTables - Includes the nft utility for configuration of the nftables subsystem of the Linux kernel\n\nNote: firewalld with nftables backend does not support passing custom nftables rules to firewalld, using the --direct option.\n\nIn order to configure firewall rules for nftables, a firewall utility needs to be installed and active of the system. The use of more than one firewall utility may produce unexpected results.",
        "solution": "Run the following script to ensure that a single firewall utility is in use on the system:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\"\" l_output2=\"\" l_fwd_status=\"\" l_nft_status=\"\" l_fwutil_status=\"\"\n   # Determine FirewallD utility Status\n   rpm -q firewalld > /dev/null 2>&1 && l_fwd_status=\"$(systemctl is-enabled firewalld.service):$(systemctl is-active firewalld.service)\"\n   # Determine NFTables utility Status\n   rpm -q nftables > /dev/null 2>&1 && l_nft_status=\"$(systemctl is-enabled nftables.service):$(systemctl is-active nftables.service)\"\n   l_fwutil_status=\"$l_fwd_status:$l_nft_status\"\n   case $l_fwutil_status in\n      enabled:active:masked:inactive|enabled:active:disabled:inactive)\n         echo -e \"\\n - FirewallD utility is in use, enabled and active\\n - NFTables utility is correctly disabled or masked and inactive\\n - no remediation required\" ;;\n      masked:inactive:enabled:active|disabled:inactive:enabled:active)\n         echo -e \"\\n - NFTables utility is in use, enabled and active\\n - FirewallD utility is correctly disabled or masked and inactive\\n - no remediation required\" ;;\n      enabled:active:enabled:active)\n         echo -e \"\\n - Both FirewallD and NFTables utilities are enabled and active\\n - stopping and masking NFTables utility\"\n         systemctl stop nftables && systemctl --now mask nftables ;;\n      enabled:*:enabled:*)\n         echo -e \"\\n - Both FirewallD and NFTables utilities are enabled\\n - remediating\"\n         if [ \"$(awk -F: '{print $2}' <<< \"$l_fwutil_status\")\" = \"active\" ] && [ \"$(awk -F: '{print $4}' <<< \"$l_fwutil_status\")\" = \"inactive\" ]; then\n            echo \" - masking NFTables utility\"\n            systemctl stop nftables && systemctl --now mask nftables\n         elif [ \"$(awk -F: '{print $4}' <<< \"$l_fwutil_status\")\" = \"active\" ] && [ \"$(awk -F: '{print $2}' <<< \"$l_fwutil_status\")\" = \"inactive\" ]; then\n            echo \" - masking FirewallD utility\"\n            systemctl stop firewalld && systemctl --now mask firewalld\n         fi ;;\n      *:active:*:active)\n         echo -e \"\\n - Both FirewallD and NFTables utilities are active\\n - remediating\"\n         if [ \"$(awk -F: '{print $1}' <<< \"$l_fwutil_status\")\" = \"enabled\" ] && [ \"$(awk -F: '{print $3}' <<< \"$l_fwutil_status\")\" != \"enabled\" ]; then\n            echo \" - stopping and masking NFTables utility\"\n            systemctl stop nftables && systemctl --now mask nftables\n         elif [ \"$(awk -F: '{print $3}' <<< \"$l_fwutil_status\")\" = \"enabled\" ] && [ \"$(awk -F: '{print $1}' <<< \"$l_fwutil_status\")\" != \"enabled\" ]; then\n            echo \" - stopping and masking FirewallD utility\"\n            systemctl stop firewalld && systemctl --now mask firewalld\n         fi ;;\n      :enabled:active)\n         echo -e \"\\n - NFTables utility is in use, enabled, and active\\n - FirewallD package is not installed\\n - no remediation required\" ;;\n      :)\n         echo -e \"\\n - Neither FirewallD or NFTables is installed.\\n - remediating\\n - installing NFTables\"\n         dnf -q install nftables ;;\n      *:*:)\n         echo -e \"\\n - NFTables package is not installed on the system\\n - remediating\\n - installing NFTables\"\n         dnf -q install nftables ;;\n      *)\n         echo -e \"\\n - Unable to determine firewall state\" ;;\n   esac\n}",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_fwd_status=\"\" l_nft_status=\"\" l_fwutil_status=\"\"\n   # Determine FirewallD utility Status\n   rpm -q firewalld > /dev/null 2>&1 && l_fwd_status=\"$(systemctl is-enabled firewalld.service):$(systemctl is-active firewalld.service)\"\n   # Determine NFTables utility Status\n   rpm -q nftables > /dev/null 2>&1 && l_nft_status=\"$(systemctl is-enabled nftables.service):$(systemctl is-active nftables.service)\"\n   l_fwutil_status=\"$l_fwd_status:$l_nft_status\"\n   case $l_fwutil_status in\n      enabled:active:masked:inactive|enabled:active:disabled:inactive)\n         l_output=\"\\\\n - FirewallD utility is in use, enabled and active\\\\n - NFTables utility is correctly disabled or masked and inactive\" ;;\n      masked:inactive:enabled:active|disabled:inactive:enabled:active)\n         l_output=\"\\\\n - NFTables utility is in use, enabled and active\\\\n - FirewallD utility is correctly disabled or masked and inactive\" ;;\n      enabled:active:enabled:active)\n         l_output2=\"\\\\n - Both FirewallD and NFTables utilities are enabled and active\" ;;\n      enabled:*:enabled:*)\n         l_output2=\"\\\\n - Both FirewallD and NFTables utilities are enabled\" ;;\n      *:active:*:active)\n         l_output2=\"\\\\n - Both FirewallD and NFTables utilities are enabled\" ;;\n      :enabled:active)\n         l_output=\"\\\\n - NFTables utility is in use, enabled, and active\\\\n - FirewallD package is not installed\" ;;\n      :)\n         l_output2=\"\\\\n - Neither FirewallD or NFTables is installed.\" ;;\n      *:*:)\n         l_output2=\"\\\\n - NFTables package is not installed on the system\" ;;\n      *)\n         l_output2=\"\\\\n - Unable to determine firewall state\" ;;\n   esac\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Results:\\\\n ** Pass **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Results:\\\\n ** Fail **\\\\n$l_output2\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_196": {
        "description": "hook output",
        "cmd": "/sbin/nft -n list ruleset | /bin/grep 'hook output'",
        "expect": "type[\\\\s]+filter[\\\\s]+hook[\\\\s]+output[\\\\s]*"
    },
    "custom_item_197": {
        "description": "hook input",
        "cmd": "/sbin/nft -n list ruleset | /bin/grep 'hook input'",
        "expect": "type[\\\\s]+filter[\\\\s]+hook[\\\\s]+input[\\\\s]*"
    },
    "custom_item_198": {
        "description": "hook forward",
        "cmd": "/sbin/nft -n list ruleset | /bin/grep 'hook forward'",
        "expect": "type[\\\\s]+filter[\\\\s]+hook[\\\\s]+forward[\\\\s]*"
    },
    "custom_item_199": {
        "description": "3.4.2.2 Ensure host based firewall loopback traffic is configured",
        "info": "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network\n\nLoopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.",
        "solution": "Run the following script to implement the loopback rules:\n\n#!/usr/bin/env bash\n\n{\n   l_hbfw=\"\"\n   if systemctl is-enabled firewalld.service | grep -q 'enabled' && systemctl is-enabled nftables.service | grep -q 'enabled'; then\n      echo -e \"\\n - Error - Both FirewallD and NFTables are enabled\\n - Please follow recommendation: \\\\\"Ensure a single firewall configuration utility is in use\\\\\"\"\n   elif ! systemctl is-enabled firewalld.service | grep -q 'enabled' && ! systemctl is-enabled nftables.service | grep -q 'enabled'; then\n      echo -e \"\\n - Error - Neither FirewallD or NFTables is enabled\\n - Please follow recommendation: \\\\\"Ensure a single firewall configuration utility is in use\\\\\"\"\n   else\n      if systemctl is-enabled firewalld.service | grep -q 'enabled' && ! systemctl is-enabled nftables.service | grep -q 'enabled'; then\n         echo -e \"\\n - FirewallD is in use on the system\" && l_hbfw=\"fwd\"\n      elif ! systemctl is-enabled firewalld.service | grep -q 'enabled' && systemctl is-enabled nftables.service | grep -q 'enabled'; then\n         echo -e \"\\n - NFTables is in use on the system\" && l_hbfw=\"nft\"\n      fi\n      l_ipsaddr=\"$(nft list ruleset | awk '/filter_IN_public_deny|hook\\s+input\\s+/,/\\}\\s*(#.*)?$/' | grep -P -- 'ip\\h+saddr')\"\n      if ! nft list ruleset | awk '/hook\\s+input\\s+/,/\\}\\s*(#.*)?$/' | grep -Pq -- '\\H+\\h+\"lo\"\\h+accept'; then\n         echo -e \"\\n - Enabling input to accept for loopback address\"\n         if [ \"$l_hbfw\" = \"fwd\" ]; then\n            firewall-cmd --permanent --zone=trusted --add-interface=lo\n            firewall-cmd --reload\n         elif [ \"$l_hbfw\" = \"nft\" ]; then\n            nft add rule inet filter input iif lo accept\n         fi\n      fi\n      if ! grep -Pq -- 'ip\\h+saddr\\h+127\\.0\\.0\\.0\\/8\\h+(counter\\h+packets\\h+\\d+\\h+bytes\\h+\\d+\\h+)?drop' <<< \"$l_ipsaddr\" && ! grep -Pq -- 'ip\\h+daddr\\h+\\!\\=\\h+127\\.0\\.0\\.1\\h+ip\\h+saddr\\h+127\\.0\\.0\\.1\\h+drop' <<< \"$l_ipsaddr\"; then\n         echo -e \"\\n - Setting IPv4 network traffic from loopback address to drop\"\n         if [ \"$l_hbfw\" = \"fwd\" ]; then\n            firewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=\"127.0.0.1\" destination not address=\"127.0.0.1\" drop'\n            firewall-cmd --permanent --zone=trusted --add-rich-rule='rule family=ipv4 source address=\"127.0.0.1\" destination not address=\"127.0.0.1\" drop'\n            firewall-cmd --reload\n         elif [ \"$l_hbfw\" = \"nft\" ]; then\n            nft create rule inet filter input ip saddr 127.0.0.0/8 counter drop\n         fi\n      fi\n      if grep -Pq -- '^\\h*0\\h*$' /sys/module/ipv6/parameters/disable; then\n         l_ip6saddr=\"$(nft list ruleset | awk '/filter_IN_public_deny|hook input/,/}/' | grep 'ip6 saddr')\"\n         if ! grep -Pq 'ip6\\h+saddr\\h+::1\\h+(counter\\h+packets\\h+\\d+\\h+bytes\\h+\\d+\\h+)?drop' <<< \"$l_ip6saddr\" && ! grep -Pq -- 'ip6\\h+daddr\\h+\\!=\\h+::1\\h+ip6\\h+saddr\\h+::1\\h+drop' <<< \"$l_ip6saddr\"; then\n            echo -e \"\\n - Setting IPv6 network traffic from loopback address to drop\"\n            if [ \"$l_hbfw\" = \"fwd\" ]; then\n               firewall-cmd --permanent --add-rich-rule='rule family=ipv6 source address=\"::1\" destination not address=\"::1\" drop'\n               firewall-cmd --permanent --zone=trusted --add-rich-rule='rule family=ipv6 source address=\"::1\" destination not address=\"::1\" drop'\n               firewall-cmd --reload\n            elif [ \"$l_hbfw\" = \"nft\" ]; then\n               nft add rule inet filter input ip6 saddr ::1 counter drop\n            fi\n         fi\n      fi\n   fi\n}",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   if nft list ruleset | awk '/hook\\\\s+input\\\\s+/,/\\\\}\\\\s*(#.*)?$/' | grep -Pq -- '\\\\H+\\\\h+\"lo\"\\\\h+accept'; then\n      l_output=\"$l_output\n - Network traffic to the loopback address is correctly set to accept\"\n   else\n      l_output2=\"$l_output2\n - Network traffic to the loopback address is not set to accept\"\n   fi\n   l_ipsaddr=\"$(nft list ruleset | awk '/filter_IN_public_deny|hook\\\\s+input\\\\s+/,/\\\\}\\\\s*(#.*)?$/' | grep -P -- 'ip\\\\h+saddr')\"\n   if grep -Pq -- 'ip\\\\h+saddr\\\\h+127\\\\.0\\\\.0\\\\.0\\\\/8\\\\h+(counter\\\\h+packets\\\\h+\\\\d+\\\\h+bytes\\\\h+\\\\d+\\\\h+)?drop' <<< \"$l_ipsaddr\" || grep -Pq -- 'ip\\\\h+daddr\\\\h+\\\\!\\\\=\\\\h+127\\\\.0\\\\.0\\\\.1\\\\h+ip\\\\h+saddr\\\\h+127\\\\.0\\\\.0\\\\.1\\\\h+drop' <<< \"$l_ipsaddr\"; then\n      l_output=\"$l_output\n - IPv4 network traffic from loopback address correctly set to drop\"\n   else\n      l_output2=\"$l_output2\n - IPv4 network traffic from loopback address not set to drop\"\n   fi\n   if grep -Pq -- '^\\\\h*0\\\\h*$' /sys/module/ipv6/parameters/disable; then\n      l_ip6saddr=\"$(nft list ruleset | awk '/filter_IN_public_deny|hook input/,/}/' | grep 'ip6 saddr')\"\n      if grep -Pq 'ip6\\\\h+saddr\\\\h+::1\\\\h+(counter\\\\h+packets\\\\h+\\\\d+\\\\h+bytes\\\\h+\\\\d+\\\\h+)?drop' <<< \"$l_ip6saddr\" || grep -Pq -- 'ip6\\\\h+daddr\\\\h+\\\\!=\\\\h+::1\\\\h+ip6\\\\h+saddr\\\\h+::1\\\\h+drop' <<< \"$l_ip6saddr\"; then\n         l_output=\"$l_output\n - IPv6 network traffic from loopback address correctly set to drop\"\n      else\n         l_output2=\"$l_output2\n - IPv6 network traffic from loopback address not set to drop\"\n      fi\n   fi\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  *** PASS ***\n$l_output\"\n   else\n      echo -e \"\n- Audit Result:\n  *** FAIL ***\n$l_output2\n\n  - Correctly set:\n$l_output\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_200": {
        "description": "firewalld check - active",
        "cmd": "/bin/systemctl is-active firewalld",
        "expect": "^active$"
    },
    "custom_item_201": {
        "description": "3.4.2.3 Ensure firewalld drops unnecessary services and ports",
        "info": "Services and ports can be accepted or explicitly rejected or dropped by a zone.\n\nFor every zone, you can set a default behavior that handles incoming traffic that is not further specified. Such behavior is defined by setting the target of the zone. There are three options - default, ACCEPT, REJECT, and DROP.\n\n - ACCEPT - you accept all incoming packets except those disabled by a specific rule.\n - REJECT - you disable all incoming packets except those that you have allowed in specific rules and the source machine is informed about the rejection.\n - DROP - you disable all incoming packets except those that you have allowed in specific rules and no information sent to the source machine.\n\nTo reduce the attack surface of a system, all services and ports should be blocked unless required\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If Firewalld is in use on the system:\n\nRun the following command to remove an unnecessary service:\n\n# firewall-cmd --remove-service=Example:\n\n# firewall-cmd --remove-service=cockpit\n\nRun the following command to remove an unnecessary port:\n\n# firewall-cmd --remove-port=/Example:\n\n# firewall-cmd --remove-port=25/tcp\n\nRun the following command to make new settings persistent:\n\n# firewall-cmd --runtime-to-permanent",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/firewall-cmd --list-all --zone=\"$(/bin/firewall-cmd --list-all | /bin/awk '/\\\\(active\\\\)/ { print $1 }')\" | /bin/grep -P -- '^\\\\h*(services:|ports:)'",
        "expect": "^Manual Review Required$"
    },
    "custom_item_202": {
        "description": "check if nftables.service is active",
        "cmd": "/bin/systemctl is-active nftables.service",
        "expect": "^active$"
    },
    "custom_item_203": {
        "description": "nft list ruleset hook input icmp ct state",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | grep 'ct state'",
        "expect": "^[\\\\s]*ip[\\\\s]+protocol[\\\\s]+icmp[\\\\s]+ct[\\\\s]+state[\\\\s]+established[\\\\s]+accept[\\\\s]*$"
    },
    "custom_item_204": {
        "description": "nft list ruleset hook input tcp ct state",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | grep 'ct state'",
        "expect": "^[\\\\s]*ip[\\\\s]+protocol[\\\\s]+tcp[\\\\s]+ct[\\\\s]+state[\\\\s]+established[\\\\s]+accept[\\\\s]*$"
    },
    "custom_item_205": {
        "description": "nft list ruleset hook input udp ct state",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | grep 'ct state'",
        "expect": "^[\\\\s]*ip[\\\\s]+protocol[\\\\s]+udp[\\\\s]+ct[\\\\s]+state[\\\\s]+established[\\\\s]+accept[\\\\s]*$"
    },
    "custom_item_206": {
        "description": "check if nftables.service is active",
        "cmd": "/bin/systemctl is-active nftables.service",
        "expect": "^active$"
    },
    "custom_item_207": {
        "description": "nft list ruleset hook forward drop",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook forward'",
        "expect": "policy[\\\\s]*drop"
    },
    "custom_item_208": {
        "description": "nft list ruleset hook input drop",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook input'",
        "expect": "policy[\\\\s]*drop"
    },
    "custom_item_209": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_210": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_211": {
        "description": "cron daemon is enabled",
        "cmd": "/bin/systemctl is-enabled crond",
        "expect": "^enabled$"
    },
    "custom_item_212": {
        "description": "cron daemon is active",
        "cmd": "/bin/systemctl is-active crond",
        "expect": "^active$"
    },
    "custom_item_213": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_214": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_215": {
        "description": "4.1.1.2 Ensure permissions on /etc/crontab are configured",
        "info": "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.\n\nThis file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.",
        "solution": "Run the following commands to set ownership and permissions on /etc/crontab :\n\n# chown root:root /etc/crontab\n# chmod og-rwx /etc/crontab",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/crontab",
        "owner": "root",
        "mask": "177",
        "group": "root"
    },
    "custom_item_216": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_217": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_218": {
        "description": "4.1.1.3 Ensure permissions on /etc/cron.hourly are configured",
        "info": "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "Run the following commands to set ownership and permissions on the /etc/cron.hourly directory:\n\n# chown root:root /etc/cron.hourly/\n# chmod og-rwx /etc/cron.hourly/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/cron.hourly",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_219": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_220": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_221": {
        "description": "4.1.1.4 Ensure permissions on /etc/cron.daily are configured",
        "info": "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "Run the following commands to set ownership and permissions on the /etc/cron.daily directory:\n\n# chown root:root /etc/cron.daily/\n# chmod og-rwx /etc/cron.daily/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/cron.daily",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_222": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_223": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_224": {
        "description": "4.1.1.5 Ensure permissions on /etc/cron.weekly are configured",
        "info": "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "Run the following commands to set ownership and permissions on the /etc/cron.weekly directory:\n\n# chown root:root /etc/cron.weekly/\n# chmod og-rwx /etc/cron.weekly/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/cron.weekly",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_225": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_226": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_227": {
        "description": "4.1.1.6 Ensure permissions on /etc/cron.monthly are configured",
        "info": "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "Run the following commands to set ownership and permissions on the /etc/cron.monthly directory:\n\n# chown root:root /etc/cron.monthly/\n# chmod og-rwx /etc/cron.monthly/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/cron.monthly",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_228": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_229": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_230": {
        "description": "4.1.1.7 Ensure permissions on /etc/cron.d are configured",
        "info": "The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "Run the following commands to set ownership and permissions on the /etc/cron.d directory:\n\n# chown root:root /etc/cron.d/\n# chmod og-rwx /etc/cron.d/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/cron.d",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_231": {
        "description": "Check if cron is installed",
        "rpm": "cron-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_232": {
        "description": "Check if cronie is installed",
        "rpm": "cronie-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_233": {
        "description": "/etc/cron.deny file permissions",
        "file": "/etc/cron.deny",
        "owner": "root",
        "mask": "7137",
        "group": "root"
    },
    "custom_item_234": {
        "description": "/etc/cron.allow file permissions",
        "file": "/etc/cron.allow",
        "owner": "root",
        "mask": "7137",
        "group": "root"
    },
    "custom_item_235": {
        "description": "at is installed",
        "rpm": "at-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_236": {
        "description": "/etc/at.allow file permissions",
        "file": "/etc/at.allow",
        "owner": "root",
        "mask": "137",
        "group": "root"
    },
    "custom_item_237": {
        "description": "/etc/at.deny file permissions",
        "file": "/etc/at.deny",
        "owner": "root",
        "mask": "137",
        "group": "root"
    },
    "custom_item_238": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_239": {
        "description": "4.2.1 Ensure permissions on /etc/ssh/sshd_config are configured",
        "info": "The file /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory, contain configuration specifications for sshd\n\nconfiguration specifications for sshd need to be protected from unauthorized changes by non-privileged users.",
        "solution": "Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:\n\n#!/usr/bin/env bash\n\n{\n   chmod u-x,og-rwx /etc/ssh/sshd_config\n   chown root:root /etc/ssh/sshd_config\n   while IFS= read -r -d $'\\0' l_file; do\n      if [ -e \"$l_file\" ]; then\n         chmod u-x,og-rwx \"$l_file\"\n         chown root:root \"$l_file\"\n      fi\n   done < <(find /etc/ssh/sshd_config.d -type f -print0)\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   unset a_sshdfiles && a_sshdfiles=()\n   [ -e \"/etc/ssh/sshd_config\" ] && a_sshdfiles+=(\"$(stat -Lc '%n^%#a^%U^%G' \"/etc/ssh/sshd_config\")\")\n   while IFS= read -r -d $'\\\\0' l_file; do\n      [ -e \"$l_file\" ] && a_sshdfiles+=(\"$(stat -Lc '%n^%#a^%U^%G' \"$l_file\")\")\n   done < <(find /etc/ssh/sshd_config.d -type f  \\\\( -perm /077 -o ! -user root -o ! -group root \\\\) -print0)\n   if (( ${#a_sshdfiles[@]} != 0 )); then\n      perm_mask='0177'\n      maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n      while IFS=\"^\" read -r l_file l_mode l_user l_group; do\n         l_out2=\"\"\n         [ $(( $l_mode & $perm_mask )) -gt 0 ] && l_out2=\"$l_out2\\\\n  - Is mode: \\\\\"$l_mode\\\\\" should be: \\\\\"$maxperm\\\\\" or more restrictive\"\n         [ \"$l_user\" != \"root\" ] && l_out2=\"$l_out2\\\\n  - Is owned by \\\\\"$l_user\\\\\" should be owned by \\\\\"root\\\\\"\"\n         [ \"$l_group\" != \"root\" ] && l_out2=\"$l_out2\\\\n  - Is group owned by \\\\\"$l_user\\\\\" should be group owned by \\\\\"root\\\\\"\"\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\\\\n - File: \\\\\"$l_file\\\\\":$l_out2\"\n         else\n            l_output=\"$l_output\\\\n - File: \\\\\"$l_file\\\\\":\\\\n  - Correct: mode ($l_mode), owner ($l_user), and group owner ($l_group) configured\"\n         fi\n      done <<< \"$(printf '%s\\\\n' \"${a_sshdfiles[@]}\")\"\n   fi\n   unset a_sshdfiles\n   # If l_output2 is empty, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  *** PASS ***\\\\n- * Correctly set * :\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \" - * Correctly set * :\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_240": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_241": {
        "description": "config file IgnoreRhosts setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)IgnoreRhosts(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)IgnoreRhosts(?-i)[\\\\s]+\"?no\"?[\\\\s]*$"
    },
    "custom_item_242": {
        "description": "sshd ignorerhosts setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ignorerhosts)\"; done | /bin/awk 'BEGIN {f=0} /IgnoreRhosts/i { if ($NF == \"no\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_243": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_244": {
        "description": "4.2.11 Ensure sshd KexAlgorithms is configured",
        "info": "Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received\n\nNotes:\n\n - Kex algorithms have a higher preference the earlier they appear in the list\n - Some organizations may have stricter requirements for approved Key exchange algorithms\n - Ensure that Key exchange algorithms used are in compliance with site policy\n - The only Key Exchange Algorithms currently FIPS 140-2 approved are:\n - ecdh-sha2-nistp256\n - ecdh-sha2-nistp384\n - ecdh-sha2-nistp521\n - diffie-hellman-group-exchange-sha256\n - diffie-hellman-group16-sha512\n - diffie-hellman-group18-sha512\n - diffie-hellman-group14-sha256\n\nKey exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks",
        "solution": "Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:\n\nExample:\n\nKexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1\n\nNote: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^kexalgorithms)\"; done | /bin/awk 'BEGIN {f=0} /kexalgorithms/i { if ($NF ~ \"(diffie-hellman-group1-sha1|diffie-hellman-group14-sha1|diffie-hellman-group-exchange-sha1)\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_245": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_246": {
        "description": "ssh config files - LoginGraceTime",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "(?i)^\\\\h*LoginGraceTime\\\\h+",
        "expect": "(?i)^\\\\h*LoginGraceTime\\\\h+\"?(0|6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+|[^1]m)\"?\\\\b"
    },
    "custom_item_247": {
        "description": "sshd -T - LoginGraceTime",
        "cmd": "/usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(grep $(hostname) /etc/hosts | awk '{print $1}')\" | grep -i LoginGraceTime | /usr/bin/awk \\'{print} END {if (NR == 0) print \"Configuration not found\"}\\'",
        "expect": "(?i)^logingracetime\\\\h+\"?([1-9]|[1-5][0-9]|60|1m)\"?\\\\b"
    },
    "custom_item_248": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_249": {
        "description": "sshd loglevel setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i loglevel)\"; done | /bin/awk 'BEGIN {f=0} /LogLevel/i { if ($NF !~ /^(INFO|VERBOSE)$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_250": {
        "description": "config file loglevel setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)LogLevel(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)LogLevel(?-i)[\\\\s]+\"?(INFO|VERBOSE)\"?[\\\\s]*$"
    },
    "custom_item_251": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_252": {
        "description": "4.2.14 Ensure sshd MACs are configured",
        "info": "This variable limits the types of MAC algorithms that SSH can use during communication.\n\nNotes:\n\n - Some organizations may have stricter requirements for approved MACs.\n - Ensure that MACs used are in compliance with site policy.\n - The only \"strong\" MACs currently FIPS 140-2 approved are:\n - HMAC-SHA1\n - HMAC-SHA2-256\n - HMAC-SHA2-384\n - HMAC-SHA2-512\n\nMD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information.",
        "solution": "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:\n\nExample:\n\nMACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com\n\nNote:\n\n - First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.\n - The default is handled system-wide by crypto-policies(7). Information about defaults, how to modify the defaults and how to customize existing policies with sub-policies are present in manual page update-crypto-policies(8)",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n{\nports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -Ei '^macs\\\\s')\"; done | /bin/awk 'BEGIN {f=0} /\\\\smacs\\\\s/i { if ($NF ~ \"(hmac-md5|hmac-md5-96|hmac-ripemd160|hmac-sha1-96|umac-64@openssh.com|hmac-md5-etm@openssh.com|hmac-md5-96-etm@openssh.com|hmac-ripemd160-etm@openssh.com|hmac-sha1-96-etm@openssh.com|umac-64-etm@openssh.com)\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n}",
        "expect": "^Pass$"
    },
    "custom_item_253": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_254": {
        "description": "sshd maxauthtries setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^maxauthtries)\"; done | /bin/awk 'BEGIN {f=0} /maxauthtries/i { if ($NF !~ /^[0-4]$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_255": {
        "description": "config file maxauthtries setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)MaxAuthTries(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)MaxAuthTries(?-i)[\\\\s]+\"?([5-9]|[1-9][0-9]+)\"?[\\\\s]*$"
    },
    "custom_item_256": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_257": {
        "description": "config file MaxSessions setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)MaxSessions(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)MaxSessions(?-i)[\\\\s]+\"?(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\"?[\\\\s]*$"
    },
    "custom_item_258": {
        "description": "sshd maxsessions setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^maxsessions)\"; done | /bin/awk 'BEGIN {f=0} /maxsessions/i { if ($NF !~ /^([0-9]|10)$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_259": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_260": {
        "description": "sshd maxstartups setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^maxstartups)\"; done | /bin/awk 'BEGIN {f=0} /maxstartups/i { if ($NF !~ /^([1-9]|10):([1-9]|[12][0-9]|30):([1-9]|[1-5][0-9]|60)$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_261": {
        "description": "config file maxstartups setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)MaxStartups(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)MaxStartups(?-i)[\\\\s]+\"?(((1[1-9]|[1-9][0-9][0-9]+):([0-9]+):([0-9]+))|(([0-9]+):(3[1-9]|[4-9][0-9]|[1-9][0-9][0-9]+):([0-9]+))|(([0-9]+):([0-9]+):(6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+)))\"?[\\\\s]*$"
    },
    "custom_item_262": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_263": {
        "description": "config file permitemptypasswords setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)PermitEmptyPasswords(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)PermitEmptyPasswords(?-i)[\\\\s]+\"?yes\"?[\\\\s]*$"
    },
    "custom_item_264": {
        "description": "sshd permitemptypasswords setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^PermitEmptyPasswords)\"; done | /bin/awk 'BEGIN {f=0} /PermitEmptyPasswords/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_265": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_266": {
        "description": "sshd permitrootlogin setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^permitrootlogin)\"; done | /bin/awk 'BEGIN {f=0} /permitrootlogin/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_267": {
        "description": "config file permitrootlogin setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)PermitRootLogin(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)PermitRootLogin(?-i)[\\\\s]+\"?no\"?[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_268": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_269": {
        "description": "4.2.2 Ensure permissions on SSH private host key files are configured",
        "info": "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.\n\nIf an unauthorized user obtains the private SSH host key file, the host could be impersonated",
        "solution": "Run the following script to set mode, ownership, and group on the private SSH host key files:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_skgn=\"$(grep -Po -- '^(ssh_keys|_?ssh)\\b' /etc/group)\" # Group designated to own openSSH keys\n   l_skgid=\"$(awk -F: '($1 == \"'\"$l_skgn\"'\"){print $3}' /etc/group)\" # Get gid of group\n   if [ -n \"$l_skgid\" ]; then\n      l_agroup=\"(root|$l_skgn)\" && l_sgroup=\"$l_skgn\" && l_mfix=\"u-x,g-wx,o-rwx\"\n   else\n      l_agroup=\"root\" && l_sgroup=\"root\" && l_mfix=\"u-x,go-rwx\"\n   fi\n   unset a_skarr && a_skarr=() # Clear and initialize array\n   if [ -d /etc/ssh ]; then\n      while IFS= read -r -d $'\\0' l_file; do # Loop to populate array\n         if grep -Pq ':\\h+OpenSSH\\h+private\\h+key\\b' <<< \"$(file \"$l_file\")\"; then\n            a_skarr+=(\"$(stat -Lc '%n^%#a^%U^%G^%g' \"$l_file\")\")\n         fi\n      done < <(find -L /etc/ssh -xdev -type f -print0)\n      while IFS=\"^\" read -r l_file l_mode l_owner l_group l_gid; do\n         l_out2=\"\"\n         [ \"$l_gid\" = \"$l_skgid\" ] && l_pmask=\"0137\" || l_pmask=\"0177\"\n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n         if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\\n - Mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\\n - Revoking excess permissions\"\n            chmod \"$l_mfix\" \"$l_file\"\n         fi\n         if [ \"$l_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\\n - Owned by: \\\\\"$l_owner\\\\\" should be owned by \\\\\"root\\\\\"\\n - Changing ownership to \\\\\"root\\\\\"\"\n            chown root \"$l_file\"\n         fi\n         if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n            l_out2=\"$l_out2\\n - Owned by group \\\\\"$l_group\\\\\" should be group owned by: \\\\\"${l_agroup//|/ or }\\\\\"\\n - Changing group ownership to \\\\\"$l_sgroup\\\\\"\"\n            chgrp \"$l_sgroup\" \"$l_file\"\n         fi\n         [ -n \"$l_out2\" ] && l_output2=\"$l_output2\\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n      done <<< \"$(printf '%s\\n' \"${a_skarr[@]}\")\"\n   else\n      l_output=\" - openSSH keys not found on the system\"\n   fi\n   unset a_skarr\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\n- No access changes required\\n\"\n   else\n      echo -e \"\\n- Remediation results:\\n$l_output2\\n\"\n   fi\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_skgn=\"$(grep -Po -- '^(ssh_keys|_?ssh)\\\\b' /etc/group)\" # Group designated to own openSSH keys\n   l_skgid=\"$(awk -F: '($1 == \"'\"$l_skgn\"'\"){print $3}' /etc/group)\" # Get gid of group\n   [ -n \"$l_skgid\" ] && l_agroup=\"(root|$l_skgn)\" || l_agroup=\"root\"\n   unset a_skarr && a_skarr=() # Clear and initialize array\n   if [ -d /etc/ssh ]; then\n      while IFS= read -r -d $'\\\\0' l_file; do # Loop to populate array\n         if grep -Pq ':\\\\h+OpenSSH\\\\h+private\\\\h+key\\\\b' <<< \"$(file \"$l_file\")\"; then\n            a_skarr+=(\"$(stat -Lc '%n^%#a^%U^%G^%g' \"$l_file\")\")\n         fi\n      done < <(find -L /etc/ssh -xdev -type f -print0)\n      while IFS=\"^\" read -r l_file l_mode l_owner l_group l_gid; do\n         l_out2=\"\"\n         [ \"$l_gid\" = \"$l_skgid\" ] && l_pmask=\"0137\" || l_pmask=\"0177\"\n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n         if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\\\\n  - Mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n         fi\n         if [ \"$l_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\\\\n  - Owned by: \\\\\"$l_owner\\\\\" should be owned by \\\\\"root\\\\\"\"\n         fi\n         if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n            l_out2=\"$l_out2\\\\n  - Owned by group \\\\\"$l_group\\\\\" should be group owned by: \\\\\"${l_agroup//|/ or }\\\\\"\"\n         fi\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\\\\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n         else\n            l_output=\"$l_output\\\\n - File: \\\\\"$l_file\\\\\"\\\\n  - Correct: mode ($l_mode), owner ($l_owner), and group owner ($l_group) configured\"\n         fi\n      done <<< \"$(printf '%s\\\\n' \"${a_skarr[@]}\")\"\n   else\n      l_output=\"  - openSSH keys not found on the system\"\n   fi\n   unset a_skarr\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  *** PASS ***\\\\n- * Correctly set * :\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \" - * Correctly set * :\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_270": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_271": {
        "description": "config file permitemptypasswords setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)PermitEmptyPasswords(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)PermitEmptyPasswords(?-i)[\\\\s]+\"?yes\"?[\\\\s]*$"
    },
    "custom_item_272": {
        "description": "sshd permitemptypasswords setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^PermitEmptyPasswords)\"; done | /bin/awk 'BEGIN {f=0} /PermitEmptyPasswords/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_273": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_274": {
        "description": "config file UsePAM setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)UsePAM(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)UsePAM(?-i)[\\\\s]+\"?no\"?[\\\\s]*$"
    },
    "custom_item_275": {
        "description": "sshd usepam setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^usepam)\"; done | /bin/awk 'BEGIN {f=0} /usepam/i { if ($NF == \"no\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_276": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_277": {
        "description": "4.2.22 Ensure sshd crypto_policy is not set",
        "info": "System-wide Crypto policy can be over-ridden or opted out of for openSSH\n\nOver-riding or opting out of the system-wide crypto policy could allow for the use of less secure Ciphers, MACs, KexAlgorithms and GSSAPIKexAlgorithm\n\nNote: If changes to the system-wide crypto policy are required to meet local site policy for the openSSH server, these changes should be done with a sub-policy assigned to the system-wide crypto policy. For additional information see the CRYPTO-POLICIES(7) man page",
        "solution": "Run the following commands:\n\n# sed -ri \"s/^\\s*(CRYPTO_POLICY\\s*=.*)$/# \\1/\" /etc/sysconfig/sshd\n\n# systemctl reload sshd",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/sysconfig/sshd",
        "regex": "(?i)^[\\\\s]*CRYPTO_POLICY[\\\\s]*=",
        "expect": "(?i)^[\\\\s]*CRYPTO_POLICY[\\\\s]*=[\\\\s]*.+$"
    },
    "custom_item_278": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_279": {
        "description": "4.2.3 Ensure permissions on SSH public host key files are configured",
        "info": "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.\n\nIf a public host key file is modified by an unauthorized user, the SSH service may be compromised.",
        "solution": "Run the following script to set mode, ownership, and group on the public SSH host key files:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_skgn=\"$(grep -Po -- '^(ssh_keys|_?ssh)\\b' /etc/group)\" # Group designated to own openSSH keys\n   l_skgid=\"$(awk -F: '($1 == \"'\"$l_skgn\"'\"){print $3}' /etc/group)\" # Get gid of group\n   l_mfix=\"u-x,go-wx\"\n   unset a_skarr && a_skarr=() # Clear and initialize array\n   if [ -d /etc/ssh ]; then\n      while IFS= read -r -d $'\\0' l_file; do # Loop to populate array\n         if grep -Pq ':\\h+OpenSSH\\h+(\\H+\\h+)public\\h+key\\b' <<< \"$(file \"$l_file\")\"; then\n            a_skarr+=(\"$(stat -Lc '%n^%#a^%U^%G^%g' \"$l_file\")\")\n         fi\n      done < <(find -L /etc/ssh -xdev -type f -print0)\n      while IFS=\"^\" read -r l_file l_mode l_owner l_group l_gid; do\n         l_out2=\"\"\n         l_pmask=\"0133\"\n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n         if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\\n - Mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\\n - Revoking excess permissions\"\n            chmod \"$l_mfix\" \"$l_file\"\n         fi\n         if [ \"$l_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\\n - Owned by: \\\\\"$l_owner\\\\\" should be owned by \\\\\"root\\\\\"\\n - Changing ownership to \\\\\"root\\\\\"\"\n            chown root \"$l_file\"\n         fi\n         if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n            l_out2=\"$l_out2\\n - Owned by group \\\\\"$l_group\\\\\" should be group owned by: \\\\\"${l_agroup//|/ or }\\\\\"\\n - Changing group ownership to \\\\\"$l_sgroup\\\\\"\"\n            chgrp \"$l_sgroup\" \"$l_file\"\n         fi\n         [ -n \"$l_out2\" ] && l_output2=\"$l_output2\\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n      done <<< \"$(printf '%s\\n' \"${a_skarr[@]}\")\"\n   else\n      l_output=\" - openSSH keys not found on the system\"\n   fi\n   unset a_skarr\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\n- No access changes required\\n\"\n   else\n      echo -e \"\\n- Remediation results:\\n$l_output2\\n\"\n   fi\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_skgn=\"$(grep -Po -- '^(ssh_keys|_?ssh)\\\\b' /etc/group)\" # Group designated to own openSSH public keys\n   l_skgid=\"$(awk -F: '($1 == \"'\"$l_skgn\"'\"){print $3}' /etc/group)\" # Get gid of group\n   [ -n \"$l_skgid\" ] && l_agroup=\"(root|$l_skgn)\" || l_agroup=\"root\"\n   unset a_skarr && a_skarr=() # Clear and initialize array\n   if [ -d /etc/ssh ]; then\n      while IFS= read -r -d $'\\\\0' l_file; do # Loop to populate array\n         if grep -Pq ':\\\\h+OpenSSH\\\\h+(\\\\H+\\\\h+)public\\\\h+key\\\\b' <<< \"$(file \"$l_file\")\"; then\n            a_skarr+=(\"$(stat -Lc '%n^%#a^%U^%G^%g' \"$l_file\")\")\n         fi\n      done < <(find -L /etc/ssh -xdev -type f -print0)\n      while IFS=\"^\" read -r l_file l_mode l_owner l_group l_gid; do\n      echo \"File: \\\\\"$l_file\\\\\" Mode: \\\\\"$l_mode\\\\\" Owner: \\\\\"$l_owner\\\\\" Group: \\\\\"$l_group\\\\\" GID: \\\\\"$l_gid\\\\\"\"\n         l_out2=\"\"\n         l_pmask=\"0133\"\n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n         if [ $(( $l_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\n  - Mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n         fi\n         if [ \"$l_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\n  - Owned by: \\\\\"$l_owner\\\\\" should be owned by \\\\\"root\\\\\"\"\n         fi\n         if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n            l_out2=\"$l_out2\n  - Owned by group \\\\\"$l_group\\\\\" should be group owned by: \\\\\"${l_agroup//|/ or }\\\\\"\"\n         fi\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n         else\n            l_output=\"$l_output\n - File: \\\\\"$l_file\\\\\"\n  - Correct: mode ($l_mode), owner ($l_owner), and group owner ($l_group) configured\"\n         fi\n      done <<< \"$(printf '%s\n' \"${a_skarr[@]}\")\"\n   else\n      l_output=\"  - openSSH keys not found on the system\"\n   fi\n   unset a_skarr\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  *** PASS ***\n- * Correctly set * :\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \" - * Correctly set * :\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_280": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_281": {
        "description": "Config file exist and is configured correctly",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)(Allow|Deny)(Users|Groups)(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)(Allow|Deny)(Users|Groups)(?-i)[\\\\s]",
        "min_occurrences": "1"
    },
    "custom_item_282": {
        "description": "sshd access is configured",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -Pi '^\\\\h*(allow|deny)(users|groups)\\\\h+\\\\H+(\\\\h+.*)?$')\"; done | /bin/awk 'BEGIN {f=0} /(allow|deny)(users|groups)/i { if ($NF ~ \":\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_283": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_284": {
        "description": "4.2.5 Ensure sshd Banner is configured",
        "info": "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.\n\nBanners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.",
        "solution": "Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows:\n\nBanner /etc/issue.net\n\nNote: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^banner)\"; done | /bin/awk 'BEGIN {f=0} /banner/i { if ($NF != \"/etc/issue.net\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_285": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_286": {
        "description": "4.2.6 Ensure sshd Ciphers are configured",
        "info": "This variable limits the ciphers that SSH can use during communication.\n\nNote:\n\n - Some organizations may have stricter requirements for approved ciphers.\n - Ensure that ciphers used are in compliance with site policy.\n - The only \"strong\" ciphers currently FIPS 140-2 compliant are:\n - aes256-ctr\n - aes192-ctr\n - aes128-ctr\n\nWeak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.\n\n - The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a \"Sweet32\" attack.\n - Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors.",
        "solution": "Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:\n\nExample:\n\nCiphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se\n\nNote: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /usr/sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"(3des-cbc|aes128-cbc|aes192-cbc|aes256-cbc|rijndael-cbc@lysator.liu.se)\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_287": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_288": {
        "description": "ClientAliveCountMax is greater than 0",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^clientalivecountmax)\"; done | /bin/awk 'BEGIN {f=0} /clientalivecountmax/i { if ($NF !~ /^[1-9][0-9]*$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_289": {
        "description": "ClientAliveInterval is greater than 0",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^clientaliveinterval)\"; done | /bin/awk 'BEGIN {f=0} /clientaliveinterval/i { if ($NF !~ /^[1-9][0-9]*$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_290": {
        "description": "ClientAliveCountMax configuration does not equal 0",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^\\\\h*ClientAliveCountMax\\\\h+\"?0\\\\b",
        "expect": "^\\\\h*ClientAliveCountMax\\\\h+\"?0\\\\b"
    },
    "custom_item_291": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_292": {
        "description": "sshd hostbasedauthentication setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^hostbasedauthentication)\"; done | /bin/awk 'BEGIN {f=0} /HostbasedAuthentication/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_293": {
        "description": "config file HostbasedAuthentication setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)HostbasedAuthentication(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)HostbasedAuthentication(?-i)[\\\\s]+\"?yes\"?[\\\\s]*$"
    },
    "custom_item_294": {
        "description": "4.3.1 Ensure sudo is installed",
        "info": "sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.\n\nsudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d\n\nThe security policy determines what privileges, if any, a user has to run sudo The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.",
        "solution": "Run the following command to install sudo\n\n# dnf install sudo",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "sudo-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_295": {
        "description": "4.3.2 Ensure sudo commands use pty",
        "info": "sudo can be configured to run only from a pseudo terminal ( pseudo-pty ).\n\nAttackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.",
        "solution": "Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f <\n\nPATH_TO_FILE\n\n> and add the following line:\n\nDefaults use_pty\n\nNote:\n\n - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.\n - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second\n - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second\n - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.\n\nImpact:\n\nWARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/grep -s -P '^[\\\\s]*Defaults[\\\\s]+(\\[^#]+,[\\\\s]*)?use_pty' /etc/sudoers /etc/sudoers.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_296": {
        "description": "4.3.3 Ensure sudo log file exists",
        "info": "The Defaults logfile entry sets the path to the sudo log file. Setting a path turns on logging to a file; negating this option turns it off. By default, sudo logs via syslog.\n\nDefining a dedicated log file for sudo simplifies auditing of sudo commands and creation of auditd rules for sudo.",
        "solution": "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -fand add the following line:\n\nDefaults logfile=\"\"\n\nExample\n\nDefaults logfile=\"/var/log/sudo.log\"\n\nNote:\n\n - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.\n - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second\n - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second\n - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.\n\nImpact:\n\nWARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.\n\nCreation of additional log files can cause disk space exhaustion if not correctly managed. You should configure logrotate to manage the sudo log in accordance with your local policy.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/sudoers /etc/sudoers.d/*",
        "regex": "(?i)^\\\\h*Defaults\\\\h+([^#]+,\\\\h*)?logfile\\\\h*=\\\\h*(\\\\\"|\\\\')?\\\\H+(\\\\\"|\\\\')?(,\\\\h*\\\\H+\\\\h*)*\\\\h*(#.*)?$",
        "expect": "(?i)^\\\\h*Defaults\\\\h+([^#]+,\\\\h*)?logfile\\\\h*=\\\\h*(\\\\\"|\\\\')?\\\\H+(\\\\\"|\\\\')?(,\\\\h*\\\\H+\\\\h*)*\\\\h*(#.*)?$",
        "min_occurrences": "1"
    },
    "custom_item_297": {
        "description": "4.3.5 Ensure re-authentication for privilege escalation is not disabled globally",
        "info": "The operating system must be configured so that users must re-authenticate for privilege escalation.\n\nWithout re-authentication, users may access resources or perform tasks for which they do not have authorization.\n\nWhen operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.",
        "solution": "Configure the operating system to require users to reauthenticate for privilege escalation.\n\nBased on the outcome of the audit procedure, use visudo -fto edit the relevant sudoers file.\n\nRemove any occurrences of !authenticate tags in the file(s).",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/sudoers /etc/sudoers.d/*",
        "regex": "^[^#].*\\!authenticate",
        "expect": "^[^#].*\\!authenticate"
    },
    "custom_item_298": {
        "description": "sudo timeout",
        "cmd": "/bin/sudo -V | /bin/grep 'Authentication timestamp timeout:'",
        "expect": "Authentication timestamp timeout:[\\\\s]*([1-9]|1[0-5])\\\\."
    },
    "custom_item_299": {
        "description": "On disk timestamp_timeout",
        "file": "/etc/sudoers /etc/sudoers.d/*",
        "regex": "(?i)^\\\\h*defaults\\\\h+(?:[^#\\\\n\\\\r]+\\\\h*,\\\\h*)?timestamp_timeout=(-1|1[6-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\\\\b(\\\\h*,\\\\h*.*)?$",
        "expect": "(?i)^\\\\h*defaults\\\\h+(?:[^#\\\\n\\\\r]+\\\\h*,\\\\h*)?timestamp_timeout=(-1|1[6-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\\\\b(\\\\h*,\\\\h*.*)?$",
        "min_occurrences": "1"
    },
    "custom_item_300": {
        "description": "4.3.7 Ensure access to the su command is restricted",
        "info": "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su the su command will only allow users in a specific groups to execute su This group should be empty to reinforce the use of sudo for privileged access.\n\nRestricting the use of su and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo whereas su can only record that a user executed the su program.",
        "solution": "Create an empty group that will be specified for use of the su command. The group should be named according to site policy.\n\nExample:\n\n# groupadd sugroup\n\nAdd the following line to the /etc/pam.d/su file, specifying the empty group:\n\nauth required pam_wheel.so use_uid group=sugroup",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "sugroup=$(/bin/grep -Pi '^\\\\h*auth\\\\h+(?:required|requisite)\\\\h+pam_wheel\\\\.so\\\\h+(?:[^#\\\\n\\\\r]+\\\\h+)?((?!\\\\2)(use_uid\\\\b|group=\\\\H+\\\\b))\\\\h+(?:[^#\\\\n\\\\r]+\\\\h+)?((?!\\\\1)(use_uid\\\\b|group=\\\\H+\\\\b))(\\\\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = \"=\"} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = \":\" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print \"pass - group empty\"; else print \"fail - group not empty\"}'; else echo \"fail - sugroup not found in /etc/pam.d/su\"; fi",
        "expect": "pass - group empty"
    },
    "custom_item_301": {
        "description": "4.4.1.1 Ensure latest version of pam is installed",
        "info": "Updated versions of PAM include additional functionality\n\nTo ensure the system has full functionality and access to the options covered by this Benchmark, pam-1.3.1-25 or latter is required",
        "solution": "- IF - the version of PAM on the system is less that version pam-1.3.1-25 :\n\nRun the following command to update to the latest version of PAM :\n\n# dnf upgrade pam",
        "reference": "800-171|3.5.1,800-53|IA-2(11),800-53r5|IA-2(6),CN-L3|8.1.4.1(d),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(100),LEVEL|1A,NESA|T5.4.2,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,PCI-DSSv3.2.1|8.3,PCI-DSSv3.2.1|8.3.1,PCI-DSSv3.2.1|8.3.2,PCI-DSSv4.0|8.4.1,PCI-DSSv4.0|8.4.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "pam-1.3.1-25",
        "operator": "gte"
    },
    "custom_item_302": {
        "description": "4.4.1.2 Ensure latest version of authselect is installed",
        "info": "Authselect is a utility that simplifies the configuration of user authentication. Authselect offers ready-made profiles that can be universally used with all modern identity management systems\n\nYou can create and deploy a custom profile by customizing one of the default profiles, the sssd, winbind, or the nis profile. This is particularly useful if Modifying a ready-made authselect profile is not enough for your needs. When you deploy a custom profile, the profile is applied to every user logging into the given host. This would be the recommended method, so that the existing profiles can remain unmodified.\n\nUpdated versions of authselect include additional functionality\n\nAuthselect makes testing and troubleshooting easy because it only modifies files in these directories:\n\n - /etc/nsswitch.conf\n - /etc/pam.d/*\n - /etc/dconf/db/distro.d/*\n\nTo ensure the system has full functionality and access to the options covered by this Benchmark, authselect-1.2.6-1 or latter is required",
        "solution": "Run the following command to install authselect :\n\n# dnf install authselect\n\n- IF - the version of authselect on the system is less that version authselect-1.2.6-1 :\n\nRun the following command to update to the latest version of authselect :\n\n# dnf upgrade authselect\n\nImpact:\n\nIf local site customizations have been made to an authselect default or custom profile created with the --symlink-pam option, these customizations may be over-written by updating authselect.\n\nWARNING:\n\nDo not use authselect if:\n\n - your host is part of Linux Identity Management. Joining your host to an IdM domain with the ipa-client-install command automatically configures SSSD authentication on your host.\n - Your host is part of Active Directory via SSSD. Calling the realm join command to join your host to an Active Directory domain automatically configures SSSD authentication on your host.\n\nIt is not recommended to change the authselect profiles configured by ipa-client-install or realm join. If you need to modify them, display the current settings before making any modifications, so you can revert back to them if necessary",
        "reference": "800-171|3.1.8,800-53|AC-7a.,800-53r5|AC-7a.,CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-7a.,LEVEL|1A,NESA|T5.5.1,NIAv2|AM24,PCI-DSSv3.2.1|8.1.6,PCI-DSSv4.0|8.3.4,TBA-FIISB|45.1.2,TBA-FIISB|45.2.1,TBA-FIISB|45.2.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "authselect-1.2.6-1",
        "operator": "gte"
    },
    "custom_item_303": {
        "description": "4.4.2.1 Ensure active authselect profile includes pam modules",
        "info": "A custom profile can be created by copying and customizing one of the default profiles. The default profiles include: sssd, winbind, or the nis. This profile can then be customized to follow site specific requirements.\n\nYou can select a profile for the authselect utility for a specific host. The profile will be applied to every user logging into the host.\n\nA custom profile is required to customize many of the pam options.\n\nModifications made to a default profile may be overwritten during an update.\n\nWhen you deploy a profile, the profile is applied to every user logging into the given host",
        "solution": "Perform the following to create a custom authselect profile, with the modules covered in this Benchmark correctly included in the custom profile template files\n\nRun the following command to create a custom authselect profile:\n\n# authselect create-profileExample:\n\n# authselect create-profile custom-profile -b sssd\n\nRun the following command to select a custom authselect profile:\n\n# authselect select custom/{with-} {--force}\n\nExample:\n\n# authselect select custom/custom-profile --backup=PAM_CONFIG_BACKUP --force\n\nNote:\n\n - The PAM and authselect packages must be versions pam-1.3.1-25 and authselect-1.2.6-1 or newer\n - The example is based on a custom profile built (copied) from the the SSSD default authselect profile.\n - The example does not include the symlink option for the PAM or Metadata files. This is due to the fact that by linking the PAM files future updates to authselect may overwrite local site customizations to the custom profile\n - The --backup=PAM_CONFIG_BACKUP option will create a backup of the current config. The backup will be stored at /var/lib/authselect/backups/PAM_CONFIG_BACKUP\n - The --force option will force the overwrite of the existing files and automatically backup system files before writing any change unless the --nobackup option is set.\n - On a new system where authselect has not been configured. In this case, the --force option will force the selected authselect profile to be active and overwrite the existing files with files generated from the selected authselect profile's templates\n - On an existing system with a custom configuration. The --force option may be used, but ensure that you note the backup location included as your custom files will be overwritten. This will allow you to review the changes and add any necessary customizations to the template files for the authselect profile. After updating the templates, run the command authselect apply-changes to add these custom entries to the files in /etc/pam.d/\n\n- IF - you receive an error ending with a message similar to:\n\n[error] Refusing to activate profile unless those changes are removed or overwrite is requested.\nSome unexpected changes to the configuration were detected. Use 'select' command instead.\n\nThis error is caused when the previous configuration was not created by authselect but by other tool or by manual changes and the --force option will be required to enable the authselect profile.\n\nImpact:\n\nIf local site customizations have been made to the authselect template or files in /etc/pam.d these custom entries should be added to the newly created custom profile before it's applied to the system. Please note that the order within the pam stacks is important when adding these entries. Specifically for the password stack, the use_authtok option is important, and should appear on all modules except for the first entry.\n\nExample:\n\npassword requisite pam_pwquality.so local_users_only #<-- Top of password stack, doesn't include use_authtok\n  password required pam_pwhistory.so use_authtok #<-- subsequent entry in password stack, includes use_authtok",
        "reference": "800-171|3.11.2,800-171|3.11.3,800-171|3.12.2,800-53|CA-5,800-53|RA-1,800-53|RA-5,800-53r5|CA-5,800-53r5|RA-1,800-53r5|RA-5,CSCv7|16.7,CSCv8|16.2,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.GV-1,CSF|ID.GV-3,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|CA-5,ITSG-33|RA-1,ITSG-33|RA-5,LEVEL|1A,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.7.1,NIAv2|NS9,PCI-DSSv3.2.1|6.1,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.7",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n           l_output=\"\" l_output2=\"\"\nl_pam_profile=\"$(head -1 /etc/authselect/authselect.conf)\"\nif grep -Pq -- '^custom\\\\/' <<< \"$l_pam_profile\"; then\n   l_pam_profile_path=\"/etc/authselect/$l_pam_profile\"\nelse\n   l_pam_profile_path=\"/usr/share/authselect/default/$l_pam_profile\"\nfi\n\npam_faillock_chk()\n{\n   l_out2=\"\"\n   if ! grep -Pq -- '^\\\\h*auth\\\\h+(required|requisite)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?preauth\\\\b' \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - auth stack \\\\\"pam_faillock.so with preauth\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if ! grep -Pq -- '^\\\\h*auth\\\\h+(required|requisite)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?authfail\\\\b' \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - auth stack \\\\\"pam_faillock.so with authfail\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if ! grep -Pq -- '^\\\\h*account\\\\h+(required|requisite)\\\\h+pam_faillock\\\\.so\\\\b' \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - account stack \\\\\"pam_faillock.so\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if [ -z \"$l_out2\" ]; then\n      l_output=\"$l_output\\\\n  - \\\\\"pam_faillock\\\\\" is correctly listed in: \\\\\"$l_authselect_file\\\\\"\"\n   else\n      l_output2=\"$l_output2\\\\n$l_out2\"\n   fi\n}\npam_unix_chk()\n{\n   l_out2=\"\"\n   if ! grep -Pq -- '^\\\\h*auth\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b' \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - auth stack \\\\\"pam_unix.so\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if ! grep -Pq -- '^\\\\h*account\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b' \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - account stack \\\\\"pam_unix.so\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if ! grep -Pq -- '^\\\\h*password\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b' \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - password stack \\\\\"pam_unix.so\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if ! grep -Pq -- '^\\\\h*session\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b' \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - session stack \\\\\"pam_unix.so\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if [ -z \"$l_out2\" ]; then\n      l_output=\"$l_output\\\\n  - \\\\\"pam_unix\\\\\" is correctly listed in: \\\\\"$l_authselect_file\\\\\"\"\n   else\n      l_output2=\"$l_output2\\\\n$l_out2\"\n   fi\n}\npam_module_chk()\n{\n   l_out2=\"\"\n   if ! grep -Pq -- \"^\\\\h*password\\\\h+(required|requisite)\\\\h+$l_pam_module\\\\.so\\\\b\" \"$l_authselect_file\"; then\n      l_out2=\"$l_out2\\\\n  - password stack \\\\\"$l_pam_module.so\\\\\" line missing in: \\\\\"$l_authselect_file\\\\\"\"\n   fi\n   if [ -z \"$l_out2\" ]; then\n      l_output=\"$l_output\\\\n  - \\\\\"$l_pam_module\\\\\" is correctly listed in: \\\\\"$l_authselect_file\\\\\"\"\n   else\n      l_output2=\"$l_output2\\\\n$l_out2\"\n   fi\n}\nfor l_authselect_file in \"$l_pam_profile_path/password-auth\" \"$l_pam_profile_path/system-auth\"; do\n   pam_faillock_chk\n   pam_unix_chk\n   l_pam_module=\"pam_pwquality\"\n   pam_module_chk\n   l_pam_module=\"pam_pwhistory\"\n   pam_module_chk\ndone #<<< \"$l_pam_profile_path/{password,system}-auth\"\n\n# Output results\nif [ -z \"$l_output2\" ]; then\n\techo -e \"\\\\n- Audit Result:\\\\n  *** PASS ***\\\\n- * Correctly set * :\\\\n$l_output\\\\n\"\nelse\n\techo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\\\\n\"\n\t[ -n \"$l_output\" ] && echo -e \" - * Correctly set * :\\\\n$l_output\\\\n\"\nfi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_304": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches pattern ^\\h*auth\\h+(required|requisite)\\h+([^#",
        "file": "/etc/pam.d/system-auth",
        "regex": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?preauth\\\\b",
        "expect": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?preauth\\\\b"
    },
    "custom_item_305": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches pattern ^\\h*auth\\h+(required|requisite)\\h+([^#",
        "file": "/etc/pam.d/system-auth",
        "regex": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?authfail\\\\b",
        "expect": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?authfail\\\\b"
    },
    "custom_item_306": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches pattern ^\\h*auth\\h+(required|requisite)\\h+([^#",
        "file": "/etc/pam.d/password-auth",
        "regex": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?preauth\\\\b",
        "expect": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?preauth\\\\b"
    },
    "custom_item_307": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches pattern ^\\h*auth\\h+(required|requisite)\\h+([^#",
        "file": "/etc/pam.d/password-auth",
        "regex": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?authfail\\\\b",
        "expect": "^\\\\h*auth\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\h+([^#\\\\r\\\\n]+\\\\h+)?authfail\\\\b"
    },
    "custom_item_308": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches pattern ^\\h*auth\\h+(required|requisite)\\h+([^#",
        "file": "/etc/pam.d/system-auth",
        "regex": "^\\\\h*account\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\b",
        "expect": "^\\\\h*account\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\b"
    },
    "custom_item_309": {
        "description": "D: Ensure at least one file named /etc/pam.d/password-auth exists and matches pattern ^\\h*account\\h+(required|requisite)\\h+([^#\\r\\n]+\\h+)?pam_faillock\\.so\\b",
        "file": "/etc/pam.d/password-auth",
        "regex": "^\\\\h*account\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\b",
        "expect": "^\\\\h*account\\\\h+(required|requisite)\\\\h+([^#\\\\r\\\\n]+\\\\h+)?pam_faillock\\\\.so\\\\b"
    },
    "custom_item_310": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches pattern ^\\h*auth\\h+(required|requisite)\\h+([^#",
        "file": "/etc/pam.d/system-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwquality\\\\.so\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwquality\\\\.so\\\\b"
    },
    "custom_item_311": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches pattern (?i)^\\h*password\\h+(requisite|required)\\h+pam_pwquality\\.so\b",
        "file": "/etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwquality\\\\.so\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwquality\\\\.so\\\\b"
    },
    "custom_item_312": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches pattern (?i)^\\h*password\\h+(requisite|required)\\h+pam_pwhistory\\.so\b",
        "file": "/etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwhistory\\\\.so\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwhistory\\\\.so\\\\b"
    },
    "custom_item_313": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches pattern (?i)^\\h*password\\h+(requisite|required)\\h+pam_pwhistory\\.so\b",
        "file": "/etc/pam.d/system-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwhistory\\\\.so\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwhistory\\\\.so\\\\b"
    },
    "custom_item_314": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches auth pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "^\\\\h*auth\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*auth\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_315": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches account pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "^\\\\h*password\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*password\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_316": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches account pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "^\\\\h*account\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*account\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_317": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches account pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "^\\\\h*account\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*account\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_318": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches session pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "^\\\\h*session\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*session\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_319": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches session pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "^\\\\h*session\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*session\\\\h+(required|requisite)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_320": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches auth pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "^\\\\h*auth\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*auth\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_321": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches password pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "^\\\\h*password\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*password\\\\h+(required|requisite|sufficient)\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_322": {
        "description": "faillock.conf - deny",
        "file": "/etc/security/faillock.conf",
        "regex": "(?i)^\\\\h*deny\\\\h*=\\\\h*@PASSWORD_LOCKOUT@\\\\b",
        "expect": "(?i)^\\\\h*deny\\\\h*=\\\\h*@PASSWORD_LOCKOUT@\\\\b"
    },
    "custom_item_323": {
        "description": "system-auth / password-auth - deny",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?deny\\\\h*=",
        "expect": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?deny\\\\h*=\\\\h*@PASSWORD_LOCKOUT@\\\\b"
    },
    "custom_item_324": {
        "description": "faillock.conf - unlock time",
        "file": "/etc/security/faillock.conf",
        "regex": "(?i)^\\\\h*unlock_time\\\\h*=",
        "expect": "(?i)^\\\\h*unlock_time\\\\h*=\\\\h*@PASSWORD_UNLOCK_TIME@\\\\b"
    },
    "custom_item_325": {
        "description": "system-auth / password-auth - unlock time",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?unlock_time\\\\h*=",
        "expect": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?unlock_time\\\\h*=\\\\h*@PASSWORD_UNLOCK_TIME@\\\\b"
    },
    "custom_item_326": {
        "description": "pam.d",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?difok\\\\h*=",
        "expect": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?difok\\\\h*=\\\\h*@PASSWORD_DIFOK@\\\\b"
    },
    "custom_item_327": {
        "description": "pwquality - difok",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*difok\\\\h*=",
        "expect": "(?i)^\\\\h*difok\\\\h*=\\\\h*@PASSWORD_DIFOK@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_328": {
        "description": "pwquality - minlen",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*minlen\\\\h*=",
        "expect": "(?i)^\\\\h*minlen\\\\h*=\\\\h*@PASSWORD_MINIMUM_LENGTH@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_329": {
        "description": "pam.d",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?minlen\\\\h*=",
        "expect": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?minlen\\\\h*=\\\\h*@PASSWORD_MINIMUM_LENGTH@\\\\b"
    },
    "custom_item_330": {
        "description": "minclass",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*minclass[\\\\s]*=",
        "expect": "^[\\\\s]*minclass[\\\\s]*=[\\\\s]*@PASSWORD_MINCLASS@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_331": {
        "description": "4.4.3.2.3 Ensure password complexity is configured",
        "info": "Password complexity can be set through:\n\n - minclass - The minimum number of classes of characters required in a new password. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires digits, uppercase, lower case, and special characters.\n - dcredit - The maximum credit for having digits in the new password. If less than 0 it is the minimum number of digits in the new password. e.g. dcredit = -1 requires at least one digit\n - ucredit - The maximum credit for having uppercase characters in the new password. If less than 0 it is the minimum number of uppercase characters in the new password. e.g. ucredit = -1 requires at least one uppercase character\n - ocredit - The maximum credit for having other characters in the new password. If less than 0 it is the minimum number of other characters in the new password. e.g. ocredit = -1 requires at least one special character\n - lcredit - The maximum credit for having lowercase characters in the new password. If less than 0 it is the minimum number of lowercase characters in the new password. e.g. lcredit = -1 requires at least one lowercase character\n\nStrong passwords protect systems from being hacked through brute force methods.",
        "solution": "Create or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line to set:\n\n - minclass = 4\n\n--AND/OR--\n\n - dcredit = -_N_\n - ucredit = -_N_\n - ocredit = -_N_\n - lcredit = -_N_\n\nExample:\n\n# sed -ri 's/^\\s*minclass\\s*=/# &/' /etc/security/pwquality.conf\n# printf '\\n%s' \"minclass = 4\" >> /etc/security/pwquality.conf.d/50-pwcomplexity.conf\n\n--AND/OR--\n\n# sed -ri 's/^\\s*[dulo]credit\\s*=/# &/' /etc/security/pwquality.conf\n# printf '%s\\n' \"dcredit = -1\" \"ucredit = -1\" \"ocredit = -1\" \"lcredit = -1\" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf\n\nRun the following script to remove setting minclass dcredit ucredit lcredit and ocredit on the pam_pwquality.so module in the PAM files\n\n#!/usr/bin/env bash\n\n{\n   for l_pam_file in system-auth password-auth; do\n     l_authselect_file=\"/etc/authselect/$(head -1 /etc/authselect/authselect.conf | grep 'custom/')/$l_pam_file\"\n     sed -ri 's/(^\\s*password\\s+(requisite|required|sufficient)\\s+pam_pwquality\\.so.*)(\\s+minclass\\s*=\\s*\\S+)(.*$)/\\1\\4/' \"$l_authselect_file\"\n     sed -ri 's/(^\\s*password\\s+(requisite|required|sufficient)\\s+pam_pwquality\\.so.*)(\\s+dcredit\\s*=\\s*\\S+)(.*$)/\\1\\4/' \"$l_authselect_file\"\n     sed -ri 's/(^\\s*password\\s+(requisite|required|sufficient)\\s+pam_pwquality\\.so.*)(\\s+ucredit\\s*=\\s*\\S+)(.*$)/\\1\\4/' \"$l_authselect_file\"\n     sed -ri 's/(^\\s*password\\s+(requisite|required|sufficient)\\s+pam_pwquality\\.so.*)(\\s+lcredit\\s*=\\s*\\S+)(.*$)/\\1\\4/' \"$l_authselect_file\"\n     sed -ri 's/(^\\s*password\\s+(requisite|required|sufficient)\\s+pam_pwquality\\.so.*)(\\s+ocredit\\s*=\\s*\\S+)(.*$)/\\1\\4/' \"$l_authselect_file\"\n   done\n   authselect apply-changes\n}",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*minclass[\\\\s]*=",
        "expect": "^[\\\\s]*minclass[\\\\s]*=[\\\\s]*@PASSWORD_MINCLASS@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_332": {
        "description": "ocredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*ocredit[\\\\s]*=",
        "expect": "^[\\\\s]*ocredit[\\\\s]*=[\\\\s]*@PASSWORD_OCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_333": {
        "description": "ucredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*ucredit[\\\\s]*=",
        "expect": "^[\\\\s]*ucredit[\\\\s]*=[\\\\s]*@PASSWORD_UCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_334": {
        "description": "lcredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*lcredit[\\\\s]*=",
        "expect": "^[\\\\s]*lcredit[\\\\s]*=[\\\\s]*@PASSWORD_LCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_335": {
        "description": "dcredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*dcredit[\\\\s]*=",
        "expect": "^[\\\\s]*dcredit[\\\\s]*=[\\\\s]*@PASSWORD_DCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_336": {
        "description": "pwquality - maxrepeat",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*maxrepeat\\\\h*=",
        "expect": "(?i)^\\\\h*maxrepeat\\\\h*=\\\\h*@PASSWORD_MAXREPEAT@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_337": {
        "description": "pam.d",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxrepeat\\\\h*=",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxrepeat\\\\h*=\\\\h*@PASSWORD_MAXREPEAT@\\\\b"
    },
    "custom_item_338": {
        "description": "pwquality - maxsequence",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*maxsequence\\\\h*=",
        "expect": "(?i)^\\\\h*maxsequence\\\\h*=\\\\h*@PASSWORD_MAXSEQUENCE@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_339": {
        "description": "pam.d",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxsequence\\\\h*=",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxsequence\\\\h*=\\\\h*@PASSWORD_MAXSEQUENCE@\\\\b"
    },
    "custom_item_340": {
        "description": "Verify that the dictcheck option is not set to 0 (disabled) in a pwquality configuration file",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*dictcheck\\\\h*=\\\\h*0\\\\b",
        "expect": "(?i)^\\\\h*dictcheck\\\\h*=\\\\h*0\\\\b"
    },
    "custom_item_341": {
        "description": "Verify that the dictcheck option is not set to 0 (disabled) as a module argument in a PAM file",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?dictcheck\\\\h*=\\\\h*0\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?dictcheck\\\\h*=\\\\h*0\\\\b"
    },
    "custom_item_342": {
        "description": "4.4.3.2.7 Ensure password quality is enforced for the root user",
        "info": "If the pwquality enforce_for_root option is enabled, the module will return error on failed check even if the user changing the password is root.\n\nThis option is off by default which means that just the message about the failed check is printed but root can change the password anyway.\n\nNote: The root is not asked for an old password so the checks that compare the old and new password are not performed.\n\nUse of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.",
        "solution": "Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :\n\nExample:\n\nprintf '\\n%s\\n' \"enforce_for_root\" >> /etc/security/pwquality.conf.d/50-pwroot.conf",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*enforce_for_root\\\\b",
        "expect": "(?i)^\\\\h*enforce_for_root\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_343": {
        "description": "system-auth / password-auth - remember",
        "file": "/etc/pam.d/system-auth /etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?remember=",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?remember=@PASSWORD_HISTORY_REMEMBER@\\\\b"
    },
    "custom_item_344": {
        "description": "pwhistory - remember",
        "file": "/etc/security/pwhistory.conf",
        "regex": "(?i)^\\\\h*remember\\\\h*=",
        "expect": "(?i)^\\\\h*remember\\\\h*=\\\\h*@PASSWORD_HISTORY_REMEMBER@\\\\b"
    },
    "custom_item_345": {
        "description": "4.4.3.3.2 Ensure password history is enforced for the root user",
        "info": "If the pwhistory enforce_for_root option is enabled, the module will enforce password history for the root user as well\n\nRequiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password\n\nNote: These change only apply to accounts configured on the local system.",
        "solution": "Edit or add the following line in /etc/security/pwhistory.conf :\n\nenforce_for_root",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/security/pwhistory.conf",
        "regex": "(?i)^\\\\h*enforce_for_root\\\\b",
        "expect": "(?i)^\\\\h*enforce_for_root\\\\b"
    },
    "custom_item_346": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches password pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b"
    },
    "custom_item_347": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches password pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b"
    },
    "custom_item_348": {
        "description": "Ensure no file named /etc/pam.d/password-auth exists and matches pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*(auth|account|password|session)\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?nullok\\\\b",
        "expect": "(?i)^\\\\h*(auth|account|password|session)\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?nullok\\\\b"
    },
    "custom_item_349": {
        "description": "Ensure no file named /etc/pam.d/system-auth exists and matches pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "(?i)^\\\\h*(auth|account|password|session)\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?nullok\\\\b",
        "expect": "(?i)^\\\\h*(auth|account|password|session)\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?nullok\\\\b"
    },
    "custom_item_350": {
        "description": "Ensure no file named /etc/pam.d/password-auth pam_unix.so contains remember",
        "file": "/etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+\\\\h+)?pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?remember*\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+\\\\h+)?pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?remember*\\\\b"
    },
    "custom_item_351": {
        "description": "Ensure no file named /etc/pam.d/system-auth pam_unix.so contains remember",
        "file": "/etc/pam.d/system-auth",
        "regex": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+\\\\h+)?pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?remember*\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+\\\\h+)?pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?remember*\\\\b"
    },
    "custom_item_352": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+(sha512|yescrypt)\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+(sha512|yescrypt)\\\\b"
    },
    "custom_item_353": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+(sha512|yescrypt)\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+(sha512|yescrypt)\\\\b"
    },
    "custom_item_354": {
        "description": "Ensure at least one file named /etc/pam.d/system-auth exists and matches pattern",
        "file": "/etc/pam.d/system-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b"
    },
    "custom_item_355": {
        "description": "Ensure at least one file named /etc/pam.d/password-auth exists and matches pattern",
        "file": "/etc/pam.d/password-auth",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_unix\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b"
    },
    "custom_item_356": {
        "description": "Ensure at least one file named /etc/login.defs exists and matches pattern",
        "file": "/etc/login.defs",
        "regex": "(?i)^\\\\h*ENCRYPT_METHOD\\\\h+@PASSWORD_ENCRYPTION@\\\\b",
        "expect": "(?i)^\\\\h*ENCRYPT_METHOD\\\\h+@PASSWORD_ENCRYPTION@\\\\b"
    },
    "custom_item_357": {
        "description": "Ensure at least one file named /etc/libuser.conf exists and matches pattern",
        "file": "/etc/libuser.conf",
        "regex": "(?i)^\\\\h*crypt_style\\\\h*=\\\\h*(sha512|yescrypt)\\\\b",
        "expect": "(?i)^\\\\h*crypt_style\\\\h*=\\\\h*(sha512|yescrypt)\\\\b"
    },
    "custom_item_358": {
        "description": "shadow password max days",
        "file": "/etc/shadow",
        "regex": "^[^:]+:[^!*]",
        "expect": "^([^:]*:){4}@PASSWORD_MAX_DAYS@:"
    },
    "custom_item_359": {
        "description": "login.defs",
        "file": "/etc/login.defs",
        "regex": "(?i)^[\\\\s]*PASS_MAX_DAYS[\\\\s]",
        "expect": "(?i)^[\\\\s]*PASS_MAX_DAYS[\\\\s]+@PASSWORD_MAX_DAYS@[\\\\s]*$"
    },
    "custom_item_360": {
        "description": "login.defs",
        "file": "/etc/login.defs",
        "regex": "(?i)^[\\\\s]*PASS_WARN_AGE[\\\\s]+",
        "expect": "(?i)^[\\\\s]*PASS_WARN_AGE[\\\\s]+@PASSWORD_WARN_AGE@[\\\\s]*$"
    },
    "custom_item_361": {
        "description": "shadow password warn age",
        "file": "/etc/shadow",
        "regex": "^[^:]+:[^!*]",
        "expect": "^([^:]*:){5}@PASSWORD_WARN_AGE@:"
    },
    "custom_item_362": {
        "description": "useradd",
        "cmd": "/sbin/useradd -D | /bin/grep 'INACTIVE'",
        "expect": "(?i)^[\\\\s]*INACTIVE[\\\\s]*=[\\\\s]*@INACTIVE_PASSWORD_LOCK@[\\\\s]*$"
    },
    "custom_item_363": {
        "description": "shadow inactive password lock",
        "file": "/etc/shadow",
        "regex": "^[^:]+:[^!*]",
        "expect": "^([^:]*:){6}@INACTIVE_PASSWORD_LOCK@:"
    },
    "custom_item_364": {
        "description": "4.5.1.5 Ensure all users last password change date is in the past",
        "info": "All users should have a password change date in the past.\n\nIf a user's recorded password change date is in the future, then they could bypass any set password expiration.",
        "solution": "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n  {\n   while IFS= read -r l_user; do\n      l_change=$(date -d \"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2 | grep -v 'never$')\" +%s)\n      if [[ \"$l_change\" -gt \"$(date +%s)\" ]]; then\n         echo \"User: \\\\\"$l_user\\\\\" last password change was \\\\\"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2)\\\\\"\"\n      fi\n   done < <(awk -F: '/^[^:\\\\r]+:[^!*xX\\\\r]/{print $1}' /etc/shadow)\n} | /bin/awk '{print} END {if (NR == 0) print \"Pass\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_365": {
        "description": "4.5.2.1 Ensure default group for the root account is GID 0",
        "info": "The usermod command can be used to specify which group the root account belongs to. This affects permissions of files that are created by the root account.\n\nUsing GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.",
        "solution": "Run the following command to set the root user's default group ID to 0 :\n\n# usermod -g 0 root",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\nl_output=\"\" l_output2=\"\" l_out2=\"\"\n\nwhile IFS=: read -r l_user l_gid; do\n   while IFS= read -r l_passwd_file_user; do\n      if [ \"$l_passwd_file_user\" != \"$l_user\" ]; then\n         l_out2=\"$l_out2\\\\n  - User \\\\\"$l_passwd_file_user\\\\\" GID is: \\\\\"$l_gid\\\\\"\"\n      fi\n   done < <(awk -F: '($1 !~ /^(sync|shutdown|halt|operator)/ && $4 == \"'\"$l_gid\"'\"){print $1}' /etc/passwd)\n   if [ -n \"$l_out2\" ]; then\n      l_output2=\"$l_output2\\\\n$l_out2\"\n   else\n      l_output=\"$l_output\\\\n  - No unauthorized user's GID is: \\\\\"$l_gid\\\\\"\"\n   fi\n   l_out2=\"\"\n   while IFS= read -r l_passwd_file_gid; do\n   if [ \"$l_passwd_file_gid\" != \"$l_gid\" ]; then\n      l_out2=\"$l_out2\\\\n  - User \\\\\"$l_user\\\\\" GID is: \\\\\"$l_passwd_file_gid\\\\\" and should be: \\\\\"$l_gid\\\\\"\"\n   fi\n   done < <(awk -F: '$1==\"'\"$l_user\"'\"{print $4}' /etc/passwd)\n   if [ -n \"$l_out2\" ]; then\n      l_output2=\"$l_output2\\\\n$l_out2\"\n   else\n      l_output=\"$l_output\\\\n  - User \\\\\"$l_user\\\\\" GID is correctly set to: \\\\\"$l_gid\\\\\"\"\n   fi\ndone <<< \"root:0\"\n\n# If the tests produce no failing output, we pass\nif [ -z \"$l_output2\" ]; then\n\techo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n - * Correctly configured * :$l_output\"\nelse\n\techo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :$l_output2\\\\n\"\n   [ -n \"$l_output\" ] && echo -e \"\\\\n - * Correctly configured * :\\\\n$l_output\\\\n\"\nfi",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_366": {
        "description": "4.5.2.2 Ensure root user umask is configured",
        "info": "The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.\n\numask can be set with either Octal or Symbolic values:\n\n - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.\n - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----\n\nroot user Shell Configuration Files:\n\n - /root/.bash_profile - Is executed to configure the root users' shell before the initial command prompt. Is only read by login shells.\n - /root/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login\n\numask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask\n\nOrder of precedence:\n\n - /root/.bash_profile\n - /root/.bashrc\n - The system default umask\n\nSetting a secure value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.",
        "solution": "Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/root/.bash_profile /root/.bashrc",
        "regex": "(?i)^\\\\h*umask\\\\h+(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b|[0-7][0-7][0-6]\\\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\\\b)))",
        "expect": "(?i)^\\\\h*umask\\\\h+(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b|[0-7][0-7][0-6]\\\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\\\b)))"
    },
    "custom_item_367": {
        "description": "nologin",
        "cmd": "/bin/awk -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ && ($3<'\"$(awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs)\"' || $3 == 65534) && $7!~/^(\\\\/usr)?\\\\/sbin\\\\/nologin$/) { print $1 }' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_368": {
        "description": "Disabled accounts",
        "cmd": "/bin/awk -F: '/nologin/ {print $1}' /etc/passwd | xargs -I '{}' passwd -S '{}' | awk '($2!=\"L\" && $2!=\"LK\") {print $1}' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_369": {
        "description": "4.5.2.4 Ensure root password is set",
        "info": "There are a number of methods to access the root account directly. Without a password set any user would be able to gain access and thus control over the entire system.\n\nAccess to root should be secured at all times.",
        "solution": "Set the root password with:\n\n# passwd root\n\nImpact:\n\nIf there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/passwd -S root",
        "expect": "Password set"
    },
    "custom_item_370": {
        "description": "4.5.3.2 Ensure default user shell timeout is configured",
        "info": "TMOUT is an environmental setting that determines the timeout of a shell in seconds.\n\n - TMOUT=\n\nn\n\n- Sets the shell timeout to\n\nn\n\nseconds. A setting of TMOUT=0 disables timeout.\n - readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.\n - export TMOUT - exports the TMOUT variable\n\nSystem Wide Shell Configuration Files:\n\n - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive\n\nlogin\n\nshells, or shells executed with the --login parameter.\n - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.\n - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, /etc/bashrc also invokes /etc/profile.d/*.sh if\n\nnon-login\n\nshell, but redirects output to /dev/null if\n\nnon-interactive.\n\nIs only executed for\n\ninteractive\n\nshells or if BASH_ENV is set to /etc/bashrc\n\nSetting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.",
        "solution": "Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0\n\nConfigure TMOUT in one of the following files:\n\n - A file in the /etc/profile.d/ directory ending insh\n - /etc/profile\n - /etc/bashrc\n\nTMOUT configuration examples:\n\n - As multiple lines:\n\nTMOUT=900\nreadonly TMOUT\nexport TMOUT\n - As a single line:\n\nreadonly TMOUT=900 ; export TMOUT",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   output1=\"\" output2=\"\"\n   [ -f /etc/bashrc ] && BRC=\"/etc/bashrc\"\n   for f in \"$BRC\" /etc/profile /etc/profile.d/*.sh ; do\n      grep -Pq '^\\\\s*([^#]+\\\\s+)?TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\\\\b' \"$f\" && grep -Pq '^\\\\s*([^#]+;\\\\s*)?readonly\\\\s+TMOUT(\\\\s+|\\\\s*;|\\\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\\\\b' \"$f\" && grep -Pq '^\\\\s*([^#]+;\\\\s*)?export\\\\s+TMOUT(\\\\s+|\\\\s*;|\\\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\\\\b' \"$f\" &&\n   output1=\"$f\"\n   done\n   grep -Pq '^\\\\s*([^#]+\\\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\\\d{3,})\\\\b' /etc/profile /etc/profile.d/*.sh \"$BRC\" && output2=$(grep -Ps '^\\\\s*([^#]+\\\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\\\d{3,})\\\\b' /etc/profile /etc/profile.d/*.sh $BRC)\n   if [ -n \"$output1\" ] && [ -z \"$output2\" ]; then\n      echo -e \"\nPASSED\n\nTMOUT is configured in: \\\\\"$output1\\\\\"\n\"\n   else\n      [ -z \"$output1\" ] && echo -e \"\nFAILED\n\nTMOUT is not configured\n\"\n      [ -n \"$output2\" ] && echo -e \"\nFAILED\n\nTMOUT is incorrectly configured in: \\\\\"$output2\\\\\"\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*passed:?[\\\\s]*\\\\**$"
    },
    "custom_item_371": {
        "description": "4.5.3.3 Ensure default user umask is configured",
        "info": "The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.\n\numask can be set with either Octal or Symbolic values:\n\n - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.\n - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----\n\nThe default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File (bash_profile orbashrc ), in their home directory.\n\nSetting the default umask:\n\n - pam_umask module:\n - will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.\n - umask=value in the /etc/login.defs file is interpreted as Octal\n - Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):\n - will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid and username is the same as the- userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user\n\n - System Wide Shell Configuration File :\n - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive\n\nlogin\n\nshells, or shells executed with the --login parameter.\n - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.\n - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if\n\nnon-login\n\nshell, but redirects output to /dev/null if\n\nnon-interactive.\n\nIs only executed for\n\ninteractive\n\nshells or if BASH_ENV is set to /etc/bashrc\n\nUser Shell Configuration Files:\n\n - ~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.\n - ~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login\n\numask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask\n\nOrder of precedence:\n\n - A file in /etc/profile.d/ ending insh - This will override any other system-wide umask setting\n - In the file /etc/profile\n - On the pam_umask.so module in /etc/pam.d/postlogin\n - In the file /etc/login.defs\n - In the file /etc/default/login\n\nSetting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.",
        "solution": "Run the following script and perform the instructions in the output:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\"\" l_output2=\"\" l_out=\"\"\n   file_umask_chk()\n   {\n      if grep -Psiq -- '^\\h*umask\\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\h*#.*)?$' \"$l_file\"; then\n         l_out=\"$l_out\\n - umask is set correctly in \\\\\"$l_file\\\\\"\"\n      elif grep -Psiq -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\b)))' \"$l_file\"; then\n         l_output2=\"$l_output2\\n - \\\\\"$l_file\\\\\"\"\n      fi\n   }\n   while IFS= read -r -d $'\\0' l_file; do\n      file_umask_chk\n   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)\n   [ -n \"$l_out\" ] && l_output=\"$l_out\"\n   l_file=\"/etc/profile\" && file_umask_chk\n   l_file=\"/etc/bashrc\" && file_umask_chk\n   l_file=\"/etc/bash.bashrc\" && file_umask_chk\n   l_file=\"/etc/pam.d/postlogin\"\n   if grep -Psiq '^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b))' \"$l_file\"; then\n      l_output2=\"$l_output2\\n - \\\\\"$l_file\\\\\"\"\n   fi\n   l_file=\"/etc/login.defs\" && file_umask_chk\n   l_file=\"/etc/default/login\" && file_umask_chk\n   if [ -z \"$l_output2\" ]; then\n      echo -e \" - No files contain a UMASK that is not restrictive enough\\n No UMASK updates required to existing files\"\n   else\n      echo -e \"\\n - UMASK is not restrictive enough in the following file(s):$l_output2\\n\\n- Remediation Procedure:\\n - Update these files and comment out the UMASK line\\n or update umask to be \\\\\"0027\\\\\" or more restrictive\"\n   fi\n   if [ -n \"$l_output\" ]; then\n      echo -e \"$l_output\"\n   else\n      echo -e \" - Configure UMASK in a file in the \\\\\"/etc/profile.d/\\\\\" directory ending in \\\\\".sh\\\\\"\\n\\n Example Command (Hash to represent being run at a root prompt):\\n\\n# printf '%s\\\\\\n' \\\\\"umask 027\\\\\" > /etc/profile.d/50-systemwide_umask.sh\\n\"\n   fi\n}\n\nNote:\n\n - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked\n - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   file_umask_chk()\n   {\n      if grep -Psiq -- '^\\\\h*umask\\\\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\\\h*#.*)?$' \"$l_file\"; then\n         l_output=\"$l_output\\\\n - umask is set correctly in \\\\\"$l_file\\\\\"\"\n      elif grep -Psiq -- '^\\\\h*umask\\\\h+(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b|[0-7][0-7][0-6]\\\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\\\b)))' \"$l_file\"; then\n         l_output2=\"$l_output2\\\\n - umask is incorrectly set in \\\\\"$l_file\\\\\"\"\n      fi\n   }\n   while IFS= read -r -d $'\\\\0' l_file; do\n      file_umask_chk\n   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)\n   l_file=\"/etc/profile\" && file_umask_chk\n   l_file=\"/etc/bashrc\" && file_umask_chk\n   l_file=\"/etc/bash.bashrc\" && file_umask_chk\n   l_file=\"/etc/pam.d/postlogin\"\n   if grep -Psiq -- '^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_umask\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?umask=(0?[0-7][2-7]7)\\\\b' \"$l_file\"; then\n      l_output1=\"$l_output1\\\\n - umask is set correctly in \\\\\"$l_file\\\\\"\"\n   elif grep -Psiq '^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_umask\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?umask=(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b))' \"$l_file\"; then\n      l_output2=\"$l_output2\\\\n - umask is incorrectly set in \\\\\"$l_file\\\\\"\"\n   fi\n   l_file=\"/etc/login.defs\" && file_umask_chk\n   l_file=\"/etc/default/login\" && file_umask_chk\n   [[ -z \"$l_output\" && -z \"$l_output2\" ]] && l_output2=\"$l_output2\\\\n - umask is not set\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n - * Correctly configured * :\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- * Correctly configured * :\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_372": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_373": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_374": {
        "description": "rsyslog check - enabled",
        "cmd": "/bin/systemctl is-enabled rsyslog",
        "expect": "^enabled$"
    },
    "custom_item_375": {
        "description": "rsyslog check - installed",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_376": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_377": {
        "description": "5.1.1.1 Ensure rsyslog is installed",
        "info": "The rsyslog software is recommended in environments where journald does not meet operation requirements.\n\nThe security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.",
        "solution": "Run the following command to install rsyslog :\n\n# dnf install rsyslog",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_378": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_379": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_380": {
        "description": "rsyslog check - enabled",
        "cmd": "/bin/systemctl is-enabled rsyslog",
        "expect": "^enabled$"
    },
    "custom_item_381": {
        "description": "rsyslog check - installed",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_382": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_383": {
        "description": "5.1.1.2 Ensure rsyslog service is enabled",
        "info": "Once the rsyslog package is installed, ensure that the service is enabled.\n\nIf the rsyslog service is not enabled to start on boot, the system will not capture logging events.",
        "solution": "Run the following command to enable rsyslog :\n\n# systemctl --now enable rsyslog",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/systemctl is-enabled rsyslog | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'",
        "expect": "^enabled$"
    },
    "custom_item_384": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_385": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_386": {
        "description": "rsyslog check - enabled",
        "cmd": "/bin/systemctl is-enabled rsyslog",
        "expect": "^enabled$"
    },
    "custom_item_387": {
        "description": "rsyslog check - installed",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_388": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_389": {
        "description": "systemd-journald.service",
        "cmd": "/bin/systemctl list-units --type service | grep -P -- '(journald|rsyslog)'",
        "expect": "^[\\\\s]*systemd-journald.service[\\\\s]+loaded[\\\\s]+active[\\\\s]+running[\\\\s]+Journal[\\\\s]+Service[\\\\s]*$"
    },
    "custom_item_390": {
        "description": "ForwardToSyslog",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"ForwardToSyslog=yes\")\n   l_systemd_config_file=\"/etc/systemd/journald.conf\" # Main systemd configuration file\n   config_file_parameter_chk()\n   {\n      unset A_out; declare -A A_out # Check config file(s) setting\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"${l_systemd_parameter^^}\" = \"${l_systemd_parameter_name^^}\" ] && A_out+=([\"$l_systemd_parameter\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/bin/systemd-analyze cat-config \"$l_systemd_config_file\" | grep -Pio '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do\n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\"\n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\"\n            if [ \"${l_systemd_file_parameter_value^^}\" = \"${l_systemd_parameter_value^^}\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is correctly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is incorrectly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_systemd_parameter_value\\\\\"\\\\n\"\n            fi\n         done < <(grep -Pio -- \"^\\\\h*$l_systemd_parameter_name\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_systemd_parameter_name\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and check parameters\n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"\n      l_systemd_parameter_value=\"${l_systemd_parameter_value// /}\"\n      config_file_parameter_chk\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_391": {
        "description": "rsyslog.service",
        "cmd": "/bin/systemctl list-units --type service | grep -P -- '(journald|rsyslog)'",
        "expect": "^[\\\\s]*rsyslog.service[\\\\s]+loaded[\\\\s]+active[\\\\s]+running[\\\\s]+System[\\\\s]+Logging[\\\\s]+Service[\\\\s]*$"
    },
    "custom_item_392": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_393": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_394": {
        "description": "rsyslog check - enabled",
        "cmd": "/bin/systemctl is-enabled rsyslog",
        "expect": "^enabled$"
    },
    "custom_item_395": {
        "description": "rsyslog check - installed",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_396": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_397": {
        "description": "5.1.1.4 Ensure rsyslog default file permissions are configured",
        "info": "RSyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.\n\nIt is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.",
        "solution": "Edit either /etc/rsyslog.conf or a dedicatedconf file in /etc/rsyslog.d/ and set $FileCreateMode to 0640 or more restrictive:\n\n$FileCreateMode 0640\n\nRestart the service:\n\n# systemctl restart rsyslog\n\nImpact:\n\nThe systems global umask could override, but only making the file permissions stricter, what is configured in RSyslog with the FileCreateMode directive. RSyslog also has its own $umask directive that can alter the intended file creation mode. In addition, consideration should be given to how FileCreateMode is used.\n\nThus it is critical to ensure that the intended file creation mode is not overridden with less restrictive settings in /etc/rsyslog.conf /etc/rsyslog.d/*conf files and that FileCreateMode is set before any file is created.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|MP-2,CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(a),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|5.1,CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-2,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*\\\\$FileCreateMode",
        "expect": "\\\\$FileCreateMode 0[0246][024]0[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_398": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_399": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_400": {
        "description": "rsyslog check - enabled",
        "cmd": "/bin/systemctl is-enabled rsyslog",
        "expect": "^enabled$"
    },
    "custom_item_401": {
        "description": "rsyslog check - installed",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_402": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_403": {
        "description": "'mail.err /var/log/mail.err'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*mail\\\\.err",
        "expect": "mail\\\\.err[\\\\s]+@LOG_MAIL_ERR@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_404": {
        "description": "'local6,local7.* -/var/log/localmessages'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*local6,local7",
        "expect": "local6,local7\\\\.\\\\*[\\\\s]+-@LOG_LOCALMESSAGES@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_405": {
        "description": "'auth,authpriv.* /var/log/secure'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*auth,authpriv\\\\.\\\\*",
        "expect": "auth,authpriv\\\\.\\\\*[\\\\s]+@LOG_SECURE@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_406": {
        "description": "'local2,local3.* -/var/log/localmessages'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*local2,local3",
        "expect": "local2,local3\\\\.\\\\*[\\\\s]+-@LOG_LOCALMESSAGES@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_407": {
        "description": "'*.=warning;*.=err -/var/log/warn'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*\\\\*\\\\.=warning;\\\\*\\\\.=err",
        "expect": "\\\\*\\\\.=warning;\\\\*\\\\.=err[\\\\s]+-@LOG_WARN@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_408": {
        "description": "'*.emerg :omusrmsg:*'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*\\\\*\\\\.emerg",
        "expect": "\\\\*\\\\.emerg\\\\s+:omusrmsg:\\\\*$",
        "min_occurrences": "1"
    },
    "custom_item_409": {
        "description": "'mail.info -/var/log/mail.info'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*mail\\\\.info",
        "expect": "mail\\\\.info[\\\\s]+-@LOG_MAIL_INFO@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_410": {
        "description": "'mail.* -/var/log/mail'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*mail\\\\.\\\\*",
        "expect": "mail\\\\.\\\\*[\\\\s]+-@LOG_MAIL@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_411": {
        "description": "'*.crit /var/log/warn'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*\\\\*\\\\.crit",
        "expect": "\\\\*\\\\.crit[\\\\s]+@LOG_WARN@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_412": {
        "description": "'cron.* /var/log/cron'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*cron\\\\.*",
        "expect": "cron\\\\.\\\\*[\\\\s]+@LOG_CRON@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_413": {
        "description": "'mail.warning -/var/log/mail.warn'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*mail\\\\.warning",
        "expect": "mail\\\\.warning[\\\\s]+-@LOG_MAIL_WARN@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_414": {
        "description": "'*.*;mail.none;news.none -/var/log/messages'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*\\\\*\\\\.\\\\*;mail\\.none;news\\\\.none",
        "expect": "\\\\*\\\\.\\\\*;mail\\\\.none;news\\\\.none[\\\\s]+-@LOG_MESSAGES@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_415": {
        "description": "'local4,local5.* -/var/log/localmessages'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*local4,local5",
        "expect": "local4,local5\\\\.\\\\*[\\\\s]+-@LOG_LOCALMESSAGES@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_416": {
        "description": "'local0,local1.* -/var/log/localmessages'",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*local0,local1",
        "expect": "local0,local1\\\\.\\\\*[\\\\s]+-@LOG_LOCALMESSAGES@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_417": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_418": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_419": {
        "description": "rsyslog check - enabled",
        "cmd": "/bin/systemctl is-enabled rsyslog",
        "expect": "^enabled$"
    },
    "custom_item_420": {
        "description": "rsyslog check - installed",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_421": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_422": {
        "description": "rsyslog new format",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^\\\\s*([^#]+\\\\s+)?action\\\\(([^#]+\\\\s+)?\\\\btarget=\\\\\"?[^#\"]+\\\\\"?\\\\b",
        "expect": "^\\\\s*([^#]+\\\\s+)?action\\\\(([^#]+\\\\s+)?\\\\btarget=\\\\\"?[^#\"]+\\\\\"?\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_423": {
        "description": "rsyslog old format",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^\\\\s*[^#]+\\\\.\\\\*\\\\s+@",
        "expect": "^\\\\s*[^#]+\\\\.\\\\*\\\\s+@",
        "min_occurrences": "1"
    },
    "custom_item_424": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_425": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_426": {
        "description": "rsyslog check - enabled",
        "cmd": "/bin/systemctl is-enabled rsyslog",
        "expect": "^enabled$"
    },
    "custom_item_427": {
        "description": "rsyslog check - installed",
        "rpm": "rsyslog-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_428": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_429": {
        "description": "Old format ModLoad imtcp",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*\\\\$ModLoad imtcp",
        "expect": "^Manual Review Required$"
    },
    "custom_item_430": {
        "description": "Old format InputTCPServerRun",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^[\\\\s]*\\\\$InputTCPServerRun",
        "expect": "^Manual Review Required$"
    },
    "custom_item_431": {
        "description": "New format input imtcp",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^\\\\h*input\\\\(type=\"imtcp\" port=\"514\"\\\\)",
        "expect": "^Manual Review Required$"
    },
    "custom_item_432": {
        "description": "New format module load imtcp",
        "file": "/etc/rsyslog.conf /etc/rsyslog.d/*.conf",
        "regex": "^\\\\h*module\\\\(load=\"imtcp\"\\\\)",
        "expect": "^Manual Review Required$"
    },
    "custom_item_433": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_434": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_435": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_436": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_437": {
        "description": "5.1.2.1.1 Ensure systemd-journal-remote is installed",
        "info": "Journald (via systemd-journal-remote ) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.\n\nStoring log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.",
        "solution": "Run the following command to install systemd-journal-remote :\n\n# dnf install systemd-journal-remote",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_438": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_439": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_440": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_441": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_442": {
        "description": "Trusted Cert",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*TrustedCertificateFile[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*TrustedCertificateFile[\\\\s]*=[\\\\s]*@JOURNALD_TRUSTED_CERT@[\\\\s]*$"
    },
    "custom_item_443": {
        "description": "Cert",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*ServerCertificateFile[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*ServerCertificateFile[\\\\s]*=[\\\\s]*@JOURNALD_SERVER_CERT@[\\\\s]*$"
    },
    "custom_item_444": {
        "description": "URL",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*URL[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*URL[\\\\s]*=[\\\\s]*@JOURNALD_SERVER@[\\\\s]*$"
    },
    "custom_item_445": {
        "description": "Key",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*ServerKeyFile[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*ServerKeyFile[\\\\s]*=[\\\\s]*@JOURNALD_SERVER_KEY@[\\\\s]*$"
    },
    "custom_item_446": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_447": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_448": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_449": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_450": {
        "description": "5.1.2.1.3 Ensure systemd-journal-remote is enabled",
        "info": "Journald (via systemd-journal-remote ) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.\n\nStoring log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.",
        "solution": "Run the following command to enable systemd-journal-remote :\n\n# systemctl --now enable systemd-journal-upload.service",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/systemctl is-enabled systemd-journal-upload.service",
        "expect": "^enabled$"
    },
    "custom_item_451": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_452": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_453": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_454": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_455": {
        "description": "5.1.2.1.4 Ensure journald is not configured to receive logs from a remote client",
        "info": "Journald supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.\n\nNOTE:\n\n - The same package, systemd-journal-remote is used for both sending logs to remote hosts and receiving incoming logs.\n - With regards to receiving logs, there are two services; systemd-journal-remote.socket and systemd-journal-remote.service\n\nIf a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.",
        "solution": "Run the following command to disable systemd-journal-remote.socket :\n\n# systemctl --now mask systemd-journal-remote.socket",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|CM-6,800-53|CM-7,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|CM-6,800-53r5|CM-7,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|9.2,CSCv8|4.8,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.IP-1,CSF|PR.PT-1,CSF|PR.PT-3,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS15a,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/systemctl is-enabled systemd-journal-remote.socket | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'",
        "expect": "(disabled|masked|static)"
    },
    "custom_item_456": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_457": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_458": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_459": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_460": {
        "description": "5.1.2.2 Ensure journald service is enabled",
        "info": "Ensure that the systemd-journald service is enabled to allow capturing of logging events.\n\nIf the systemd-journald service is not enabled to start on boot, the system will not capture logging events.",
        "solution": "By default the systemd-journald service does not have an [Install] section and thus cannot be enabled / disabled. It is meant to be referenced as Requires or Wants by other unit files. As such, if the status of systemd-journald is not static investigate why.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_461": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_462": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_463": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_464": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_465": {
        "description": "5.1.2.3 Ensure journald is configured to compress large log files",
        "info": "The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.\n\nUncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.",
        "solution": "Edit the /etc/systemd/journald.conf file and add the following line:\n\nCompress=yes\n\nRestart the service:\n\n# systemctl restart systemd-journald.service",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.4,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/systemd/journald.conf /etc/systemd/journald.conf.d/*",
        "regex": "^[\\\\s]*Compress[\\\\s]*=",
        "expect": "^[\\\\s]*Compress[\\\\s]*=[\\\\s]*['\"]?yes[\"']?[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_466": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_467": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_468": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_469": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_470": {
        "description": "5.1.2.4 Ensure journald is configured to write logfiles to persistent disk",
        "info": "Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.\n\nWriting log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.",
        "solution": "Edit the /etc/systemd/journald.conf file and add the following line:\n\nStorage=persistent\n\nRestart the service:\n\n# systemctl restart systemd-journald.service",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/systemd/journald.conf /etc/systemd/journald.conf.d/*",
        "regex": "^[\\\\s]*Storage[\\\\s]*=",
        "expect": "^[\\\\s]*Storage[\\\\s]*=[\\\\s]*['\"]?persistent[\"']?[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_471": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_472": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_473": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_474": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_475": {
        "description": "5.1.2.5 Ensure journald is not configured to send logs to rsyslog",
        "info": "Data from journald should be kept in the confines of the service and not forwarded on to other services.\n\nIF journald is the method for capturing logs, all logs of the system should be handled by journald and not forwarded to other logging mechanisms.\n\nNote: This recommendation only applies if journald is the chosen method for client side logging. Do not apply this recommendation if rsyslog is used.",
        "solution": "Edit the /etc/systemd/journald.conf file and ensure that ForwardToSyslog=yes is removed.\n\nRestart the service:\n\n# systemctl restart systemd-journald.service",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.5,800-171|3.3.6,800-53|AU-2,800-53|AU-6(3),800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-6(3),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(d),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.5,CSCv8|8.2,CSCv8|8.9,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-6(3),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.2.5,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/systemd/journald.conf /etc/systemd/journald.conf.d/*",
        "regex": "^[\\\\s]*ForwardToSyslog[\\\\s]*=",
        "expect": "^[\\\\s]*ForwardToSyslog[\\\\s]*=[\\\\s]*['\"]?yes[\"']?[\\\\s]*$"
    },
    "custom_item_476": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_477": {
        "description": "rsyslog check - active",
        "cmd": "/bin/systemctl is-active rsyslog",
        "expect": "^active$"
    },
    "custom_item_478": {
        "description": "Check for systemd-journal-remote package",
        "rpm": "systemd-journal-remote-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_479": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_480": {
        "description": "5.1.2.6 Ensure journald log rotation is configured per site policy",
        "info": "Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.\n\nBy keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Review /etc/systemd/journald.conf and verify logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.\n\nThe specific parameters for log rotation are:\n\nSystemMaxUse=\nSystemKeepFree=\nRuntimeMaxUse=\nRuntimeKeepFree=\nMaxFileSec=",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/systemd/journald.conf /etc/systemd/journald.conf.d/*",
        "regex": "^[\\\\s]*(SystemMaxUse|SystemKeepFree|RuntimeMaxUse|RuntimeKeepFree|MaxFileSec)[\\\\s]*=",
        "expect": "^Manual Review Required$",
        "min_occurrences": "1"
    },
    "custom_item_481": {
        "description": "5.1.4 Ensure all logfiles have appropriate access configured",
        "info": "Log files stored in /var/log/ contain logged information from many services on the system and potentially from other logged hosts as well.\n\nIt is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them.",
        "solution": "Run the following script to update permissions and ownership on files in /var/log\n\nAlthough the script is not destructive, ensure that the output is captured in the event that the remediation causes issues.\n\n#!/usr/bin/env bash\n\n{\n   l_op2=\"\" l_output2=\"\"\n   l_uidmin=\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"\n   file_test_fix()\n   {\n      l_op2=\"\"\n      l_fuser=\"root\"\n      l_fgroup=\"root\"\n      if [ $(( $l_mode & $perm_mask )) -gt 0 ]; then\n         l_op2=\"$l_op2\\n - Mode: \\\\\"$l_mode\\\\\" should be \\\\\"$maxperm\\\\\" or more restrictive\\n - Removing excess permissions\"\n         chmod \"$l_rperms\" \"$l_fname\"\n      fi\n      if [[ ! \"$l_user\" =~ $l_auser ]]; then\n         l_op2=\"$l_op2\\n - Owned by: \\\\\"$l_user\\\\\" and should be owned by \\\\\"${l_auser//|/ or }\\\\\"\\n - Changing ownership to: \\\\\"$l_fuser\\\\\"\"\n         chown \"$l_fuser\" \"$l_fname\"\n      fi\n      if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n         l_op2=\"$l_op2\\n - Group owned by: \\\\\"$l_group\\\\\" and should be group owned by \\\\\"${l_agroup//|/ or }\\\\\"\\n - Changing group ownership to: \\\\\"$l_fgroup\\\\\"\"\n         chgrp \"$l_fgroup\" \"$l_fname\"\n      fi\n      [ -n \"$l_op2\" ] && l_output2=\"$l_output2\\n - File: \\\\\"$l_fname\\\\\" is:$l_op2\\n\"\n   }\n   unset a_file && a_file=() # clear and initialize array\n   # Loop to create array with stat of files that could possibly fail one of the audits\n   while IFS= read -r -d $'\\0' l_file; do\n      [ -e \"$l_file\" ] && a_file+=(\"$(stat -Lc '%n^%#a^%U^%u^%G^%g' \"$l_file\")\")\n   done < <(find -L /var/log -type f \\( -perm /0137 -o ! -user root -o ! -group root \\) -print0)\n   while IFS=\"^\" read -r l_fname l_mode l_user l_uid l_group l_gid; do\n      l_bname=\"$(basename \"$l_fname\")\"\n      case \"$l_bname\" in\n         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)\n            perm_mask='0113'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"ug-x,o-wx\"\n            l_auser=\"root\"\n            l_agroup=\"(root|utmp)\"\n            file_test_fix\n            ;;\n         secure | auth.log | syslog | messages)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"u-x,g-wx,o-rwx\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            file_test_fix\n            ;;\n         SSSD | sssd)\n            perm_mask='0117'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"ug-x,o-rwx\"\n            l_auser=\"(root|SSSD)\"\n            l_agroup=\"(root|SSSD)\"\n            file_test_fix\n            ;;\n         gdm | gdm3)\n            perm_mask='0117'\n            l_rperms=\"ug-x,o-rwx\"\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|gdm|gdm3)\"\n            file_test_fix\n            ;;\n         *.journal | *.journal~)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"u-x,g-wx,o-rwx\"\n            l_auser=\"root\"\n            l_agroup=\"(root|systemd-journal)\"\n            file_test_fix\n            ;;\n         *)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"u-x,g-wx,o-rwx\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            if [ \"$l_uid\" -lt \"$l_uidmin\" ] && [ -z \"$(awk -v grp=\"$l_group\" -F: '$1==grp {print $4}' /etc/group)\" ]; then\n               if [[ ! \"$l_user\" =~ $l_auser ]]; then\n                  l_auser=\"(root|syslog|$l_user)\"\n               fi\n               if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n                  l_tst=\"\"\n                  while l_out3=\"\" read -r l_duid; do\n                     [ \"$l_duid\" -ge \"$l_uidmin\" ] && l_tst=failed\n                  done <<< \"$(awk -F: '$4=='\"$l_gid\"' {print $3}' /etc/passwd)\"\n                  [ \"$l_tst\" != \"failed\" ] && l_agroup=\"(root|adm|$l_group)\"\n               fi\n            fi\n            file_test_fix\n            ;;\n      esac\n   done <<< \"$(printf '%s\\n' \"${a_file[@]}\")\"\n   unset a_file # Clear array\n   # If all files passed, then we report no changes\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"- All files in \\\\\"/var/log/\\\\\" have appropriate permissions and ownership\\n - No changes required\\n\"\n   else\n      # print report of changes\n      echo -e \"\\n$l_output2\"\n   fi\n}\n\nNote: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.\n\nIf there are services that log to other locations, ensure that those log files have the appropriate access configured.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_op2=\"\" l_output2=\"\"\n   l_uidmin=\"$(awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs)\"\n   file_test_chk()\n   {\n      l_op2=\"\"\n      if [ $(( $l_mode & $perm_mask )) -gt 0 ]; then\n         l_op2=\"$l_op2\n  - Mode: \\\\\"$l_mode\\\\\" should be \\\\\"$maxperm\\\\\" or more restrictive\"\n      fi\n      if [[ ! \"$l_user\" =~ $l_auser ]]; then\n         l_op2=\"$l_op2\n  - Owned by: \\\\\"$l_user\\\\\" and should be owned by \\\\\"${l_auser//|/ or }\\\\\"\"\n      fi\n      if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n         l_op2=\"$l_op2\n  - Group owned by: \\\\\"$l_group\\\\\" and should be group owned by \\\\\"${l_agroup//|/ or }\\\\\"\"\n      fi\n      [ -n \"$l_op2\" ] && l_output2=\"$l_output2\n - File: \\\\\"$l_fname\\\\\" is:$l_op2\n\"\n   }\n   unset a_file && a_file=() # clear and initialize array\n   # Loop to create array with stat of files that could possibly fail one of the audits\n   while IFS= read -r -d $'\\\\0' l_file; do\n      [ -e \"$l_file\" ] && a_file+=(\"$(stat -Lc '%n^%#a^%U^%u^%G^%g' \"$l_file\")\")\n   done < <(find -L /var/log -type f \\\\( -perm /0137 -o ! -user root -o ! -group root \\\\) -print0)\n   while IFS=\"^\" read -r l_fname l_mode l_user l_uid l_group l_gid; do\n      l_bname=\"$(basename \"$l_fname\")\"\n      case \"$l_bname\" in\n         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)\n            perm_mask='0113'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|utmp)\"\n            file_test_chk\n            ;;\n         secure | auth.log | syslog | messages)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            file_test_chk\n            ;;\n         SSSD | sssd)\n            perm_mask='0117'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"(root|SSSD)\"\n            l_agroup=\"(root|SSSD)\"\n            file_test_chk\n            ;;\n         gdm | gdm3)\n            perm_mask='0117'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|gdm|gdm3)\"\n            file_test_chk\n            ;;\n         *.journal | *.journal~)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|systemd-journal)\"\n            file_test_chk\n            ;;\n         *)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            if [ \"$l_uid\" -lt \"$l_uidmin\" ] && [ -z \"$(awk -v grp=\"$l_group\" -F: '$1==grp {print $4}' /etc/group)\" ]; then\n               if [[ ! \"$l_user\" =~ $l_auser ]]; then\n                  l_auser=\"(root|syslog|$l_user)\"\n               fi\n               if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n                  l_tst=\"\"\n                  while l_out3=\"\" read -r l_duid; do\n                     [ \"$l_duid\" -ge \"$l_uidmin\" ] && l_tst=failed\n                  done <<< \"$(awk -F: '$4=='\"$l_gid\"' {print $3}' /etc/passwd)\"\n                  [ \"$l_tst\" != \"failed\" ] && l_agroup=\"(root|adm|$l_group)\"\n               fi\n            fi\n            file_test_chk\n            ;;\n      esac\n   done <<< \"$(printf '%s\n' \"${a_file[@]}\")\"\n   unset a_file # Clear array\n   # If all files passed, then we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Results:\n ** Pass **\n- All files in \\\\\"/var/log/\\\\\" have appropriate permissions and ownership\n\"\n   else\n      # print the reason why we are failing\n      echo -e \"\n- Audit Results:\n ** Fail **\n$l_output2\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_482": {
        "description": "5.3.1 Ensure AIDE is installed",
        "info": "Advanced Intrusion Detection Environment (AIDE) is an intrusion detection tool that uses predefined rules to check the integrity of files and directories in the Linux operating system. AIDE has its own database to check the integrity of files and directories.\n\naide takes a snapshot of files and directories including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.\n\nBy monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.",
        "solution": "Run the following command to install aide :\n\n# dnf install aide\n\nConfigure aide as appropriate for your environment. Consult the aide documentation for options.\n\nInitialize aide :\n\nRun the following commands:\n\n# aide --init # mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz",
        "reference": "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "rpm": "aide-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_483": {
        "description": "Check for crontab aide",
        "file": "/etc/cron.* /etc/crontab /var/spool/cron/*",
        "regex": "^([^#]+\\\\s+)?(/usr/s?bin/|^\\\\s*)aide(\\\\.wrapper)?\\\\s(--?\\\\S+\\\\s)*(--(check|update)|\\\\$AIDEARGS)\\\\b",
        "expect": "^([^#]+\\\\s+)?(/usr/s?bin/|^\\\\s*)aide(\\\\.wrapper)?\\\\s(--?\\\\S+\\\\s)*(--(check|update)|\\\\$AIDEARGS)\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_484": {
        "description": "5.3.2 Ensure filesystem integrity is regularly checked",
        "info": "Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.\n\nPeriodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.",
        "solution": "- IF - cron will be used to schedule and run aide check\n\nRun the following command:\n\n# crontab -u root -e\n\nAdd the following line to the crontab:\n\n0 5 * * * /usr/sbin/aide --check\n\n- OR -\n\n- IF - aidecheck.service and aidecheck.timer will be used to schedule and run aide check:\n\nCreate or edit the file /etc/systemd/system/aidecheck.service and add the following lines:\n\n[Unit]\nDescription=Aide Check\n\n[Service]\nType=simple\nExecStart=/usr/sbin/aide --check\n\n[Install]\nWantedBy=multi-user.target\n\nCreate or edit the file /etc/systemd/system/aidecheck.timer and add the following lines:\n\n[Unit]\nDescription=Aide check every day at 5AM\n\n[Timer]\nOnCalendar=*-*-* 05:00:00\nUnit=aidecheck.service\n\n[Install]\nWantedBy=multi-user.target\n\nRun the following commands:\n\n# chown root:root /etc/systemd/system/aidecheck.*\n# chmod 0644 /etc/systemd/system/aidecheck.*\n\n# systemctl daemon-reload\n\n# systemctl enable aidecheck.service\n# systemctl --now enable aidecheck.timer",
        "reference": "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/cron.* /etc/crontab /var/spool/cron/*",
        "regex": "^([^#]+\\\\s+)?(/usr/s?bin/|^\\\\s*)aide(\\\\.wrapper)?\\\\s(--?\\\\S+\\\\s)*(--(check|update)|\\\\$AIDEARGS)\\\\b",
        "expect": "^([^#]+\\\\s+)?(/usr/s?bin/|^\\\\s*)aide(\\\\.wrapper)?\\\\s(--?\\\\S+\\\\s)*(--(check|update)|\\\\$AIDEARGS)\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_485": {
        "description": "aidecheck.timer is enabled",
        "cmd": "/bin/systemctl is-enabled aidecheck.timer | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'",
        "expect": "^enabled$"
    },
    "custom_item_486": {
        "description": "aidecheck.service is enabled",
        "cmd": "/bin/systemctl is-enabled aidecheck.service | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'",
        "expect": "^enabled$"
    },
    "custom_item_487": {
        "description": "systemctl status aidecheck.timer",
        "cmd": "/bin/systemctl status aidecheck.timer",
        "expect": "^[\\\\s]*Active:[\\\\s]*active[\\\\s]*\\\\(running|waiting\\\\)"
    },
    "custom_item_488": {
        "description": "autrace",
        "file": "/etc/aide.conf /etc/aide/aide.conf /etc/aide.conf.d/*",
        "regex": "^[\\\\s]*/sbin/autrace[\\\\s]+",
        "expect": "^[\\\\s]*/sbin/autrace[\\\\s]+p\\\\+i\\\\+n\\\\+u\\\\+g\\\\+s\\\\+b\\\\+acl\\\\+xattrs\\\\+sha512[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_489": {
        "description": "augenrules",
        "file": "/etc/aide.conf /etc/aide/aide.conf /etc/aide.conf.d/*",
        "regex": "^[\\\\s]*/sbin/augenrules[\\\\s]+",
        "expect": "^[\\\\s]*/sbin/augenrules[\\\\s]+p\\\\+i\\\\+n\\\\+u\\\\+g\\\\+s\\\\+b\\\\+acl\\\\+xattrs\\\\+sha512[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_490": {
        "description": "auditd",
        "file": "/etc/aide.conf /etc/aide/aide.conf /etc/aide.conf.d/*",
        "regex": "^[\\\\s]*/sbin/auditd[\\\\s]+",
        "expect": "^[\\\\s]*/sbin/auditd[\\\\s]+p\\\\+i\\\\+n\\\\+u\\\\+g\\\\+s\\\\+b\\\\+acl\\\\+xattrs\\\\+sha512[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_491": {
        "description": "ausearch",
        "file": "/etc/aide.conf /etc/aide/aide.conf /etc/aide.conf.d/*",
        "regex": "^[\\\\s]*/sbin/ausearch[\\\\s]+",
        "expect": "^[\\\\s]*/sbin/ausearch[\\\\s]+p\\\\+i\\\\+n\\\\+u\\\\+g\\\\+s\\\\+b\\\\+acl\\\\+xattrs\\\\+sha512[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_492": {
        "description": "auditctl",
        "file": "/etc/aide.conf /etc/aide/aide.conf /etc/aide.conf.d/*",
        "regex": "^[\\\\s]*/sbin/auditctl[\\\\s]+",
        "expect": "^[\\\\s]*/sbin/auditctl[\\\\s]+p\\\\+i\\\\+n\\\\+u\\\\+g\\\\+s\\\\+b\\\\+acl\\\\+xattrs\\\\+sha512[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_493": {
        "description": "aureport",
        "file": "/etc/aide.conf /etc/aide/aide.conf /etc/aide.conf.d/*",
        "regex": "^[\\\\s]*/sbin/aureport[\\\\s]+",
        "expect": "^[\\\\s]*/sbin/aureport[\\\\s]+p\\\\+i\\\\+n\\\\+u\\\\+g\\\\+s\\\\+b\\\\+acl\\\\+xattrs\\\\+sha512[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_494": {
        "description": "6.1.1 Ensure permissions on /etc/passwd are configured",
        "info": "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.\n\nIt is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :\n\n# chmod u-x,go-wx /etc/passwd\n# chown root:root /etc/passwd",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/passwd",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_495": {
        "description": "6.1.10 Ensure permissions on /etc/shells are configured",
        "info": "/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.\n\nIt is critical to ensure that the /etc/shells file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :\n\n# chmod u-x,go-wx /etc/shells\n# chown root:root /etc/shells",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/shells",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_496": {
        "description": "6.1.2 Ensure permissions on /etc/passwd- are configured",
        "info": "The /etc/passwd- file contains backup user account information.\n\nIt is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :\n\n# chmod u-x,go-wx /etc/passwd-\n# chown root:root /etc/passwd-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/passwd-",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_497": {
        "description": "etc/security/opasswd file permissions",
        "file": "/etc/security/opasswd",
        "owner": "root",
        "mask": "177",
        "group": "root"
    },
    "custom_item_498": {
        "description": "/etc/security/opasswd.old file permissions",
        "file": "/etc/security/opasswd.old",
        "owner": "root",
        "mask": "177",
        "group": "root"
    },
    "custom_item_499": {
        "description": "6.1.4 Ensure permissions on /etc/group are configured",
        "info": "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.\n\nThe /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/group :\n\n# chmod u-x,go-wx /etc/group\n# chown root:root /etc/group",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/group",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_500": {
        "description": "6.1.5 Ensure permissions on /etc/group- are configured",
        "info": "The /etc/group- file contains a backup list of all the valid groups defined in the system.\n\nIt is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :\n\n# chmod u-x,go-wx /etc/group-\n# chown root:root /etc/group-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/group-",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_501": {
        "description": "6.1.6 Ensure permissions on /etc/shadow are configured",
        "info": "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIf attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/shadow :\n\n# chown root:root /etc/shadow\n# chmod 0000 /etc/shadow",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/shadow",
        "owner": "root",
        "mask": "777",
        "group": "root"
    },
    "custom_item_502": {
        "description": "6.1.7 Ensure permissions on /etc/shadow- are configured",
        "info": "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIt is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/shadow- :\n\n# chown root:root /etc/shadow-\n# chmod 0000 /etc/shadow-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/shadow-",
        "owner": "root",
        "mask": "777",
        "group": "root"
    },
    "custom_item_503": {
        "description": "6.1.8 Ensure permissions on /etc/gshadow are configured",
        "info": "The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIf attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/gshadow :\n\n# chown root:root /etc/gshadow\n# chmod 0000 /etc/gshadow",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|16.4,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/gshadow",
        "owner": "root",
        "mask": "777",
        "group": "root"
    },
    "custom_item_504": {
        "description": "6.1.9 Ensure permissions on /etc/gshadow- are configured",
        "info": "The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIt is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/gshadow- :\n\n# chown root:root /etc/gshadow-\n# chmod 0000 /etc/gshadow-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|16.4,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "file": "/etc/gshadow-",
        "owner": "root",
        "mask": "777",
        "group": "root"
    },
    "custom_item_505": {
        "description": "6.2.1 Ensure accounts in /etc/passwd use shadowed passwords",
        "info": "Local accounts can use shadowed passwords. With shadowed passwords, the passwords are saved in shadow password file, /etc/shadow encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd\n\nThe /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack.\n\nNote:\n\n - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.\n - A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.",
        "solution": "Run the following command to set accounts to use shadowed passwords:\n\n# sed -e 's/^\\([a-zA-Z0-9_]*\\):[^:]*:/\\1:x:/' -i /etc/passwd\n\nInvestigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/awk -F: '($2 != \"x\" ) { print $1 \" is not set to shadowed passwords \"}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_506": {
        "description": "6.2.10 Ensure local interactive user home directories are configured",
        "info": "The user home directory is space defined for the particular user to set local environment variables and to store personal files. While the system administrator can establish secure permissions for users' home directories, the users can easily override these. Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.\n\nSince the user is accountable for files stored in the user home directory, the user must be the owner of the directory. Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges. If the user's home directory does not exist or is unassigned, the user will be placed in \"/\" and will not be able to write any files or have local environment variables set.",
        "solution": "If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:\n\n - Lock the user account\n - Remove the user from the system\n - Create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.\n\nRun the following script to:\n\n - Remove excessive permissions from local interactive users home directories\n - Update the home directory's owner\n\n#!/usr/bin/env bash\n\n{\n   l_output2=\"\"\n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   [ \"$l_asize \" -gt \"10000\" ] && echo -e \"\\n ** INFO **\\n - \\\\\"$l_asize\\\\\" Local interactive users found on the system\\n - This may be a long running process\\n\"\n   while read -r l_user l_home; do\n      if [ -d \"$l_home\" ]; then\n         l_mask='0027'\n         l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n         while read -r l_own l_mode; do\n            if [ \"$l_user\" != \"$l_own\" ]; then\n               l_output2=\"$l_output2\\n - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is owned by: \\\\\"$l_own\\\\\"\\n - changing ownership to: \\\\\"$l_user\\\\\"\\n\"\n               chown \"$l_user\" \"$l_home\"\n            fi\n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n               l_output2=\"$l_output2\\n - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_max\\\\\" or more restrictive\\n - removing excess permissions\\n\"\n               chmod g-w,o-rwx \"$l_home\"\n            fi\n         done <<< \"$(stat -Lc '%U %#a' \"$l_home\")\"\n      else\n         l_output2=\"$l_output2\\n - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" Doesn't exist\\n - Please create a home in accordance with local site policy\"\n      fi\n   done <<< \"$(printf '%s\\n' \"${a_uarr[@]}\")\"\n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\n      echo -e \" - No modification needed to local interactive users home directories\"\n   else\n      echo -e \"\\n$l_output2\"\n   fi\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_heout2=\"\" l_hoout2=\"\" l_haout2=\"\"\n   l_valid_shells=\"^($( awk -F\\\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\\\//{s,/,\\\\\\\\\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   [ \"$l_asize \" -gt \"10000\" ] && echo -e \"\n  ** INFO **\n  - \\\\\"$l_asize\\\\\" Local interactive users found on the system\n  - This may be a long running check\n\"\n   while read -r l_user l_home; do\n      if [ -d \"$l_home\" ]; then\n         l_mask='0027'\n         l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n         while read -r l_own l_mode; do\n            [ \"$l_user\" != \"$l_own\" ] && l_hoout2=\"$l_hoout2\n  - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is owned by: \\\\\"$l_own\\\\\"\"\n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n               l_haout2=\"$l_haout2\n  - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_max\\\\\" or more restrictive\"\n            fi\n         done <<< \"$(stat -Lc '%U %#a' \"$l_home\")\"\n      else\n         l_heout2=\"$l_heout2\n  - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" Doesn't exist\"\n      fi\n   done <<< \"$(printf '%s\n' \"${a_uarr[@]}\")\"\n   [ -z \"$l_heout2\" ] && l_output=\"$l_output\n   - home directories exist\" || l_output2=\"$l_output2$l_heout2\"\n   [ -z \"$l_hoout2\" ] && l_output=\"$l_output\n   - own their home directory\" || l_output2=\"$l_output2$l_hoout2\"\n   [ -z \"$l_haout2\" ] && l_output=\"$l_output\n   - home directories are mode: \\\\\"$l_max\\\\\" or more restrictive\" || l_output2=\"$l_output2$l_haout2\"\n   [ -n \"$l_output\" ] && l_output=\"  - All local interactive users:$l_output\"\n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\n      echo -e \"\n- Audit Result:\n  ** PASS **\n - * Correctly configured * :\n$l_output\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\"\n      [ -n \"$l_output\" ] && echo -e \"\n- * Correctly configured * :\n$l_output\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_507": {
        "description": "6.2.11 Ensure local interactive user dot files access is configured",
        "info": "While the system administrator can establish secure permissions for users' \"dot\" files, the users can easily override these.\n\n - forward file specifies an email address to forward the user's mail to.\n - rhost file provides the \"remote authentication\" database for the rcp, rlogin, and rsh commands and the rcmd() function. These files bypass the standard password-based user authentication mechanism. They specify remote hosts and users that are considered trusted (i.e. are allowed to access the local system without supplying a password)\n - netrc file contains data for logging into a remote host or passing authentication to an API.\n - bash_history file keeps track of the user's last 500 commands.\n\nUser configuration files with excessive or incorrect access may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
        "solution": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.\n\nThe following script will:\n\n - remove excessive permissions on dot files within interactive users' home directories\n - change ownership of dot files within interactive users' home directories to the user\n - change group ownership of dot files within interactive users' home directories to the user's primary group\n - listforward andrhost files to be investigated and manually deleted\n\n#!/usr/bin/env bash\n\n{\n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      [[ -n \"$l_epu\" && -n \"$l_eph\" ]] && a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   l_maxsize=\"1000\" # Maximum number of local interactive users before warning (Default 1,000)\n   [ \"$l_asize \" -gt \"$l_maxsize\" ] && echo -e \"\\n ** INFO **\\n - \\\\\"$l_asize\\\\\" Local interactive users found on the system\\n - This may be a long running check\\n\"\n   file_access_fix()\n   {\n      l_facout2=\"\"\n      l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n      if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n         echo -e \" - File: \\\\\"$l_hdfile\\\\\" is mode: \\\\\"$l_mode\\\\\" and should be mode: \\\\\"$l_max\\\\\" or more restrictive\\n - Changing to mode \\\\\"$l_max\\\\\"\"\n         chmod \"$l_chp\" \"$l_hdfile\"\n      fi\n      if [[ ! \"$l_owner\" =~ ($l_user) ]]; then\n         echo -e \" - File: \\\\\"$l_hdfile\\\\\" owned by: \\\\\"$l_owner\\\\\" and should be owned by \\\\\"${l_user//|/ or }\\\\\"\\n - Changing ownership to \\\\\"$l_user\\\\\"\"\n         chown \"$l_user\" \"$l_hdfile\"\n      fi\n      if [[ ! \"$l_gowner\" =~ ($l_group) ]]; then\n         echo -e \" - File: \\\\\"$l_hdfile\\\\\" group owned by: \\\\\"$l_gowner\\\\\" and should be group owned by \\\\\"${l_group//|/ or }\\\\\"\\n - Changing group ownership to \\\\\"$l_group\\\\\"\"\n         chgrp \"$l_group\" \"$l_hdfile\"\n      fi\n   }\n   while read -r l_user l_home; do\n      if [ -d \"$l_home\" ]; then\n         echo -e \"\\n - Checking user: \\\\\"$l_user\\\\\" home directory: \\\\\"$l_home\\\\\"\"\n         l_group=\"$(id -gn \"$l_user\" | xargs)\"\n         l_group=\"${l_group// /|}\"\n         while IFS= read -r -d $'\\0' l_hdfile; do\n            while read -r l_mode l_owner l_gowner; do\n               case \"$(basename \"$l_hdfile\")\" in\n                  .forward | .rhost )\n                     echo -e \" - File: \\\\\"$l_hdfile\\\\\" exists\\n - Please investigate and manually delete \\\\\"$l_hdfile\\\\\"\"\n                  ;;\n                  .netrc )\n                     l_mask='0177'\n                     l_chp=\"u-x,go-rwx\"\n                     file_access_fix ;;\n                  .bash_history )\n                     l_mask='0177'\n                     l_chp=\"u-x,go-rwx\"\n                     file_access_fix ;;\n                  * )\n                     l_mask='0133'\n                     l_chp=\"u-x,go-wx\"\n                     file_access_fix ;;\n                  esac\n            done <<< \"$(stat -Lc '%#a %U %G' \"$l_hdfile\")\"\n         done < <(find \"$l_home\" -xdev -type f -name '.*' -print0)\n      fi\n   done <<< \"$(printf '%s\\n' \"${a_uarr[@]}\")\"\n   unset a_uarr # Remove array\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\"\n   l_bf=\"\" l_df=\"\" l_nf=\"\" l_hf=\"\"\n   l_valid_shells=\"^($( awk -F\\\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\\\//{s,/,\\\\\\\\\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      [[ -n \"$l_epu\" && -n \"$l_eph\" ]] && a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   l_maxsize=\"1000\" # Maximun number of local interactive users before warning (Default 1,000)\n   [ \"$l_asize \" -gt \"$l_maxsize\" ] && echo -e \"\n  ** INFO **\n  - \\\\\"$l_asize\\\\\" Local interactive users found on the system\n  - This may be a long running check\n\"\n   file_access_chk()\n   {\n      l_facout2=\"\"\n      l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n      if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n         l_facout2=\"$l_facout2\n  - File: \\\\\"$l_hdfile\\\\\" is mode: \\\\\"$l_mode\\\\\" and should be mode: \\\\\"$l_max\\\\\" or more restrictive\"\n      fi\n      if [[ ! \"$l_owner\" =~ ($l_user) ]]; then\n         l_facout2=\"$l_facout2\n  - File: \\\\\"$l_hdfile\\\\\" owned by: \\\\\"$l_owner\\\\\" and should be owned by \\\\\"${l_user//|/ or }\\\\\"\"\n      fi\n      if [[ ! \"$l_gowner\" =~ ($l_group) ]]; then\n         l_facout2=\"$l_facout2\n  - File: \\\\\"$l_hdfile\\\\\" group owned by: \\\\\"$l_gowner\\\\\" and should be group owned by \\\\\"${l_group//|/ or }\\\\\"\"\n      fi\n   }\n   while read -r l_user l_home; do\n      l_fe=\"\" l_nout2=\"\" l_nout3=\"\" l_dfout2=\"\" l_hdout2=\"\" l_bhout2=\"\"\n      if [ -d \"$l_home\" ]; then\n         l_group=\"$(id -gn \"$l_user\" | xargs)\"\n         l_group=\"${l_group// /|}\"\n         while IFS= read -r -d $'\\\\0' l_hdfile; do\n            while read -r l_mode l_owner l_gowner; do\n               case \"$(basename \"$l_hdfile\")\" in\n                  .forward | .rhost )\n                     l_fe=\"Y\" && l_bf=\"Y\"\n                     l_dfout2=\"$l_dfout2\n  - File: \\\\\"$l_hdfile\\\\\" exists\" ;;\n                  .netrc )\n                     l_mask='0177'\n                     file_access_chk\n                     if [ -n \"$l_facout2\" ]; then\n                        l_fe=\"Y\" && l_nf=\"Y\"\n                        l_nout2=\"$l_facout2\"\n                     else\n                        l_nout3=\"   - File: \\\\\"$l_hdfile\\\\\" exists\"\n                     fi ;;\n                  .bash_history )\n                     l_mask='0177'\n                     file_access_chk\n                     if [ -n \"$l_facout2\" ]; then\n                        l_fe=\"Y\" && l_hf=\"Y\"\n                        l_bhout2=\"$l_facout2\"\n                     fi ;;\n                  * )\n                     l_mask='0133'\n                     file_access_chk\n                     if [ -n \"$l_facout2\" ]; then\n                        l_fe=\"Y\" && l_df=\"Y\"\n                        l_hdout2=\"$l_facout2\"\n                     fi ;;\n                  esac\n            done <<< \"$(stat -Lc '%#a %U %G' \"$l_hdfile\")\"\n         done < <(find \"$l_home\" -xdev -type f -name '.*' -print0)\n      fi\n      if [ \"$l_fe\" = \"Y\" ]; then\n         l_output2=\"$l_output2\n - User: \\\\\"$l_user\\\\\" Home Directory: \\\\\"$l_home\\\\\"\"\n         [ -n \"$l_dfout2\" ] && l_output2=\"$l_output2$l_dfout2\"\n         [ -n \"$l_nout2\" ] && l_output2=\"$l_output2$l_nout2\"\n         [ -n \"$l_bhout2\" ] && l_output2=\"$l_output2$l_bhout2\"\n         [ -n \"$l_hdout2\" ] && l_output2=\"$l_output2$l_hdout2\"\n      fi\n      [ -n \"$l_nout3\" ] && l_output3=\"$l_output3\n  - User: \\\\\"$l_user\\\\\" Home Directory: \\\\\"$l_home\\\\\"\n$l_nout3\"\n   done <<< \"$(printf '%s\n' \"${a_uarr[@]}\")\"\n   unset a_uarr # Remove array\n   [ -n \"$l_output3\" ] && l_output3=\" - ** Warning **\n - \\\\\".netrc\\\\\" files should be removed unless deemed necessary\n   and in accordance with local site policy:$l_output3\"\n   [ -z \"$l_bf\" ] && l_output=\"$l_output\n   - \\\\\".forward\\\\\" or \\\\\".rhost\\\\\" files\"\n   [ -z \"$l_nf\" ] && l_output=\"$l_output\n   - \\\\\".netrc\\\\\" files with incorrect access configured\"\n   [ -z \"$l_hf\" ] && l_output=\"$l_output\n   - \\\\\".bash_history\\\\\" files with incorrect access configured\"\n   [ -z \"$l_df\" ] && l_output=\"$l_output\n   - \\\\\"dot\\\\\" files with incorrect access configured\"\n   [ -n \"$l_output\" ] && l_output=\"  - No local interactive users home directories contain:$l_output\"\n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\n      echo -e \"\n- Audit Result:\n  ** PASS **\n - * Correctly configured * :\n$l_output\n\"\n      echo -e \"$l_output3\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\n\"\n      echo -e \"$l_output3\n\"\n      [ -n \"$l_output\" ] && echo -e \"- * Correctly configured * :\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_508": {
        "description": "6.2.2 Ensure /etc/shadow password fields are not empty",
        "info": "An account with an empty password field means that anybody may log in as that user without providing a password.\n\nAll accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.",
        "solution": "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:\n\n# passwd -lAlso, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "/bin/awk -F : \\'($2 == \"\") { print $1 \" does not have a password.\"}\\' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_509": {
        "description": "6.2.8 Ensure root path integrity",
        "info": "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.\n\nIncluding the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.",
        "solution": "Correct or justify any:\n\n - Locations that are not directories\n - Empty directories ( :: )\n - Trailing ( : )\n - Current working directory ( )\n - Non root owned directories\n - Directories that less restrictive than mode 0755",
        "reference": "800-171|3.4.7,800-53|CM-7(2),800-53r5|CM-7(2),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7(2),LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/15289",
        "cmd": "#!/bin/bash\n\n{\n   l_output2=\"\"\n   l_pmask=\"0022\"\n   l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n   l_root_path=\"$(sudo -Hiu root env | grep '^PATH' | cut -d= -f2)\"\n   unset a_path_loc && IFS=\":\" read -ra a_path_loc <<< \"$l_root_path\"\n   grep -q \"::\" <<< \"$l_root_path\" && l_output2=\"$l_output2\n - root's path contains a empty directory (::)\"\n   grep -Pq \":\\\\h*$\" <<< \"$l_root_path\" && l_output2=\"$l_output2\n - root's path contains a trailing (:)\"\n   grep -Pq '(\\\\h+|:)\\\\.(:|\\\\h*$)' <<< \"$l_root_path\" && l_output2=\"$l_output2\n - root's path contains current working directory (.)\"\n   while read -r l_path; do\n      if [ -d \"$l_path\" ]; then\n         while read -r l_fmode l_fown; do\n            [ \"$l_fown\" != \"root\" ] && l_output2=\"$l_output2\n - Directory: \\\\\"$l_path\\\\\" is owned by: \\\\\"$l_fown\\\\\" should be owned by \\\\\"root\\\\\"\"\n            [ $(( $l_fmode & $l_pmask )) -gt 0 ] && l_output2=\"$l_output2\n - Directory: \\\\\"$l_path\\\\\" is mode: \\\\\"$l_fmode\\\\\" and should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n         done <<< \"$(stat -Lc '%#a %U' \"$l_path\")\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_path\\\\\" is not a directory\"\n      fi\n   done <<< \"$(printf \"%s\n\" \"${a_path_loc[@]}\")\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  *** PASS ***\n - Root's path is correctly configured\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    }
}