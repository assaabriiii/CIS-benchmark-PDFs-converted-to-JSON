{
    "custom_item_1": {
        "description": "MacOS 10.15 is installed",
        "cmd": "/usr/bin/sw_vers | /usr/bin/grep 'ProductVersion'",
        "expect": "^ProductVersion[\\\\s]*:[\\\\s]*@PLATFORM_VERSION@"
    },
    "custom_item_2": {
        "description": "1.8 Ensure Computer Name Does Not Contain PII or Protected Organizational Information",
        "info": "If the computer is used in an organization that assigns host names, it is a good idea to change the computer name to the host name. This is more of a best practice than a security measure. If the host name and the computer name are the same, computer support may be able to track problems down more easily.\n\nFor organizations or for users that self-administer their own computers, it is important to not use sensitive or personal information in computer names. The name of a computer that uses untrusted networks will be exposed at a minimum to the responsible network team of that network. While I may not care if the computer name of Ron Colvin's MacBook Pro is visible on a Hooters WiFi network, other uses may not feel the same way.\n\nExamples of possibly inappropriate content in computer names include:\n\nUser directory account names\n\nComputer directory account names where machine accounts exist\n\nContact phone numbers\n\nPhysical locations of offices or residences\n\nPersonal information that can be augmented with Facebook data to assist social engineering attacks\n\nStandard naming patterns avoid collisions and mitigate risk for computer users.\n\nWith mobile devices, using DHCP IP tracking has serious drawbacks; hostname or computer name tracking makes much more sense for those organizations that can implement it. If the computer is using different names for the 'Computer Name' DNS and Directory environments, it can be difficult to manage Macs in an Enterprise asset inventory.\n\nRationale:\n\nPart of IT security is having visibility into all of the devices for which an organization is responsible. Without a complete inventory, it is impossible to ensure all security controls are met on all organizational devices.\n\nDefault macOS naming deconfliction controls can create issues for appropriate management and tracking as well as privacy exposure. By default, the name of a macOS computer is derived from the first user created. If the user has multiple computers or an image is used without an appropriate name change, there will be multiple computers with names derived from the same user for discovery deconfliction. How many 'Ron Colvin's MacBook Pro' should there be, and are any missing?\n\nLocal network auto renaming to avoid collisions also allows for the enumeration of local computer names. Computers should not be named after their users, especially on untrusted networks. For social engineering purposes, the computer name should not provide a full name of the user or an identifiable name that might be used to assist in targeted user attacks.\n\nA documented plan to better enable a complete device inventory without exposing user or organizational information is part of mature security.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Graphical Method:\nPerform the following steps to set the computer name:\n\nOpen System Preferences\n\nSelect Sharing\n\nSet Computer Name to your organization's parameters",
        "reference": "800-171|3.4.1,800-53|CM-8,800-53|CM-8(1),800-53|PM-5,800-53r5|CM-8,800-53r5|CM-8(1),800-53r5|PM-5,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|9.1,CSCv8|1.1,CSF|DE.CM-7,CSF|ID.AM-1,CSF|ID.AM-2,CSF|PR.DS-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ITSG-33|CM-8,ITSG-33|CM-8(1),LEVEL|2M,NESA|T1.2.1,NESA|T1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/sbin/scutil --get ComputerName",
        "expect": "MANUAL_REVIEW"
    },
    "custom_item_3": {
        "description": "2.3.2 Ensure Screen Saver Corners Are Secure - tr-corner",
        "info": "Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen.\n\nRationale:\n\nSetting a hot corner to disable the screen saver poses a potential security risk since an unauthorized person could use this to bypass the login screen and gain access to the system.",
        "solution": "Graphical Method:\nPerform the following steps to disable a Hot Corner set to Disable Screen Saver:\n\nOpen System Preferences\n\nSelect Desktop & Screen Saver\n\nSelect Screen Saver\n\nSelect Hot Corners... and set any corner that is set to Disable Screen Saver to another setting that corresponds to your organization's requirements\n\nTerminal Method:\nRun the following command to turn off Disable Screen Saver for a Hot Corner:\n\n$ /usr/bin/sudo -u/usr/bin/defaults write com.apple.dock-int 0\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.dock wvous-tl-corner -int 0\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-corner\n\n0\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.dock\n\nThe key to include is Forced\n\nThe key must be set to the following:mcx_preference_settingswvous-bl-cornerwvous-br-cornerwvous-tl-cornerwvous-tr-corner",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|2A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "not_regex": ".* = 6",
        "plist_item": "wvous-tr-corner",
        "plist_name": "com.apple.dock",
        "plist_user": "all"
    },
    "custom_item_4": {
        "description": "2.3.2 Ensure Screen Saver Corners Are Secure - tl-corner",
        "info": "Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen.\n\nRationale:\n\nSetting a hot corner to disable the screen saver poses a potential security risk since an unauthorized person could use this to bypass the login screen and gain access to the system.",
        "solution": "Graphical Method:\nPerform the following steps to disable a Hot Corner set to Disable Screen Saver:\n\nOpen System Preferences\n\nSelect Desktop & Screen Saver\n\nSelect Screen Saver\n\nSelect Hot Corners... and set any corner that is set to Disable Screen Saver to another setting that corresponds to your organization's requirements\n\nTerminal Method:\nRun the following command to turn off Disable Screen Saver for a Hot Corner:\n\n$ /usr/bin/sudo -u/usr/bin/defaults write com.apple.dock-int 0\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.dock wvous-tl-corner -int 0\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-corner\n\n0\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.dock\n\nThe key to include is Forced\n\nThe key must be set to the following:mcx_preference_settingswvous-bl-cornerwvous-br-cornerwvous-tl-cornerwvous-tr-corner",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|2A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "not_regex": ".* = 6",
        "plist_item": "wvous-tl-corner",
        "plist_name": "com.apple.dock",
        "plist_user": "all"
    },
    "custom_item_5": {
        "description": "2.3.2 Ensure Screen Saver Corners Are Secure - bl-corner",
        "info": "Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen.\n\nRationale:\n\nSetting a hot corner to disable the screen saver poses a potential security risk since an unauthorized person could use this to bypass the login screen and gain access to the system.",
        "solution": "Graphical Method:\nPerform the following steps to disable a Hot Corner set to Disable Screen Saver:\n\nOpen System Preferences\n\nSelect Desktop & Screen Saver\n\nSelect Screen Saver\n\nSelect Hot Corners... and set any corner that is set to Disable Screen Saver to another setting that corresponds to your organization's requirements\n\nTerminal Method:\nRun the following command to turn off Disable Screen Saver for a Hot Corner:\n\n$ /usr/bin/sudo -u/usr/bin/defaults write com.apple.dock-int 0\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.dock wvous-tl-corner -int 0\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-corner\n\n0\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.dock\n\nThe key to include is Forced\n\nThe key must be set to the following:mcx_preference_settingswvous-bl-cornerwvous-br-cornerwvous-tl-cornerwvous-tr-corner",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|2A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "not_regex": ".* = 6",
        "plist_item": "wvous-bl-corner",
        "plist_name": "com.apple.dock",
        "plist_user": "all"
    },
    "custom_item_6": {
        "description": "2.3.2 Ensure Screen Saver Corners Are Secure - br-corner",
        "info": "Hot Corners can be configured to disable the screen saver by moving the mouse cursor to a corner of the screen.\n\nRationale:\n\nSetting a hot corner to disable the screen saver poses a potential security risk since an unauthorized person could use this to bypass the login screen and gain access to the system.",
        "solution": "Graphical Method:\nPerform the following steps to disable a Hot Corner set to Disable Screen Saver:\n\nOpen System Preferences\n\nSelect Desktop & Screen Saver\n\nSelect Screen Saver\n\nSelect Hot Corners... and set any corner that is set to Disable Screen Saver to another setting that corresponds to your organization's requirements\n\nTerminal Method:\nRun the following command to turn off Disable Screen Saver for a Hot Corner:\n\n$ /usr/bin/sudo -u/usr/bin/defaults write com.apple.dock-int 0\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write com.apple.dock wvous-tl-corner -int 0\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults read com.apple.dock wvous-tl-corner\n\n0\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.dock\n\nThe key to include is Forced\n\nThe key must be set to the following:mcx_preference_settingswvous-bl-cornerwvous-br-cornerwvous-tl-cornerwvous-tr-corner",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|2A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "not_regex": ".* = 6",
        "plist_item": "wvous-br-corner",
        "plist_name": "com.apple.dock",
        "plist_user": "all"
    },
    "custom_item_7": {
        "description": "Check for AssetCache",
        "expect": "false",
        "payload_key": "Activated",
        "payload_type": "com.apple.AssetCache"
    },
    "custom_item_8": {
        "description": "2.4.10 Ensure Content Caching Is Disabled",
        "info": "Starting with 10.13 (macOS High Sierra), Apple introduced a service to make it easier to deploy data from Apple, including software updates, where there are bandwidth constraints to the Internet and fewer constraints or greater bandwidth exist on the local subnet. This capability can be very valuable for organizations that have throttled and possibly metered Internet connections. In heterogeneous enterprise networks with multiple subnets, the effectiveness of this capability would be determined by how many Macs were on each subnet at the time new, large updates were made available upstream. This capability requires the use of mac OS clients as P2P nodes for updated Apple content. Unless there is a business requirement to manage operational Internet connectivity and bandwidth user endpoints should not store content and act as a cluster to provision data.\n\nContent types supported by Content Caching in macOS\n\nRationale:\n\nThe main use case for Mac computers is as mobile user endpoints. P2P sharing services should not be enabled on laptops that are using untrusted networks. Content Caching can allow a computer to be a server for local nodes on an untrusted network. While there are certainly logical controls that could be used to mitigate risk, they add to the management complexity. Since the value of the service is in specific use cases organizations with the use case described above can accept risk as necessary.\n\nImpact:\n\nThis setting will adversely affect bandwidth usage between local subnets and the Internet.",
        "solution": "Graphical Method:\nPerform the following steps to disable Content Caching:\n\nOpen System Preferences\n\nSelect Sharing\n\nSet Content Caching to disabled\n\nTerminal Method:\nRun the following command to disable Content Caching:\n\n$ /usr/bin/sudo /usr/bin/AssetCacheManagerUtil deactivate\n\nThe output will include Content caching deactivated\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowContentCaching\n\nThe key must be set to",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "false",
        "payload_key": "Activated",
        "payload_type": "com.apple.AssetCache"
    },
    "custom_item_9": {
        "description": "2.4.10 Ensure Content Caching Is Disabled",
        "info": "Starting with 10.13 (macOS High Sierra), Apple introduced a service to make it easier to deploy data from Apple, including software updates, where there are bandwidth constraints to the Internet and fewer constraints or greater bandwidth exist on the local subnet. This capability can be very valuable for organizations that have throttled and possibly metered Internet connections. In heterogeneous enterprise networks with multiple subnets, the effectiveness of this capability would be determined by how many Macs were on each subnet at the time new, large updates were made available upstream. This capability requires the use of mac OS clients as P2P nodes for updated Apple content. Unless there is a business requirement to manage operational Internet connectivity and bandwidth user endpoints should not store content and act as a cluster to provision data.\n\nContent types supported by Content Caching in macOS\n\nRationale:\n\nThe main use case for Mac computers is as mobile user endpoints. P2P sharing services should not be enabled on laptops that are using untrusted networks. Content Caching can allow a computer to be a server for local nodes on an untrusted network. While there are certainly logical controls that could be used to mitigate risk, they add to the management complexity. Since the value of the service is in specific use cases organizations with the use case described above can accept risk as necessary.\n\nImpact:\n\nThis setting will adversely affect bandwidth usage between local subnets and the Internet.",
        "solution": "Graphical Method:\nPerform the following steps to disable Content Caching:\n\nOpen System Preferences\n\nSelect Sharing\n\nSet Content Caching to disabled\n\nTerminal Method:\nRun the following command to disable Content Caching:\n\n$ /usr/bin/sudo /usr/bin/AssetCacheManagerUtil deactivate\n\nThe output will include Content caching deactivated\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowContentCaching\n\nThe key must be set to",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "false",
        "payload_key": "allowContentCaching",
        "payload_type": "com.apple.applicationaccess"
    },
    "custom_item_10": {
        "description": "Check for homeSharingUIStatus",
        "expect": "^0$",
        "payload_key": "homeSharingUIStatus",
        "payload_type": "com.apple.preferences.sharing.SharingPrefsExtension"
    },
    "custom_item_11": {
        "description": "Check for legacySharingUIStatus",
        "expect": "^0$",
        "payload_key": "legacySharingUIStatus",
        "payload_type": "com.apple.preferences.sharing.SharingPrefsExtension"
    },
    "custom_item_12": {
        "description": "Check for mediaSharingUIStatus",
        "expect": "^0$",
        "payload_key": "mediaSharingUIStatus",
        "payload_type": "com.apple.preferences.sharing.SharingPrefsExtension"
    },
    "custom_item_13": {
        "description": "2.4.12 Ensure Media Sharing Is Disabled",
        "info": "Starting with macOS 10.15, Apple has provided a control which permits a user to share Apple downloaded content on all Apple devices that are signed in with the same Apple ID. This allows users to share downloaded Movies, Music, or TV shows with other controlled macOS, iOS and iPadOS devices, as well as photos with Apple TVs.\n\nWith this capability, guest users can also use media downloaded on the computer.\n\nThe recommended best practice is not to use the computer as a server, but to utilize Apple's cloud storage in order to download and use content stored there if content stored with Apple is used on multiple devices.\n\nhttps://support.apple.com/guide/mac-help/set-up-media-sharing-on-mac-mchlp13371337/mac\n\nRationale:\n\nDisabling Media Sharing reduces the remote attack surface of the system.\n\nImpact:\n\nMedia Sharing allows for pre-downloaded content on a Mac to be available to other Apple devices on the same network. Leaving this disabled forces device users to stream or download content from each Apple authorized device. This sharing could even allow unauthorized devices on the same network media access.",
        "solution": "Graphical Method:\nPerform the following steps to disable Media Sharing:\n\nOpen System Preferences\n\nSelect Sharing\n\nSet Media Sharing to disabled\n\nTerminal Method:\nRun the following command to disable Media Sharing:\n\n$ /usr/bin/sudo -u/usr/bin/defaults write com.apple.amp.mediasharingd home-sharing-enabled -int 0\n\nexample:\n\n$ sudo -u test2 /usr/bin/defaults write com.apple.amp.mediasharingd home-sharing-enabled -int 0\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.preferences.sharing.SharingPrefsExtension\n\nThe key to include is homeSharingUIStatus\n\nThe key must be set to0The key to also include is legacySharingUIStatus\n\nThe key must be set to0The key to also include is mediaSharingUIStatus\n\nThe key must be set to0Note: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "regex": "0",
        "plist_item": "home-sharing-enabled",
        "plist_name": "com.apple.amp.mediasharingd",
        "plist_user": "all"
    },
    "custom_item_14": {
        "description": "2.5.3 Ensure Location Services Is Enabled - launchctl",
        "info": "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. With the operating system verifying the location, users do not need to change the time or the time zone. The computer will change them based on the user's location. They do not need to specify their location for weather or travel times, and they will receive alerts on travel times to meetings and appointment where location information is supplied.\n\nLocation Services simplify some processes with mobile computers, such as asset management and time or log management.\n\nThere are some use cases where it is important that the computer not be able to report its exact location. While the general use case is to enable Location Services, it should not be allowed if the physical location of the computer and the user should not be public knowledge.\n\nRationale:\n\nLocation Services are helpful in most use cases and can simplify log and time management where computers change time zones.",
        "solution": "Graphical Method:\nPerform the following steps to enable Location Services:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSet Enable Location Services to enabled\n\nTerminal Method:\nRun the following command to enable Location Services:\n\n$ /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist\n\nIf the com.apple.locationd.plist outputs 0, run the following command to also ensure Location Services is running:\n\n$ /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool false\n\n$ /usr/bin/sudo /bin/launchctl kickstart -k system/com.apple.locationd\n\nNote: In some use cases, organizations may not want Location Services running. To disable Location Services, System Integrity Protection must be disabled.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/bin/launchctl list | /usr/bin/grep -c com.apple.locationd",
        "expect": "1"
    },
    "custom_item_15": {
        "description": "2.5.3 Ensure Location Services Is Enabled - LocationServicesEnabled",
        "info": "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. With the operating system verifying the location, users do not need to change the time or the time zone. The computer will change them based on the user's location. They do not need to specify their location for weather or travel times, and they will receive alerts on travel times to meetings and appointment where location information is supplied.\n\nLocation Services simplify some processes with mobile computers, such as asset management and time or log management.\n\nThere are some use cases where it is important that the computer not be able to report its exact location. While the general use case is to enable Location Services, it should not be allowed if the physical location of the computer and the user should not be public knowledge.\n\nRationale:\n\nLocation Services are helpful in most use cases and can simplify log and time management where computers change time zones.",
        "solution": "Graphical Method:\nPerform the following steps to enable Location Services:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSet Enable Location Services to enabled\n\nTerminal Method:\nRun the following command to enable Location Services:\n\n$ /usr/bin/sudo /bin/launchctl load -w /System/Library/LaunchDaemons/com.apple.locationd.plist\n\nIf the com.apple.locationd.plist outputs 0, run the following command to also ensure Location Services is running:\n\n$ /usr/bin/sudo /usr/bin/defaults write /var/db/locationd/Library/Preferences/ByHost/com.apple.locationd LocationServicesEnabled -bool false\n\n$ /usr/bin/sudo /bin/launchctl kickstart -k system/com.apple.locationd\n\nNote: In some use cases, organizations may not want Location Services running. To disable Location Services, System Integrity Protection must be disabled.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "true",
        "payload_key": "LocationServicesEnabled",
        "payload_type": "com.apple.locationd"
    },
    "custom_item_16": {
        "description": "2.5.4 Audit Location Services Access",
        "info": "macOS uses location information gathered through local Wi-Fi networks to enable applications to supply relevant information to users. While Location Services may be very useful, it may not be desirable to allow all applications that can use Location Services to use your location for Internet queries in order to provide tailored content based on your current location.\n\nEnsure applications that can use Location Services are authorized and provide that information where the application interacts with external systems. Apple offers feedback within System Preferences and may be enabled to supply information on the menu bar when Location Services are used.\n\nSafari can deny access from websites or prompt for access.\n\nApplications that support Location Services can be individually controlled in the Privacy tab in Security & Privacy under System Preferences.\n\nAccess should be evaluated to ensure that privacy controls are as expected.\n\nRationale:\n\nPrivacy controls should be monitored for appropriate settings.\n\nImpact:\n\nMany macOS features rely on Location Services for tailored information. Users expect their time zone and weather to be relevant to where they are without manual intervention. Find my Mac needs to know where your Mac is actually located. Where possible, the tolerance between location privacy and convenience may be best left to the user when the location itself is not sensitive. If facility locations are not public, location information should be tightly controlled.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Graphical Method:\nPerform the following to disable unnecessary applications from accessing Location Services:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSelect Location Services\n\nSet any applications that are not approved for access to Location Service information to disabled\n\nPerform the following to set websites to ask for permission to access Location Services:\n\nOpen Safari\n\nSelect Safari from the menu bar\n\nSelect Preferences\n\nSelect Websites\n\nSelect Location\n\nSet When visiting other websites to Ask or Deny",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.4.9,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-7(2),800-53|CM-8(3),800-53|CM-9,800-53|CM-10,800-53|CM-11,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-7(2),800-53r5|CM-8(3),800-53r5|CM-9,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CN-L3|8.1.10.2(a),CN-L3|8.1.10.2(b),CSCv7|2.6,CSCv7|5.1,CSCv8|2.3,CSCv8|4.1,CSF|DE.AE-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-7(2),ITSG-33|CM-8(3),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|7.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.3,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/defaults read /var/db/locationd/clients.plist | /usr/bin/grep -i com.*",
        "expect": "MANUAL_REVIEW"
    },
    "custom_item_17": {
        "description": "Check for AutoSubmit plist",
        "cmd": "/usr/bin/defaults read '/Library/Application Support/CrashReporter/DiagnosticMessagesHistory.plist' 'AutoSubmit'",
        "expect": "0"
    },
    "custom_item_18": {
        "description": "Check for ThirdPartyDataSubmit plist",
        "cmd": "/usr/bin/defaults read '/Library/Application Support/CrashReporter/DiagnosticMessagesHistory.plist' 'ThirdPartyDataSubmit'",
        "expect": "0"
    },
    "custom_item_19": {
        "description": "Check for com.apple.assistant.support plist",
        "regex": "2",
        "plist_item": "'Siri Data Sharing Opt-In Status'",
        "plist_name": "com.apple.assistant.support",
        "plist_user": "all"
    },
    "custom_item_20": {
        "description": "2.5.5 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled - AutoSubmit",
        "info": "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing.\n\nShare Mac Analytics (Share with App Developers dependent on Mac Analytic sharing)\n\nIncludes diagnostics, usage and location data\n\nShare iCloud Analytics\n\nIncludes iCloud data and usage information\n\nRationale:\n\nOrganizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
        "solution": "Graphical Method:\nPerform the following steps to disable diagnostic data being sent to Apple:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSelect Analytics & Improvements\n\nSet Share Mac Analytics to disabled\n\nSet Share with App Developers to disabled\n\nTerminal Method:\nRun the following commands to disable the sending of diagnostic data to Apple:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false\n\n/usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit -bool false\n\n$ /usr/bin/sudo /bin/chmod 644 /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo /usr/sbin/chgrp admin /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo -u/usr/bin/defaults write /Users//Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowDiagnosticSubmission\n\nThe key must be set toThe key to also include is Siri Data Sharing Opt-In Status\n\nThe key must be set to2There must also be a second PayloadType string of com.apple.SubmitDiagInfo\n\nThe key to include is AutoSubmit\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/defaults read '/Library/Application Support/CrashReporter/DiagnosticMessagesHistory.plist' 'AutoSubmit'",
        "expect": "0"
    },
    "custom_item_21": {
        "description": "2.5.5 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled - Submission",
        "info": "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing.\n\nShare Mac Analytics (Share with App Developers dependent on Mac Analytic sharing)\n\nIncludes diagnostics, usage and location data\n\nShare iCloud Analytics\n\nIncludes iCloud data and usage information\n\nRationale:\n\nOrganizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
        "solution": "Graphical Method:\nPerform the following steps to disable diagnostic data being sent to Apple:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSelect Analytics & Improvements\n\nSet Share Mac Analytics to disabled\n\nSet Share with App Developers to disabled\n\nTerminal Method:\nRun the following commands to disable the sending of diagnostic data to Apple:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false\n\n/usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit -bool false\n\n$ /usr/bin/sudo /bin/chmod 644 /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo /usr/sbin/chgrp admin /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo -u/usr/bin/defaults write /Users//Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowDiagnosticSubmission\n\nThe key must be set toThe key to also include is Siri Data Sharing Opt-In Status\n\nThe key must be set to2There must also be a second PayloadType string of com.apple.SubmitDiagInfo\n\nThe key to include is AutoSubmit\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "regex": "2",
        "plist_item": "'Siri Data Sharing Opt-In Status'",
        "plist_name": "com.apple.assistant.support",
        "plist_user": "all"
    },
    "custom_item_22": {
        "description": "2.5.5 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled - Siri Opt-In",
        "info": "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing.\n\nShare Mac Analytics (Share with App Developers dependent on Mac Analytic sharing)\n\nIncludes diagnostics, usage and location data\n\nShare iCloud Analytics\n\nIncludes iCloud data and usage information\n\nRationale:\n\nOrganizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
        "solution": "Graphical Method:\nPerform the following steps to disable diagnostic data being sent to Apple:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSelect Analytics & Improvements\n\nSet Share Mac Analytics to disabled\n\nSet Share with App Developers to disabled\n\nTerminal Method:\nRun the following commands to disable the sending of diagnostic data to Apple:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false\n\n/usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit -bool false\n\n$ /usr/bin/sudo /bin/chmod 644 /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo /usr/sbin/chgrp admin /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo -u/usr/bin/defaults write /Users//Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowDiagnosticSubmission\n\nThe key must be set toThe key to also include is Siri Data Sharing Opt-In Status\n\nThe key must be set to2There must also be a second PayloadType string of com.apple.SubmitDiagInfo\n\nThe key to include is AutoSubmit\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/defaults read '/Library/Application Support/CrashReporter/DiagnosticMessagesHistory.plist' 'ThirdPartyDataSubmit'",
        "expect": "0"
    },
    "custom_item_23": {
        "description": "2.5.5 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled - AutoSubmit",
        "info": "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing.\n\nShare Mac Analytics (Share with App Developers dependent on Mac Analytic sharing)\n\nIncludes diagnostics, usage and location data\n\nShare iCloud Analytics\n\nIncludes iCloud data and usage information\n\nRationale:\n\nOrganizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
        "solution": "Graphical Method:\nPerform the following steps to disable diagnostic data being sent to Apple:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSelect Analytics & Improvements\n\nSet Share Mac Analytics to disabled\n\nSet Share with App Developers to disabled\n\nTerminal Method:\nRun the following commands to disable the sending of diagnostic data to Apple:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false\n\n/usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit -bool false\n\n$ /usr/bin/sudo /bin/chmod 644 /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo /usr/sbin/chgrp admin /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo -u/usr/bin/defaults write /Users//Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowDiagnosticSubmission\n\nThe key must be set toThe key to also include is Siri Data Sharing Opt-In Status\n\nThe key must be set to2There must also be a second PayloadType string of com.apple.SubmitDiagInfo\n\nThe key to include is AutoSubmit\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "false",
        "payload_key": "AutoSubmit",
        "payload_type": "com.apple.SubmitDiagInfo"
    },
    "custom_item_24": {
        "description": "2.5.5 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled - Submission",
        "info": "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing.\n\nShare Mac Analytics (Share with App Developers dependent on Mac Analytic sharing)\n\nIncludes diagnostics, usage and location data\n\nShare iCloud Analytics\n\nIncludes iCloud data and usage information\n\nRationale:\n\nOrganizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
        "solution": "Graphical Method:\nPerform the following steps to disable diagnostic data being sent to Apple:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSelect Analytics & Improvements\n\nSet Share Mac Analytics to disabled\n\nSet Share with App Developers to disabled\n\nTerminal Method:\nRun the following commands to disable the sending of diagnostic data to Apple:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false\n\n/usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit -bool false\n\n$ /usr/bin/sudo /bin/chmod 644 /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo /usr/sbin/chgrp admin /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo -u/usr/bin/defaults write /Users//Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowDiagnosticSubmission\n\nThe key must be set toThe key to also include is Siri Data Sharing Opt-In Status\n\nThe key must be set to2There must also be a second PayloadType string of com.apple.SubmitDiagInfo\n\nThe key to include is AutoSubmit\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "false",
        "payload_key": "allowDiagnosticSubmission",
        "payload_type": "com.apple.applicationaccess"
    },
    "custom_item_25": {
        "description": "2.5.5 Ensure Sending Diagnostic and Usage Data to Apple Is Disabled - Siri Opt-In",
        "info": "Apple provides a mechanism to send diagnostic and analytics data back to Apple to help them improve the platform. Information sent to Apple may contain internal organizational information that should be controlled and not available for processing by Apple. Turn off all Analytics and Improvements sharing.\n\nShare Mac Analytics (Share with App Developers dependent on Mac Analytic sharing)\n\nIncludes diagnostics, usage and location data\n\nShare iCloud Analytics\n\nIncludes iCloud data and usage information\n\nRationale:\n\nOrganizations should have knowledge of what is shared with the vendor and that this setting automatically forwards information to Apple.",
        "solution": "Graphical Method:\nPerform the following steps to disable diagnostic data being sent to Apple:\n\nOpen System Preferences\n\nSelect Security & Privacy\n\nSelect Privacy\n\nSelect Analytics & Improvements\n\nSet Share Mac Analytics to disabled\n\nSet Share with App Developers to disabled\n\nTerminal Method:\nRun the following commands to disable the sending of diagnostic data to Apple:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist AutoSubmit -bool false\n\n/usr/bin/sudo /usr/bin/defaults write /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist ThirdPartyDataSubmit -bool false\n\n$ /usr/bin/sudo /bin/chmod 644 /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo /usr/sbin/chgrp admin /Library/Application\\ Support/CrashReporter/DiagnosticMessagesHistory.plist\n\n$ /usr/bin/sudo -u/usr/bin/defaults write /Users//Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nexample:\n\n$ /usr/bin/sudo -u seconduser /usr/bin/defaults write /Users/seconduser/Library/Preferences/com.apple.assistant.support 'Siri Data Sharing Opt-In Status' -int 2\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowDiagnosticSubmission\n\nThe key must be set toThe key to also include is Siri Data Sharing Opt-In Status\n\nThe key must be set to2There must also be a second PayloadType string of com.apple.SubmitDiagInfo\n\nThe key to include is AutoSubmit\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "2",
        "payload_key": "Siri Data Sharing Opt-In Status",
        "payload_type": "com.apple.applicationaccess"
    },
    "custom_item_26": {
        "description": "2.6.2 Audit App Store Password Settings",
        "info": "With OS X 10.11, Apple added settings for password storage for the App Store in macOS. These settings parallel the settings in iOS. As with iOS, the choices are a requirement to provide a password after every purchase or to have a 15-minute grace period, and whether or not to require a password for free purchases. The response to this setting is stored in a cookie and processed by iCloud.\n\nThere is plenty of risk information on the wisdom of this setting for parents with children buying games on iPhones and iPads. The most relevant information here is the likelihood that users who are not authorized to download software may have physical access to an unlocked computer where someone who is authorized recently made a purchase. If that is a concern, a password should be required at all times for App Store access in the Password Settings controls.\n\nRationale:\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Graphical Method:\nPerform the following steps to set App Store Passwords to your organization's requirements:\n\nOpen System Preferences\n\nSelect Apple ID\n\nSelect Media & Purchases\n\nSelect the setting for Free Downloads that are withing your organization's requirements\n\nSelect the setting for Purchases and In-App Purchases that are within your organization's requirements",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "regex": "Manual Review Required",
        "plist_item": " ",
        "plist_name": "MobileMeAccounts",
        "plist_user": "all"
    },
    "custom_item_27": {
        "description": "2.6.1.1 Audit iCloud Keychain",
        "info": "The iCloud keychain is Apple's password manager that works with macOS and iOS. The capability allows users to store passwords in either iOS or macOS for use in Safari on both platforms and other iOS-integrated applications. The most pervasive use is driven by iOS use rather than macOS. The passwords stored in a macOS keychain on an Enterprise-managed computer could be stored in Apple's cloud and then be available on a personal computer using the same account. The stored passwords could be for organizational as well as for personal accounts.\n\nIf passwords are no longer being used as organizational tokens, they are not in scope for iCloud keychain storage.\n\nRationale:\n\nEnsure that the iCloud keychain is used consistently with organizational requirements.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Graphical Method:\nPerform the following steps to set iCloud keychain sync based on your organization's requirements:\n\nOpen System Preferences\n\nSelect Apple ID\n\nSelect iCloud\n\nSet Keychain to meet your organization's requirements\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowCloudKeychainSync\n\nThe key should be set, to allow iCloud keychain syncing, or, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.1.20,800-171|3.1.21,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-20(1),800-53|AC-20(2),800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-20(1),800-53r5|AC-20(2),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSCv8|15.3,CSF|DE.AE-1,CSF|ID.AM-4,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|AC-20(1),ITSG-33|AC-20(2),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|M1.3.5,NESA|M4.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T1.2.3,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.5",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "regex": "Manual Review Required",
        "plist_item": " ",
        "plist_name": "MobileMeAccounts",
        "plist_user": "all"
    },
    "custom_item_28": {
        "description": "2.6.1.2 Audit iCloud Drive",
        "info": "iCloud Drive is Apple's storage solution for applications on both macOS and iOS to use the same files that are resident in Apple's cloud storage. The iCloud Drive folder is available much like Dropbox, Microsoft OneDrive, or Google Drive.\n\nOne of the concerns in public cloud storage is that proprietary data may be inappropriately stored in an end user's personal repository. Organizations that need specific controls on information should ensure that this service is turned off or the user knows what information must be stored on services that are approved for storage of controlled information.\n\nRationale:\n\nOrganizations should review third party storage solutions pertaining to existing data confidentiality and integrity requirements.\n\nImpact:\n\nUsers will not be able to use continuity on macOS to resume the use of newly composed but unsaved files.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Graphical Method:\nPerform the following steps to set iCloud Drive to your organization's requirements:\n\nOpen System Preferences\n\nSelect Apple ID\n\nSelect iCloud\n\nSet iCloud Drive to for your organization's requirements\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowCloudDocumentSync\n\nThe key should be set, to allow iCloud Drive, or, to disable it, based on your organization's requirements\n\nNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.1.20,800-171|3.1.21,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-20(1),800-53|AC-20(2),800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-20(1),800-53r5|AC-20(2),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSCv8|15.3,CSF|DE.AE-1,CSF|ID.AM-4,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|AC-20(1),ITSG-33|AC-20(2),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2M,NESA|M1.2.2,NESA|M1.3.5,NESA|M4.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T1.2.3,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.5",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "regex": "Manual Review Required",
        "plist_item": " ",
        "plist_name": "MobileMeAccounts",
        "plist_user": "all"
    },
    "custom_item_29": {
        "description": "Check for allowCloudDesktopAndDocuments",
        "expect": "false",
        "payload_key": "allowCloudDesktopAndDocuments",
        "payload_type": "com.apple.applicationaccess"
    },
    "custom_item_30": {
        "description": "2.6.1.3 Ensure iCloud Drive Document and Desktop Sync Is Disabled",
        "info": "With macOS 10.12, Apple introduced the capability to have a user's Desktop and Documents folders automatically synchronize to the user's iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive. This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using this capability.\n\nThe storage space that Apple provides for free is used by users with iCloud mail, all of a user's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all iOS Backups. Adding a synchronization capability for users who have files going back a decade or more, storage may be tight using the free 5GB provided without purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique content on each will have issues as well.\n\nEnterprise users may not be allowed to store Enterprise information in a third-party public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put working files.\n\nThe automatic synchronization of all files in a user's Desktop and Documents folders should be disabled.\n\nhttps://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-macos-sierra-the-good-the-bad-and-the-ugly/\n\nRationale:\n\nAutomated Document synchronization should be planned and controlled to approved storage.\n\nImpact:\n\nUsers will not be able to use iCloud for the automatic sync of the Desktop and Documents folders.",
        "solution": "Graphical Method:\nPerform the following steps to disable iCloud Desktop and Document syncing:\n\nOpen 'System Preferences\n\nSelect 'Apple ID\n\nSelect 'iCloud\n\nSelect Options... next to iCloud Drive\n\nSet Desktop & Documents Folders to disabled\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowCloudDesktopAndDocuments\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.1.20,800-171|3.1.21,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-20(1),800-53|AC-20(2),800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-20(1),800-53r5|AC-20(2),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSCv8|15.3,CSF|DE.AE-1,CSF|ID.AM-4,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|AC-20(1),ITSG-33|AC-20(2),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|M1.3.5,NESA|M4.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T1.2.3,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.5",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "false",
        "payload_key": "allowCloudDesktopAndDocuments",
        "payload_type": "com.apple.applicationaccess"
    },
    "custom_item_31": {
        "description": "2.6.1.3 Ensure iCloud Drive Document and Desktop Sync Is Disabled",
        "info": "With macOS 10.12, Apple introduced the capability to have a user's Desktop and Documents folders automatically synchronize to the user's iCloud Drive, provided they have enough room purchased through Apple on their iCloud Drive. This capability mirrors what Microsoft is doing with the use of OneDrive and Office 365. There are concerns with using this capability.\n\nThe storage space that Apple provides for free is used by users with iCloud mail, all of a user's Photo Library created with the ever larger Multi-Pixel iPhone cameras, and all iOS Backups. Adding a synchronization capability for users who have files going back a decade or more, storage may be tight using the free 5GB provided without purchasing much larger storage capacity from Apple. Users with multiple computers running 10.12 and above with unique content on each will have issues as well.\n\nEnterprise users may not be allowed to store Enterprise information in a third-party public cloud. In previous implementations, such as iCloud Drive or DropBox, the user selected what files were synchronized even if there were no other controls. The new feature synchronizes all files in a folder widely used to put working files.\n\nThe automatic synchronization of all files in a user's Desktop and Documents folders should be disabled.\n\nhttps://derflounder.wordpress.com/2016/09/23/icloud-desktop-and-documents-in-macos-sierra-the-good-the-bad-and-the-ugly/\n\nRationale:\n\nAutomated Document synchronization should be planned and controlled to approved storage.\n\nImpact:\n\nUsers will not be able to use iCloud for the automatic sync of the Desktop and Documents folders.",
        "solution": "Graphical Method:\nPerform the following steps to disable iCloud Desktop and Document syncing:\n\nOpen 'System Preferences\n\nSelect 'Apple ID\n\nSelect 'iCloud\n\nSelect Options... next to iCloud Drive\n\nSet Desktop & Documents Folders to disabled\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.applicationaccess\n\nThe key to include is allowCloudDesktopAndDocuments\n\nThe key must be set toNote: Since the profile method sets a system-wide setting and not a user-level one, the profile method is the preferred method. It is always better to set system-wide than per user.",
        "reference": "800-171|3.1.20,800-171|3.1.21,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|AC-20(1),800-53|AC-20(2),800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|AC-20(1),800-53r5|AC-20(2),800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSCv8|4.8,CSCv8|15.3,CSF|DE.AE-1,CSF|ID.AM-4,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.AC-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|AC-20(1),ITSG-33|AC-20(2),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|M1.3.5,NESA|M4.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T1.2.3,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.5",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/bin/ls -l /Users/*/Library/Mobile\\\\ Documents/com~apple~CloudDocs/Documents/ | /usr/bin/egrep -c '^total'",
        "expect": "^0$"
    },
    "custom_item_32": {
        "description": "2.7.1 Ensure Backup Automatically is Enabled If Time Machine Is Enabled",
        "info": "Backup solutions are only effective if the backups run on a regular basis. The time to check for backups is before the hard drive fails or the computer goes missing. In order to simplify the user experience so that backups are more likely to occur, Time Machine should be on and set to Back Up Automatically whenever the target volume is available.\n\nOperational staff should ensure that backups complete on a regular basis and the backups are tested to ensure that file restoration from backup is possible when needed.\n\nBackup dates are available even when the target volume is not available in the Time Machine plist.\n\nSnapshotDates = (\n\n'2012-08-20 12:10:22 +0000',\n\n'2013-02-03 23:43:22 +0000',\n\n'2014-02-19 21:37:21 +0000',\n\n'2015-02-22 13:07:25 +0000',\n\n'2016-08-20 14:07:14 +0000'\n\nWhen the backup volume is connected to the computer more extensive information is available through tmutil. See man tmutil\n\nRationale:\n\nBackups should automatically run whenever the backup drive is available.\n\nImpact:\n\nThe backup will run periodically in the background and could have user impact while running.",
        "solution": "Graphical Method:\nPerform the following steps to enable to backup automatically if Time Machine is enabled:\n\nOpen System Preferences\n\nSelect Time Machine\n\nVerify that Time Machine is enabled\n\nSet Back Up Automatically to enabled\n\nTerminal Method:\nRun the following command to enable automatic backups if Time Machine is enabled:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.TimeMachine.plist AutoBackup -bool true\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.TimeMachine\n\nThe key to include is Forced\n\nThe key must be set to:mcx_preference_settingsAutoBackup",
        "reference": "800-171|3.8.9,800-53|CP-9,800-53|CP-10,800-53r5|CP-9,800-53r5|CP-10,CSCv7|10.1,CSCv8|11.2,CSF|PR.IP-4,CSF|RC.RP-1,CSF|RS.RP-1,GDPR|32.1.b,GDPR|32.1.c,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(ii),ISO/IEC-27001|A.12.3.1,ITSG-33|CP-9,ITSG-33|CP-10,ITSG-33|CP-10a.,LEVEL|2A,NESA|M5.2.3,NESA|T2.2.4,QCSC-v1|5.2.3,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "true",
        "payload_key": "AutoBackup",
        "payload_type": "com.apple.TimeMachine"
    },
    "custom_item_33": {
        "system": "Linux",
        "description": "Check for processor type",
        "cmd": "/usr/sbin/sysctl -n machdep.cpu.brand_string",
        "expect": "Intel"
    },
    "custom_item_34": {
        "description": "Check to see if system is a laptop",
        "cmd": "/usr/sbin/system_profiler SPHardwareDataType | /usr/bin/egrep MacBook",
        "expect": "MacBook"
    },
    "custom_item_35": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Intel standbydelayhigh",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep standbydelayhigh",
        "expect": "standbydelayhigh[\\\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)$"
    },
    "custom_item_36": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Intel standbydelaylow",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep standbydelaylow",
        "expect": "standbydelaylow[\\\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)$"
    },
    "custom_item_37": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Intel highstandbythreshold",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep highstandbythreshold",
        "expect": "highstandbythreshold[\\\\s]+(9[0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9])$"
    },
    "custom_item_38": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Intel DestroyFVKeyOnStandby",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep DestroyFVKeyOnStandby",
        "expect": "DestroyFVKeyOnStandby[\\\\s]+1$"
    },
    "custom_item_39": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Intel hibernatemode",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep hibernatemode",
        "expect": "hibernatemode[\\\\s]+25$"
    },
    "custom_item_40": {
        "description": "Check to see if system is a laptop",
        "cmd": "/usr/sbin/system_profiler SPHardwareDataType | /usr/bin/egrep MacBook",
        "expect": "MacBook"
    },
    "custom_item_41": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Apple standby",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep standby",
        "expect": "standby[\\\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)$"
    },
    "custom_item_42": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Apple DestroyFVKeyOnStandby",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep DestroyFVKeyOnStandby",
        "expect": "DestroyFVKeyOnStandby[\\\\s]+1$"
    },
    "custom_item_43": {
        "description": "2.8.3 Ensure the OS is not Activate When Resuming from Sleep - Apple hibernatemode",
        "info": "In order to use a computer with Full Disk Encryption (FDE), macOS must keep encryption keys in memory to allow the use of the disk that has been FileVault protected. The storage volume has been unlocked and acts as if it were not encrypted. When the system is not in use, the volume is protected through encryption. When the system is sleeping and available to quickly resume, the encryption keys remain in memory.\n\nIf an unauthorized party has possession of the computer and the computer is only slept, there are known attack vectors that can be attempted against the RAM that has the encryption keys or the running operating system protected by a login screen. Network attacks if network interfaces are on, as well as USB or other open device ports, are possible. Most of these attacks require knowledge of unpatched vulnerabilities or a high level of sophistication if all the other controls function as intended.\n\nThere is little impact on hibernating the system rather than sleeping after an appropriate time period to remediate the risk of OS level attacks. Hibernation writes the keys to disk and requires FileVault to be unlocked prior to the OS being available. In the case of unauthorized personnel with access to the computer, encryption would have to be broken prior to attacking the operating system in order to recover data from the system.\n\nhttps://www.helpnetsecurity.com/2018/08/20/laptop-sleep-security/\n\nMac systems should be set to hibernate after sleeping for a risk-acceptable time period. The default value for 'standbydelay' is three hours (10800 seconds). This value is likely appropriate for most desktops. If Mac desktops are deployed in unmonitored, less physically secure areas with confidential data, this value might be adjusted. The desktop would have to retain power, however, so that the running OS or physical RAM could be attacked.\n\nMacBooks should be set so that the standbydelay is 15 minutes (900 seconds) or less. This setting should allow laptop users in most cases to stay within physically secured areas while going to a conference room, auditorium, or other internal location without having to unlock the encryption. When the user goes home at night, the laptop will auto-hibernate after 15 minutes and require the FileVault password to unlock prior to logging back into system when it resumes.\n\nMacBooks should also be set to a hibernate mode that removes power from the RAM. This will stop the possibility of cold boot attacks on the system.\n\nRationale:\n\nTo mitigate the risk of data loss, the system should power down and lock the encrypted drive after a specified time. Laptops should hibernate 15 minutes or less after sleeping.\n\nImpact:\n\nThe laptop will take additional time to resume normal operation then if only sleeping rather than hibernating.",
        "solution": "Terminal Method:\nRun the following command to set the hibernate delays and to ensure the FileVault keys are set to be destroyed on standby:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold=90>\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelaylow 500\n$ /usr/bin/sudo /usr/bin/pmset -a standbydelayhigh 500\n$ /usr/bin/sudo /usr/bin/pmset -a highstandbythreshold 100\n$ /usr/bin/sudo /usr/bin/pmset -a destroyfvkeyonstandby 1\n$ /usr/bin/sudo /usr/bin/pmset -a hibernatemode 25",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|16.11,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/pmset -g | /usr/bin/egrep hibernatemode",
        "expect": "hibernatemode[\\\\s]+25$"
    },
    "custom_item_44": {
        "description": "3.2 Ensure Security Auditing Flags For User-Attributable Events Are Configured Per Local Organizational Requirements",
        "info": "Auditing is the capture and maintenance of information about security-related events. Auditable events often depend on differing organizational requirements.\n\nRationale:\n\nMaintaining an audit trail of system activity logs can help identify configuration errors, troubleshoot service disruptions, and analyze compromises or attacks that have occurred, have begun, or are about to begin. Audit logs are necessary to provide a trail of evidence in case the system or network is compromised.\n\nDepending on the governing authority, organizations can have vastly different auditing requirements. In this control we have selected a minimal set of audit flags that should be a part of any organizational requirements. The flags selected below may not adequately meet organizational requirements for users of this benchmark. The auditing checks for the flags proposed here will not impact additional flags that are selected.",
        "solution": "Terminal Method:\nPerform the following to set the required Security Auditing Flags:\nEdit the /etc/security/audit_control file and add -fm, ad, -ex, aa, -fr, lo, and -fw to flags. You can also substitute -all for -fm, -ex, -fr, and -fw.",
        "reference": "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AC-6(9),800-53|AU-2,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CN-L3|8.1.10.6(a),CSCv7|6.2,CSCv7|14.9,CSCv8|3.14,CSCv8|8.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.6.2,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "file": "/etc/security/audit_control",
        "regex": "^flags:",
        "expect": "^flags:.*((?=.*fm)(?=.*ad)(?=.*-ex)(?=.*aa)(?=.*-fr)(?=.*lo)(?=.*-fw)|-all).*$"
    },
    "custom_item_45": {
        "description": "4.1 Ensure Bonjour Advertising Services Is Disabled",
        "info": "Bonjour is an auto-discovery mechanism for TCP/IP devices which enumerate devices and services within a local subnet. DNS on macOS is integrated with Bonjour and should not be turned off, but the Bonjour advertising service can be disabled.\n\nRationale:\n\nBonjour can simplify device discovery from an internal rogue or compromised host. An attacker could use Bonjour's multicast DNS feature to discover a vulnerable or poorly-configured service or additional information to aid a targeted attack. Implementing this control disables the continuous broadcasting of 'I'm here!' messages. Typical end-user endpoints should not have to advertise services to other computers. This setting does not stop the computer from sending out service discovery messages when looking for services on an internal subnet, if the computer is looking for a printer or server and using service discovery. To block all Bonjour traffic except to approved devices, the pf or other firewall would be needed.\n\nImpact:\n\nSome applications, like Final Cut Studio and AirPort Base Station management, may not operate properly if the mDNSResponder is turned off.",
        "solution": "Terminal Method:\nRun the following command to disable Bonjour Advertising services:\n\n$ /usr/bin/sudo /usr/bin/defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool true\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mDNSResponder\n\nThe key to include is NoMulticastAdvertisements\n\nAdditional Information:\n\nAnything Bonjour discovers is already available on the network and probably discoverable with network scanning tools. The security benefit of disabling Bonjour for that reason is minimal.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv7|9.2,CSCv8|4.1,CSCv8|4.8,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "expect": "true",
        "payload_key": "NoMulticastAdvertisements",
        "payload_type": "com.apple.mDNSResponder"
    },
    "custom_item_46": {
        "description": "5.1.6 Ensure No World Writable Files Exist in the Library Folder",
        "info": "Software sometimes insists on being installed in the /System/Volumes/Data/Library Directory and has inappropriate world-writable permissions.\n\nRationale:\n\nFolders in /System/Volumes/Data/Library should not be world-writable. The audit check excludes the /System/Volumes/Data/Library/Caches and /System/Volumes/Data/Library/Preferences/Audio/Data folders where the sticky bit is set.",
        "solution": "Terminal Method:\nRun the following command to set permissions so that folders are not world-writable in the /System/Volumes/Data/Library folder:\n\n$ /usr/bin/sudo IFS=$'\\n'\nfor libPermissions in $( /usr/bin/find /System/Volumes/Data/Library -type d -perm -2 | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data ); do\n  /bin/chmod -R o-w '$libPermissions'\ndone",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "/usr/bin/find /System/Volumes/Data/Library -type d -perm -2 -ls | /usr/bin/grep -v Caches | /usr/bin/grep -v /Preferences/Audio/Data | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_47": {
        "description": "5.2.3 Ensure Complex Password Must Contain Alphabetic Characters Is Configured",
        "info": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.\n\nEnsure that an Alphabetic character is part of the password policy on the computer.\n\nRationale:\n\nThe more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.\n\nImpact:\n\nPassword policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
        "solution": "Terminal Method:\nRun the following command to set the that passwords must contain at least one letter:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies 'requiresAlpha==1>'\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresAlpha=1'\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\n\nThe key to include is requireAlphanumeric\n\nThe key must be set toNote: This profile sets a requirement of both an alphabetical and a numeric character.\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.\n\nAdditional Information:\n\nNote: The CIS macOS community has decided to not require the additional password complexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the complexity recommendations as a manual assessment. Since there are a large amount of admins in the greater macOS world that do need these settings, we include both the guidance for the proper setting as well as probes for CIS-CAT to test.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "pref1=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \"Contain at least one number and one alphabetic character.\" | cut -b 13-68) && pref2=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumLetters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"Contain at least one number and one alphabetic character\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi",
        "expect": "@PASSWORD_ALPHABETIC_CHARACTERS@"
    },
    "custom_item_48": {
        "description": "5.2.4 Ensure Complex Password Must Contain Numeric Character Is Configured",
        "info": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.\n\nEnsure that a number or numeric value is part of the password policy on the computer.\n\nRationale:\n\nThe more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.\n\nImpact:\n\nPassword policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
        "solution": "Terminal Method:\nRun the following command to set passwords to require at least one number:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies 'requiresNumeric==1>'\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresNumeric=2'\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\n\nThe key to include is requireAlphanumeric\n\nThe key must be set toNote: This profile sets a requirement of both an alphabetical and a numeric character.\nNote: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.\n\nAdditional Information:\n\nNote: The CIS macOS community has decided to not require the additional password complexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the complexity recommendations as a manual assessment. Since there are a large amount of admins in the greater macOS world that do need these settings, we include both the guidance for the proper setting as well as probes for CIS-CAT to test.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "pref1=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \"Contain at least one number and one alphabetic character.\" | cut -b 13-68) && pref2=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumNumericCharacters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"Contain at least one number and one alphabetic character\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi",
        "expect": "@PASSWORD_NUMERIC_CHARACTERS@"
    },
    "custom_item_49": {
        "description": "5.2.5 Ensure Complex Password Must Contain Special Character Is Configured",
        "info": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters. Ensure that a special character is part of the password policy on the computer.\n\nRationale:\n\nThe more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.\n\nImpact:\n\nPassword policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
        "solution": "Terminal Method:\nRun the following command to set passwords to require at least one special character:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy -setaccountpolicies 'requiresSymbol==1>'\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresSymbol=1'\n\nProfile Method:\nCreate or edit a configuration profile with the following information:\n\nThe PayloadType string is com.apple.mobiledevice.passwordpolicy\n\nThe key to include is minComplexChars\n\nThe key must be set to=1>Note: The profile method is the preferred method for setting password policy since -setglobalpolicy in pwpolicy is deprecated and will likely be removed in a future macOS release.\n\nAdditional Information:\n\nNote: The CIS macOS community has decided to not require the additional password complexity settings (Recommendations 5.3 - 5.6). Because of that, we have left the complexity recommendations as a manual assessment. Since there are a large amount of admins in the greater macOS world that do need these settings, we include both the guidance for the proper setting as well as probes for CIS-CAT to test.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "pref1=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -e \"policyAttributePassword matches '(.*[^a-zA-Z0-9].*){1,}'\" | cut -b 12-67) && pref2=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumSymbols | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [ \"$pref1\" = \"policyAttributePassword matches '(.*[^a-zA-Z0-9].*){1,}'\" ]; then echo \"true\"; elif [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi",
        "expect": "@PASSWORD_SPECIAL_CHARACTERS@"
    },
    "custom_item_50": {
        "description": "5.2.6 Ensure Complex Password Must Contain Uppercase and Lowercase Characters Is Configured",
        "info": "Complex passwords contain one character from each of the following classes: English uppercase letters, English lowercase letters, Westernized Arabic numerals, and non-alphanumeric characters.\n\nEnsure that both uppercase and lowercase letters are part of the password policy on the computer.\n\nRationale:\n\nThe more complex a password, the more resistant it will be against persons seeking unauthorized access to a system.\n\nImpact:\n\nPassword policy should be in effect to reduce the risk of exposed services being compromised easily through dictionary attacks or other social engineering attempts.",
        "solution": "Terminal Method:\nRun the following command to set passwords to require at upper and lower case letter:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresMixedCase==1>'\n\nexample:\n\n$ /usr/bin/sudo /usr/bin/pwpolicy -n /Local/Default -setglobalpolicy 'requiresMixedCase=1'",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|2M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "cmd": "pref1=$(/usr/bin/pwpolicy -getaccountpolicies | /usr/bin/grep -A1 minimumMixedCaseCharacters | /usr/bin/tail -1 | /usr/bin/cut -d'>' -f2 | /usr/bin/cut -d '<' -f1) && if [[ \"$pref2\" != \"\" && pref2 -ge 1 ]]; then echo \"true\"; else echo \"false\"; fi",
        "expect": "@PASSWORD_UPPERCASE_CHARACTERS@"
    },
    "custom_item_51": {
        "description": "5.8 Ensure a Login Window Banner Exists - text",
        "info": "A Login window banner warning informs the user that the system is reserved for authorized use only. It enforces an acknowledgment by the user that they have been informed of the use policy in the banner if required. The system recognizes either the .txt and the .rtf formats.\n\nRationale:\n\nAn access warning may reduce a casual attacker's tendency to target the system. Access warnings may also aid in the prosecution of an attacker by evincing the attacker's knowledge of the system's private status, acceptable use policy, and authorization requirements.\n\nImpact:\n\nUsers will have to click on the window with the Login text before logging into the computer.",
        "solution": "Terminal Method:\nRun the following commands to create or edit the login window text and set the proper permissions:\nEdit (or create) a PolicyBanner.txt or PolicyBanner.rtf file, in the /Library/Security/ folder, to include the required login window banner text.\nPerform the following to set permissions on the policy banner file:\n\n$ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.txt\n\n$ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.rtf\n\nNote: If your organization uses an .rtfd file to set the policy banner, run $ /usr/bin/sudo /usr/sbin/chown -R o+rx /Library/Security/PolicyBanner.rtfd to update the permissions.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "file": "/Library/Security/PolicyBanner.txt",
        "content": "@BANNER_TEXT@"
    },
    "custom_item_52": {
        "description": "5.8 Ensure a Login Window Banner Exists - permissions",
        "info": "A Login window banner warning informs the user that the system is reserved for authorized use only. It enforces an acknowledgment by the user that they have been informed of the use policy in the banner if required. The system recognizes either the .txt and the .rtf formats.\n\nRationale:\n\nAn access warning may reduce a casual attacker's tendency to target the system. Access warnings may also aid in the prosecution of an attacker by evincing the attacker's knowledge of the system's private status, acceptable use policy, and authorization requirements.\n\nImpact:\n\nUsers will have to click on the window with the Login text before logging into the computer.",
        "solution": "Terminal Method:\nRun the following commands to create or edit the login window text and set the proper permissions:\nEdit (or create) a PolicyBanner.txt or PolicyBanner.rtf file, in the /Library/Security/ folder, to include the required login window banner text.\nPerform the following to set permissions on the policy banner file:\n\n$ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.txt\n\n$ /usr/bin/sudo /usr/sbin/chown o+r /Library/Security/PolicyBanner.rtf\n\nNote: If your organization uses an .rtfd file to set the policy banner, run $ /usr/bin/sudo /usr/sbin/chown -R o+rx /Library/Security/PolicyBanner.rtfd to update the permissions.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSCv7|5.1,CSCv8|4.1,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|2A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4176",
        "file": "/Library/Security/PolicyBanner.txt",
        "mask": "003"
    }
}