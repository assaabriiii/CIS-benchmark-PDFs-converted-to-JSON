{
    "custom_item_1": {
        "description": "Linux found",
        "cmd": "uname -a",
        "expect": "Linux"
    },
    "custom_item_2": {
        "description": "Check that /sys/firmware/efi exists",
        "file": "/sys/firmware/efi"
    },
    "custom_item_3": {
        "description": "Check that /boot/efi exists",
        "file": "/boot/efi"
    },
    "custom_item_4": {
        "system": "Linux",
        "description": "1.1.1.8 Ensure mounting of FAT filesystems is limited - vfat fstab",
        "info": "The FAT filesystem format is primarily used on older windows systems and portable USB\n    drives or flash modules. It comes in three types FAT12 , FAT16 , and FAT32 all of which are\n    supported by the vfat kernel module.\n\n    Rationale:\n\n    Removing support for unneeded filesystem types reduces the local attack surface of the\n    system. If this filesystem type is not needed, disable it.\n\n    NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\n    Example: vim /etc/modprobe.d/vfat.conf\n\n    install vfat /bin/true\n\n    Run the following command to unload the vfat module:\n\n    # rmmod vfat\n\n    Impact:\n\n    The FAT filesystem format is used by UEFI systems for the EFI boot partition. Disabling the\n    vfat module can prevent boot on UEFI systems.\n\n    FAT filesystems are often used on portable USB sticks and other flash media which are\n    commonly used to transfer files between workstations, removing VFAT support may\n    prevent the ability to transfer files in this way.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2NS,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -i vfat /etc/fstab | awk '{print} END {if (NR == 0) print \"No results found\" }'",
        "expect": "Manual Review Required"
    },
    "custom_item_5": {
        "system": "Linux",
        "description": "1.1.1.8 Ensure mounting of FAT filesystems is limited - modprobe",
        "info": "The FAT filesystem format is primarily used on older windows systems and portable USB\n    drives or flash modules. It comes in three types FAT12 , FAT16 , and FAT32 all of which are\n    supported by the vfat kernel module.\n\n    Rationale:\n\n    Removing support for unneeded filesystem types reduces the local attack surface of the\n    system. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\n    Example: vim /etc/modprobe.d/vfat.conf\n\n    install vfat /bin/true\n\n    Run the following command to unload the vfat module:\n\n    # rmmod vfat\n\n    Impact:\n\n    The FAT filesystem format is used by UEFI systems for the EFI boot partition. Disabling the\n    vfat module can prevent boot on UEFI systems.\n\n    FAT filesystems are often used on portable USB sticks and other flash media which are\n    commonly used to transfer files between workstations, removing VFAT support may\n    prevent the ability to transfer files in this way.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2NS,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "modprobe -n -v vfat | awk '{print} END {if (NR == 0) print \"fail\"}'",
        "expect": "install /bin/true"
    },
    "custom_item_6": {
        "system": "Linux",
        "description": "1.1.1.8 Ensure mounting of FAT filesystems is limited - lsmod",
        "info": "The FAT filesystem format is primarily used on older windows systems and portable USB\n    drives or flash modules. It comes in three types FAT12 , FAT16 , and FAT32 all of which are\n    supported by the vfat kernel module.\n\n    Rationale:\n\n    Removing support for unneeded filesystem types reduces the local attack surface of the\n    system. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\n    Example: vim /etc/modprobe.d/vfat.conf\n\n    install vfat /bin/true\n\n    Run the following command to unload the vfat module:\n\n    # rmmod vfat\n\n    Impact:\n\n    The FAT filesystem format is used by UEFI systems for the EFI boot partition. Disabling the\n    vfat module can prevent boot on UEFI systems.\n\n    FAT filesystems are often used on portable USB sticks and other flash media which are\n    commonly used to transfer files between workstations, removing VFAT support may\n    prevent the ability to transfer files in this way.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2NS,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "lsmod vfat | awk \\'{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_7": {
        "system": "Linux",
        "description": "1.1.6 Ensure separate partition exists for /var",
        "info": "The /var directory is used by daemons and other system services to temporarily store\ndynamic data. Some directories created by these processes may be world-writable.\n\nRationale:\n\nSince the /var directory may contain world-writable files and directories, there is a risk of\nresource exhaustion if it is not bound to a separate partition.",
        "solution": "For new installations, during installation create a custom partition setup and specify a\nseparate partition for /var .\nFor systems that were previously installed, create a new partition and configure\n/etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem\npartitions may prevent successful resizing, or may require the installation of additional\ntools solely for the purpose of resizing operations. The use of these additional tools may\nintroduce their own security considerations.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "mount | grep 'on /var '",
        "expect": ".*on /var type.*"
    },
    "custom_item_8": {
        "system": "Linux",
        "description": "1.1.7 Ensure separate partition exists for /var/tmp",
        "info": "The /var/tmp directory is a world-writable directory used for temporary storage by all\nusers and some applications.\n\nRationale:\n\nSince the /var/tmp directory is intended to be world-writable, there is a risk of resource\nexhaustion if it is not bound to a separate partition. In addition, making /var/tmp its own\nfile system allows an administrator to set the noexec option on the mount, making\n/var/tmp useless for an attacker to install executable code. It would also prevent an\nattacker from establishing a hardlink to a system setuid program and wait for it to be\nupdated. Once the program was updated, the hardlink would be broken and the attacker\nwould have his own copy of the program. If the program happened to have a security\nvulnerability, the attacker could continue to exploit the known flaw.",
        "solution": "For new installations, during installation create a custom partition setup and specify a\nseparate partition for /var/tmp .\nFor systems that were previously installed, create a new partition and configure\n/etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem\npartitions may prevent successful resizing, or may require the installation of additional\ntools solely for the purpose of resizing operations. The use of these additional tools may\nintroduce their own security considerations.,CSCv6|13,CSCv7|5.1",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "mount | grep 'on /var/tmp '",
        "expect": ".*on /var/tmp type.*"
    },
    "custom_item_9": {
        "system": "Linux",
        "description": "1.1.11 Ensure separate partition exists for /var/log",
        "info": "The /var/log directory is used by system services to store log data .\n\nRationale:\n\nThere are two important reasons to ensure that system logs are stored on a separate\npartition: protection against resource exhaustion (since logs can grow quite large) and\nprotection of audit data.",
        "solution": "For new installations, during installation create a custom partition setup and specify a\nseparate partition for /var/log .\nFor systems that were previously installed, create a new partition and configure\n/etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem\npartitions may prevent successful resizing, or may require the installation of additional\ntools solely for the purpose of resizing operations. The use of these additional tools may\nintroduce their own security considerations.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "mount | grep 'on /var/log '",
        "expect": ".* on /var/log type .*"
    },
    "custom_item_10": {
        "system": "Linux",
        "description": "1.1.12 Ensure separate partition exists for /var/log/audit",
        "info": "The auditing daemon, auditd , stores log data in the /var/log/audit directory.\n\nRationale:\n\nThere are two important reasons to ensure that data gathered by auditd is stored on a\nseparate partition: protection against resource exhaustion (since the audit.log file can\ngrow quite large) and protection of audit data. The audit daemon calculates how much free\nspace is left and performs actions based on the results. If other processes (such as syslog )\nconsume space in the same partition as auditd , it may not perform as desired.",
        "solution": "For new installations, during installation create a custom partition setup and specify a\nseparate partition for /var/log/audit .\nFor systems that were previously installed, create a new partition and configure\n/etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem\npartitions may prevent successful resizing, or may require the installation of additional\ntools solely for the purpose of resizing operations. The use of these additional tools may\nintroduce their own security considerations.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "mount | grep 'on /var/log/audit '",
        "expect": ".* on /var/log/audit type .*"
    },
    "custom_item_11": {
        "system": "Linux",
        "description": "1.1.13 Ensure separate partition exists for /home",
        "info": "The /home directory is used to support disk storage needs of local users.\n\nRationale:\n\nIf the system is intended to support local users, create a separate partition for the /home\ndirectory to protect against resource exhaustion and restrict the type of files that can be\nstored under /home .",
        "solution": "For new installations, during installation create a custom partition setup and specify a\nseparate partition for /home .\nFor systems that were previously installed, create a new partition and configure\n/etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem\npartitions may prevent successful resizing, or may require the installation of additional\ntools solely for the purpose of resizing operations. The use of these additional tools may\nintroduce their own security considerations.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "mount | grep 'on /home '",
        "expect": ".* on /home type .*"
    },
    "custom_item_12": {
        "description": "chkconfig autofs",
        "cmd": "chkconfig --list autofs",
        "expect": "^autofs[\\\\s]*0:off[\\\\s]*1:off[\\\\s]*2:off[\\\\s]*3:off[\\\\s]*4:off[\\\\s]*5:off[\\\\s]*6:off"
    },
    "custom_item_13": {
        "description": "systemctl autofs",
        "cmd": "systemctl is-enabled autofs",
        "expect": "disabled"
    },
    "custom_item_14": {
        "description": "rc*.d autofs",
        "cmd": "ls /etc/rc*.d | grep 'autofs' | wc -l",
        "expect": "^0$"
    },
    "custom_item_15": {
        "system": "Linux",
        "description": "1.1.23 Disable USB Storage - lsmod",
        "info": "USB storage provides a means to transfer and store files insuring persistence and\navailability of the files independent of network connection status. Its popularity and utility\nhas led to USB-based malware being a simple and common means for network infiltration\nand a first step to establishing a persistent threat within a networked environment.\n\nRationale:\n\nRestricting USB access on the system will decrease the physical attack surface for a device\nand diminish the possible vectors to introduce malware.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/usb-storage.conf\nand add the following line:\n\ninstall usb-storage /bin/true\n\nRun the following command to unload the usb-storage module:\n\nrmmod usb-storage",
        "reference": "800-171|3.14.2,800-171|3.14.4,800-171|3.14.5,800-53|SI-3,800-53r5|SI-3,CN-L3|7.1.3.6(b),CN-L3|8.1.4.5,CN-L3|8.1.9.6(a),CN-L3|8.1.9.6(b),CN-L3|8.1.10.5(b),CN-L3|8.1.10.7(a),CN-L3|8.1.10.7(b),CSCv6|8.3,CSCv7|8.4,CSCv7|8.5,CSF|DE.CM-4,CSF|DE.DP-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.2.1,ITSG-33|SI-3,LEVEL|1S,NIAv2|GS8a,PCI-DSSv3.2.1|5.1,PCI-DSSv3.2.1|5.1.1,PCI-DSSv4.0|5.2.1,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,TBA-FIISB|49.2.1,TBA-FIISB|49.2.2,TBA-FIISB|49.3.1,TBA-FIISB|49.3.2,TBA-FIISB|50.2.1,TBA-FIISB|51.2.4,TBA-FIISB|51.2.7",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "lsmod | grep usb-storage | awk '{print} END {if (NR == 0) print \"pass\"}'",
        "expect": "^pass$"
    },
    "custom_item_16": {
        "system": "Linux",
        "description": "1.1.23 Disable USB Storage - modprobe",
        "info": "USB storage provides a means to transfer and store files insuring persistence and\navailability of the files independent of network connection status. Its popularity and utility\nhas led to USB-based malware being a simple and common means for network infiltration\nand a first step to establishing a persistent threat within a networked environment.\n\nRationale:\n\nRestricting USB access on the system will decrease the physical attack surface for a device\nand diminish the possible vectors to introduce malware.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/usb-storage.conf\nand add the following line:\n\ninstall usb-storage /bin/true\n\nRun the following command to unload the usb-storage module:\n\nrmmod usb-storage",
        "reference": "800-171|3.14.2,800-171|3.14.4,800-171|3.14.5,800-53|SI-3,800-53r5|SI-3,CN-L3|7.1.3.6(b),CN-L3|8.1.4.5,CN-L3|8.1.9.6(a),CN-L3|8.1.9.6(b),CN-L3|8.1.10.5(b),CN-L3|8.1.10.7(a),CN-L3|8.1.10.7(b),CSCv6|8.3,CSCv7|8.4,CSCv7|8.5,CSF|DE.CM-4,CSF|DE.DP-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.2.1,ITSG-33|SI-3,LEVEL|1S,NIAv2|GS8a,PCI-DSSv3.2.1|5.1,PCI-DSSv3.2.1|5.1.1,PCI-DSSv4.0|5.2.1,QCSC-v1|3.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,TBA-FIISB|49.2.1,TBA-FIISB|49.2.2,TBA-FIISB|49.3.1,TBA-FIISB|49.3.2,TBA-FIISB|50.2.1,TBA-FIISB|51.2.4,TBA-FIISB|51.2.7",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "modprobe -n -v usb-storage | awk '{print} END {if (NR == 0) print \"fail\"}'",
        "expect": "install /bin/true"
    },
    "custom_item_17": {
        "description": "Check for AppArmor - rpm",
        "rpm": "apparmor-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_18": {
        "description": "Check for AppArmor - dpkg",
        "cmd": "dpkg -s apparmor | grep Status: 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_19": {
        "description": "Check for SELinux - rpm",
        "rpm": "libselinux-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_20": {
        "description": "Check for SELinux1 - rpm",
        "rpm": "libselinux1-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_21": {
        "description": "Check for SELinux - dpkg",
        "cmd": "dpkg -s libselinux1 | grep Status: 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_22": {
        "description": "Check for SELinux - rpm",
        "rpm": "libselinux-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_23": {
        "description": "Check for SELinux1 - rpm",
        "rpm": "libselinux1-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_24": {
        "description": "Check for SELinux - dpkg",
        "cmd": "dpkg -s libselinux1 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_25": {
        "system": "Linux",
        "description": "1.6.2.1 Ensure SELinux is not disabled in bootloader configuration - selinux=0",
        "info": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten\nby the grub boot parameters.\n\nRationale:\n\nSELinux must be enabled at boot time in your grub configuration to ensure that the\ncontrols it provides are not overridden.",
        "solution": "For grub based systems edit /boot/grub/menu.lst and remove all instances of selinux=0\nand enforcing=0 on all kernel lines.\nFor grub2 based systems edit /etc/default/grub and remove all instances of selinux=0 and\nenforcing=0 from all CMDLINE_LINUX parameters:\n\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"\nGRUB_CMDLINE_LINUX=\"\"\n\nRun the following command to update the grub2 configuration:\n\n# update-grub\n\nor\n\n# grub2-mkconfig -o /boot/grub2/guub.cfg\n\nNotes:\n\nThis recommendation is designed around the grub bootloader, if LILO or another\nbootloader is in use in your environment enact equivalent settings.",
        "reference": "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53r5|AC-3(3),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,PCI-DSSv3.2.1|7.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -s -E '[sS][eE][lL][iI][nN][uU][xX]=0' /boot/grub/grub.conf /boot/grub/grub.cfg /boot/grub/menu.lst /boot/grub2/grub.conf /boot/grub2/grub.cfg /boot/grub2/menu.lst | awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_26": {
        "system": "Linux",
        "description": "1.6.2.1 Ensure SELinux is not disabled in bootloader configuration - enforcing=0",
        "info": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten\nby the grub boot parameters.\n\nRationale:\n\nSELinux must be enabled at boot time in your grub configuration to ensure that the\ncontrols it provides are not overridden.",
        "solution": "For grub based systems edit /boot/grub/menu.lst and remove all instances of selinux=0\nand enforcing=0 on all kernel lines.\nFor grub2 based systems edit /etc/default/grub and remove all instances of selinux=0 and\nenforcing=0 from all CMDLINE_LINUX parameters:\n\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"\nGRUB_CMDLINE_LINUX=\"\"\n\nRun the following command to update the grub2 configuration:\n\n# update-grub\n\nor\n\n# grub2-mkconfig -o /boot/grub2/guub.cfg\n\nNotes:\n\nThis recommendation is designed around the grub bootloader, if LILO or another\nbootloader is in use in your environment enact equivalent settings.",
        "reference": "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53r5|AC-3(3),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,PCI-DSSv3.2.1|7.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -s -E '[Ee][Nn][Ff][Oo][Rr][Cc][Ii][Nn][Gg]=0' /boot/grub/grub.conf /boot/grub/grub.cfg /boot/grub/menu.lst /boot/grub2/grub.conf /boot/grub2/grub.cfg /boot/grub2/menu.lst | awk '{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_27": {
        "system": "Linux",
        "description": "1.6.2.2 Ensure the SELinux state is enforcing",
        "info": "Set SELinux to enable when the system is booted.\n\nRationale:\n\nSELinux must be enabled at boot time to ensure that the controls it provides are in effect at\nall times.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUX parameter:\n\nSELINUX=enforcing",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/selinux/config",
        "regex": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=",
        "expect": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=[\\\\s]*[eE][nN][fF][oO][rR][cC][iI][nN][gG][\\\\s]*$"
    },
    "custom_item_28": {
        "system": "Linux",
        "description": "1.6.2.3 Ensure SELinux policy is configured",
        "info": "Configure SELinux to meet or exceed the default targeted policy, which constrains daemons\nand system software only.\n\nRationale:\n\nSecurity configuration requirements vary from site to site. Some sites may mandate a\npolicy that is stricter than the default policy, which is perfectly acceptable. This item is\nintended to ensure that at least the default recommendations are met.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:\n\nSELINUXTYPE=targeted\n\nNotes:\n\nIf your organization requires stricter policies, ensure that they are set in the\n/etc/selinux/config file.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/selinux/config",
        "regex": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE]\\\\s*=",
        "expect": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE]\\\\s*=\\\\s*[Tt][Aa][Rr][Gg][Ee][Tt][Ee][Dd]\\\\s*$"
    },
    "custom_item_29": {
        "description": "1.6.2.5 Check for rpm",
        "file": "/usr/bin/rpm"
    },
    "custom_item_30": {
        "system": "Linux",
        "description": "1.6.2.5 Ensure the MCS Translation Service (mcstrans) is not installed",
        "info": "The mcstransd daemon provides category label information to client processes requesting\ninformation. The label translations are defined in /etc/selinux/targeted/setrans.conf\n\nRationale:\n\nSince this service is not used very often, remove it to reduce the amount of potentially\nvulnerable code running on the system.",
        "solution": "Uninstall mcstrans using the appropriate package manager or manual installation:\n\nyum remove mcstrans\n\napt-get remove mcstrans\n\nzypper remove mcstrans",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "rpm": "mcstrans-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_31": {
        "description": "1.6.2.5 Check for dpkg",
        "file": "/usr/bin/dpkg"
    },
    "custom_item_32": {
        "system": "Linux",
        "description": "1.6.2.5 Ensure the MCS Translation Service (mcstrans) is not installed",
        "info": "The mcstransd daemon provides category label information to client processes requesting\ninformation. The label translations are defined in /etc/selinux/targeted/setrans.conf\n\nRationale:\n\nSince this service is not used very often, remove it to reduce the amount of potentially\nvulnerable code running on the system.",
        "solution": "Uninstall mcstrans using the appropriate package manager or manual installation:\n\nyum remove mcstrans\n\napt-get remove mcstrans\n\nzypper remove mcstrans",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "dpkg -s mcstrans 2>&1",
        "expect": "^[\\\\s]*dpkg-query: package 'mcstrans' is not installed and no information is available[\\\\s]*"
    },
    "custom_item_33": {
        "system": "Linux",
        "description": "1.6.2.6 Ensure no unconfined daemons exist",
        "info": "Daemons that are not defined in SELinux policy will inherit the security context of their\nparent process.\n\nRationale:\n\nSince daemons are launched and descend from the init process, they will inherit the\nsecurity context label initrc_t . This could cause the unintended consequence of giving\nthe process more permission than it requires.",
        "solution": "Investigate any unconfined daemons found during the audit action. They may need to have\nan existing security context assigned to them or a policy built for them.\n\nNotes:\n\nOccasionally certain daemons such as backup or centralized management software may\nrequire running unconfined. Any such software should be carefully analyzed and\ndocumented before such an exception is made.",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "ps -eZ | egrep \"initrc\" | egrep -vw \"tr|ps|egrep|bash|awk\" | awk -F: '{ print $NF } END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_34": {
        "description": "Check for AppArmor - RPM",
        "rpm": "apparmor-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_35": {
        "description": "Check for AppArmor - dpkg",
        "cmd": "dpkg -s apparmor | grep Status: 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_36": {
        "description": "Check for AppArmor - /sys/module",
        "cmd": "cat /sys/module/apparmor/parameters/enabled",
        "expect": "Y"
    },
    "custom_item_37": {
        "system": "Linux",
        "description": "1.6.3.1 Ensure AppArmor is not disabled in bootloader configuration",
        "info": "Configure AppArmor to be enabled at boot time and verify that it has not been overwritten\nby the bootloader boot parameters.\n\nRationale:\n\nAppArmor must be enabled at boot time in your bootloader configuration to ensure that\nthe controls it provides are not overridden.",
        "solution": "For grub based systems edit /boot/grub/menu.lst and remove all instances of apparmor=0\non all kernel lines.\nFor grub2 based systems edit /etc/default/grub and remove all instances of apparmor=0\nfrom all CMDLINE_LINUX parameters:\n\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"\nGRUB_CMDLINE_LINUX=\"\"\n\nRun the following command to update the grub2 configuration:\n\n# update-grub\n\nNotes:\n\nThis recommendation is designed around the grub bootloader, if LILO or another\nbootloader is in use in your environment enact equivalent settings.\n\nReplace /boot/grub/menu.lst with the appropriate grub configuration file for your\nenvironment.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/boot/grub/menu.lst",
        "regex": "[Aa][Pp][Pp][Aa][Rr][Mm][Oo][Rr]=0",
        "expect": "[Aa][Pp][Pp][Aa][Rr][Mm][Oo][Rr]=0"
    },
    "custom_item_38": {
        "description": "Check for AppArmor - RPM",
        "rpm": "apparmor-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_39": {
        "description": "Check for AppArmor - dpkg",
        "cmd": "dpkg -s apparmor | grep Status: 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_40": {
        "description": "Check for AppArmor - /sys/module",
        "cmd": "cat /sys/module/apparmor/parameters/enabled",
        "expect": "Y"
    },
    "custom_item_41": {
        "system": "Linux",
        "description": "1.6.3.2 Ensure all AppArmor Profiles are enforcing - profiles are loaded",
        "info": "AppArmor profiles define what resources applications are able to access.\n\nRationale:\n\nSecurity configuration requirements vary from site to site. Some sites may mandate a\npolicy that is stricter than the default policy, which is perfectly acceptable. This item is\nintended to ensure that any policies that exist on the system are activated.",
        "solution": "Run the following command to set all profiles to enforce mode:\n\n# enforce /etc/apparmor.d/*\n\nAny unconfined processes may need to have a profile created or activated for them and\nthen be restarted.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "apparmor_status",
        "expect": "^[\\\\s]*[1-9][0-9]*[\\\\s]+profiles[\\\\s]+are[\\\\s]+loaded"
    },
    "custom_item_42": {
        "system": "Linux",
        "description": "1.6.3.2 Ensure all AppArmor Profiles are enforcing - 0 profiles are in complain mode",
        "info": "AppArmor profiles define what resources applications are able to access.\n\nRationale:\n\nSecurity configuration requirements vary from site to site. Some sites may mandate a\npolicy that is stricter than the default policy, which is perfectly acceptable. This item is\nintended to ensure that any policies that exist on the system are activated.",
        "solution": "Run the following command to set all profiles to enforce mode:\n\n# enforce /etc/apparmor.d/*\n\nAny unconfined processes may need to have a profile created or activated for them and\nthen be restarted.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "apparmor_status",
        "expect": "^[\\\\s]*0[\\\\s]+profiles[\\\\s]+are[\\\\s]+in[\\\\s]+complain[\\\\s]+mode"
    },
    "custom_item_43": {
        "system": "Linux",
        "description": "1.6.3.2 Ensure all AppArmor Profiles are enforcing - 0 processes are unconfirmed",
        "info": "AppArmor profiles define what resources applications are able to access.\n\nRationale:\n\nSecurity configuration requirements vary from site to site. Some sites may mandate a\npolicy that is stricter than the default policy, which is perfectly acceptable. This item is\nintended to ensure that any policies that exist on the system are activated.",
        "solution": "Run the following command to set all profiles to enforce mode:\n\n# enforce /etc/apparmor.d/*\n\nAny unconfined processes may need to have a profile created or activated for them and\nthen be restarted.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "apparmor_status",
        "expect": "^[\\\\s]*0[\\\\s]+processes[\\\\s]+are[\\\\s]+unconfined"
    },
    "custom_item_44": {
        "description": "chkconfig cups",
        "cmd": "chkconfig --list cups",
        "expect": "^cups[\\\\s]*0:off[\\\\s]*1:off[\\\\s]*2:off[\\\\s]*3:off[\\\\s]*4:off[\\\\s]*5:off[\\\\s]*6:off"
    },
    "custom_item_45": {
        "description": "systemctl cups",
        "cmd": "systemctl is-enabled cups",
        "expect": "disabled"
    },
    "custom_item_46": {
        "description": "rc*.d cups",
        "cmd": "ls /etc/rc*.d | grep 'S..cups' | awk '{ print } END { if (NR==0) print \"none\" }'",
        "expect": "none"
    },
    "custom_item_47": {
        "system": "Linux",
        "description": "3.4.1 Ensure DCCP is disabled - modprobe",
        "info": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that\nsupports streaming media and telephony. DCCP provides a way to gain access to\ncongestion control, without having to do it at the application layer, but does not provide in-\nsequence delivery.\n\nRationale:\n\nIf the protocol is not required, it is recommended that the drivers not be installed to reduce\nthe potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/dccp.conf\nand add the following line:\n\ninstall dccp /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "modprobe -n -v dccp",
        "expect": "install /bin/true"
    },
    "custom_item_48": {
        "system": "Linux",
        "description": "3.4.1 Ensure DCCP is disabled - lsmod",
        "info": "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that\nsupports streaming media and telephony. DCCP provides a way to gain access to\ncongestion control, without having to do it at the application layer, but does not provide in-\nsequence delivery.\n\nRationale:\n\nIf the protocol is not required, it is recommended that the drivers not be installed to reduce\nthe potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/dccp.conf\nand add the following line:\n\ninstall dccp /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "lsmod | grep dccp | awk \\'{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_49": {
        "system": "Linux",
        "description": "3.4.2 Ensure SCTP is disabled - modprobe",
        "info": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to\nsupport message oriented communication, with several streams of messages in one\nconnection. It serves a similar function as TCP and UDP, incorporating features of both. It is\nmessage-oriented like UDP, and ensures reliable in-sequence transport of messages with\ncongestion control like TCP.\n\nRationale:\n\nIf the protocol is not being used, it is recommended that kernel module not be loaded,\ndisabling the service to reduce the potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/sctp.conf\nand add the following line:\n\ninstall sctp /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "modprobe -n -v sctp",
        "expect": "(install /bin/true|FATAL: Module sctp not found)"
    },
    "custom_item_50": {
        "system": "Linux",
        "description": "3.4.2 Ensure SCTP is disabled - lsmod",
        "info": "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to\nsupport message oriented communication, with several streams of messages in one\nconnection. It serves a similar function as TCP and UDP, incorporating features of both. It is\nmessage-oriented like UDP, and ensures reliable in-sequence transport of messages with\ncongestion control like TCP.\n\nRationale:\n\nIf the protocol is not being used, it is recommended that kernel module not be loaded,\ndisabling the service to reduce the potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/sctp.conf\nand add the following line:\n\ninstall sctp /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "lsmod | grep sctp | awk \\'{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_51": {
        "system": "Linux",
        "description": "3.4.3 Ensure RDS is disabled - modprobe",
        "info": "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to\nprovide low-latency, high-bandwidth communications between cluster nodes. It was\ndeveloped by the Oracle Corporation.\n\nRationale:\n\nIf the protocol is not being used, it is recommended that kernel module not be loaded,\ndisabling the service to reduce the potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/rds.conf\nand add the following line:\n\ninstall rds /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[\\\\s]*install rds /bin/true' /etc/modprobe.d/* |awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_52": {
        "system": "Linux",
        "description": "3.4.3 Ensure RDS is disabled - lsmod",
        "info": "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to\nprovide low-latency, high-bandwidth communications between cluster nodes. It was\ndeveloped by the Oracle Corporation.\n\nRationale:\n\nIf the protocol is not being used, it is recommended that kernel module not be loaded,\ndisabling the service to reduce the potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/rds.conf\nand add the following line:\n\ninstall rds /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "lsmod | grep rds | awk \\'{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_53": {
        "system": "Linux",
        "description": "3.4.4 Ensure TIPC is disabled - modprobe",
        "info": "The Transparent Inter-Process Communication (TIPC) protocol is designed to provide\ncommunication between cluster nodes.\n\nRationale:\n\nIf the protocol is not being used, it is recommended that kernel module not be loaded,\ndisabling the service to reduce the potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/tipc.conf\nand add the following line:\n\ninstall tipc /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[\\\\s]*install[\\\\s]*tipc[\\\\s]*\\/bin\\/true[\\\\s]*$' /etc/modprobe.d/* | /usr/bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_54": {
        "system": "Linux",
        "description": "3.4.4 Ensure TIPC is disabled - lsmod",
        "info": "The Transparent Inter-Process Communication (TIPC) protocol is designed to provide\ncommunication between cluster nodes.\n\nRationale:\n\nIf the protocol is not being used, it is recommended that kernel module not be loaded,\ndisabling the service to reduce the potential attack surface.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: vim /etc/modprobe.d/tipc.conf\nand add the following line:\n\ninstall tipc /bin/true",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "lsmod | grep tipc | awk \\'{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_55": {
        "system": "Linux",
        "description": "3.6 Ensure wireless interfaces are disabled",
        "info": "Wireless networking is used when wired networks are unavailable. Debian contains a\nwireless tool kit to allow system administrators to configure and use wireless networks.\n\nRationale:\n\nIf wireless is not to be used, wireless devices can be disabled to reduce the potential attack\nsurface.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Run the following command to disable any wireless interfaces:\n\n# ip link setdown\n\nDisable any wireless interfaces in your network configuration.\n\nImpact:\n\nMany if not all laptop workstations and some desktop workstations will connect via\nwireless requiring these interfaces be enabled.",
        "reference": "800-171|3.1.16,800-53|AC-18(3),800-53|AC-18(4),800-53r5|AC-18(3),800-53r5|AC-18(4),CSCv6|15.4,CSCv7|15.4,CSCv7|15.5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18(3),ITSG-33|AC-18(4),LEVEL|1NS,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "iwconfig |  awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_56": {
        "description": "3.7 /boot/grub/grub.cfg check",
        "file": "/boot/grub/grub.cfg",
        "regex": "^[\\\\s]*GRUB_CMDLINE_LINUX[\\\\s]*=[\\\\s]*",
        "expect": "ipv6\\\\.disable[\\\\s]*=[\\\\s]*1[\\\\s]*"
    },
    "custom_item_57": {
        "description": "3.7 /boot/grub2/grub.cfg check",
        "file": "/boot/grub2/grub.cfg",
        "regex": "^[\\\\s]*GRUB_CMDLINE_LINUX[\\\\s]*=[\\\\s]*",
        "expect": "ipv6\\\\.disable[\\\\s]*=[\\\\s]*1[\\\\s]*"
    },
    "custom_item_58": {
        "system": "Linux",
        "description": "4.1.1.1 Ensure audit log storage size is configured",
        "info": "Configure the maximum size of the audit log file. Once the log reaches the maximum size, it\nwill be rotated and a new log file will be started.\n\nRationale:\n\nIt is important that an appropriate size is determined for log files so that they do not impact\nthe system and audit data is not lost.",
        "solution": "Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:\n\nmax_log_file =Notes:\n\nThe max_log_file parameter is measured in megabytes.\n\nOther methods of log rotation may be appropriate based on site policy. One example is\ntime-based rotation strategies which don't have native support in auditd configurations.\nManual audit of custom configurations should be evaluated for effectiveness and\ncompleteness.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*max_log_file[\\\\s]*=",
        "expect": "^[\\\\s]*max_log_file[\\\\s]*=[\\\\s]*@MAX_AUDIT_LOG_FILE_SIZE@[\\\\s]*$"
    },
    "custom_item_59": {
        "system": "Linux",
        "description": "4.1.1.2 Ensure system is disabled when audit logs are full - 'space_left_action = email'",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation\nexceeds the benefit of the system's availability.",
        "solution": "Set the following parameters in /etc/audit/auditd.conf:\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)email(?-i)[\\\\s]*$"
    },
    "custom_item_60": {
        "system": "Linux",
        "description": "4.1.1.2 Ensure system is disabled when audit logs are full - 'action_mail_acct = root'",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation\nexceeds the benefit of the system's availability.",
        "solution": "Set the following parameters in /etc/audit/auditd.conf:\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)action_mail_acct(?-i)[\\\\s]*=",
        "expect": "^[\\\\s]*(?i)action_mail_acct(?-i)[\\\\s]*=[\\\\s]*(?i)root(?-i)[\\\\s]*$"
    },
    "custom_item_61": {
        "system": "Linux",
        "description": "4.1.1.2 Ensure system is disabled when audit logs are full - 'admin_space_left_action = halt'",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation\nexceeds the benefit of the system's availability.",
        "solution": "Set the following parameters in /etc/audit/auditd.conf:\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)admin_space_left_action(?-i)[\\\\s]*=",
        "expect": "^[\\\\s]*(?i)admin_space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)halt(?-i)[\\\\s]*$"
    },
    "custom_item_62": {
        "system": "Linux",
        "description": "4.1.1.3 Ensure audit logs are not automatically deleted",
        "info": "The max_log_file_action setting determines how to handle the audit log file reaching the\nmax file size. A value of keep_logs will rotate the logs but never delete old logs.\n\nRationale:\n\nIn high security contexts, the benefits of maintaining a long audit history exceed the cost of\nstoring the audit history.",
        "solution": "Set the following parameter in /etc/audit/auditd.conf:\n\nmax_log_file_action = keep_logs",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2S,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*",
        "expect": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*=[\\\\s]*(?i)keep_logs(?-i)[\\\\s]*$"
    },
    "custom_item_63": {
        "description": "Check for auditd - rpm",
        "rpm": "audit-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_64": {
        "description": "Check for audit libs - rpm",
        "rpm": "audit-libs-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_65": {
        "description": "Check for auditd - dpkg",
        "cmd": "dpkg -s auditd | grep Status: 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_66": {
        "description": "Check for audit libs - dpkg",
        "cmd": "dpkg -s audispd-plugins | grep Status: 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_67": {
        "description": "chkconfig auditd",
        "cmd": "chkconfig --list auditd",
        "expect": "^auditd[\\\\s]*0:off[\\\\s]*1:off[\\\\s]*2:on[\\\\s]*3:on[\\\\s]*4:on[\\\\s]*5:on[\\\\s]*6:off"
    },
    "custom_item_68": {
        "description": "systemctl auditd",
        "cmd": "systemctl is-enabled auditd",
        "expect": "enabled"
    },
    "custom_item_69": {
        "description": "rc*.d auditd",
        "cmd": "ls /etc/rc*.d | grep 'S..auditd' | awk '{ print } END { if (NR==0) print \"none\" }'",
        "expect": "S01auditd"
    },
    "custom_item_70": {
        "description": "4.1.4 - /boot/grub2/grub.cfg",
        "file": "/boot/grub2/grub.cfg",
        "regex": "^[\\\\s]*linux",
        "expect": "^[\\\\s]*linux.*audit=1.*[\\\\s]*$"
    },
    "custom_item_71": {
        "description": "4.1.4 - /boot/grub/grub.cfg",
        "file": "/boot/grub/grub.cfg",
        "regex": "^[\\\\s]*linux",
        "expect": "^[\\\\s]*linux+.*audit=1.*[\\\\s]*$"
    },
    "custom_item_72": {
        "description": "4.1.4 - /boot/grub/menu.lst",
        "file": "/boot/grub/menu.lst",
        "regex": "^[\\\\s]*kernel",
        "expect": "^[\\\\s]*kernel.*audit=1.*[\\\\s]*$"
    },
    "custom_item_73": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'adjtimex'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+adjtimex[[:space:]]+-S[[:space:]]+settimeofday[[:space:]]+-S[[:space:]]+stime[[:space:]]+-k[[:space:]]+time-change[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_74": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'clock_settime'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+clock_settime[[:space:]]+-k[[:space:]]+time-change[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_75": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - '/etc/localtime'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\\\/etc\\\\/localtime[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+time-change[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_76": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'auditctl adjtimex'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep time-change",
        "expect": "^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32.*adjtimex.*$"
    },
    "custom_item_77": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'auditctl clock_settime'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep time-change",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+clock_settime.*time-change[\\\\s]*$"
    },
    "custom_item_78": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'auditctl /etc/localtime'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep time-change",
        "expect": "^[\\\\s]*-w[\\\\s]+/etc/localtime[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_79": {
        "description": "OS is 64 bit",
        "cmd": "uname -m",
        "expect": "^[^i][^3-6][^8][^6].*$"
    },
    "custom_item_80": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'adjtimex - 64bit'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+adjtimex[[:space:]]+-S[[:space:]]+settimeofday[[:space:]]+-k[[:space:]]+time-change[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_81": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'clock_settime - 64bit'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+clock_settime[[:space:]]+-k[[:space:]]+time-change[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_82": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'auditctl adjtimex (64-bit)'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep time-change",
        "expect": "^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64.*adjtimex.*$"
    },
    "custom_item_83": {
        "system": "Linux",
        "description": "4.1.5 Ensure events that modify date and time information are collected - 'auditctl clock_settime (64-bit)'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set\ntime, using timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier \"time-change\"\n\nRationale:\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-\nchange\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep time-change",
        "expect": "^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+clock_settime.*time-change.*$"
    },
    "custom_item_84": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - /etc/group",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/group[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+identity[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_85": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - auditctl /etc/group",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/group)(?=.*wa)(?=.*identity).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_86": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - /etc/passwd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/passwd[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+identity[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_87": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - auditctl /etc/passwd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/passwd)(?=.*wa)(?=.*identity).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_88": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - /etc/gshadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/gshadow[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+identity[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_89": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - auditctl /etc/gshadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/gshadow)(?=.*wa)(?=.*identity).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_90": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - /etc/shadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/shadow[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+identity[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_91": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - auditctl /etc/shadow",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/shadow)(?=.*wa)(?=.*identity).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_92": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - /etc/security/opasswd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/security\\/opasswd[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+identity[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_93": {
        "system": "Linux",
        "description": "4.1.6 Ensure events that modify user/group information are collected - auditctl /etc/security/opasswd",
        "info": "Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier \"identity\" in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/security/opasswd)(?=.*wa)(?=.*identity).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_94": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - b32 sethostname",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+sethostname[[:space:]]+-S[[:space:]]+setdomainname[[:space:]]+-k[[:space:]]+system-locale[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_95": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - auditctl b32 sethostname",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*sethostname)(?=.*setdomainname)(?=.*system-locale).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_96": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - /etc/issue",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/etc/issue[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+system-locale[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_97": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - auditctl /etc/issue",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/issue[[:space:]]+)(?=.*wa)(?=.*system-locale).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_98": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - /etc/issue.net",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/etc/issue\\\\.net[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+system-locale[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_99": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - auditctl /etc/issue.net",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/issue\\\\.net)(?=.*wa)(?=.*system-locale).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_100": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - /etc/hosts",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/etc/hosts[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+system-locale[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_101": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - auditctl /etc/hosts",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/hosts)(?=.*wa)(?=.*system-locale).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_102": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - /etc/sysconfig/network",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/etc/sysconfig/network[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+system-locale[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_103": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - auditctl /etc/sysconfig/network",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/sysconfig/network)(?=.*wa)(?=.*system-locale).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_104": {
        "description": "OS 64bit check",
        "cmd": "uname -a | grep x86_64 | awk '{print} END {if (NR > 0) print \"found\"}'",
        "expect": "found"
    },
    "custom_item_105": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - b64 sethostname",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+sethostname[[:space:]]+-S[[:space:]]+setdomainname[[:space:]]+-k[[:space:]]+system-locale[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_106": {
        "system": "Linux",
        "description": "4.1.7 Ensure events that modify the system's network environment are collected - auditctl b64 sethostname",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/sysconfig/network (directory containing network interface scripts and\nconfigurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes\nto host and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored\nfor changes in the file that can indicate an unauthorized intruder is trying to change\nmachine associations with IP addresses and trick users and processes into connecting to\nunintended machines. Monitoring /etc/issue and /etc/issue.net is important, as\nintruders could put disinformation into those files and trick users into providing\ninformation to the intruder. Monitoring /etc/sysconfig/network is important as it can\nshow if network interfaces or scripts are being modified in a way that can lead to the\nmachine becoming unavailable or compromised. All audit records will be tagged with the\nidentifier \"system-locale.\"",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nNotes:\n\n/etc/sysconfig/network is common to Red Hat and SUSE based distributions.\n\nYou should expand or replace this coverage to any network configuration files on your\nsystem such as /etc/network on Debian based distributions.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*sethostname)(?=.*setdomainname)(?=.*system-locale).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_107": {
        "description": "Check for apparmor profiles loaded",
        "cmd": "rcapparmor status | grep 'profiles are loaded' 2>&1",
        "expect": "^[1-9][0-9]* profiles are loaded"
    },
    "custom_item_108": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/apparmor/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/apparmor\\/[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+MAC-policy[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_109": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/apparmor/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/apparmor(/|[[:space:]]))(?=.*wa)(?=.*MAC-policy).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_110": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/apparmor.d/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/apparmor.d\\/[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+MAC-policy[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_111": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/apparmor.d/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/apparmor\\\\.d(/|[[:space:]]))(?=.*wa)(?=.*MAC-policy).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_112": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - /etc/selinux/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/etc\\/selinux\\/[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+MAC-policy[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_113": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /etc/selinux/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/selinux(/|[[:space:]]))(?=.*wa)(?=.*MAC-policy).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_114": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - /usr/share/selinux/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+\\/usr\\/share\\/selinux\\/[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+MAC-policy[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_115": {
        "system": "Linux",
        "description": "4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected - auditctl /usr/share/selinux/",
        "info": "Monitor SELinux/AppArmor mandatory access controls. The parameters below monitor\nany write access (potential additional, deletion or modification of files in the directory) or\nattribute changes to the /etc/selinux or /etc/apparmor and /etc/apparmor.d directories.\n\nRationale:\n\nChanges to files in these directories could indicate that an unauthorized user is attempting\nto modify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "On systems using SELinux Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/selinux/ -p wa -k MAC-policy\n-w /usr/share/selinux/ -p wa -k MAC-policy\n\nOn systems using AppArmor Edit or create a file in the /etc/audit/rules.d/ directory\nending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/apparmor/ -p wa -k MAC-policy\n-w /etc/apparmor.d/ -p wa -k MAC-policy\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/usr/share/selinux(/|[[:space:]]))(?=.*wa)(?=.*MAC-policy).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_116": {
        "system": "Linux",
        "description": "4.1.9 Ensure login and logout events are collected - faillog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The\nfile /var/log/lastlog maintain records of the last time a user successfully logged in. The\nfile /var/log/tallylog maintains records of failures via the pam_tally2 module\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/var/log/faillog[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+logins[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_117": {
        "system": "Linux",
        "description": "4.1.9 Ensure login and logout events are collected - auditctl faillog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The\nfile /var/log/lastlog maintain records of the last time a user successfully logged in. The\nfile /var/log/tallylog maintains records of failures via the pam_tally2 module\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/var/log/faillog)(?=.*wa)(?=.*logins).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_118": {
        "system": "Linux",
        "description": "4.1.9 Ensure login and logout events are collected - lastlog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The\nfile /var/log/lastlog maintain records of the last time a user successfully logged in. The\nfile /var/log/tallylog maintains records of failures via the pam_tally2 module\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/var/log/lastlog[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+logins[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_119": {
        "system": "Linux",
        "description": "4.1.9 Ensure login and logout events are collected - auditctl lastlog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The\nfile /var/log/lastlog maintain records of the last time a user successfully logged in. The\nfile /var/log/tallylog maintains records of failures via the pam_tally2 module\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/var/log/lastlog)(?=.*wa)(?=.*logins).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_120": {
        "system": "Linux",
        "description": "4.1.9 Ensure login and logout events are collected - tallylog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The\nfile /var/log/lastlog maintain records of the last time a user successfully logged in. The\nfile /var/log/tallylog maintains records of failures via the pam_tally2 module\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/var/log/tallylog[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+logins[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_121": {
        "system": "Linux",
        "description": "4.1.9 Ensure login and logout events are collected - auditctl tallylog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The\nfile /var/log/lastlog maintain records of the last time a user successfully logged in. The\nfile /var/log/tallylog maintains records of failures via the pam_tally2 module\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/var/log/tallylog)(?=.*wa)(?=.*logins).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_122": {
        "system": "Linux",
        "description": "4.1.10 Ensure session initiation information is collected - utmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp tracks all currently logged in users.\nAll audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks\nlogins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed\nlogin attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\n\n\nNotes:\n\nThe last command can be used to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/var/run/utmp[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+session[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_123": {
        "system": "Linux",
        "description": "4.1.10 Ensure session initiation information is collected - auditctl utmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp tracks all currently logged in users.\nAll audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks\nlogins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed\nlogin attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\n\n\nNotes:\n\nThe last command can be used to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/var/run/utmp)(?=.*wa)(?=.*session).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_124": {
        "system": "Linux",
        "description": "4.1.10 Ensure session initiation information is collected - wtmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp tracks all currently logged in users.\nAll audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks\nlogins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed\nlogin attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\n\n\nNotes:\n\nThe last command can be used to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/var/log/wtmp[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+logins[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_125": {
        "system": "Linux",
        "description": "4.1.10 Ensure session initiation information is collected - auditctl wtmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp tracks all currently logged in users.\nAll audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks\nlogins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed\nlogin attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\n\n\nNotes:\n\nThe last command can be used to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/var/log/wtmp)(?=.*wa)(?=.*logins).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_126": {
        "system": "Linux",
        "description": "4.1.10 Ensure session initiation information is collected - btmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp tracks all currently logged in users.\nAll audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks\nlogins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed\nlogin attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\n\n\nNotes:\n\nThe last command can be used to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/var/log/btmp[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+logins[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_127": {
        "system": "Linux",
        "description": "4.1.10 Ensure session initiation information is collected - auditctl btmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp tracks all currently logged in users.\nAll audit records will be tagged with the identifier \"session.\" The /var/log/wtmp file tracks\nlogins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed\nlogin attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp . All audit records will be tagged with the identifier \"logins.\"\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k logins\n-w /var/log/btmp -p wa -k logins\n\n\nNotes:\n\nThe last command can be used to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.1.2,800-171|3.1.10,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AC-11,800-53|AU-3,800-53r5|AC-2(12),800-53r5|AC-11,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.1(b),CN-L3|8.1.4.3(b),CSCv6|5.5,CSCv6|16.4,CSCv6|16.10,CSCv7|4.9,CSCv7|16.11,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2,ITSG-33|AC-11,ITSG-33|AU-3,LEVEL|2S,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|8.2.8,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/var/log/btmp)(?=.*wa)(?=.*logins).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_128": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - auditctl b32 chown fchown",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown)(?=.*perm_mod).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_129": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - b32 setxattr",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+setxattr[[:space:]]+-S[[:space:]]+lsetxattr[[:space:]]+-S[[:space:]]+fsetxattr[[:space:]]+-S[[:space:]]+removexattr[[:space:]]+-S[[:space:]]+lremovexattr[[:space:]]+-S[[:space:]]+fremovexattr[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+perm_mod[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_130": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - auditctl b32 setxattr",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr)(?=.*perm_mod).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_131": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - b32 chmod fchmod",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+chmod[[:space:]]+-S[[:space:]]+fchmod[[:space:]]+-S[[:space:]]+fchmodat[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+perm_mod[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_132": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - auditctl b32 chmod fchmod",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*chmod)(?=.*fchmod)(?=.*fchmodat)(?=.*perm_mod).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_133": {
        "description": "OS 64bit check",
        "cmd": "uname -a | grep x86_64 | awk '{print} END {if (NR > 0) print \"found\"}'",
        "expect": "found"
    },
    "custom_item_134": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - b64 setxattr",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+setxattr[[:space:]]+-S[[:space:]]+lsetxattr[[:space:]]+-S[[:space:]]+fsetxattr[[:space:]]+-S[[:space:]]+removexattr[[:space:]]+-S[[:space:]]+lremovexattr[[:space:]]+-S[[:space:]]+fremovexattr[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+perm_mod[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_135": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - auditctl b64 setxattr",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*setxattr)(?=.*lsetxattr)(?=.*fsetxattr)(?=.*removexattr)(?=.*lremovexattr)(?=.*fremovexattr)(?=.*perm_mod).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_136": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - b64 chmod fchmod",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+chmod[[:space:]]+-S[[:space:]]+fchmod[[:space:]]+-S[[:space:]]+fchmodat[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+perm_mod[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_137": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - auditctl b64 chmod fchmod",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*chmod)(?=.*fchmod)(?=.*fchmodat)(?=.*perm_mod).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_138": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - b64 chown fchown",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+chown[[:space:]]+-S[[:space:]]+fchown[[:space:]]+-S[[:space:]]+fchownat[[:space:]]+-S[[:space:]]+lchown[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+perm_mod[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_139": {
        "system": "Linux",
        "description": "4.1.11 Ensure discretionary access control permission modification events are collected - auditctl b64 chown fchown",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod , fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown , fchown , fchownat and lchown system calls affect owner and group attributes on a\nfile. The setxattr , lsetxattr , fsetxattr (set extended file attributes) and removexattr ,\nlremovexattr , fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system user ids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier \"perm_mod.\"\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F\nauid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F\nauid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S\nremovexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295\n-k perm_mod\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*chown)(?=.*fchown)(?=.*fchownat)(?=.*lchown)(?=.*perm_mod).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_140": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - b32 EACCES",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+creat[[:space:]]+-S[[:space:]]+open[[:space:]]+-S[[:space:]]+openat[[:space:]]+-S[[:space:]]+truncate[[:space:]]+-S[[:space:]]+ftruncate[[:space:]]+-F[[:space:]]+exit=-EACCES[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+access[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_141": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - auditctl b32 EACCES",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate)(?=.*(EACCES|-13))(?=.*access).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_142": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - b32 EPERM",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+creat[[:space:]]+-S[[:space:]]+open[[:space:]]+-S[[:space:]]+openat[[:space:]]+-S[[:space:]]+truncate[[:space:]]+-S[[:space:]]+ftruncate[[:space:]]+-F[[:space:]]+exit=-EPERM[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+access[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_143": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - auditctl b32 EPERM",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate)(?=.*(EPERM|-1))(?=.*access).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_144": {
        "description": "OS 64bit check",
        "cmd": "uname -a | grep x86_64 | awk '{print} END {if (NR > 0) print \"found\"}'",
        "expect": "found"
    },
    "custom_item_145": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - b64 EACCES",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+creat[[:space:]]+-S[[:space:]]+open[[:space:]]+-S[[:space:]]+openat[[:space:]]+-S[[:space:]]+truncate[[:space:]]+-S[[:space:]]+ftruncate[[:space:]]+-F[[:space:]]+exit=-EACCES[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+access[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_146": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - auditctl b64 EACCES",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate)(?=.*(EACCES|-13))(?=.*access).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_147": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - b64 EPERM",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+creat[[:space:]]+-S[[:space:]]+open[[:space:]]+-S[[:space:]]+openat[[:space:]]+-S[[:space:]]+truncate[[:space:]]+-S[[:space:]]+ftruncate[[:space:]]+-F[[:space:]]+exit=-EPERM[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+access[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_148": {
        "system": "Linux",
        "description": "4.1.12 Ensure unsuccessful unauthorized file access attempts are collected - auditctl b64 EPERM",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation ( creat ), opening ( open , openat ) and truncation (\ntruncate , ftruncate ) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier \"access.\"\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S\nftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|14.6,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*creat)(?=.*open)(?=.*openat)(?=.*truncate)(?=.*ftruncate)(?=.*(EPERM|-1))(?=.*access).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_149": {
        "system": "Linux",
        "description": "4.1.13 Ensure use of privileged commands is collected",
        "info": "Monitor privileged programs (those that have the setuid and/or setgid bit set on execution)\nto determine if unprivileged users are running these commands.\n\nRationale:\n\nExecution of privileged commands by non-privileged users could be an indication of\nsomeone trying to gain unauthorized access to the system.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|5.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "IFS=$'\\\\n'; LINES=$(find / -xdev \\\\( -perm -4000 -o -perm -2000 \\\\) -type f); for LINE in $LINES; do LINE=\"-a always,exit -F path=$LINE -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged\"; if [ $(grep -- \"$LINE\" /etc/audit/rules.d/* | wc -l) -eq 0 ] ; then echo \"$LINE - not found in /etc/audit/rules.d/\"; else echo \"All audit.rules matching\"; fi; done",
        "expect": "All audit.rules matching"
    },
    "custom_item_150": {
        "description": "OS 64bit check",
        "cmd": "uname -a | grep x86_64 | awk '{print} END {if (NR > 0) print \"found\"}'",
        "expect": "found"
    },
    "custom_item_151": {
        "system": "Linux",
        "description": "4.1.14 Ensure successful file system mounts are collected - b64",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the\nmounting and unmounting of file systems. The parameters below configure the system to\ncreate an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While\ntracking mount commands gives the system administrator evidence that external media\nmay have been mounted (based on a review of the source of the mount and confirming it's\nan external media type), it does not conclusively indicate that data was exported to the\nmedia. System administrators who wish to determine if data were exported, would also\nhave to track successful open , creat and truncate system calls requiring write access to a\nfile under the mount point of the external media file system. This could give a fair\nindication that a write occurred. The only way to truly prove it, would be to track\nsuccessful writes to the external media. Tracking write system calls could quickly fill up the\naudit log and is not recommended. Recommendations on configuration options to track\ndata export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nNotes:\n\nThis tracks successful and unsuccessful mount commands. File system mounts do not have\nto come from external media and this action still does not verify write (e.g. CD ROMS).\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+mount[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+mounts[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_152": {
        "system": "Linux",
        "description": "4.1.14 Ensure successful file system mounts are collected - auditctl b64",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the\nmounting and unmounting of file systems. The parameters below configure the system to\ncreate an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While\ntracking mount commands gives the system administrator evidence that external media\nmay have been mounted (based on a review of the source of the mount and confirming it's\nan external media type), it does not conclusively indicate that data was exported to the\nmedia. System administrators who wish to determine if data were exported, would also\nhave to track successful open , creat and truncate system calls requiring write access to a\nfile under the mount point of the external media file system. This could give a fair\nindication that a write occurred. The only way to truly prove it, would be to track\nsuccessful writes to the external media. Tracking write system calls could quickly fill up the\naudit log and is not recommended. Recommendations on configuration options to track\ndata export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nNotes:\n\nThis tracks successful and unsuccessful mount commands. File system mounts do not have\nto come from external media and this action still does not verify write (e.g. CD ROMS).\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*mount)(?=.*mounts).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_153": {
        "system": "Linux",
        "description": "4.1.14 Ensure successful file system mounts are collected - b32",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the\nmounting and unmounting of file systems. The parameters below configure the system to\ncreate an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While\ntracking mount commands gives the system administrator evidence that external media\nmay have been mounted (based on a review of the source of the mount and confirming it's\nan external media type), it does not conclusively indicate that data was exported to the\nmedia. System administrators who wish to determine if data were exported, would also\nhave to track successful open , creat and truncate system calls requiring write access to a\nfile under the mount point of the external media file system. This could give a fair\nindication that a write occurred. The only way to truly prove it, would be to track\nsuccessful writes to the external media. Tracking write system calls could quickly fill up the\naudit log and is not recommended. Recommendations on configuration options to track\ndata export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nNotes:\n\nThis tracks successful and unsuccessful mount commands. File system mounts do not have\nto come from external media and this action still does not verify write (e.g. CD ROMS).\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+mount[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+mounts[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_154": {
        "system": "Linux",
        "description": "4.1.14 Ensure successful file system mounts are collected - auditctl b32",
        "info": "Monitor the use of the mount system call. The mount (and umount ) system call controls the\nmounting and unmounting of file systems. The parameters below configure the system to\ncreate an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While\ntracking mount commands gives the system administrator evidence that external media\nmay have been mounted (based on a review of the source of the mount and confirming it's\nan external media type), it does not conclusively indicate that data was exported to the\nmedia. System administrators who wish to determine if data were exported, would also\nhave to track successful open , creat and truncate system calls requiring write access to a\nfile under the mount point of the external media file system. This could give a fair\nindication that a write occurred. The only way to truly prove it, would be to track\nsuccessful writes to the external media. Tracking write system calls could quickly fill up the\naudit log and is not recommended. Recommendations on configuration options to track\ndata export to media is beyond the scope of this document.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k\nmounts\n\nNotes:\n\nThis tracks successful and unsuccessful mount commands. File system mounts do not have\nto come from external media and this action still does not verify write (e.g. CD ROMS).\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|13,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*mount)(?=.*mounts).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_155": {
        "description": "OS 64bit check",
        "cmd": "uname -a | grep x86_64 | awk '{print} END {if (NR > 0) print \"found\"}'",
        "expect": "found"
    },
    "custom_item_156": {
        "system": "Linux",
        "description": "4.1.15 Ensure file deletion events by users are collected - b64 unlink",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file\nattributes. This configuration statement sets up monitoring for the unlink (remove a file),\nunlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file\nattribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator\nwith evidence that inappropriate removal of files and file attributes associated with\nprotected files is occurring. While this audit option will look at all events, system\nadministrators will want to look for specific privileged files that are being deleted or\naltered.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nNotes:\n\nAt a minimum, configure the audit system to collect file deletion events for all users and\nroot.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.13.1,800-53|SC-7(10),800-53r5|SC-7(10),CN-L3|8.1.10.6(j),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(10),LEVEL|2S,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|33.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+unlink[[:space:]]+-S[[:space:]]+unlinkat[[:space:]]+-S[[:space:]]+rename[[:space:]]+-S[[:space:]]+renameat[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+delete[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_157": {
        "system": "Linux",
        "description": "4.1.15 Ensure file deletion events by users are collected - auditctl b64 unlink",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file\nattributes. This configuration statement sets up monitoring for the unlink (remove a file),\nunlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file\nattribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator\nwith evidence that inappropriate removal of files and file attributes associated with\nprotected files is occurring. While this audit option will look at all events, system\nadministrators will want to look for specific privileged files that are being deleted or\naltered.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nNotes:\n\nAt a minimum, configure the audit system to collect file deletion events for all users and\nroot.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.13.1,800-53|SC-7(10),800-53r5|SC-7(10),CN-L3|8.1.10.6(j),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(10),LEVEL|2S,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|33.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat)(?=.*delete).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_158": {
        "system": "Linux",
        "description": "4.1.15 Ensure file deletion events by users are collected - b32 unlink",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file\nattributes. This configuration statement sets up monitoring for the unlink (remove a file),\nunlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file\nattribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator\nwith evidence that inappropriate removal of files and file attributes associated with\nprotected files is occurring. While this audit option will look at all events, system\nadministrators will want to look for specific privileged files that are being deleted or\naltered.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nNotes:\n\nAt a minimum, configure the audit system to collect file deletion events for all users and\nroot.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.13.1,800-53|SC-7(10),800-53r5|SC-7(10),CN-L3|8.1.10.6(j),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(10),LEVEL|2S,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|33.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+unlink[[:space:]]+-S[[:space:]]+unlinkat[[:space:]]+-S[[:space:]]+rename[[:space:]]+-S[[:space:]]+renameat[[:space:]]+-F[[:space:]]+auid>=500[[:space:]]+-F[[:space:]]+auid!=4294967295[[:space:]]+-k[[:space:]]+delete[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_159": {
        "system": "Linux",
        "description": "4.1.15 Ensure file deletion events by users are collected - auditctl b32 unlink",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file\nattributes. This configuration statement sets up monitoring for the unlink (remove a file),\nunlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file\nattribute) system calls and tags them with the identifier \"delete\".\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator\nwith evidence that inappropriate removal of files and file attributes associated with\nprotected files is occurring. While this audit option will look at all events, system\nadministrators will want to look for specific privileged files that are being deleted or\naltered.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F\nauid>=500 -F auid!=4294967295 -k delete\n\nNotes:\n\nAt a minimum, configure the audit system to collect file deletion events for all users and\nroot.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.13.1,800-53|SC-7(10),800-53r5|SC-7(10),CN-L3|8.1.10.6(j),CSCv6|13,CSCv7|13,CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(10),LEVEL|2S,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|33.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*unlink)(?=.*unlinkat)(?=.*rename)(?=.*renameat)(?=.*delete).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_160": {
        "system": "Linux",
        "description": "4.1.16 Ensure changes to system administration scope (sudoers) is collected - /etc/sudoers.d",
        "info": "Monitor scope changes for system administrations. If the system has been properly\nconfigured to force system administrators to log in as themselves first and then use the\nsudo command to execute privileged commands, it is possible to monitor changes in scope.\nThe file /etc/sudoers will be written to when the file or its attributes have changed. The\naudit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made\nto scope of system administrator activity.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/etc/sudoers\\\\.d/[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+scope[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_161": {
        "system": "Linux",
        "description": "4.1.16 Ensure changes to system administration scope (sudoers) is collected - auditctl /etc/sudoers.d",
        "info": "Monitor scope changes for system administrations. If the system has been properly\nconfigured to force system administrators to log in as themselves first and then use the\nsudo command to execute privileged commands, it is possible to monitor changes in scope.\nThe file /etc/sudoers will be written to when the file or its attributes have changed. The\naudit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made\nto scope of system administrator activity.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/sudoers\\\\.d)(?=.*wa)(?=.*scope).*$'  | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_162": {
        "system": "Linux",
        "description": "4.1.16 Ensure changes to system administration scope (sudoers) is collected - /etc/sudoers",
        "info": "Monitor scope changes for system administrations. If the system has been properly\nconfigured to force system administrators to log in as themselves first and then use the\nsudo command to execute privileged commands, it is possible to monitor changes in scope.\nThe file /etc/sudoers will be written to when the file or its attributes have changed. The\naudit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made\nto scope of system administrator activity.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/etc/sudoers[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+scope[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_163": {
        "system": "Linux",
        "description": "4.1.16 Ensure changes to system administration scope (sudoers) is collected - auditctl /etc/sudoers",
        "info": "Monitor scope changes for system administrations. If the system has been properly\nconfigured to force system administrators to log in as themselves first and then use the\nsudo command to execute privileged commands, it is possible to monitor changes in scope.\nThe file /etc/sudoers will be written to when the file or its attributes have changed. The\naudit records will be tagged with the identifier \"scope.\"\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made\nto scope of system administrator activity.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.4,CSCv7|4.8,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/etc/sudoers(/|[[:space:]]))(?=.*wa)(?=.*scope).*$'  | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_164": {
        "system": "Linux",
        "description": "4.1.17 Ensure system administrator actions (sudolog) are collected",
        "info": "Monitor the sudo log file. If the system has been properly configured to disable the use of\nthe su command and force all administrators to have to log in first and then use sudo to\nexecute privileged commands, then all administrator commands will be logged to\n/var/log/sudo.log . Any time a command is executed, an audit event will be triggered as\nthe /var/log/sudo.log file will be opened for write and the executed administration\ncommand will be written to the log.\n\nRationale:\n\nChanges in /var/log/sudo.log indicate that an administrator has executed a command or\nthe log file itself has been tampered with. Administrators will want to correlate the events\nwritten to the audit trail with the records written to /var/log/sudo.log to verify if\nunauthorized commands have been executed.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/sudo.log -p wa -k actions\n\nNotes:\n\nThe system must be configured with sudisabled (See Item 5.6 Ensure access to the su\ncommand is restricted) to force all command execution through sudo. This will not be\neffective on the console, as administrators can log in as root.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.1,CSCv6|5.5,CSCv7|4.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/var/log/sudo\\\\.log[[:space:]]+-p[[:space:]]+wa[[:space:]]+-k[[:space:]]+actions[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_165": {
        "system": "Linux",
        "description": "4.1.17 Ensure system administrator actions (sudolog) are collected - auditctl",
        "info": "Monitor the sudo log file. If the system has been properly configured to disable the use of\nthe su command and force all administrators to have to log in first and then use sudo to\nexecute privileged commands, then all administrator commands will be logged to\n/var/log/sudo.log . Any time a command is executed, an audit event will be triggered as\nthe /var/log/sudo.log file will be opened for write and the executed administration\ncommand will be written to the log.\n\nRationale:\n\nChanges in /var/log/sudo.log indicate that an administrator has executed a command or\nthe log file itself has been tampered with. Administrators will want to correlate the events\nwritten to the audit trail with the records written to /var/log/sudo.log to verify if\nunauthorized commands have been executed.",
        "solution": "Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /var/log/sudo.log -p wa -k actions\n\nNotes:\n\nThe system must be configured with sudisabled (See Item 5.6 Ensure access to the su\ncommand is restricted) to force all command execution through sudo. This will not be\neffective on the console, as administrators can log in as root.\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|5.1,CSCv6|5.5,CSCv7|4.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/var/log/sudo\\\\.log)(?=.*wa)(?=.*actions).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_166": {
        "description": "OS 64bit check",
        "cmd": "uname -a | grep x86_64 | awk '{print} END {if (NR > 0) print \"found\"}'",
        "expect": "found"
    },
    "custom_item_167": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - init_module",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b64[[:space:]]+-S[[:space:]]+init_module[[:space:]]+-S[[:space:]]+delete_module[[:space:]]+-k[[:space:]]+modules[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_168": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - auditctl init_module",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b64|3221225534|x86_64))(?=.*init_module)(?=.*delete_module)(?=.*modules).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_169": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - init_module",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-a[[:space:]]+always,exit[[:space:]]+-F[[:space:]]+arch=b32[[:space:]]+-S[[:space:]]+init_module[[:space:]]+-S[[:space:]]+delete_module[[:space:]]+-k[[:space:]]+modules[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_170": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - auditctl init_module",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*(b32|1073741827|i386))(?=.*init_module)(?=.*delete_module)(?=.*modules).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_171": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - insmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/sbin/insmod[[:space:]]+-p[[:space:]]+x[[:space:]]+-k[[:space:]]+modules[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_172": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - auditctl insmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/sbin/insmod)(?=.*x)(?=.*modules).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_173": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - rmmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/sbin/rmmod[[:space:]]+-p[[:space:]]+x[[:space:]]+-k[[:space:]]+modules[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_174": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - auditctl rmmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/sbin/rmmod)(?=.*x)(?=.*modules).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_175": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - modprobe",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep -E '^[[:space:]]*-w[[:space:]]+/sbin/modprobe[[:space:]]+-p[[:space:]]+x[[:space:]]+-k[[:space:]]+modules[[:space:]]*$' /etc/audit/rules.d/*.rules | awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "pass"
    },
    "custom_item_176": {
        "system": "Linux",
        "description": "4.1.18 Ensure kernel module loading and unloading is collected - auditctl modprobe",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of \"modules\".\n\nRationale:\n\nMonitoring the use of insmod , rmmod and modprobe could provide system administrators\nwith evidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and\ndelete_module system calls would reflect an unauthorized user attempting to use a\ndifferent program to load and unload modules.",
        "solution": "For 32 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems Edit or create a file in the /etc/audit/rules.d/ directory ending in\n.rules\nExample: vi /etc/audit/rules.d/audit.rules\nand add the following lines:\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -F arch=b64 -S init_module -S delete_module -k modules\n\nNotes:\n\nReloading the auditd config to set active settings may require a system reboot.",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "auditctl -l | grep -P '^(?=.*/sbin/modprobe)(?=.*x)(?=.*modules).*$' | awk \\'{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_177": {
        "system": "Linux",
        "description": "4.1.19 Ensure the audit configuration is immutable",
        "info": "Set system audit so that audit rules cannot be modified with auditctl . Setting the flag \"-e\n2\" forces audit to be put in immutable mode. Audit changes can only be made on system\nreboot.\n\nRationale:\n\nIn immutable mode, unauthorized users cannot execute changes to the audit system to\npotentially hide malicious activity and then put the audit rules back. Users would most\nlikely notice a system reboot and that could alert administrators of an attempt to make\nunauthorized audit changes.",
        "solution": "Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line\n\n-e 2\n\nat the end of the file\n\nNotes:\n\nThis setting will ensure reloading the auditd config to set active settings requires a system\nreboot.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|3,CSCv6|6,CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2S,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "grep '^\\s*[^#]' /etc/audit/rules.d/*.rules | tail -1",
        "expect": "^[\\\\s]*-e[\\\\s]+2[\\\\s]*$"
    },
    "custom_item_178": {
        "system": "Linux",
        "description": "5.2.21 Ensure SSH AllowTcpForwarding is disabled",
        "info": "SSH port forwarding is a mechanism in SSH for tunneling application ports from the client\nto the server, or servers to clients. It can be used for adding encryption to legacy\napplications, going through firewalls, and some system administrators and IT professionals\nuse it for opening backdoors into the internal network from their home machines\n\nRationale:\n\nLeaving port forwarding enabled can expose the organization to security risks and back-\ndoors.\n\nSSH connections are protected with strong encryption. This makes their contents invisible\nto most deployed network monitoring and traffic filtering solutions. This invisibility carries\nconsiderable risk potential if it is used for malicious purposes such as data exfiltration.\nCybercriminals or malware could exploit SSH to hide their unauthorized communications,\nor to exfiltrate stolen data from the target network",
        "solution": "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n\nAllowTcpForwarding no\n\nImpact:\n\nSSH tunnels are widely used in many corporate environments that employ mainframe\nsystems as their application backends. In those environments the applications themselves\nmay have very limited native support for security. By utilizing tunneling, compliance with\nSOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the\napplications.\n\nDefault Value:\n\nAllowTcpForwarding yes",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|16,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2S,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "sshd -T | grep -i allowtcpforwarding",
        "expect": "^[\\\\s]*[Aa]llow[Tt]cp[Ff]orwarding no[\\\\s]*$"
    },
    "custom_item_179": {
        "system": "Linux",
        "description": "5.4.5 Ensure default user shell timeout is 900 seconds or less - /etc/bashrc",
        "info": "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in\nseconds.\n\nRationale:\n\nHaving no timeout value associated with a shell could allow an unauthorized user access to\nanother user's shell session (e.g. user walks away from their computer and doesn't lock the\nscreen). Setting a timeout value at least reduces the risk of this happening.",
        "solution": "Edit the /etc/bashrc and /etc/profile files (and the appropriate files for any other shell\nsupported on your system) and add or edit any umask parameters as follows:\n\nTMOUT=900\n\nNotes:\n\nThe audit and remediation in this recommendation apply to bash and shell. If other shells\nare supported on the system, it is recommended that their configuration files also are\nchecked. Other methods of setting a timeout exist for other shells not covered here.\n\nEnsure that the timeout conforms to your local policy.",
        "reference": "800-171|3.1.10,800-53|AC-11,800-53r5|AC-11,CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.11.2.8,ITSG-33|AC-11,LEVEL|2S,NIAv2|AM23c,NIAv2|AM23d,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/bashrc",
        "regex": "^[\\\\s]*TMOUT[\\\\s]*",
        "expect": "^[\\\\s]*TMOUT[\\\\s]*=[\\\\s]*(900|[1-8][0-9]{2}|[0-9]{1,2})[\\\\s]*$"
    },
    "custom_item_180": {
        "system": "Linux",
        "description": "5.4.5 Ensure default user shell timeout is 900 seconds or less - /etc/profile",
        "info": "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in\nseconds.\n\nRationale:\n\nHaving no timeout value associated with a shell could allow an unauthorized user access to\nanother user's shell session (e.g. user walks away from their computer and doesn't lock the\nscreen). Setting a timeout value at least reduces the risk of this happening.",
        "solution": "Edit the /etc/bashrc and /etc/profile files (and the appropriate files for any other shell\nsupported on your system) and add or edit any umask parameters as follows:\n\nTMOUT=900\n\nNotes:\n\nThe audit and remediation in this recommendation apply to bash and shell. If other shells\nare supported on the system, it is recommended that their configuration files also are\nchecked. Other methods of setting a timeout exist for other shells not covered here.\n\nEnsure that the timeout conforms to your local policy.",
        "reference": "800-171|3.1.10,800-53|AC-11,800-53r5|AC-11,CN-L3|8.1.4.1(b),CSCv6|16.4,CSCv7|16.11,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.11.2.8,ITSG-33|AC-11,LEVEL|2S,NIAv2|AM23c,NIAv2|AM23d,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "file": "/etc/profile",
        "regex": "^[\\\\s]*TMOUT[\\\\s]*",
        "expect": "^[\\\\s]*TMOUT[\\\\s]*=[\\\\s]*(900|[1-8][0-9]{2}|[0-9]{1,2})[\\\\s]*$"
    },
    "custom_item_181": {
        "description": "6.1.1 Check for rpm",
        "file": "/usr/bin/rpm"
    },
    "custom_item_182": {
        "system": "Linux",
        "description": "6.1.1 Audit system file permissions",
        "info": "The RPM and Debian package managers have a number of useful options. One of these, the\n--verify (or -V for RPM) option, can be used to verify that system packages are correctly\ninstalled. The --verify option can be used to verify a particular package or to verify all\nsystem packages. If no output is returned, the package is installed correctly. The following\ntable describes the meaning of output from the verify option:\n\nCode Meaning\n\nS File size differs.\n\nM File mode differs (includes permissions and file type).\n\n5 The MD5 checksum differs.\n\nD The major and minor version numbers differ on a device file.\n\nL A mismatch occurs in a link.\n\nU The file ownership differs.\n\nG The file group owner differs.\n\nT The file time (mtime) differs.\n\nThe rpm -qf or dpkg -S command can be used to determine which package a particular file\nbelongs to. For example the following commands determines which package the /bin/bash\nfile belongs to:\n\n# rpm -qf /bin/bash\n\nbash-4.1.2-29.el6.x86_64\n\n# dpkg -S /bin/bash\n\nbash: /bin/bash\n\n\n\n\nTo verify the settings for the package that controls the /bin/bash file, run the following:\n\n# rpm -V bash-4.1.2-29.el6.x86_64\n\n.M....... /bin/bash\n\n# dpkg --verify bash\n\n??5?????? c /etc/bash.bashrc\n\nNote that you can feed the output of the rpm -qf command to the rpm -V command:\n\n# rpm -V `rpm -qf /etc/passwd`\n\n.M...... c /etc/passwd\n\nS.5....T c /etc/printcap\n\nRationale:\n\nIt is important to confirm that packaged system files and directories are maintained with\nthe permissions they were intended to have from the OS vendor.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Correct any discrepancies found and rerun the audit until output is clean or risk is\nmitigated or accepted.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2NS,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "rpm -Va --nomtime --nosize --nomd5 --nolinkto"
    },
    "custom_item_183": {
        "description": "6.1.1 Check for dpkg",
        "file": "/usr/bin/dpkg"
    },
    "custom_item_184": {
        "system": "Linux",
        "description": "6.1.1 Audit system file permissions",
        "info": "The RPM and Debian package managers have a number of useful options. One of these, the\n--verify (or -V for RPM) option, can be used to verify that system packages are correctly\ninstalled. The --verify option can be used to verify a particular package or to verify all\nsystem packages. If no output is returned, the package is installed correctly. The following\ntable describes the meaning of output from the verify option:\n\nCode Meaning\n\nS File size differs.\n\nM File mode differs (includes permissions and file type).\n\n5 The MD5 checksum differs.\n\nD The major and minor version numbers differ on a device file.\n\nL A mismatch occurs in a link.\n\nU The file ownership differs.\n\nG The file group owner differs.\n\nT The file time (mtime) differs.\n\nThe rpm -qf or dpkg -S command can be used to determine which package a particular file\nbelongs to. For example the following commands determines which package the /bin/bash\nfile belongs to:\n\n# rpm -qf /bin/bash\n\nbash-4.1.2-29.el6.x86_64\n\n# dpkg -S /bin/bash\n\nbash: /bin/bash\n\n\n\n\nTo verify the settings for the package that controls the /bin/bash file, run the following:\n\n# rpm -V bash-4.1.2-29.el6.x86_64\n\n.M....... /bin/bash\n\n# dpkg --verify bash\n\n??5?????? c /etc/bash.bashrc\n\nNote that you can feed the output of the rpm -qf command to the rpm -V command:\n\n# rpm -V `rpm -qf /etc/passwd`\n\n.M...... c /etc/passwd\n\nS.5....T c /etc/printcap\n\nRationale:\n\nIt is important to confirm that packaged system files and directories are maintained with\nthe permissions they were intended to have from the OS vendor.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Correct any discrepancies found and rerun the audit until output is clean or risk is\nmitigated or accepted.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2NS,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2420",
        "cmd": "dpkg --verify | awk '{ print } END { if (NR==0) print \"none\" }'",
        "expect": "none"
    }
}