{
    "custom_item_1": {
        "description": "Tomcat 8 is installed",
        "cmd": "echo '@APP_name@/@APP_version@'",
        "expect": "@APP_name@/@PRODUCT_VERSION@.*"
    },
    "custom_item_2": {
        "system": "Linux",
        "description": "2.5 Disable client facing Stack Traces - check for defined exception type",
        "info": "When a runtime error occurs during request processing, Apache Tomcat will display debugging information to the requestor. It is recommended that such debug information be withheld from the requestor.\n\nRationale:\n\nDebugging information, such as that found in call stacks, often contains sensitive information which may be useful to an attacker. By preventing Tomcat from providing this information, the risk of leaking sensitive information to a potential attacker is reduced.",
        "solution": "Perform the following to prevent Tomcat from providing debug information to the requestor during runtime errors:\n\nCreate a web page that contains the logic or message you wish to invoke when encountering a runtime error. For example purposes, assume this page is located at /error.jsp.\n\nAdd a child element,, to theelement, in the $CATALINA_HOME/conf/web.xml file.\n\nAdd a child element,, to theelement. Set the value of theelement to java.lang.Throwable.\n\nAdd a child elementto theelement. Set the value of theelement to the location of page created in step 1.\n\nThe resulting entry will look as follows:java.lang.Throwable/error.jspDefault Value:\n\nTomcat's default configuration does not include anelement in $CATALINA_HOME/conf/web.xml. Therefore, Tomcat will provide debug information to the requestor by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/api/org/apache/tomcat/util/descriptor/web/ErrorPage.html",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSCv7|13.2,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/web.xml",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_3": {
        "system": "Linux",
        "description": "2.6 Turn off TRACE - check server.xml",
        "info": "The HTTP TRACE verb provides debugging and diagnostics information for a given request.\n\nRationale:\n\nDiagnostic information, such as that found in the response to a TRACE request, often contains sensitive information which may useful to an attacker. By preventing Tomcat from providing this information, the risk of leaking sensitive information to a potential attacker is reduced.",
        "solution": "Perform the following to prevent Tomcat from accepting a TRACE request:\nSet the allowTrace attribute for each Connector specified in $CATALINA_HOME/conf/server.xml to false.Alternatively, ensure the allowTrace attribute is absent from each Connector specified in $CATALINA_HOME/conf/server.xml.\n\nDefault Value:\n\nTomcat does not allow the TRACE HTTP verb by default. Tomcat will only allow TRACE if the allowTrace attribute is present and set to true.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/http.html\n\nhttps://tomcat.apache.org/tomcat-8.5-doc/security-howto.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/security-howto.html",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSCv7|13.2,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_4": {
        "system": "Linux",
        "description": "2.6 Turn off TRACE - check web.xml config files",
        "info": "The HTTP TRACE verb provides debugging and diagnostics information for a given request.\n\nRationale:\n\nDiagnostic information, such as that found in the response to a TRACE request, often contains sensitive information which may useful to an attacker. By preventing Tomcat from providing this information, the risk of leaking sensitive information to a potential attacker is reduced.",
        "solution": "Perform the following to prevent Tomcat from accepting a TRACE request:\nSet the allowTrace attribute for each Connector specified in $CATALINA_HOME/conf/server.xml to false.Alternatively, ensure the allowTrace attribute is absent from each Connector specified in $CATALINA_HOME/conf/server.xml.\n\nDefault Value:\n\nTomcat does not allow the TRACE HTTP verb by default. Tomcat will only allow TRACE if the allowTrace attribute is present and set to true.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/http.html\n\nhttps://tomcat.apache.org/tomcat-8.5-doc/security-howto.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/security-howto.html",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSCv6|18.5,CSCv7|13.2,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1S,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "cmd": "$(which find) @APP_Config_catalogs@ -name web.xml -exec bash -c 'if test -f {}; then $(which cat) {} | $(which egrep) -q \"^[\\\\\\s\\\\\\t]*[Gg][Ee][Tt][Tt][Rr][Aa][Cc][Ee]<\\\\\\/servlet-name>\"; if test $? -lt 1; then echo {};fi; fi' \\\\; | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_5": {
        "system": "Linux",
        "description": "3.1 Set a nondeterministic Shutdown command value",
        "info": "Tomcat listens on TCP port 8005 to accept shutdown requests. By connecting to this port and sending the SHUTDOWN command, all applications within Tomcat are halted. The shutdown port is not exposed to the network as it is bound to the loopback interface. It is recommended that a nondeterministic value be set for the shutdown attribute in $CATALINA_HOME/conf/server.xml.\n\nRationale:\n\nSetting the shutdown attribute to a nondeterministic value will prevent malicious local users from shutting down Tomcat.",
        "solution": "Perform the following to set a nondeterministic value for the shutdown attribute.\nUpdate the shutdown attribute in $CATALINA_HOME/conf/server.xml as follows:Note: NONDETERMINISTICVALUE should be replaced with a sequence of random characters.\n\n\n\n\nDefault Value:\n\nThe default value for the shutdown attribute is SHUTDOWN.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/server.html\n\nhttps://tomcat.apache.org/tomcat-8.5-doc/config/server.html",
        "reference": "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_6": {
        "system": "Linux",
        "description": "4.1 Restrict access to $CATALINA_HOME",
        "info": "$CATALINA_HOME is the environment variable which holds the path to the root Tomcat directory. It is important to protect access to this in order to protect the Tomcat binaries and libraries from unauthorized modification. It is recommended that the ownership of $CATALINA_HOME be tomcat_admin:tomcat. It is also recommended that the permission on $CATALINA_HOME deny read, write, and execute for the world (o-rwx) and deny write access to the group (g-w).\n\nRationale:\n\nThe security of processes and data which traverse or depend on Tomcat may become compromised if the $CATALINA_HOME is not secured.",
        "solution": "Perform the following to establish the recommended state:\n\nSet the ownership of the $CATALINA_HOME to tomcat_admin:tomcat.\n\n# chown tomcat_admin.tomcat $CATALINA_HOME\n\nRemove write permissions for the group and read, write, and execute permissions for the world\n\n# chmod g-w,o-rwx $CATALINA_HOME",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@",
        "owner": "@TOMCAT_OWNER@",
        "mask": "027",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_7": {
        "system": "Linux",
        "description": "4.2 Restrict access to $CATALINA_BASE",
        "info": "$CATALINA_BASE is the environment variable that specifies the base directory from which most relative paths are resolved. $CATALINA_BASE is usually used when there are multiple instances of Tomcat running. It is important to limit access to this in order to protect the Tomcat-related binaries and libraries from unauthorized modification. It is recommended that the ownership of $CATALINA_BASE be tomcat_admin:tomcat. It is also recommended that the permission on $CATALINA_BASE deny read, write, and execute for the world (o-rwx) and prevent write deny to the group (g-w).\n\nRationale:\n\nThe security of processes and data which traverse or depend on Tomcat may become compromised if the $CATALINA_BASE is not secured.",
        "solution": "Perform the following to establish the recommended state:\n\nSet the ownership of the $CATALINA_BASE to tomcat_admin:tomcat.\n\n# chown tomcat_admin.tomcat $CATALINA_BASE\n\nRemove write permissions for the group and read, write, and execute permissions for the world\n\n# chmod g-w,o-rwx $CATALINA_BASE",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@",
        "owner": "@TOMCAT_OWNER@",
        "mask": "027",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_8": {
        "system": "Linux",
        "description": "4.3 Restrict access to Tomcat configuration directory",
        "info": "The Tomcat $CATALINA_HOME/conf directory contains Tomcat configuration files. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on this directory deny read, write, and execute for the world (o-rwx) and deny write access to the group (g-w).\n\nRationale:\n\nRestricting access to these directories will prevent local users from maliciously or inadvertently altering Tomcat's configuration.",
        "solution": "Perform the following to restrict access to Tomcat configuration files:\n\nSet the ownership of the $CATALINA_HOME/conf to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf\n\nRemove write permissions for the group and read, write, and execute permissions for the world.\n\n# chmod g-w,o-rwx $CATALINA_HOME/conf\n\nDefault Value:\n\nThe default permissions of the top-level directories are 770.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf",
        "owner": "@TOMCAT_OWNER@",
        "mask": "027",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_9": {
        "system": "Linux",
        "description": "4.4 Restrict access to Tomcat logs directory",
        "info": "The Tomcat $CATALINA_HOME/logs directory contains Tomcat logs. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on this directory deny read, write, and execute for the world (o-rwx).\n\nRationale:\n\nRestricting access to these directories will prevent local users from maliciously or inadvertently altering Tomcat's logs.",
        "solution": "Perform the following to restrict access to Tomcat log files:\n\nSet the ownership of the $CATALINA_HOME/logs to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/logs\n\nRemove read, write, and execute permissions for the world\n\n# chmod o-rwx $CATALINA_HOME/logs\n\nDefault Value:\n\nThe default permissions of the top-level directories are 770.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/logs",
        "owner": "@TOMCAT_OWNER@",
        "mask": "007",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_10": {
        "system": "Linux",
        "description": "4.5 Restrict access to Tomcat temp directory",
        "info": "The Tomcat $CATALINA_HOME/temp directory is used by Tomcat to persist temporary information to disk. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permissions on this directory deny read, write, and execute for the world (o-rwx).\n\nRationale:\n\nRestricting access to these directories will prevent local users from maliciously or inadvertently affecting the integrity of Tomcat processes.",
        "solution": "Perform the following to restrict access to Tomcat temp directory:\n\nSet the ownership of the $CATALINA_HOME/temp to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/temp\n\nRemove read, write, and execute permissions for the world\n\n# chmod o-rwx $CATALINA_HOME/temp\n\nDefault Value:\n\nThe default permissions of the top-level directories are 770.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/temp",
        "owner": "@TOMCAT_OWNER@",
        "mask": "007",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_11": {
        "system": "Linux",
        "description": "4.6 Restrict access to Tomcat binaries directory",
        "info": "The Tomcat $CATALINA_HOME/bin directory contains executes that are part of the Tomcat run-time. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permission on this directory deny read, write, and execute for the world (o-rwx) and deny write access to the group (g-w).\n\nRationale:\n\nRestricting access to these directories will prevent local users from maliciously or inadvertently affecting the integrity of Tomcat processes.",
        "solution": "Perform the following to restrict access to Tomcat bin directory:\n\nSet the ownership of the $CATALINA_HOME/bin to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/bin\n\nRemove read, write, and execute permissions for the world\n\n# chmod g-w,o-rwx $CATALINA_HOME/bin\n\nDefault Value:\n\nThe default permissions of the top-level directories are 770.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Binary_catalog@",
        "owner": "@TOMCAT_OWNER@",
        "mask": "027",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_12": {
        "system": "Linux",
        "description": "4.7 Restrict access to Tomcat web application directory",
        "info": "The Tomcat $CATALINA_HOME/webapps directory contains web applications that are deployed through Tomcat. It is recommended that the ownership of this directory be tomcat_admin:tomcat. It is also recommended that the permission on $CATALINA_HOME/webapps deny read, write, and execute for the world (o-rwx) and deny write access to the group (g-w).\n\nRationale:\n\nRestricting access to these directories will prevent local users from maliciously or inadvertently affecting the integrity of web applications.",
        "solution": "Perform the following to restrict access to Tomcat webapps directory:\n\nSet the ownership of the $CATALINA_HOME/webapps to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/webapps\n\nRemove read, write, and execute permissions for the world.\n\n# chmod g-w,o-rwx $CATALINA_HOME/webapps\n\nDefault Value:\n\nThe default permissions of the top-level directories are 770.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps",
        "owner": "@TOMCAT_OWNER@",
        "mask": "027",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_13": {
        "system": "Linux",
        "description": "4.8 Restrict access to Tomcat catalina.properties",
        "info": "catalina.properties is a Java properties file which contains settings for Tomcat including class loader information, security package lists, and performance properties. It is recommended that access to this file properly protect from unauthorized changes.\n\nRationale:\n\nRestricting access to this file will prevent local users from maliciously or inadvertently altering Tomcat's security policy.",
        "solution": "Perform the following to restrict access to catalina.properties:\n\nSet the ownership of the $CATALINA_HOME/conf/catalina.properties to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf/catalina.properties\n\nSet the permissions of the $CATALINA_HOME/conf/catalina.properties to 600\n\n# chmod 600 $CATALINA_HOME/conf/catalina.properties\n\nDefault Value:\n\nThe default permissions of the top-level directories are 600.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/catalina.properties",
        "owner": "@TOMCAT_OWNER@",
        "mask": "177",
        "file_type": "f",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_14": {
        "system": "Linux",
        "description": "4.9 Restrict access to Tomcat catalina.policy",
        "info": "The catalina.policy file is used to configure security policies for Tomcat. It is recommended that access to this file has the proper permissions to properly protect from unauthorized changes.\n\nRationale:\n\nRestricting access to this file will prevent local users from maliciously or inadvertently altering Tomcat's security policy.",
        "solution": "Perform the following to restrict access to $CATALINA_HOME/conf/catalina.policy.\n\nSet the owner and group owner of the contents of $CATALINA_HOME/conf/catalina.policy to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf/catalina.policy\n\nSet the permissions of the $CATALINA_HOME/conf/catalina.policy file to 600.\n\n# chmod 600 $CATALINA_HOME/conf/catalina.policy\n\nDefault Value:\n\nThe default permissions of catalina.policy are 600.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/catalina.policy",
        "owner": "@TOMCAT_OWNER@",
        "mask": "177",
        "file_type": "f",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_15": {
        "system": "Linux",
        "description": "4.10 Restrict access to Tomcat context.xml",
        "info": "The context.xml file is loaded by all web applications and sets certain configuration options. It is recommended that access to this file properly protect from unauthorized changes.\n\nRationale:\n\nRestricting access to this file will prevent local users from maliciously or inadvertently altering Tomcat's security policy.",
        "solution": "Perform the following to restrict access to context.xml:\n\nSet the ownership of the $CATALINA_HOME/conf/context.xml to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf/context.xml\n\nSet the permissions for the $CATALINA_HOME/conf/context.xml to 600.\n\n# chmod 600 $CATALINA_HOME/conf/context.xml\n\nDefault Value:\n\nThe default permissions of context.xml are 600.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/context.xml",
        "owner": "@TOMCAT_OWNER@",
        "mask": "177",
        "file_type": "f",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_16": {
        "system": "Linux",
        "description": "4.11 Restrict access to Tomcat logging.properties",
        "info": "logging.properties is a Tomcat file which specifies the logging configuration. It is recommended that access to this file properly protect against unauthorized changes.\n\nRationale:\n\nRestricting access to this file will prevent local users from maliciously or inadvertently altering Tomcat's security policy.",
        "solution": "Perform the following to restrict access to logging.properties:\n\nSet the ownership of the $CATALINA_HOME/conf/logging.properties to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf/logging.properties\n\nSet the permissions for the $CATALINA_HOME/conf/logging.properties file to 600.\n\n# chmod 600 $CATALINA_HOME/conf/logging.properties\n\nDefault Value:\n\nThe default permissions are 600.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/logging.properties",
        "owner": "@TOMCAT_OWNER@",
        "mask": "177",
        "file_type": "f",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_17": {
        "system": "Linux",
        "description": "4.12 Restrict access to Tomcat server.xml",
        "info": "server.xml contains Tomcat servlet definitions and configurations. It is recommended that access to this file properly protect against unauthorized changes.\n\nRationale:\n\nRestricting access to this file will prevent local users from maliciously or inadvertently altering Tomcat's security policy.",
        "solution": "Perform the following to restrict access to server.xml:\n\nSet the ownership of the $CATALINA_HOME/conf/server.xml to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf/server.xml\n\nSet the permissions of the $CATALINA_HOME/conf/server.xml to 600\n\n# chmod 600 $CATALINA_HOME/conf/server.xml\n\nDefault Value:\n\nThe default permissions of the top-level directories are 600.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "owner": "@TOMCAT_OWNER@",
        "mask": "177",
        "file_type": "f",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_18": {
        "system": "Linux",
        "description": "4.13 Restrict access to Tomcat tomcat-users.xml",
        "info": "tomcat-users.xml contains authentication information for Tomcat applications. It is recommended that access to this file properly protect against unauthorized changes.\n\nRationale:\n\nRestricting access to this file will prevent local users from maliciously or inadvertently altering Tomcat's security policy.",
        "solution": "Perform the following to restrict access to tomcat-users.xml:\n\nSet the ownership of the $CATALINA_HOME/conf/tomcat-users.xml to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf/tomcat-users.xml\n\nSet the permissions of the $CATALINA_HOME/conf/tomcat-users.xml to 600\n\n# chmod 600 $CATALINA_HOME/conf/tomcat-users.xml\n\nDefault Value:\n\nThe default permissions of the top-level directories are 600.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/tomcat-users.xml",
        "owner": "@TOMCAT_OWNER@",
        "mask": "177",
        "file_type": "f",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_19": {
        "system": "Linux",
        "description": "4.14 Restrict access to Tomcat web.xml",
        "info": "web.xml is a Tomcat configuration file that stores application configuration settings. It is recommended that access to this file properly protect against unauthorized changes.\n\nRationale:\n\nRestricting access to this file will prevent local users from maliciously or inadvertently altering Tomcat's security policy.",
        "solution": "Perform the following to restrict access to web.xml:\n\nSet the ownership of the $CATALINA_HOME/conf/web.xml to tomcat_admin:tomcat.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/conf/web.xml\n\nSet the permissions for the $CATALINA_HOME/conf/web.xml file to 400.\n\n# chmod 400 $CATALINA_HOME/conf/web.xml\n\nDefault Value:\n\nThe default permissions for web.xml are 400.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/web.xml",
        "owner": "@TOMCAT_OWNER@",
        "mask": "177",
        "file_type": "f",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_20": {
        "system": "Linux",
        "description": "6.2 Ensure SSLEnabled is set to True for Sensitive Connectors - verify SSLEnabled is set to true",
        "info": "The SSLEnabled setting determines if SSL is enabled for a specific Connector. It is recommended that SSL be utilized for any Connector that sends or receives sensitive information, such as authentication credentials or personal information.\n\nRationale:\n\nThe SSLEnabled setting ensures SSL is active, which will in-turn ensure the confidentiality and integrity of sensitive information while in transit.",
        "solution": "In server.xml, set the SSLEnabled attribute to true for each Connector that sends or receives sensitive information:Default Value:\n\nSSLEnabled is set to false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/http.html\n\nhttps://tomcat.apache.org/tomcat-8.5-doc/security-howto.html",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSCv6|6.2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1NS,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_21": {
        "system": "Linux",
        "description": "6.3 Ensure scheme is set accurately",
        "info": "The scheme attribute is used to indicate to callers of request.getScheme() which scheme is in use by the Connector. Ensure the scheme attribute is set to http for Connectors operating over HTTP. Ensure the scheme attribute is set to https for Connectors operating over HTTPS.\n\nRationale:\n\nMaintaining parity between the scheme in use by the Connector and advertised by request.getScheme() will ensure applications built on Tomcat have an accurate depiction of the context and security guarantees provided to them.",
        "solution": "In server.xml, set the Connector's scheme attribute to http for Connectors operating over HTTP. Set the Connector's scheme attribute to https for Connectors operating over HTTPS.Default Value:\n\nThe scheme attribute is set to http.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/http.html",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSCv6|6.3,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1S,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_22": {
        "system": "Linux",
        "description": "6.4 Ensure secure is set to true only for SSL-enabled Connectors - verify secure is set to true",
        "info": "The secure attribute is used to convey Connector security status to applications operating over the Connector. This is typically achieved by calling request.isSecure(). Ensure the secure attribute is only set to true for Connectors operating with the SSLEnabled attribute set to true.\n\nRationale:\n\nAccurately reporting the security state of the Connector will help ensure that applications built on Tomcat are not unknowingly relying on security controls that are not in place.",
        "solution": "For each Connector defined in server.xml, set the secure attribute to true for those Connectors having SSLEnabled set to true. Set the secure attribute to false for those Connectors having SSLEnabled set to false....Default Value:\n\nThe secure attribute is set to false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/http.html",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSCv6|6.4,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1S,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_23": {
        "system": "Linux",
        "description": "6.5 Ensure SSL Protocol is set to TLS for Secure Connectors - verify sslProtocol is set to TLS",
        "info": "The sslProtocol setting determines which protocol Tomcat will use to protect traffic. It is recommended that sslProtocol attribute be set to TLS.\n\nRationale:\n\nThe TLS protocol does not contain weaknesses that affect other secure transport protocols, such as SSLv1 or SSLv2. Therefore, TLS is leveraged to protect the confidentiality and integrity of data while in transit.",
        "solution": "In server.xml, set the sslProtocol attribute to TLS for Connectors having SSLEnabled set to true.In Tomcat 8.5.x using JSSE, set it to TLS or alternatively remove it.References:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/http.html\n\nhttps://tomcat.apache.org/tomcat-8.5-doc/config/http.html",
        "reference": "800-171|3.13.8,800-171|3.13.10,800-53|SC-8,800-53|SC-12,800-53r5|SC-8,800-53r5|SC-12,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|18.5,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.10.1.2,ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-12,ITSG-33|SC-12a.,LEVEL|1S,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NESA|T7.4.2,NIAv2|CY2,NIAv2|CY8,NIAv2|CY9,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_24": {
        "system": "Linux",
        "description": "6.6 Control the maximum size of a POST request that will be parsed for parameter",
        "info": "The maxPostSize attribute controls the maximum size of a POST request which will be parsed for parameters. Setting a proper size is recommended to reduce DOS attack.\n\nRationale:\n\nThe maxPostSize value is the maximum size in bytes of the POST which will be handled by the container FORM URL parameter parsing. The parameters are cached for the duration of the request. Limit its size to reduce exposure to a DOS attack.",
        "solution": "Set the maxPostSize attributes to each Connector specified in $CATALINA_HOME/conf/server.xml per requirement.",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_25": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if org.apache.juli.FileHandler exists in web application",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties",
        "regex": "handlers[\\\\s]*=[\\\\s]*.*org\\\\.apache\\\\.juli\\\\.FileHandler",
        "expect": "handlers[\\\\s]*=[\\\\s]*.*org\\\\.apache\\\\.juli\\\\.FileHandler"
    },
    "custom_item_26": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if org.apache.juli.FileHandler logging is enabled in web application",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties",
        "regex": "org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)",
        "expect": "org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)"
    },
    "custom_item_27": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if java.util.logging.ConsoleHandler exists in web application",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties",
        "regex": "handlers[\\\\s]*=[\\\\s]*.*java\\\\.util\\\\.logging\\\\.ConsoleHandler",
        "expect": "handlers[\\\\s]*=[\\\\s]*.*java\\\\.util\\\\.logging\\\\.ConsoleHandler"
    },
    "custom_item_28": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if java.util.logging.ConsoleHandler logging is enabled in web application",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/classes/logging.properties",
        "regex": "java\\\\.util\\\\.logging\\\\.ConsoleHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)",
        "expect": "java\\\\.util\\\\.logging\\\\.ConsoleHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)"
    },
    "custom_item_29": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if org.apache.juli.FileHandler exists in default",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/logging.properties",
        "regex": "handlers[\\\\s]*=[\\\\s]*.*org\\\\.apache\\\\.juli\\\\.FileHandler",
        "expect": "handlers[\\\\s]*=[\\\\s]*.*org\\\\.apache\\\\.juli\\\\.FileHandler"
    },
    "custom_item_30": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if org.apache.juli.FileHandler logging is enabled in default",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/logging.properties",
        "regex": "org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)",
        "expect": "org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)"
    },
    "custom_item_31": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if java.util.logging.ConsoleHandler exists inin default",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/logging.properties",
        "regex": "handlers[\\\\s]*=[\\\\s]*.*java\\\\.util\\\\.logging\\\\.ConsoleHandler",
        "expect": "handlers[\\\\s]*=[\\\\s]*.*java\\\\.util\\\\.logging\\\\.ConsoleHandler"
    },
    "custom_item_32": {
        "system": "Linux",
        "description": "7.2 Specify file handler in logging.properties files - check if java.util.logging.ConsoleHandler logging is enabled in default",
        "info": "Handlers specify where log messages are sent. Console handlers send log messages to the Java console and File handlers specify logging to a file.\n\nRationale:\n\nUtilizing file handlers will ensure that security event information is persisted to disk.",
        "solution": "Add the following entries to your logging.properties file if they do not exist.\n\nhandlers=...,org.apache.juli.FileHandler,...\n\nEnsure logging is not off and set the logging level to the desired level such as:org.apache.juli.FileHandler.level=FINEST\n\nDefault Value:\n\nNo value for new applications by default.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/logging.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/logging.properties",
        "regex": "java\\\\.util\\\\.logging\\\\.ConsoleHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)",
        "expect": "java\\\\.util\\\\.logging\\\\.ConsoleHandler\\\\.level[\\\\s]*=[\\\\s]*(@LOGGING_LEVEL@)"
    },
    "custom_item_33": {
        "system": "Linux",
        "description": "11.1 Limit HTTP Request Methods",
        "info": "Restrict unnecessary HTTP request methods such as PUT and DELETE.\n\nRationale:\n\nThe HTTP 1.1 protocol supports several request methods which are rarely used and potentially high risk. For example, methods such as PUT and DELETE are rarely used and should be disabled in keeping with the primary security principle of minimize features and options. Also since the usage of these methods is typically to modify resources on the Tomcat server, they should be explicitly disallowed.",
        "solution": "Perform the following to prevent Tomcat from accepting PUT or DELETE methods:\n\nLocate web.xml under $CATALINA_HOME/conf\n\nFind the init param readonly, remove it or set its value with truereadonlytrueImpact:\n\nApplications which use PUT and DELETE may be impacted by this recommendation.\n\nDefault Value:\n\nBy default, the value of readonly is true.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/default-servlet.html",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "cmd": "/bin/df @APP_Config_catalogs@ @APP_Config_catalogs@/webapps | /bin/sed 1,1d | /usr/bin/sort -u | /usr/bin/wc -l",
        "file": "@APP_Config_catalogs@/conf/web.xml",
        "owner": "@TOMCAT_OWNER@",
        "mask": "077",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@",
        "regex": "PASS",
        "expect": "PASS",
        "MEDIUMsystem": "Linux",
        "xsl_stmt": "",
        "not_expect": "FAIL"
    },
    "custom_item_34": {
        "system": "Linux",
        "description": "7.4 Ensure directory in context.xml is a secure location - permissions",
        "info": "The directory attribute tells Tomcat where to store logs. It is recommended that the location referenced by the directory attribute be secured.\n\nRationale:\n\nSecuring the log location will help ensure the integrity and confidentiality of web application activity.",
        "solution": "Perform the following:\n\nAdd the following statement into the $CATALINA_HOME/webapps//META-INF/context.xml file if it does not already exist.Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.\n\n# chown tomcat_admin:tomcat $CATALINA_HOME/logs\n# chmod o-rwx $CATALINA_HOME/logs\n\nDefault Value:\n\nDoes not exist by default",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/logs",
        "owner": "@TOMCAT_OWNER@",
        "mask": "007",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_35": {
        "system": "Linux",
        "description": "11.1 Limit HTTP Request Methods",
        "info": "Restrict unnecessary HTTP request methods such as PUT and DELETE.\n\nRationale:\n\nThe HTTP 1.1 protocol supports several request methods which are rarely used and potentially high risk. For example, methods such as PUT and DELETE are rarely used and should be disabled in keeping with the primary security principle of minimize features and options. Also since the usage of these methods is typically to modify resources on the Tomcat server, they should be explicitly disallowed.",
        "solution": "Perform the following to prevent Tomcat from accepting PUT or DELETE methods:\n\nLocate web.xml under $CATALINA_HOME/conf\n\nFind the init param readonly, remove it or set its value with truereadonlytrueImpact:\n\nApplications which use PUT and DELETE may be impacted by this recommendation.\n\nDefault Value:\n\nBy default, the value of readonly is true.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/default-servlet.html",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "cmd": "/bin/df @APP_Config_catalogs@ @APP_Config_catalogs@/webapps | /bin/sed 1,1d | /usr/bin/sort -u | /usr/bin/wc -l",
        "file": "@APP_Config_catalogs@/conf/web.xml",
        "regex": "PASS",
        "expect": "PASS",
        "owner": "@TOMCAT_OWNER@",
        "mask": "077",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@",
        "MEDIUMsystem": "Linux",
        "xsl_stmt": "",
        "not_expect": "FAIL"
    },
    "custom_item_36": {
        "system": "Linux",
        "description": "7.6 Ensure directory in logging.properties is a secure location - check log directory location",
        "info": "The directory attribute tells Tomcat where to store logs. The directory value should be a secure location with restricted access.\n\nRationale:\n\nSecuring the log location will help ensure the integrity and confidentiality of web application activity records.",
        "solution": "Perform the following:\n\nAdd the following properties into your logging.properties file if they do not exist.org.apache.juli.FileHandler.directory=.org.apache.juli.FileHandler.prefix=Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.\n\n# chown tomcat_admin:tomcat# chmod o-rwxDefault Value:\n\nThe directory location is configured to store logs in $CATALINA_HOME/logs.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/logging.properties",
        "regex": "@APP_Config_catalogs@/webapps\\\\.org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.directory[\\\\s]*=[\\\\s]*@APP_Config_catalogs@/logs",
        "expect": "@APP_Config_catalogs@/webapps\\\\.org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.directory[\\\\s]*=[\\\\s]*@APP_Config_catalogs@/logs"
    },
    "custom_item_37": {
        "system": "Linux",
        "description": "7.6 Ensure directory in logging.properties is a secure location - check prefix application name",
        "info": "The directory attribute tells Tomcat where to store logs. The directory value should be a secure location with restricted access.\n\nRationale:\n\nSecuring the log location will help ensure the integrity and confidentiality of web application activity records.",
        "solution": "Perform the following:\n\nAdd the following properties into your logging.properties file if they do not exist.org.apache.juli.FileHandler.directory=.org.apache.juli.FileHandler.prefix=Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.\n\n# chown tomcat_admin:tomcat# chmod o-rwxDefault Value:\n\nThe directory location is configured to store logs in $CATALINA_HOME/logs.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/logging.properties",
        "regex": "@APP_Config_catalogs@/webapps\\\\.org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.prefix[\\\\s]*=[\\\\s]*@APP_Config_catalogs@/webapps",
        "expect": "@APP_Config_catalogs@/webapps\\\\.org\\\\.apache\\\\.juli\\\\.FileHandler\\\\.prefix[\\\\s]*=[\\\\s]*@APP_Config_catalogs@/webapps"
    },
    "custom_item_38": {
        "system": "Linux",
        "description": "7.6 Ensure directory in logging.properties is a secure location - check application log directory is secure",
        "info": "The directory attribute tells Tomcat where to store logs. The directory value should be a secure location with restricted access.\n\nRationale:\n\nSecuring the log location will help ensure the integrity and confidentiality of web application activity records.",
        "solution": "Perform the following:\n\nAdd the following properties into your logging.properties file if they do not exist.org.apache.juli.FileHandler.directory=.org.apache.juli.FileHandler.prefix=Set the location pointed to by the directory attribute to be owned by tomcat_admin:tomcat with permissions of o-rwx.\n\n# chown tomcat_admin:tomcat# chmod o-rwxDefault Value:\n\nThe directory location is configured to store logs in $CATALINA_HOME/logs.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/logs",
        "owner": "@TOMCAT_OWNER@",
        "mask": "077",
        "file_type": "d",
        "group": "@TOMCAT_GROUP@"
    },
    "custom_item_39": {
        "system": "Linux",
        "description": "8.1 Restrict runtime access to sensitive packages",
        "info": "package.access grants or revokes access to listed packages during runtime. It is recommended that application access to certain packages be restricted.\n\nRationale:\n\nPrevent web applications from accessing restricted or unknown packages which may be malicious or dangerous to the application.\n\n      NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Edit $CATALINA_BASE/conf/catalina.properties by adding allowed packages to the package.access list:\n\npackage.access = sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat., org.apache.jasper\n\nDefault Value:\n\nThe default package.access value within $CATALINA_BASE/conf/catalina.properties is:\n\npackage.access = sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat., org.apache.jasper",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1S,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "cmd": "/bin/egrep 'package\\\\.access[\\\\s]*=[\\\\s]*(.*)' @APP_Config_catalogs@/conf/catalina.properties",
        "expect": "MANUAL_REVIEW"
    },
    "custom_item_40": {
        "system": "Linux",
        "description": "9.1 Starting Tomcat with Security Manager",
        "info": "Configure applications to run in a sandbox using the Security Manager. The Security Manager restricts what classes Tomcat can access thus protecting your server from mistakes, Trojans, and malicious code.\n\nRationale:\n\nBy running Tomcat with the Security Manager, applications are run in a sandbox which can prevent untrusted code from accessing files on the file system.",
        "solution": "The security policies implemented by the Java SecurityManager are configured in the $CATALINA_HOME/conf/catalina.policy file. Once you have configured the catalina.policy file for use with a SecurityManager, Tomcat can be started with a SecurityManager in place by using the --security option:\n\nOn Unix:\n\n$ $CATALINA_HOME/bin/catalina.sh start -security\n\nOn Windows:\n\nC:\\> %CATALINA_HOME%\\bin\\catalina start -security\n\nDefault Value:\n\nBy default the -security option is not utilized.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/security-manager-howto.html",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Binary_catalog@/startup.sh",
        "regex": "\\-security",
        "expect": "\\-security"
    },
    "custom_item_41": {
        "system": "Linux",
        "description": "10.1 Ensure Web content directory is on a separate partition from the Tomcat system files - verify Web content directory",
        "info": "Store web content on a separate partition from Tomcat system files.\n\nRationale:\n\nThe web document directory is where the files which are served to the end user reside. In the past, directory traversal exploits have allowed malicious users to wreak havoc on a web server including executing code, uploading files, and reading sensitive data. Even if you do not have any directory traversal exploits in your server or code at this time, that doesn't mean they won't be introduced in the future. Moving your web document directory onto a different partition will prevent these kinds of attacks from doing more damage to other parts of the file system.",
        "solution": "Move the web content files to a separate partition from the tomcat system files and update your configuration.\n\nDefault Value:\n\nNot Applicable",
        "reference": "800-53|SC-3,800-53r5|SC-3,CSCv7|2.10,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-3,ITSG-33|SC-3a.,LEVEL|1NS,NESA|T3.4.1,NESA|T4.3.1,NESA|T4.3.2",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "cmd": "/bin/df @APP_Config_catalogs@ @APP_Config_catalogs@/webapps | /bin/sed 1,1d | /usr/bin/sort -u | /usr/bin/wc -l",
        "expect": "2"
    },
    "custom_item_42": {
        "system": "Linux",
        "description": "10.4 Force SSL when accessing the manager application",
        "info": "Use the transport-guarantee attribute to ensure SSL protection when accessing the manager application.\n\nRationale:\n\nBy default when accessing the manager application, login information is sent over the wire in plain text. By setting the transport-guarantee within web.xml, SSL is enforced.\n\nNote: This requires SSL to be configured.",
        "solution": "Setto CONFIDENTIAL in $CATALINA_HOME/webapps/manager/WEB-INF/web.xml:CONFIDENTIALDefault Value:\n\nBy default this configuration is not present.\n\nReferences:\n\nhttps://www.owasp.org/index.php/Securing_tomcat",
        "reference": "800-171|3.13.8,800-53|SC-8,800-53r5|SC-8,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8,ITSG-33|SC-8a.,LEVEL|1S,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps/manager/WEB-INF/web.xml",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_43": {
        "system": "Linux",
        "description": "10.6 Enable strict servlet Compliance",
        "info": "The STRICT_SERVLET_COMPLIANCE influences Tomcat's behavior in several subtle ways. See the References below for the complete list. It is recommended that STRICT_SERVLET_COMPLIANCE be set to true.\n\nRationale:\n\nWhen STRICT_SERVLET_COMPLIANCE is set to true, Tomcat will always send an HTTP Content-type header when responding to requests. This is significant as the behavior of web browsers is inconsistent in the absence of the Content-type header. Some browsers will attempt to determine the appropriate content-type by sniffing",
        "solution": "To start Tomcat with strict compliance enabled, add -Dorg.apache.catalina.STRICT_SERVLET_COMPLIANCE=true the to the startup script.\n\nImpact:\n\nChanging this to true will change a number of other default values which is likely to break the majority of systems as some browsers are unable to correctly handle the cookie headers that result from a strict adherence to the specifications. Please refer to the referenced documentation for a complete list of changed values. Defaults, regardless of whether or not they have been changed by setting org.apache.catalina.STRICT_SERVLET_COMPLIANCE can always be overridden by explicitly setting the appropriate system property or element attribute.\n\nDefault Value:\n\nBy default value is false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/systemprops.html",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1S,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Binary_catalog@/catalina.sh",
        "regex": "-Dorg\\\\.apache\\\\.catalina\\\\.STRICT_SERVLET_COMPLIANCE[\\\\s]*=[\\\\s]*[Tt][Rr][Uu][Ee]",
        "expect": "-Dorg\\\\.apache\\\\.catalina\\\\.STRICT_SERVLET_COMPLIANCE[\\\\s]*=[\\\\s]*[Tt][Rr][Uu][Ee]"
    },
    "custom_item_44": {
        "system": "Linux",
        "description": "10.7 Turn off session facade recycling",
        "info": "The RECYCLE_FACADES can specify if a new facade will be created for each request. If a new facade is not created there is a potential for information leakage from a prior session.\n\nRationale:\n\nWhen RECYCLE_FACADES is set to false, Tomcat will recycle the session facade between requests which may result in information leakage.",
        "solution": "To start Tomcat with RECYCLE_FACADES set to true, add Dorg.apache.catalina.connector.RECYCLE_FACADES=true to your startup script.\n\nDefault Value:\n\nThe default value is false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/systemprops.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/security-howto.html",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Binary_catalog@/catalina.sh",
        "regex": "-Dorg\\\\.apache\\\\.catalina\\\\.connector\\\\.RECYCLE_FACADES[\\\\s]*=[\\\\s]*[Tt][Rr][Uu][Ee]",
        "expect": "-Dorg\\\\.apache\\\\.catalina\\\\.connector\\\\.RECYCLE_FACADES[\\\\s]*=[\\\\s]*[Tt][Rr][Uu][Ee]"
    },
    "custom_item_45": {
        "system": "Linux",
        "description": "10.13 Do not allow symbolic linking",
        "info": "Symbolic links permit one application to include the libraries from another. This allows for re-use of code but also allows for potential security issues when applications include libraries from other applications to which they should not have access.\n\nRationale:\n\nAllowing symbolic links makes Tomcat susceptible to directory traversal vulnerability. Also, there is a potential that an application could link to another application to which it should not be linking. On case-insensitive operating systems there is also the threat of source code disclosure.",
        "solution": "In all context.xml, set the allowLinking attribute to false:...Default Value:\n\nBy default allowLinking has a value of false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/resources.html\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/context.html",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/context.xml",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_46": {
        "system": "Linux",
        "description": "10.14 Do not run applications as privileged",
        "info": "Setting the privileged attribute for an application changes the class loader to the Server class loader instead of the Shared class loader.\n\nRationale:\n\nRunning an application in privileged mode allows an application to load the manager libraries.",
        "solution": "Set the privileged attribute in all context.xml files to false unless it is required as for the manager application:Default Value:\n\nBy default, privileged has a value of false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/context.html",
        "reference": "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/context.xml",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_47": {
        "system": "Linux",
        "description": "10.15 Do not allow cross context requests",
        "info": "Setting crossContext to false prevents an application from calling ServletConext.getContext to return a dispatcher for another application.\n\nRationale:\n\nAllowing crossContext creates the possibility for a malicious application to make requests to a restricted application.",
        "solution": "Set the crossContext attribute in all context.xml files to false:Default Value:\n\nBy default crossContext has a value of false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/context.html",
        "reference": "800-171|3.1.7,800-53|AC-6(10),800-53r5|AC-6(10),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1S,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/context.xml",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    },
    "custom_item_48": {
        "system": "Linux",
        "description": "10.17 Enable memory leak listener - verify present",
        "info": "The JRE Memory Leak Prevention Listener provides work-arounds for known places where the Java Runtime Environment uses the context class loader to load a singleton as this will cause a memory leak if a web application class loader happens to be the context class loader at the time. The work-around is to initialize these singletons when this listener starts as Tomcat's common class loader is the context class loader at that time. It also provides work-arounds for known issues that can result in locked JAR files.\n\nRationale:\n\nEnabling the JRE Memory Leak Prevention Listener provides work-arounds for preventing memory leaks.",
        "solution": "Uncomment the JRE Memory Leak Prevention Listener in $CATALINA_HOME/conf/server.xmlReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/listeners.html#JRE_Memory_Leak_Prevention_Listener_-_org.apache.catalina.core.JreMemoryLeakPreventionListener",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "expect": "PASS"
    },
    "custom_item_49": {
        "system": "Linux",
        "description": "10.18 Setting Security Lifecycle Listener - check for config component",
        "info": "The Security Lifecycle Listener performs a number of security checks when Tomcat starts and prevents Tomcat from starting if they fail.\n\nRationale:\n\nWhen enabled, the Security Lifecycle Listener can\n\nEnforce a blacklist of OS users that must not be used to start Tomcat.\n\nSet the least restrictive umask before Tomcat starts.",
        "solution": "Uncomment the listener in $CATALINA_HOME/conf/server.xml. If the operating system supports umask then the line in $CATALINA_HOME/bin/catalina.sh that obtains the umask also needs to be uncommented.\n\nWithin Server elements add:\n\ncheckedOsUsers: A comma separated list of OS users that must not be used to start Tomcat. If not specified, the default value of root is used.\n\nminimumUmask: The least restrictive umask that must be configured before Tomcat will start. If not specified, the default value of 0007 is used.Default Value:\n\nThe Security Lifecycle Listener is not enabled by default. For checkedOsUsers, the default value is root. For minimumUmask, the default value is 0007.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/listeners.html#Security_Lifecycle_Listener_-_org.apache.catalina.security.SecurityListener",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_files@",
        "xsl_stmt": "",
        "expect": "PASS"
    },
    "custom_item_50": {
        "system": "Linux",
        "description": "10.18 Setting Security Lifecycle Listener - check for umask uncommented in startup",
        "info": "The Security Lifecycle Listener performs a number of security checks when Tomcat starts and prevents Tomcat from starting if they fail.\n\nRationale:\n\nWhen enabled, the Security Lifecycle Listener can\n\nEnforce a blacklist of OS users that must not be used to start Tomcat.\n\nSet the least restrictive umask before Tomcat starts.",
        "solution": "Uncomment the listener in $CATALINA_HOME/conf/server.xml. If the operating system supports umask then the line in $CATALINA_HOME/bin/catalina.sh that obtains the umask also needs to be uncommented.\n\nWithin Server elements add:\n\ncheckedOsUsers: A comma separated list of OS users that must not be used to start Tomcat. If not specified, the default value of root is used.\n\nminimumUmask: The least restrictive umask that must be configured before Tomcat will start. If not specified, the default value of 0007 is used.Default Value:\n\nThe Security Lifecycle Listener is not enabled by default. For checkedOsUsers, the default value is root. For minimumUmask, the default value is 0007.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/listeners.html#Security_Lifecycle_Listener_-_org.apache.catalina.security.SecurityListener",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Binary_catalog@/catalina.sh",
        "regex": "^[\\\\s]*#[\\\\s]*JAVA_OPTS=\"\\$JAVA_OPTS -Dorg\\\\.apache\\\\.catalina\\\\.security\\\\.SecurityListener\\\\.UMASK=.*\"",
        "expect": "^[\\\\s]*#[\\\\s]*JAVA_OPTS=\"\\$JAVA_OPTS -Dorg\\\\.apache\\\\.catalina\\\\.security\\\\.SecurityListener\\\\.UMASK=.*\""
    },
    "custom_item_51": {
        "system": "Linux",
        "description": "10.18 Setting Security Lifecycle Listener - check for umask present in startup",
        "info": "The Security Lifecycle Listener performs a number of security checks when Tomcat starts and prevents Tomcat from starting if they fail.\n\nRationale:\n\nWhen enabled, the Security Lifecycle Listener can\n\nEnforce a blacklist of OS users that must not be used to start Tomcat.\n\nSet the least restrictive umask before Tomcat starts.",
        "solution": "Uncomment the listener in $CATALINA_HOME/conf/server.xml. If the operating system supports umask then the line in $CATALINA_HOME/bin/catalina.sh that obtains the umask also needs to be uncommented.\n\nWithin Server elements add:\n\ncheckedOsUsers: A comma separated list of OS users that must not be used to start Tomcat. If not specified, the default value of root is used.\n\nminimumUmask: The least restrictive umask that must be configured before Tomcat will start. If not specified, the default value of 0007 is used.Default Value:\n\nThe Security Lifecycle Listener is not enabled by default. For checkedOsUsers, the default value is root. For minimumUmask, the default value is 0007.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/listeners.html#Security_Lifecycle_Listener_-_org.apache.catalina.security.SecurityListener",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Binary_catalog@/catalina.sh",
        "regex": "^[\\\\s]*JAVA_OPTS=\"\\$JAVA_OPTS -Dorg\\\\.apache\\\\.catalina\\\\.security\\\\.SecurityListener\\\\.UMASK=\\\\d{3,4}\"",
        "expect": "^[\\\\s]*JAVA_OPTS=\"\\$JAVA_OPTS -Dorg\\\\.apache\\\\.catalina\\\\.security\\\\.SecurityListener\\\\.UMASK=\\\\d{3,4}\""
    },
    "custom_item_52": {
        "description": "10.19 Use the logEffectiveWebXml and metadata-complete settings for deploying applications in production - context.xml",
        "info": "Both fragments and annotations give rise to security concerns. web.xml contains a metadata-complete attribute on the web-app element whose binary value defines whether other sources of metadata should be considered when deploying this web application, this includes annotations on class files (@WebServlet, but also @WebListener, @WebFilter, ...), web-fragment.xml as well as classes located in WEB-INF/classes. In addition, Tomcat could allow you to log the effective web.xml, when an application starts, and the effective web.xml is the result of taking the main web.xml for your application merging in all the fragments applying all the annotations. By logging that, you are able to review it, and see if that is in fact what you actually want.\n\nRationale:\n\nEnable logEffectiveWebXml will allow you to log the effective web.xml and you are able to see if that is in fact what you actually want. Enable metadata-complete so that the web.xml is the only metadata considered.",
        "solution": "Set the metadata-complete value in the web.xml in each of the applications to true.\nNote: The metadata-complete option is not enough to disable all of annotation scanning. If there is a ServletContainerInitializer with a @HandlesTypes annotation, Tomcat has to scan your application for classes that use annotations or interfaces specified in that annotation.\n\nSet the logEffectiveWebXml value in the context.xml in each of the application to true.\n\nDefault Value:\n\nIf logEffectiveWebXml and/or metadata-complete is/are not specified, the default value is false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/context.html\n\nhttps://alexismp.wordpress.com/2010/07/28/servlet-3-0-fragments-and-web-xml-to-rule-them-all/\n\nhttps://tomcat.apache.org/tomcat-8.5-doc/config/context.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/META-INF/context.xml",
        "xsl_stmt": "",
        "not_expect": "FAIL"
    },
    "custom_item_53": {
        "description": "10.19 Use the logEffectiveWebXml and metadata-complete settings for deploying applications in production - web.xml",
        "info": "Both fragments and annotations give rise to security concerns. web.xml contains a metadata-complete attribute on the web-app element whose binary value defines whether other sources of metadata should be considered when deploying this web application, this includes annotations on class files (@WebServlet, but also @WebListener, @WebFilter, ...), web-fragment.xml as well as classes located in WEB-INF/classes. In addition, Tomcat could allow you to log the effective web.xml, when an application starts, and the effective web.xml is the result of taking the main web.xml for your application merging in all the fragments applying all the annotations. By logging that, you are able to review it, and see if that is in fact what you actually want.\n\nRationale:\n\nEnable logEffectiveWebXml will allow you to log the effective web.xml and you are able to see if that is in fact what you actually want. Enable metadata-complete so that the web.xml is the only metadata considered.",
        "solution": "Set the metadata-complete value in the web.xml in each of the applications to true.\nNote: The metadata-complete option is not enough to disable all of annotation scanning. If there is a ServletContainerInitializer with a @HandlesTypes annotation, Tomcat has to scan your application for classes that use annotations or interfaces specified in that annotation.\n\nSet the logEffectiveWebXml value in the context.xml in each of the application to true.\n\nDefault Value:\n\nIf logEffectiveWebXml and/or metadata-complete is/are not specified, the default value is false.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/config/context.html\n\nhttps://alexismp.wordpress.com/2010/07/28/servlet-3-0-fragments-and-web-xml-to-rule-them-all/\n\nhttps://tomcat.apache.org/tomcat-8.5-doc/config/context.html",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12,800-53r5|AU-12,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12,LEVEL|1S,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/webapps/@WEB_APP_DIR@/WEB-INF/web.xml",
        "xsl_stmt": "",
        "not_expect": "FAIL"
    },
    "custom_item_54": {
        "system": "Linux",
        "description": "11.1 Limit HTTP Request Methods",
        "info": "Restrict unnecessary HTTP request methods such as PUT and DELETE.\n\nRationale:\n\nThe HTTP 1.1 protocol supports several request methods which are rarely used and potentially high risk. For example, methods such as PUT and DELETE are rarely used and should be disabled in keeping with the primary security principle of minimize features and options. Also since the usage of these methods is typically to modify resources on the Tomcat server, they should be explicitly disallowed.",
        "solution": "Perform the following to prevent Tomcat from accepting PUT or DELETE methods:\n\nLocate web.xml under $CATALINA_HOME/conf\n\nFind the init param readonly, remove it or set its value with truereadonlytrueImpact:\n\nApplications which use PUT and DELETE may be impacted by this recommendation.\n\nDefault Value:\n\nBy default, the value of readonly is true.\n\nReferences:\n\nhttps://tomcat.apache.org/tomcat-8.0-doc/default-servlet.html",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1S,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2506",
        "file": "@APP_Config_catalogs@/conf/web.xml",
        "xsl_stmt": "",
        "regex": "PASS",
        "expect": "PASS"
    }
}