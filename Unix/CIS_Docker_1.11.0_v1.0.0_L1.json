{
    "custom_item_1": {
        "description": "4.3 Do not install unnecessary packages in the container",
        "info": "https://docs.docker.com/userguide/dockerimages/\n2.http://www.livewyer.com/blog/2015/02/24/slimming-down-your-docker-containers-alpine-linux\n3.https://github.com/progrium/busybox",
        "solution": "At the outset, do not install anything on the container that does not justify the purpose. If the image had some packages that your container does not use, uninstall them.\nConsider using a minimal base image rather than the standard Redhat/Centos/Debian images if you can. Some of the options include BusyBox and Alpine.\nNot only does this trim your image size from >150Mb to ~20 Mb, there are also fewer tools and paths to escalate privileges. You can even remove the package installer as a final hardening measure for leaf/production containers.\nImpact-\nNone.\nDefault Value-\nNot Applicable.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "name": "list_docker_container_packages"
    },
    "custom_item_2": {
        "description": "4.4 Rebuild the images to include security patches",
        "info": "https://docs.docker.com/userguide/dockerimages/",
        "solution": "Follow the below steps to rebuild the images with security patches-Step 1- 'docker pull' all the base images (i.e., given your set of Dockerfiles, extract all images declared in 'FROM'instructions, and re-pull them to check for an updated version).\nStep 2- Force a rebuild of each image with 'docker build --no-cache'.\nStep 3- Restart all containers with the updated images.\nImpact-\nRebuilding the images has to be done after upstream packages are available, otherwise re-pulling and rebuilding will do no good. When the affected packages are in the base image, it is necessary to pull it (and therefore rebuild). When the affected packages are in the downloaded packages, it is not necessary to pull the image; but nonetheless, in doubt, it is recommended to always follow this strict procedure and rebuild the entire image.\nNote- If updated packages are not available and it is critical to install a security patch, live patching could be used.\nDefault Value-\nBy default, containers and images are not updated of their own.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "name": "list_docker_container_packages"
    },
    "custom_item_3": {
        "description": "Check if this is a Docker Vessel/Host",
        "cmd": "/usr/bin/docker info",
        "expect": "Containers"
    },
    "custom_item_4": {
        "description": "2.1 Restrict network traffic between containers",
        "info": "https://docs.docker.com/articles/networking",
        "solution": "Run the docker in daemon mode and pass '--icc=false' as argument.\n\nFor Example,\ndocker daemon --icc=false\nImpact-\nThe inter container communication would be disabled. No containers would be able to talk to another container on the same host. If any communication between containers on the same host is desired, then it needs to be explicitly defined using container linking.\nDefault Value-\nBy default, all inter container communication is allowed.",
        "reference": "800-171|3.13.2,800-171|3.13.5,800-53|SC-7(21),800-53r5|SC-7(21),CN-L3|8.1.10.6(j),CSF|PR.AC-5,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,LEVEL|1A,NESA|T4.5.3,NIAv2|VL6,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [i]cc=",
        "expect": "icc=false"
    },
    "custom_item_5": {
        "description": "2.2 Set the logging level",
        "info": "https://docs.docker.com/engine/reference/commandline/daemon/",
        "solution": "Run the Docker daemon as below-\ndockerdaemon --log-level='info'\nImpact-\nNone.\nDefault Value-\nBy default, Docker daemon is set to log level of 'info'.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [l]og-level",
        "expect": "log-level='info'"
    },
    "custom_item_6": {
        "description": "2.3 Allow Docker to make changes to iptables",
        "info": "https://docs.docker.com/v1.8/articles/networking/",
        "solution": "Do not run the Docker daemon with '--iptables=false' parameter.For example, do not start the Docker daemon as below-\ndockerdaemon --iptables=false\nImpact-\nNone.\nDefault Value-\nBy default, 'iptables' is set to 'true'.",
        "reference": "800-171|3.13.1,800-53|SC-7(12),800-53r5|SC-7(12),CN-L3|8.1.10.6(j),CSF|DE.CM-1,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(12),LEVEL|1A,NESA|T4.5.4,NIAv2|AM38,NIAv2|SS13d,NIAv2|SS26,PCI-DSSv3.2.1|1.4,PCI-DSSv4.0|1.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [i]ptables=false | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_7": {
        "description": "2.4 Do not use insecure registries",
        "info": "https://docs.docker.com/registry/insecure/",
        "solution": "Do not use any insecure registries.\n\nFor example, do not start the Docker daemon as below-\ndocker daemon --insecure-registry 10.1.0.0/16\nImpact-\nNone.\nDefault Value-\nBy default, Docker assumes all, but local, registries are secure.",
        "reference": "800-53|SI-7(6),800-53r5|SI-7(6),CSF|PR.DS-6,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|1A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2,SWIFT-CSCv1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [i]nsecure-registry | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_8": {
        "description": "2.5 Do not use the aufs storage driver",
        "info": "http://docs.docker.com/reference/commandline/cli/#daemon-storage-driver-option\n2.https://github.com/docker/docker/issues/6047\n3.http://muehe.org/posts/switching-docker-from-aufs-to-devicemapper/\n4.http://jpetazzo.github.io/assets/2015-03-05-deep-dive-into-docker-storage-drivers.html#1",
        "solution": "Do not explicitly use 'aufs' as storage driver.\n\nFor example, do not start Docker daemon as below-\ndocker daemon --storage-driver aufs\nImpact-\n'aufs'is the only storage driver that allows containers to share executable and shared library memory. It might be useful if you are running thousands of containers with the same program or libraries.Default Value-\nBy default, Docker uses 'devicemapper' as the storage driver on most of the platforms. Default storage driver can vary based on your OS vendor. You should use the storage driver that is best supported by your preferred vendor.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker info | grep -ie \"^storage driver: aufs\" | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_9": {
        "description": "2.6 Configure TLS authentication for Docker daemon - tlscacert",
        "info": "http://docs.docker.com/articles/https/\n2.http://www.hnwatcher.com/r/1644394/Intro-to-Docker-Swarm-Part-2-Comfiguration-Modes-and-Requirements\n3.http://www.blackfinsecurity.com/docker-swarm-with-tls-authentication/",
        "solution": "Follow the steps mentioned in the Docker documentation or other references.Impact-\nYou would need to manage and guard certificates and keys for Docker daemon and Docker clients.\nDefault Value-\nBy default, TLS authentication is not configured.",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]tlscacert",
        "expect": "--tlscacert"
    },
    "custom_item_10": {
        "description": "2.6 Configure TLS authentication for Docker daemon -tlsverify",
        "info": "http://docs.docker.com/articles/https/\n2.http://www.hnwatcher.com/r/1644394/Intro-to-Docker-Swarm-Part-2-Comfiguration-Modes-and-Requirements\n3.http://www.blackfinsecurity.com/docker-swarm-with-tls-authentication/",
        "solution": "Follow the steps mentioned in the Docker documentation or other references.Impact-\nYou would need to manage and guard certificates and keys for Docker daemon and Docker clients.\nDefault Value-\nBy default, TLS authentication is not configured.",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]tlsverify",
        "expect": "--tlsverify"
    },
    "custom_item_11": {
        "description": "2.6 Configure TLS authentication for Docker daemon - tlskey",
        "info": "http://docs.docker.com/articles/https/\n2.http://www.hnwatcher.com/r/1644394/Intro-to-Docker-Swarm-Part-2-Comfiguration-Modes-and-Requirements\n3.http://www.blackfinsecurity.com/docker-swarm-with-tls-authentication/",
        "solution": "Follow the steps mentioned in the Docker documentation or other references.Impact-\nYou would need to manage and guard certificates and keys for Docker daemon and Docker clients.\nDefault Value-\nBy default, TLS authentication is not configured.",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]tlskey",
        "expect": "--tlskey"
    },
    "custom_item_12": {
        "description": "2.6 Configure TLS authentication for Docker daemon - tlscert",
        "info": "http://docs.docker.com/articles/https/\n2.http://www.hnwatcher.com/r/1644394/Intro-to-Docker-Swarm-Part-2-Comfiguration-Modes-and-Requirements\n3.http://www.blackfinsecurity.com/docker-swarm-with-tls-authentication/",
        "solution": "Follow the steps mentioned in the Docker documentation or other references.Impact-\nYou would need to manage and guard certificates and keys for Docker daemon and Docker clients.\nDefault Value-\nBy default, TLS authentication is not configured.",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,LEVEL|1A,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]tlscert",
        "expect": "--tlscert"
    },
    "custom_item_13": {
        "description": "2.7 Set default ulimit as appropriate - default-ulimit",
        "info": "https://docs.docker.com/engine/reference/commandline/daemon/#default-ulimits",
        "solution": "Run the docker in daemon mode and pass '--default-ulimit' as argument with respective ulimits as appropriate in your environment.\nFor Example,\ndocker daemon --default-ulimit nproc=1024-2408 --default-ulimit nofile=100-200\nImpact-\nIf the ulimits are not set properly, the desired resource control might not be achieved and might even make the system unusable.\nDefault Value-\nBy default, no ulimit is set.",
        "reference": "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1M,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]default-ulimit",
        "expect": "--default-ulimit @DEFAULT_ULIMIT@"
    },
    "custom_item_14": {
        "description": "2.13 Disable operations on legacy registry (v1)",
        "info": "https://docs.docker.com/engine/reference/commandline/daemon/\n2.https://github.com/docker/docker/issues/8093\n3.https://github.com/docker/docker/issues/9015\n4.https://github.com/docker/docker-registry/issues/612\n5.https://docs.docker.com/registry/spec/api/\n6.https://the.binbashtheory.com/creating-private-docker-registry-2-0-with-token-authentication-service/\n7.https://blog.docker.com/2015/07/new-tool-v1-registry-docker-trusted-registry-v2-open-source/\n8.http://www.slideshare.net/Docker/docker-registry-v2",
        "solution": "Start the docker daemon as below-\ndocker daemon--disable-legacy-registry &\nImpact-\nLegacy registry operations would be restricted.\nDefault Value-\nBy default, legacy registry operations are allowed.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]disable-legacy-registry",
        "expect": "--disable-legacy-registry=false"
    },
    "custom_item_15": {
        "description": "3.1 Verify that docker.service file ownership is set to root:root",
        "info": "https://docs.docker.com/engine/admin/systemd/",
        "solution": "Step 1- Find out the file location-\nsystemctl show -p FragmentPath docker.service\n\nStep 2- If the file does not exist, this recommendation is not applicable. If the file exists, execute the below command with the correct file path to set the ownership and group ownership for the file to 'root'.\nFor example,\nchown root:root /usr/lib/systemd/system/docker.service\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the ownership and group-ownership for this file is correctly set to 'root'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_DOCKER_SERVICE_FILE@",
        "owner": "root",
        "group": "root"
    },
    "custom_item_16": {
        "description": "3.2 Verify that docker.service file permissions are set to 644 or more restrictive",
        "info": "https://docs.docker.com/articles/systemd/",
        "solution": "Step 1- Find out the file location-\nsystemctl show -p FragmentPath docker.service\n\nStep 2- If the file does not exist, this recommendation is not applicable. If the file exists, execute the below command with the correct file path to set thefile permissions to '644'.\nFor example,\nchmod 644 /usr/lib/systemd/system/docker.service\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present,the file permissions are correctly set to '644'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_DOCKER_SERVICE_FILE@",
        "mask": "133"
    },
    "custom_item_17": {
        "description": "3.3 Verify that docker.socket file ownership is set to root:root",
        "info": "https://docs.docker.com/articles/basics/#bind-docker-to-another-hostport-or-a-unix-socket\n2.https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket\n3.http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/",
        "solution": "Step 1- Find out the file location-\nsystemctl show -p FragmentPath docker.socket\n\nStep 2- If the file does not exist, this recommendation is not applicable. If the file exists, execute the below command with the correct file path to set the ownership and group ownership for the file to 'root'.\nFor example,\nchown root:root /usr/lib/systemd/system/docker.socket\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present,the ownership and group-ownership for this file is correctly set to 'root'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_DOCKER_SOCKET_FILE@",
        "owner": "root",
        "group": "root"
    },
    "custom_item_18": {
        "description": "3.4 Verify that docker.socket file permissions are set to 644 or more restrictive",
        "info": "https://docs.docker.com/articles/basics/#bind-docker-to-another-hostport-or-a-unix-socket\n2.https://github.com/YungSang/fedora-atomic-packer/blob/master/oem/docker.socket\n3.http://daviddaeschler.com/2014/12/14/centos-7rhel-7-and-docker-containers-on-boot/",
        "solution": "Step 1- Find out the file location-\nsystemctl show -p FragmentPath docker.socket\n\nStep 2- If the file does not exist, this recommendation is not applicable. If the file exists, execute the below command with the correct file path to set thefile permissions to '644'.\nFor example,\nchmod 644 /usr/lib/systemd/system/docker.socket\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable. By default, if the file is present, the file permissions for this file are correctly set to '644'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_DOCKER_SOCKET_FILE@",
        "mask": "133"
    },
    "custom_item_19": {
        "description": "3.5 Verify that /etc/docker directory ownership is set to root:root",
        "info": "https://docs.docker.com/articles/certificates/",
        "solution": "chown root:root /etc/docker\nThis would set the ownership and group-ownership for the directory to 'root'.\nImpact-\nNone.\nDefault Value-\nBy default, the ownership and group-ownership for this directory is correctly set to 'root'.",
        "reference": "LEVEL|1A",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/etc/docker",
        "owner": "root",
        "group": "root"
    },
    "custom_item_20": {
        "description": "3.6 Verify that /etc/docker directory permissions are set to 755 or more restrictive",
        "info": "https://docs.docker.com/articles/certificates/",
        "solution": "chmod 755 /etc/docker\nThis would set the permissions for the directory to '755'.\nImpact-\nNone.\nDefault Value-\nBy default, the permissions for this directory are correctly set to '755'.",
        "reference": "LEVEL|1A",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/etc/docker",
        "mask": "022"
    },
    "custom_item_21": {
        "description": "3.7 Verify that registry certificate file ownership is set to root:root",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/reference/commandline/cli/#insecure-registries",
        "solution": "chown root:root /etc/docker/certs.d//*This would set the ownership and group-ownership for the registry certificate files to 'root'.\nImpact-\nNone.\nDefault Value-\nBy default, the ownership and group-ownership for registry certificate files is correctly set to 'root'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@BASE_PATH_TO_CERTS@@REGISTRY_NAME@/*",
        "owner": "root",
        "group": "root"
    },
    "custom_item_22": {
        "description": "3.8 Verify that registry certificate file permissions are set to 444 or more restrictive",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/reference/commandline/cli/#insecure-registries",
        "solution": "chmod 444 /etc/docker/certs.d//*This would set the permissions for registry certificate files to '444'.\nImpact-\nNone.\nDefault Value-\nBy default, the permissions for registry certificate files might not be '444'. The default file permissions are governed by the system or user specific umask values.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@BASE_PATH_TO_CERTS@@REGISTRY_NAME@/*",
        "mask": "333"
    },
    "custom_item_23": {
        "description": "3.9 Verify that TLS CA certificate file ownership is set to root:root",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/articles/https/",
        "solution": "chown root:rootThis would set the ownership and group-ownership for the TLS CA certificate file to 'root'.\nImpact-\nNone.\nDefault Value-\nBy default, the ownership and group-ownership for TLS CA certificate file is correctly set to 'root'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_TLS_CA_FILE@",
        "owner": "root",
        "group": "root"
    },
    "custom_item_24": {
        "description": "3.10 Verify that TLS CA certificate file permissions are set to 444 or more restrictive",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/articles/https/",
        "solution": "chmod 444This would set the file permissions of the TLS CA file to '444'.\nImpact-\nNone.\nDefault Value-\nBy default, the permissions for TLS CA certificate file might not be '444'. The default file permissions are governed by the system or user specific umask values.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_TLS_CA_FILE@",
        "mask": "333"
    },
    "custom_item_25": {
        "description": "3.11 Verify that Docker server certificate file ownership is set to root:root",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/articles/https/",
        "solution": "chown root:rootThis would set the ownership and group-ownership for the Docker server certificate file to 'root'.\nImpact-\nNone.\nDefault Value-\nBy default, the ownership and group-ownership for Docker server certificate file is correctly set to 'root'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_SERVER_CERT_FILE@",
        "owner": "root",
        "group": "root"
    },
    "custom_item_26": {
        "description": "3.12 Verify that Docker server certificate file permissions are set to 444 or more restrictive",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/articles/https/",
        "solution": "chmod 444This would set the file permissions of the Docker server file to '444'.\nImpact-\nNone.\nDefault Value-\nBy default, the permissions for Docker server certificate file might not be '444'. The default file permissions are governed by the system or user specific umask values.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_SERVER_CERT_FILE@",
        "mask": "333"
    },
    "custom_item_27": {
        "description": "3.13 Verify that Docker server certificate key file ownership is set to root:root",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/articles/https/",
        "solution": "chown root:rootThis would set the ownership and group-ownership for the Docker server certificate key file to 'root'.\nImpact-\nNone.\nDefault Value-\nBy default, the ownership and group-ownership for Docker server certificate key file is correctly set to 'root'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_SERVER_CERT_KEY_FILE@",
        "owner": "root",
        "group": "root"
    },
    "custom_item_28": {
        "description": "3.14 Verify that Docker server certificate key file permissions are set to 400",
        "info": "https://docs.docker.com/articles/certificates/\n2.http://docs.docker.com/articles/https/",
        "solution": "chmod 400This would set the Docker server certificate key file permissions to '400'.\nImpact-\nNone.\nDefault Value-\nBy default, the permissions for Docker server certificate key file might not be '400'. The default file permissions are governed by the system or user specific umask values.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "@PATH_TO_SERVER_CERT_KEY_FILE@",
        "mask": "377"
    },
    "custom_item_29": {
        "description": "3.15 Verify that Docker socket file ownership is set to root:docker",
        "info": "https://docs.docker.com/reference/commandline/cli/#daemon-socket-option\n2.https://docs.docker.com/articles/basics/#bind-docker-to-another-hostport-or-a-unix-socket",
        "solution": "chown root:docker /var/run/docker.sockThis would set the ownership to 'root' and group-ownership to 'docker' for default Docker socket file.Impact-\nNone.\nDefault Value-\nBy default, the ownership and group-ownership for Docker socket file is correctly set to 'root-docker'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/var/run/docker.sock",
        "owner": "root",
        "group": "docker"
    },
    "custom_item_30": {
        "description": "3.16 Verify that Docker socket file permissions are set to 660 or more restrictive",
        "info": "https://docs.docker.com/reference/commandline/cli/#daemon-socket-option\n2.https://docs.docker.com/articles/basics/#bind-docker-to-another-hostport-or-a-unix-socket",
        "solution": "chmod 660 /var/run/docker.sockThis would set the file permissions of the Docker socket file to '660'.\nImpact-\nNone.\nDefault Value-\nBy default, the permissions for Docker socket file is correctly set to '660'.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/var/run/docker.sock",
        "mask": "117"
    },
    "custom_item_31": {
        "description": "3.17 Verify that daemon.json file ownership is set to root:root",
        "info": "https://docs.docker.com/engine/reference/commandline/daemon/#daemon-configuration-file",
        "solution": "chown root:root /etc/docker/daemon.json This would set the ownership and group-ownership for the file to 'root'.\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/etc/docker/daemon.json",
        "owner": "root",
        "group": "root"
    },
    "custom_item_32": {
        "description": "3.18 Verify that daemon.json file permissions are set to 644 or more restrictive",
        "info": "https://docs.docker.com/engine/reference/commandline/daemon/#daemon-configuration-file",
        "solution": "chmod 644 /etc/docker/daemon.jsonThis would set the file permissions for this file to '644'.\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/etc/docker/daemon.json",
        "mask": "133"
    },
    "custom_item_33": {
        "description": "3.19 Verify that /etc/default/docker file ownership is set to root:root",
        "info": "https://docs.docker.com/engine/admin/configuring/",
        "solution": "chown root:root /etc/default/dockerThis would set the ownership and group-ownership for the file to 'root'.\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/etc/default/docker",
        "owner": "root",
        "group": "root"
    },
    "custom_item_34": {
        "description": "3.20 Verify that /etc/default/docker file permissions are set to 644 or more restrictive",
        "info": "https://docs.docker.com/engine/admin/configuring/",
        "solution": "chmod 644 /etc/default/dockerThis would set the file permissions for this file to '644'.\nImpact-\nNone.\nDefault Value-\nThis file may not be present on the system. In that case, this recommendation is not applicable.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|1A,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "file": "/etc/default/docker",
        "mask": "133"
    },
    "custom_item_35": {
        "description": "4.1 Create a user for the container",
        "cmd": "/usr/bin/docker ps -q | xargs docker inspect --format '{{ .Id }}: User={{.Config.User}}'",
        "expect": "User=$"
    },
    "custom_item_36": {
        "description": "4.1 Create a user for the container",
        "info": "https://github.com/docker/docker/issues/2918\n2.https://github.com/docker/docker/pull/4572\n3.https://github.com/docker/docker/issues/7906\n4.https://www.altiscale.com/hadoop-blog/making-docker-work-yarn/\n5.http://docs.docker.com/articles/security/",
        "solution": "Ensure that the Dockerfile for the container image contains below instruction-\nUSERwhere username or ID refers to the user that could be found in the container base image. If there is no specific user created in the container base image, then add a useradd command to add the specific user before USER instruction.\n\nFor example, add the below lines in the Dockerfile to create a user in the container-\nRUNuseradd -d /home/username -m -s /bin/bash username\nUSER username\n\nNote- If there are users in the image that the containers do not need, consider deleting them. After deleting those users, commit the image and then generate new instances of containers for use.\nImpact-\nNone.\nDefault Value-\nBy default, the containers are run with root privileges and as user root inside the container.",
        "reference": "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs docker inspect --format '{{ .Id }}: User={{.Config.User}}'",
        "expect": ""
    },
    "custom_item_37": {
        "description": "4.1 Create a user for the container",
        "info": "https://github.com/docker/docker/issues/2918\n2.https://github.com/docker/docker/pull/4572\n3.https://github.com/docker/docker/issues/7906\n4.https://www.altiscale.com/hadoop-blog/making-docker-work-yarn/\n5.http://docs.docker.com/articles/security/",
        "solution": "Ensure that the Dockerfile for the container image contains below instruction-\nUSERwhere username or ID refers to the user that could be found in the container base image. If there is no specific user created in the container base image, then add a useradd command to add the specific user before USER instruction.\n\nFor example, add the below lines in the Dockerfile to create a user in the container-\nRUNuseradd -d /home/username -m -s /bin/bash username\nUSER username\n\nNote- If there are users in the image that the containers do not need, consider deleting them. After deleting those users, commit the image and then generate new instances of containers for use.\nImpact-\nNone.\nDefault Value-\nBy default, the containers are run with root privileges and as user root inside the container.",
        "reference": "800-171|3.1.5,800-53|AC-6,800-53r5|AC-6,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,CSF|PR.DS-5,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs docker inspect --format '{{ .Id }}: User={{.Config.User}}'",
        "expect": ".*"
    },
    "custom_item_38": {
        "description": "4.2 Use trusted base images for containers",
        "info": "https://titanous.com/posts/docker-insecurity\n2.https://registry.hub.docker.com/\n3.http://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/\n4.https://github.com/docker/docker/issues/8093\n5.http://docs.docker.com/reference/commandline/cli/#pull\n6.https://github.com/docker/docker/pull/11109\n7.https://blog.docker.com/2015/11/docker-trusted-registry-1-4/\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure and use Docker Content trust.\nImpact-\nNone.\nDefault Value-\nNot Applicable.",
        "reference": "800-171|3.4.8,800-53|CM-7(5),800-53r5|CM-7(5),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker images",
        "expect": ""
    },
    "custom_item_39": {
        "description": "5.3 Restrict Linux Kernel Capabilities within containers",
        "info": "https://docs.docker.com/articles/security/#linux-kernel-capabilities\n2.https://github.com/docker/docker/blob/master/daemon/execdriver/native/template/default_template.go\n3.http://man7.org/linux/man-pages/man7/capabilities.7.html\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Execute the below command to add needed capabilities-\n$>docker run --cap-add={'Capability 1','Capability 2'}For example,\ndocker run --interactive --tty --cap-add={'NET_ADMIN','SYS_ADMIN'} centos-latest /bin/bashExecute the below command to drop unneeded capabilities-\n$> docker run --cap-drop={'Capability 1','Capability 2'}For example,\ndocker run --interactive --tty --cap-drop={'SETUID','SETGID'} centos-latest /bin/bash\nAlternatively,\nYou may choose to drop all capabilities and add only add the needed ones-\n$>docker run --cap-drop=all --cap-add={'Capability 1','Capability 2'}For example,\ndocker run --interactive --tty --cap-drop=all --cap-add={'NET_ADMIN','SYS_ADMIN'} centos-latest /bin/bash\nImpact-\nBased on what Linux Kernel Capabilities were added or dropped, restrictions within the container would apply.\nDefault Value-\nBy default, below capabilities are available for containers-\nAUDIT_WRITE\nCHOWN\nDAC_OVERRIDE\nFOWNER\nFSETID\nKILL\nMKNOD\nNET_BIND_SERVICE\nNET_RAW\nSETFCAP\nSETGID\nSETPCAP\nSETUID\nSYS_CHROOT",
        "reference": "800-171|3.1.5,800-53|AC-6(4),800-53r5|AC-6(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6(4),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: CapAdd={{json .HostConfig.CapAdd }} CapDrop={{json .HostConfig.CapDrop }}'",
        "expect": ""
    },
    "custom_item_40": {
        "description": "5.4 Do not use privileged containers",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'",
        "expect": "Privileged=true"
    },
    "custom_item_41": {
        "description": "5.4 Do not use privileged containers",
        "info": "https://docs.docker.com/reference/commandline/cli",
        "solution": "Do not run container with the--privilegedflag.\nFor example, do not start a container as below-\ndocker run --interactive --tty --privileged centos /bin/bash\nImpact-\nLinux Kernel Capabilities other than defaults would not be available for use within container.\nDefault Value-\nFalse.",
        "reference": "800-171|3.1.5,800-53|AC-6(4),800-53r5|AC-6(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6(4),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'",
        "expect": ""
    },
    "custom_item_42": {
        "description": "5.4 Do not use privileged containers",
        "info": "https://docs.docker.com/reference/commandline/cli",
        "solution": "Do not run container with the--privilegedflag.\nFor example, do not start a container as below-\ndocker run --interactive --tty --privileged centos /bin/bash\nImpact-\nLinux Kernel Capabilities other than defaults would not be available for use within container.\nDefault Value-\nFalse.",
        "reference": "800-171|3.1.5,800-53|AC-6(4),800-53r5|AC-6(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6(4),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Privileged={{ .HostConfig.Privileged }}'",
        "expect": ".*"
    },
    "custom_item_43": {
        "description": "5.5 Do not mount sensitive host system directories on containers",
        "info": "https://docs.docker.com/userguide/dockervolumes",
        "solution": "Do not mount host sensitive directories on containers especially in read-write mode.\nImpact-\nNone.\nDefault Value-\nDocker defaults to a read-write volume but you can also mount a directory read-only. By default, no sensitive host directories are mounted on containers.\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs docker inspect --format '{{ .Id }}: Volumes={{ .Mounts }}'",
        "expect": ""
    },
    "custom_item_44": {
        "description": "5.6 Do not run ssh within containers",
        "info": "http://blog.docker.com/2014/06/why-you-dont-need-to-run-sshd-in-docker/",
        "solution": "Uninstall SSH server from the container and use nsenter or any other commands such as docker exec or docker attach to interact with the container instance.\ndocker exec --interactive --tty $INSTANCE_ID sh\nOR\ndocker attach $INSTANCE_ID\nImpact-\nNone.\nDefault Value-\nBy default, SSH server is not running inside the container. Only one process per container is allowed.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "for i in $(/usr/bin/docker ps -q); do /usr/bin/docker exec $i ps -el|grep ssh; done",
        "expect": ""
    },
    "custom_item_45": {
        "description": "5.7 Do not map privileged ports within containers",
        "cmd": "for i in $(/usr/bin/docker ps -q); do echo $i ' : ';/usr/bin/docker port $i; done",
        "expect": ":([0-9]|[1-9][0-9]|[1-9][0-9][0-9]|10[0-2][0-3])$"
    },
    "custom_item_46": {
        "description": "5.8 Open only needed ports on container",
        "info": "https://docs.docker.com/articles/networking/#binding-ports\n  NOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Fix the Dockerfile of the container image to expose only needed ports by your containerized application. You can also completely ignore the list of ports defined in the Dockerfile by NOT using '-P' (UPPERCASE) or '--publish-all'flag when starting the container. Use the '-p' (lowercase) or '--publish' flag to explicitly define the ports that you need for a particular container instance.\nFor example,\ndocker run --interactive --tty --publish 5000 --publish 5001 --publish 5002 centos /bin/bash\nImpact-\nNone.\nDefault Value-\nBy default, all the ports that are listed in the Dockerfile under EXPOSE instruction for an image are opened when container is run with '-P' or '--publish-all' flag.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "for i in $(/usr/bin/docker ps -q); do /usr/bin/docker port $i; done",
        "expect": ""
    },
    "custom_item_47": {
        "description": "5.9 Do not share the host's network namespace",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'",
        "expect": "host"
    },
    "custom_item_48": {
        "description": "5.9 Do not share the host's network namespace",
        "info": "http://docs.docker.com/articles/networking/#how-docker-networks-a-container\n2.https://github.com/docker/docker/issues/6401",
        "solution": "Do not pass '--net=host' option when starting the container.\nImpact-\nNone.\nDefault Value-\nBy default, container connects to Docker bridge.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'",
        "expect": ""
    },
    "custom_item_49": {
        "description": "5.9 Do not share the host's network namespace",
        "info": "http://docs.docker.com/articles/networking/#how-docker-networks-a-container\n2.https://github.com/docker/docker/issues/6401",
        "solution": "Do not pass '--net=host' option when starting the container.\nImpact-\nNone.\nDefault Value-\nBy default, container connects to Docker bridge.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: NetworkMode={{ .HostConfig.NetworkMode }}'",
        "expect": ".*"
    },
    "custom_item_50": {
        "description": "5.10 Limit memory usage for container",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'",
        "expect": "Memory=0"
    },
    "custom_item_51": {
        "description": "5.10 Limit memory usage for container",
        "info": "https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2.http://docs.docker.com/reference/commandline/cli/#run\n3.https://docs.docker.com/articles/runmetrics/",
        "solution": "Run the container with only as much memory as required. Always run the container using '-m' or '--memory' argument. You should start the container as below-\n$>docker run--memoryFor example,\ndocker run --interactive --tty --memory 256m centos /bin/bash\nIn the above example, the container is started with a memory limit of 256 MB.\nNote- Please note that the output of the below command would return values in scientific notation if memory limits are in place.\ndocker inspect --format='{{.Config.Memory}}' 7c5a2d4c7fe0For example, if the memory limit is set to256 MBfor the above container instance, the output of the above command would be2.68435456e+08and NOT 256m. You should convert this value using a scientific calculator or programmatic methods.\nImpact-\nIf you do not set proper limits, the container process may have to starve.\nDefault Value-\nBy default, all containers on a Docker host share the resources equally. No memory limits are enforced.",
        "reference": "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1A,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'",
        "expect": ""
    },
    "custom_item_52": {
        "description": "5.10 Limit memory usage for container",
        "info": "https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2.http://docs.docker.com/reference/commandline/cli/#run\n3.https://docs.docker.com/articles/runmetrics/",
        "solution": "Run the container with only as much memory as required. Always run the container using '-m' or '--memory' argument. You should start the container as below-\n$>docker run--memoryFor example,\ndocker run --interactive --tty --memory 256m centos /bin/bash\nIn the above example, the container is started with a memory limit of 256 MB.\nNote- Please note that the output of the below command would return values in scientific notation if memory limits are in place.\ndocker inspect --format='{{.Config.Memory}}' 7c5a2d4c7fe0For example, if the memory limit is set to256 MBfor the above container instance, the output of the above command would be2.68435456e+08and NOT 256m. You should convert this value using a scientific calculator or programmatic methods.\nImpact-\nIf you do not set proper limits, the container process may have to starve.\nDefault Value-\nBy default, all containers on a Docker host share the resources equally. No memory limits are enforced.",
        "reference": "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1A,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Memory={{ .HostConfig.Memory }}'",
        "expect": ".*"
    },
    "custom_item_53": {
        "description": "5.11 Set container CPU priority appropriately",
        "info": "https://goldmann.pl/blog/2014/09/11/resource-management-in-docker/\n2.http://docs.docker.com/reference/commandline/cli/#run\n3.https://docs.docker.com/articles/runmetrics/\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Manage the CPU shares between your containers. To do so start the container using '-c' or '--cpu-shares' argument. You may start the container as below-\n$>docker run--cpu-sharesFor example,\ndocker run --interactive --tty --cpu-shares 512 centos /bin/bash\nIn the above example, the container is started with a CPU shares of 50% of what the other containers use. So, if the other container has CPU shares of 80%, this container will have CPU shares of 40%.\n\nNote- Every new container will have1024shares of CPU by default. However, this value is shown as '0' if you run the command mentioned in the audit section.\nAlternatively,\n1. Navigate to/sys/fs/cgroup/cpu/system.slice/directory.\n2. Check your container instance ID using 'docker ps' command.\n3. Now, inside the above directory (in step 1), you would have a directory by name 'docker-.scope' for example 'docker-4acae729e8659c6be696ee35b2237cc1fe4edd2672e9186434c5116e1a6fbed6.scope'. Navigate to this directory.\n4. You will find a file named 'cpu.shares'. Execute 'cat cpu.shares'. This will always give you the CPU share value based on the system. So, even if there are no CPU shares configured using '-c' or '--cpu-shares' argument in the 'docker run' command, this file will have a value of '1024'.\nIf we set one containers CPU shares to 512 it will receive half of the CPU time compared to the other container. So, take 1024 as 100% and then do quick maths to derive the number that you should set for respective CPU shares. For example, use 512 if you want to set 50% and 256 if you want to set 25%.\nImpact-\nIf you do not set proper CPU shares, the container process may have to starve if the resources on the host are not available. If the CPU resources on the host are free, CPU shares do not place any restrictions on the CPU that the container may use.\nDefault Value-\nBy default, all containers on a Docker host share the resources equally. No CPU shares are enforced.",
        "reference": "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1A,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: CpuShares={{ .HostConfig.CpuShares }}'",
        "expect": ""
    },
    "custom_item_54": {
        "description": "5.12 Mount container's root filesystem as read only",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'",
        "expect": "ReadonlyRootfs=false"
    },
    "custom_item_55": {
        "description": "5.12 Mount container's root filesystem as read only",
        "info": "http://docs.docker.com/reference/commandline/cli/#run",
        "solution": "Add a '--read-only' flag to allow the container's root filesystem to bemounted as read only. This can be used in combination with volumes toforce a container's process to only write to locations that will bepersisted.\n\nYou should run the container as below-\n$>docker run--read-only -vFor example,\ndocker run --interactive --tty --read-only --volume /centdata centos /bin/bash\nThis would run the container with read-only root filesystem and would use 'centdata' as container volume for writing.\nImpact-\nThe container root file system would not be writable. You should explicitly define a volume for the container for writing.\nDefault Value-\nBy default,a container will have its root filesystem writable allowing processesto write files anywhere.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'",
        "expect": ""
    },
    "custom_item_56": {
        "description": "5.12 Mount container's root filesystem as read only",
        "info": "http://docs.docker.com/reference/commandline/cli/#run",
        "solution": "Add a '--read-only' flag to allow the container's root filesystem to bemounted as read only. This can be used in combination with volumes toforce a container's process to only write to locations that will bepersisted.\n\nYou should run the container as below-\n$>docker run--read-only -vFor example,\ndocker run --interactive --tty --read-only --volume /centdata centos /bin/bash\nThis would run the container with read-only root filesystem and would use 'centdata' as container volume for writing.\nImpact-\nThe container root file system would not be writable. You should explicitly define a volume for the container for writing.\nDefault Value-\nBy default,a container will have its root filesystem writable allowing processesto write files anywhere.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53r5|CM-7,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: ReadonlyRootfs={{ .HostConfig.ReadonlyRootfs }}'",
        "expect": ".*"
    },
    "custom_item_57": {
        "description": "5.13 Bind incoming container traffic to a specific host interface",
        "cmd": "for i in $(/usr/bin/docker ps -q); do /usr/bin/docker port $i; done",
        "expect": "0\\.0\\.0\\.\\0:"
    },
    "custom_item_58": {
        "description": "5.13 Bind incoming container traffic to a specific host interface",
        "info": "https://docs.docker.com/articles/networking/#binding-container-ports-to-the-host",
        "solution": "Bind the container port to a specific host interface on the desired host port.\nFor example,\ndocker run --detach --publish 10.2.3.4-49153-80 nginx\nIn the example above, the container port 80 is bound to the host port on 49153 and would accept incoming connection only from 10.2.3.4 external interface.\nImpact-\nNone.\nDefault Value-\nBy default,Docker exposes the container ports on 0.0.0.0, the wildcard IP address that will match any possible incoming network interface on the host machine.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "for i in $(/usr/bin/docker ps -q); do /usr/bin/docker port $i; done",
        "expect": ""
    },
    "custom_item_59": {
        "description": "5.13 Bind incoming container traffic to a specific host interface",
        "info": "https://docs.docker.com/articles/networking/#binding-container-ports-to-the-host",
        "solution": "Bind the container port to a specific host interface on the desired host port.\nFor example,\ndocker run --detach --publish 10.2.3.4-49153-80 nginx\nIn the example above, the container port 80 is bound to the host port on 49153 and would accept incoming connection only from 10.2.3.4 external interface.\nImpact-\nNone.\nDefault Value-\nBy default,Docker exposes the container ports on 0.0.0.0, the wildcard IP address that will match any possible incoming network interface on the host machine.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "for i in $(/usr/bin/docker ps -q); do /usr/bin/docker port $i; done",
        "expect": ".*"
    },
    "custom_item_60": {
        "description": "5.14 Set the 'on-failure' container restart policy to 5 - RestartPolicyName=always",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'",
        "expect": "RestartPolicyName=always"
    },
    "custom_item_61": {
        "description": "5.14 Set the 'on-failure' container restart policy to 5 - RestartPolicyName=on-failure",
        "info": "http://docs.docker.com/ reference/commandline/cli/#restart-policies",
        "solution": "If a container is desired to be restarted of its own, then start the container as below-$> docker run--restart=on-failure-5For example,$> docker run -d --restart=on-failure-5 nginx\n\nImpact-The container would attempt to restart only for 5 times.\n\nDefault Value-By default, containers are not configured with restart policies. Hence, containers do not\nattempt to restart of their own.",
        "reference": "800-53|SC-5,800-53r5|SC-5,CSF|DE.CM-1,CSF|PR.DS-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,LEVEL|1A,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: RestartPolicyName={{ .HostConfig.RestartPolicy.Name }} MaximumRetryCount={{ .HostConfig.RestartPolicy.MaximumRetryCount }}'|grep RestartPolicyName=on-failure|egrep 'MaximumRetryCount=([6-9]\\|[1-9][0-9]+)'",
        "expect": ""
    },
    "custom_item_62": {
        "description": "5.15 Do not share the host's process namespace",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'",
        "expect": "PidMode=host"
    },
    "custom_item_63": {
        "description": "5.15 Do not share the host's process namespace",
        "info": "https://docs.docker.com/reference/run/#pid-settings\n2.http://man7.org/linux/man-pages/man7/pid_namespaces.7.html",
        "solution": "Do not start a container with '--pid=host' argument.\nFor example, do not start a container as below-\ndocker run --interactive --tty --pid=host centos /bin/bash\nImpact-\nContainer processes cannot see the processes on the host system.In certain cases you want your container to share the host's process namespace. For example, you could build a container with debugging tools like strace or gdb, but want to use these tools when debugging processes within the container. If this is desired, then share only one (or needed) host process by using the '-p' switch.\n\nFor example,\ndocker run --pid=host rhel7 strace -p 1234\nDefault Value-\nBy default, all containers have the PID namespace enabled and the host's process namespace is not shared with the containers.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'",
        "expect": ""
    },
    "custom_item_64": {
        "description": "5.15 Do not share the host's process namespace",
        "info": "https://docs.docker.com/reference/run/#pid-settings\n2.http://man7.org/linux/man-pages/man7/pid_namespaces.7.html",
        "solution": "Do not start a container with '--pid=host' argument.\nFor example, do not start a container as below-\ndocker run --interactive --tty --pid=host centos /bin/bash\nImpact-\nContainer processes cannot see the processes on the host system.In certain cases you want your container to share the host's process namespace. For example, you could build a container with debugging tools like strace or gdb, but want to use these tools when debugging processes within the container. If this is desired, then share only one (or needed) host process by using the '-p' switch.\n\nFor example,\ndocker run --pid=host rhel7 strace -p 1234\nDefault Value-\nBy default, all containers have the PID namespace enabled and the host's process namespace is not shared with the containers.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: PidMode={{ .HostConfig.PidMode }}'",
        "expect": ".*"
    },
    "custom_item_65": {
        "description": "5.16 Do not share the host's IPC namespace",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'",
        "expect": "IpcMode=host"
    },
    "custom_item_66": {
        "description": "5.16 Do not share the host's IPC namespace",
        "info": "https://docs.docker.com/reference/run/#ipc-settings\n2.http://man7.org/linux/man-pages/man7/namespaces.7.html",
        "solution": "Do not start a container with '--ipc=host' argument.For example, do not start a container as below-\ndocker run --interactive --tty --ipc=host centos /bin/bash\nImpact-\nShared memory segments are used to accelerate inter-process communication. It is commonly used by high performance applications. If such applications are containerized into multiple containers, you might need to share the IPC namespace of the containers to achieve high performance. In such cases, you should still be sharing container specific IPC namespaces only and not the host IPC namespace. You may share the container's IPC namespace with other container as below-\n$>docker run--ipc=container-$INSTANCE_IDFor example,\ndocker run --interactive --tty --ipc=container-e3a7a1a97c58 centos /bin/bash\nDefault Value-\nBy default, all containers have the IPC namespace enabled and host IPC namespace is not shared with any container.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'",
        "expect": ""
    },
    "custom_item_67": {
        "description": "5.16 Do not share the host's IPC namespace",
        "info": "https://docs.docker.com/reference/run/#ipc-settings\n2.http://man7.org/linux/man-pages/man7/namespaces.7.html",
        "solution": "Do not start a container with '--ipc=host' argument.For example, do not start a container as below-\ndocker run --interactive --tty --ipc=host centos /bin/bash\nImpact-\nShared memory segments are used to accelerate inter-process communication. It is commonly used by high performance applications. If such applications are containerized into multiple containers, you might need to share the IPC namespace of the containers to achieve high performance. In such cases, you should still be sharing container specific IPC namespaces only and not the host IPC namespace. You may share the container's IPC namespace with other container as below-\n$>docker run--ipc=container-$INSTANCE_IDFor example,\ndocker run --interactive --tty --ipc=container-e3a7a1a97c58 centos /bin/bash\nDefault Value-\nBy default, all containers have the IPC namespace enabled and host IPC namespace is not shared with any container.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}'",
        "expect": ".*"
    },
    "custom_item_68": {
        "description": "5.17 Do not directly expose host devices to containers",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Devices={{ .HostConfig.Devices }}'",
        "expect": "Devices=\\\\[.+\\\\]"
    },
    "custom_item_69": {
        "description": "5.17 Do not directly expose host devices to containers",
        "info": "http://docs.docker.com/reference/commandline/cli/#run",
        "solution": "Do not directly expose the host devices to containers. If at all, you need to expose the host devices to containers, use the correct set of permissions.\nFor example, do not start a container as below-\ndocker run --interactive --tty --device=/dev/tty0-/dev/tty0-rwm --device=/dev/temp_sda-/dev/temp_sda-rwm centos bash\n\nFor example, share the host device with correct permissions-\ndocker run --interactive --tty --device=/dev/tty0-/dev/tty0-rw --device=/dev/temp_sda-/dev/temp_sda-r centos bash\nImpact-\nYou would not be able to use the host devices directly within the containers.\nDefault Value-\nBy default, no host devices are exposed to containers. If you do not provide sharing permissions and choose to expose a host device to a container, the host device would be exposed with read, write and mknod permissions.",
        "reference": "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,LEVEL|1M",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Devices={{ .HostConfig.Devices }}'",
        "expect": ""
    },
    "custom_item_70": {
        "description": "5.17 Do not directly expose host devices to containers",
        "info": "http://docs.docker.com/reference/commandline/cli/#run",
        "solution": "Do not directly expose the host devices to containers. If at all, you need to expose the host devices to containers, use the correct set of permissions.\nFor example, do not start a container as below-\ndocker run --interactive --tty --device=/dev/tty0-/dev/tty0-rwm --device=/dev/temp_sda-/dev/temp_sda-rwm centos bash\n\nFor example, share the host device with correct permissions-\ndocker run --interactive --tty --device=/dev/tty0-/dev/tty0-rw --device=/dev/temp_sda-/dev/temp_sda-r centos bash\nImpact-\nYou would not be able to use the host devices directly within the containers.\nDefault Value-\nBy default, no host devices are exposed to containers. If you do not provide sharing permissions and choose to expose a host device to a container, the host device would be exposed with read, write and mknod permissions.",
        "reference": "800-171|3.13.4,800-53|SC-4,800-53r5|SC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-4,ITSG-33|SC-4a.,LEVEL|1M",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Devices={{ .HostConfig.Devices }}'",
        "expect": ".*"
    },
    "custom_item_71": {
        "description": "5.18 Override default ulimit at runtime only if needed",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Ulimits={{json .HostConfig.Ulimits }}'",
        "expect": "Ulimits=\\\\[.*\\\\]"
    },
    "custom_item_72": {
        "description": "5.18 Override default ulimit at runtime only if needed",
        "info": "http://docs.docker.com/reference/commandline/cli/#setting-ulimits-in-a-container",
        "solution": "Only override the default ulimit settings if needed.\nFor example, to override default ulimit settings start a container as below-\ndocker run --ulimit nofile=1024-1024 --interactive --tty centos /bin/bash\nImpact-\nIf the ulimits are not set properly, the desired resource control might not be achieved and might even make the system unusable.Default Value-\nContainer instances inherit the default ulimit settings set at the Docker daemon level.",
        "reference": "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1M,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Ulimits={{json .HostConfig.Ulimits }}'",
        "expect": ""
    },
    "custom_item_73": {
        "description": "5.18 Override default ulimit at runtime only if needed",
        "info": "http://docs.docker.com/reference/commandline/cli/#setting-ulimits-in-a-container",
        "solution": "Only override the default ulimit settings if needed.\nFor example, to override default ulimit settings start a container as below-\ndocker run --ulimit nofile=1024-1024 --interactive --tty centos /bin/bash\nImpact-\nIf the ulimits are not set properly, the desired resource control might not be achieved and might even make the system unusable.Default Value-\nContainer instances inherit the default ulimit settings set at the Docker daemon level.",
        "reference": "800-53|SC-6,800-53r5|SC-6,CN-L3|7.1.3.7(c),CN-L3|7.1.3.7(d),GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-6,ITSG-33|SC-6a.,LEVEL|1M,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: Ulimits={{json .HostConfig.Ulimits }}'",
        "expect": ".*"
    },
    "custom_item_74": {
        "description": "5.19 Do not set mount propagation mode to shared",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Propagation={{range $mnt := .Mounts}} {{json $mnt.Propagation}} {{end}}'",
        "expect": "shared"
    },
    "custom_item_75": {
        "description": "5.19 Do not set mount propagation mode to shared",
        "info": "https://github.com/docker/docker/pull/17034\n2.https://docs.docker.com/engine/reference/run/\n3.https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt",
        "solution": "Do not mount volumes in shared mode propagation.\nFor example, do not start container as below-\ndocker run--volume=/hostPath-/containerPath-sharedImpact-\nNone.\nDefault Value-\nBy default, the container mounts are private.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Propagation={{range $mnt := .Mounts}} {{json $mnt.Propagation}} {{end}}'",
        "expect": ""
    },
    "custom_item_76": {
        "description": "5.19 Do not set mount propagation mode to shared",
        "info": "https://github.com/docker/docker/pull/17034\n2.https://docs.docker.com/engine/reference/run/\n3.https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt",
        "solution": "Do not mount volumes in shared mode propagation.\nFor example, do not start container as below-\ndocker run--volume=/hostPath-/containerPath-sharedImpact-\nNone.\nDefault Value-\nBy default, the container mounts are private.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Propagation={{range $mnt := .Mounts}} {{json $mnt.Propagation}} {{end}}'",
        "expect": ".*"
    },
    "custom_item_77": {
        "description": "5.20 Do not share the host's UTS namespace",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'",
        "expect": "host"
    },
    "custom_item_78": {
        "description": "5.20 Do not share the host's UTS namespace",
        "info": "https://docs.docker.com/engine/reference/run/\n2.http://man7.org/linux/man-pages/man7/namespaces.7.html",
        "solution": "Do not start a container with '--uts=host' argument.\nFor example, do not start a container as below-\ndocker run --rm --interactive --tty --uts=host rhel7.2\nImpact-\nNone.\nDefault Value-\nBy default, all containers have the UTS namespace enabled and host UTS namespace is not shared with any container.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'",
        "expect": ""
    },
    "custom_item_79": {
        "description": "5.20 Do not share the host's UTS namespace",
        "info": "https://docs.docker.com/engine/reference/run/\n2.http://man7.org/linux/man-pages/man7/namespaces.7.html",
        "solution": "Do not start a container with '--uts=host' argument.\nFor example, do not start a container as below-\ndocker run --rm --interactive --tty --uts=host rhel7.2\nImpact-\nNone.\nDefault Value-\nBy default, all containers have the UTS namespace enabled and host UTS namespace is not shared with any container.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}'",
        "expect": ".*"
    },
    "custom_item_80": {
        "description": "5.21 Do not disable default seccomp profile",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'",
        "expect": "seccomp:unconfined"
    },
    "custom_item_81": {
        "description": "5.21 Do not disable default seccomp profile",
        "info": "http://blog.scalock.com/new-docker-security-features-and-what-they-mean-seccomp-profiles\n2.https://docs.docker.com/engine/reference/run/\n3.https://github.com/docker/docker/blob/master/profiles/seccomp/default.json\n4.https://docs.docker.com/engine/security/seccomp/\n5.https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt",
        "solution": "By default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use the modified seccomp profile.\nImpact-\nWith Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of --cap-add passed to the container. You should create your own custom seccomp profile in such cases. You may also disable the default seccomp profile by passing--security-opt=seccomp-unconfined on docker run.Default Value-\nWhen you run a container, it uses the default profile unless you override it with the --security-opt option.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'",
        "expect": ""
    },
    "custom_item_82": {
        "description": "5.21 Do not disable default seccomp profile",
        "info": "http://blog.scalock.com/new-docker-security-features-and-what-they-mean-seccomp-profiles\n2.https://docs.docker.com/engine/reference/run/\n3.https://github.com/docker/docker/blob/master/profiles/seccomp/default.json\n4.https://docs.docker.com/engine/security/seccomp/\n5.https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt",
        "solution": "By default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use the modified seccomp profile.\nImpact-\nWith Docker 1.10 and greater, the default seccomp profile blocks syscalls, regardless of --cap-add passed to the container. You should create your own custom seccomp profile in such cases. You may also disable the default seccomp profile by passing--security-opt=seccomp-unconfined on docker run.Default Value-\nWhen you run a container, it uses the default profile unless you override it with the --security-opt option.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'",
        "expect": ".*"
    },
    "custom_item_83": {
        "description": "5.24 Confirm cgroup usage",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'",
        "expect": "CgroupParent=.+"
    },
    "custom_item_84": {
        "description": "5.24 Confirm cgroup usage",
        "info": "https://docs.docker.com/engine/reference/run/#specifying-custom-cgroups\n2.https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/ch01.html",
        "solution": "Do not use --cgroup-parentoption in docker run command unless needed.\nImpact-\nNone.\nDefault Value-\nBy default, containers run under dockercgroup.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'",
        "expect": ""
    },
    "custom_item_85": {
        "description": "5.24 Confirm cgroup usage",
        "info": "https://docs.docker.com/engine/reference/run/#specifying-custom-cgroups\n2.https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/ch01.html",
        "solution": "Do not use --cgroup-parentoption in docker run command unless needed.\nImpact-\nNone.\nDefault Value-\nBy default, containers run under dockercgroup.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: CgroupParent={{ .HostConfig.CgroupParent }}'",
        "expect": ".+"
    },
    "custom_item_86": {
        "description": "5.25 Restrict container from acquiring additional privileges",
        "info": "https://github.com/projectatomic/atomic-site/issues/269\n2.https://github.com/docker/docker/pull/20727\n3.https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt\n4.https://lwn.net/Articles/475678/\n5.https://lwn.net/Articles/475362/",
        "solution": "Start a container as below-\ndocker run--security-opt=no-new-privilegesFor example,\ndocker run --rm -it --security-opt=no-new-privileges ubuntu bash\nImpact-\nno_new_priv prevents LSMs like SELinux from transitioning to process labels that have access not allowed to the current process.\nDefault Value-\nBy default, new privileges are not restricted.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|1A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/516",
        "cmd": "docker ps --quiet | xargs docker inspect --format '{{ .Id }}: SecurityOpt={{ .HostConfig.SecurityOpt }}'|grep -v no-new-privileges",
        "expect": ""
    }
}