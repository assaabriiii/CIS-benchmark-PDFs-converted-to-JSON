{
    "custom_item_1": {
        "description": "Apache found",
        "cmd": "@HTTPD_LOCATION@ -version",
        "expect": "@HTTPD_NAME@/@PRODUCT_VERSION@.*"
    },
    "custom_item_2": {
        "system": "Linux",
        "description": "1.2 Ensure the Server Is Not a Multi-Use System",
        "info": "Default server configurations often expose a wide variety of services unnecessarily increasing the risk to the system. Just because a server can perform many services doesn't mean it is wise to do so. The number of services and daemons executing on the Apache Web server should be limited to those necessary, with the Web server being the only primary function of the server.\n\nRationale:\n\nMaintaining a server for a single purpose increases the security of your application and system. The more services which are exposed to an attacker, the more potential vectors an attacker has to exploit the system and therefore the higher the risk for the server. A Web server should function as only a web server and if possible, should not be mixed with other primary functions such as mail, DNS, database or middleware.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Leverage the package or services manager for your OS to uninstall or disable unneeded services. On Red Hat systems, the following will disable a given service:\n\nchkconfigoff\n\nDefault Value:\n\nDepends on OS Platform",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.10,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/sbin/chkconfig --list | /bin/grep ':on'",
        "expect": ""
    },
    "custom_item_3": {
        "description": "1.3 Installing Apache - rpm",
        "rpm": "httpd-2.4.0-0",
        "operator": "gte"
    },
    "custom_item_4": {
        "description": "1.3 Installing Apache - dpkg",
        "cmd": "/usr/bin/dpkg -s apache2 | /usr/bin/grep Status: 2>&1",
        "expect": "^[\\\\s]*Status: install ok installed[\\\\s]*"
    },
    "custom_item_5": {
        "system": "Linux",
        "description": "2.1 Ensure Only Necessary Authentication and Authorization Modules Are Enabled",
        "info": "The Apache 2.4 modules for authentication and authorization are grouped and named to provide both granularity and a consistent naming convention to simplify configuration. The authn_* modules provide authentication, while the authz_* modules provide authorization. Apache provides two types of authentication - basic and digest. Review the Apache Authentication and Authorization how-to documentation http://httpd.apache.org/docs/2.4/howto/auth.html and enable only the modules that are required.\n\nRationale:\n\nAuthentication and authorization are the front doors to the protected information in your web site. Most installations only need a small subset of the modules available. By minimizing the enabled modules to those that are actually used, we reduce the number of 'doors' and therefore reduce the attack surface of the web site. Likewise, having fewer modules means less software that could have vulnerabilities.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Consult Apache module documentation for descriptions of each module in order to determine the necessary modules for the specific installation. http://httpd.apache.org/docs/2.4/mod/ The unnecessary static compiled modules are disabled through compile time configuration options as documented in http://httpd.apache.org/docs/2.4/programs/configure.html. The dynamically loaded modules are disabled by commenting out or removing the LoadModule directive from the Apache configuration files (typically httpd.conf). Some modules may be separate packages, and may be removed.\n\nDefault Value:\n\nThe following modules are loaded by a default source build:\n\nauthn_file_module (shared)\n\nauthn_core_module (shared)\n\nauthz_host_module (shared)\n\nauthz_groupfile_module (shared)\n\nauthz_user_module (shared)\n\nauthz_core_module (shared)",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|16.1,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P '(auth._|ldap)' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_6": {
        "system": "Linux",
        "description": "2.2 Ensure the Log Config Module Is Enabled",
        "info": "The log_config module provides for flexible logging of client requests, and provides for the configuration of the information in each log.\n\nRationale:\n\nLogging is critical for monitoring usage and potential abuse of your web server. This module is required to configure web server logging using the log_format directive.",
        "solution": "Perform either one of the following:\n\nFor source builds with static modules, run the Apache ./configure script without including the --disable-log-config script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure\n\nFor dynamically loaded modules, add or modify the LoadModule directive so that it is present in the apache configuration as below and not commented out:\n\nLoadModule log_config_module modules/mod_log_config.so\n\nDefault Value:\n\nThe log_config module is loaded by default.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep log_config",
        "expect": "^[\\\\s]*log_config_module[\\\\s]*\\\\((shared|static)\\\\)[\\\\s]*$"
    },
    "custom_item_7": {
        "system": "Linux",
        "description": "2.3 Ensure the WebDAV Modules Are Disabled",
        "info": "The Apache mod_dav and mod_dav_fs modules support WebDAV ('Web-based Distributed Authoring and Versioning') functionality for Apache. WebDAV is an extension to the HTTP protocol which allows clients to create, move, and delete files and resources on the web server.\n\nRationale:\n\nDisabling WebDAV modules will improve the security posture of the web server by reducing the amount of potentially vulnerable code paths exposed to the network and reducing potential for unauthorized access to files via misconfigured WebDAV access controls.",
        "solution": "Perform either one of the following to disable WebDAV module:\n\nFor source builds with static modules run the Apache ./configure script without including the mod_dav, and mod_dav_fs in the --enable-modules=configure script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure\n\nFor dynamically loaded modules comment out or remove the LoadModule directive for mod_dav, and mod_dav_fs modules from the httpd.conf file.\n\n##LoadModule dav_module modules/mod_dav.so\n##LoadModule dav_fs_module modules/mod_dav_fs.so\n\nDefault Value:\n\nThe WebDav modules are not enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P -v '^([Ll]oaded|[Ss]yntax)' | /usr/bin/grep -P 'dav_(fs_)?module' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_8": {
        "system": "Linux",
        "description": "2.4 Ensure the Status Module Is Disabled",
        "info": "The Apache mod_status module provides current server performance statistics.\n\nRationale:\n\nWhen mod_status is loaded into the server, its handler capability is available in all configuration files, including per-directory files (e.g., .htaccess). The mod_status module may provide an adversary with information that can be used to refine exploits that depend on measuring server load.",
        "solution": "Perform either one of the following to disable the mod_status module:\n\nFor source builds with static modules, run the Apache ./configure script with the --disable-status configure script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure --disable-status\n\nFor dynamically loaded modules, comment out or remove the LoadModule directive for the mod_status module from the httpd.conf file.\n\n##LoadModule status_module modules/mod_status.so\n\nDefault Value:\n\nThe mod_status module IS enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P -v '^([Ll]oaded|[Ss]yntax)' | /usr/bin/grep -P 'status_module' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_9": {
        "system": "Linux",
        "description": "2.5 Ensure the Autoindex Module Is Disabled",
        "info": "The Apache autoindex module automatically generates web page listing the contents of directories on the server, typically used so that an index.html does not have to be generated.\n\nRationale:\n\nAutomated directory listings should not be enabled as it will also reveal information helpful to an attacker such as naming conventions and directory paths. Directory listings may also reveal files that were not intended to be revealed.",
        "solution": "Perform either one of the following to disable the mod_autoindex module:\n\nFor source builds with static modules, run the Apache ./configure script with the --disable-autoindex configure script options\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure -disable-autoindex\n\nFor dynamically loaded modules, comment out or remove the LoadModule directive for mod_autoindex from the httpd.conf file.\n\n## LoadModule autoindex_module modules/mod_autoindex.so\n\nDefault Value:\n\nThe mod_autoindex module IS enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P -v '^([Ll]oaded|[Ss]yntax)' | /usr/bin/grep -P 'autoindex_module' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_10": {
        "system": "Linux",
        "description": "2.6 Ensure the Proxy Modules Are Disabled if not in use",
        "info": "The Apache proxy modules allow the server to act as a proxy (either forward or reverse proxy) of HTTP and other protocols with additional proxy modules loaded. If the Apache installation is not intended to proxy requests to or from another network then the proxy module should not be loaded.\n\nRationale:\n\nProxy servers can act as an important security control when properly configured, however a secure proxy server is not within the scope of this benchmark. A web server should be primarily a web server or a proxy server but not both, for the same reasons that other multi-use servers are not recommended. Scanning for web servers that will also proxy requests is a very common attack, as proxy servers are useful for anonymizing attacks on other servers, or possibly proxying requests into an otherwise protected network.",
        "solution": "Perform either one of the following to disable the proxy module:\n\nFor source builds with static modules, run the Apache ./configure script without including the mod_proxy in the --enable-modules=configure script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure\n\nFor dynamically loaded modules, comment out or remove the LoadModule directive for mod_proxy module and all other proxy modules from the httpd.conf file.\n\n##LoadModule proxy_module modules/mod_proxy.so\n##LoadModule proxy_connect_module modules/mod_proxy_connect.so\n##LoadModule proxy_ftp_module modules/mod_proxy_ftp.so\n##LoadModule proxy_http_module modules/mod_proxy_http.so\n##LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so\n##LoadModule proxy_scgi_module modules/mod_proxy_scgi.so\n##LoadModule proxy_ajp_module modules/mod_proxy_ajp.so\n##LoadModule proxy_balancer_module modules/mod_proxy_balancer.so\n##LoadModule proxy_express_module modules/mod_proxy_express.so\n##LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so\n##LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so\n\nDefault Value:\n\nThe mod_proxy module and other proxy modules are NOT enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P -v '^([Ll]oaded|[Ss]yntax)' | /usr/bin/grep -P 'proxy_' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_11": {
        "system": "Linux",
        "description": "2.7 Ensure the User Directories Module Is Disabled",
        "info": "The UserDir directive must be disabled so that user home directories are not accessed via the web site with a tilde (~) preceding the username. The directive also sets the path name of the directory that will be accessed. For example:\n\nhttp://example.com/~ralph/ might access a public_html sub-directory of ralph user's home directory.\n\nThe directive UserDir ./ might map /~root to the root directory (/).\n\nRationale:\n\nThe user directories should not be globally enabled since it allows anonymous access to anything users may want to share with other users on the network. Also consider that every time a new account is created on the system, there is potentially new content available via the web site.",
        "solution": "Perform either one of the following to disable the user directories module:\n\nFor source builds with static modules, run the Apache ./configure script with the --disable-userdir configure script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure --disable-userdir\n\nFor dynamically loaded modules, comment out or remove the LoadModule directive for mod_userdir module from the httpd.conf file.\n\n##LoadModule userdir_module modules/mod_userdir.so\n\nDefault Value:\n\nThe mod_userdir module is not enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P -v '^(Loaded|Syntax)' | /usr/bin/grep -P 'userdir_' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_12": {
        "system": "Linux",
        "description": "2.8 Ensure the Info Module Is Disabled",
        "info": "The Apache mod_info module provides information on the server configuration via access to a /server-info URL location.\n\nRationale:\n\nWhile having server configuration information available as a web page may be convenient it's recommended that this module NOT be enabled. Once mod_info is loaded into the server, its handler capability is available in per-directory .htaccess files and can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, database names, etc.",
        "solution": "Perform either one of the following to disable the mod_info module:\n\nFor source builds with static modules, run the Apache ./configure script without including the mod_info in the --enable-modules= configure script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure\n\nFor dynamically loaded modules, comment out or remove the LoadModule directive for the mod_info module from the httpd.conf file.\n\n##LoadModule info_module modules/mod_info.so\n\nDefault Value:\n\nThe mod_info module is not enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P -v '^([Ll]oaded|[Ss]yntax)' | /usr/bin/grep -P 'info_module' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_13": {
        "system": "Linux",
        "description": "2.9 Ensure the Basic and Digest Authentication Modules are Disabled - auth_basic_module",
        "info": "The Apache mod_auth_basic and mod_auth_digest modules support HTTP Basic Authentication and HTTP Digest Authentication respectively. The two authentication protocols are used to restrict access to users who provide a valid user name and password.\n\nRationale:\n\nNeither HTTP Basic nor HTTP Digest authentication should be used as the protocols are out dated and no longer considered secure. Disabling the modules will improve the security posture of the web server by reducing the amount of potentially vulnerable code paths exposed to the network and reducing potential for unauthorized access to files via misconfigured access controls.\n\nIn the early days of the web, Basic HTTP Authentication was considered adequate if it was only used over HTTPS, so that the credentials would not be sent in the clear. Basic authentication uses Base64 to encode the credentials which are sent with every request. Base64 encoding is of course easily reversed, and is no more secure than clear text. The issues with using Basic Auth over HTTPS is that it does not meet current security standards for protecting the login credentials and protecting the authenticated session. The following security issues plague the Basic Authentication protocol.\n\nThe authenticated session has an indefinite length (as long as any browser window is open) and is not timed-out on the server when the session is idle.\n\nApplication logout is required to invalidate the session on the server to limit, but in the case of Basic Authentication, there is no server-side session that can be invalidated.\n\nThe credentials are remembered by the browser and stored in memory.\n\nThere is no way to disable auto-complete, where the browser offers to store the passwords. Passwords stored in the browser can be accessed if the client system or browser become compromised.\n\nThe credentials are more likely to be exposed since they are automatically sent with every request.\n\nAdministrators may at times have access to the HTTP headers sent in request for the purposes of diagnosing problems and detecting attacks. Having a user's credentials in the clear in the HTTP headers, may allow a user to repudiate actions performed, because the web or system administrators also had access to the user's password.\n\nThe HTTP Digest Authentication is considered even worse than Basic Authentication because it stores the password in the clear on the server, and has the same session management issues as Basic Authentication.",
        "solution": "Perform either one of the following to disable the HTTP Basic or HTTP Digest authentication modules:\n\nFor source builds with static modules run the Apache ./configure script without including the mod_auth_basic, and mod_auth_digest in the --enable-modules=configure script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure\n\nFor dynamically loaded modules comment out or remove the LoadModule directive for mod_auth_basic, and mod_auth_digest modules from the httpd.conf file.\n\n##LoadModule mod_auth_basic modules/mod_auth_basic.so\n##LoadModule mod_auth_digest modules/mod_auth_digest.so\n\nDefault Value:\n\nThe mod_auth_basic and mod_auth_digest modules are not enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION -M | /usr/bin/grep -P 'auth_basic_module' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_14": {
        "system": "Linux",
        "description": "2.9 Ensure the Basic and Digest Authentication Modules are Disabled - auth_digest_module",
        "info": "The Apache mod_auth_basic and mod_auth_digest modules support HTTP Basic Authentication and HTTP Digest Authentication respectively. The two authentication protocols are used to restrict access to users who provide a valid user name and password.\n\nRationale:\n\nNeither HTTP Basic nor HTTP Digest authentication should be used as the protocols are out dated and no longer considered secure. Disabling the modules will improve the security posture of the web server by reducing the amount of potentially vulnerable code paths exposed to the network and reducing potential for unauthorized access to files via misconfigured access controls.\n\nIn the early days of the web, Basic HTTP Authentication was considered adequate if it was only used over HTTPS, so that the credentials would not be sent in the clear. Basic authentication uses Base64 to encode the credentials which are sent with every request. Base64 encoding is of course easily reversed, and is no more secure than clear text. The issues with using Basic Auth over HTTPS is that it does not meet current security standards for protecting the login credentials and protecting the authenticated session. The following security issues plague the Basic Authentication protocol.\n\nThe authenticated session has an indefinite length (as long as any browser window is open) and is not timed-out on the server when the session is idle.\n\nApplication logout is required to invalidate the session on the server to limit, but in the case of Basic Authentication, there is no server-side session that can be invalidated.\n\nThe credentials are remembered by the browser and stored in memory.\n\nThere is no way to disable auto-complete, where the browser offers to store the passwords. Passwords stored in the browser can be accessed if the client system or browser become compromised.\n\nThe credentials are more likely to be exposed since they are automatically sent with every request.\n\nAdministrators may at times have access to the HTTP headers sent in request for the purposes of diagnosing problems and detecting attacks. Having a user's credentials in the clear in the HTTP headers, may allow a user to repudiate actions performed, because the web or system administrators also had access to the user's password.\n\nThe HTTP Digest Authentication is considered even worse than Basic Authentication because it stores the password in the clear on the server, and has the same session management issues as Basic Authentication.",
        "solution": "Perform either one of the following to disable the HTTP Basic or HTTP Digest authentication modules:\n\nFor source builds with static modules run the Apache ./configure script without including the mod_auth_basic, and mod_auth_digest in the --enable-modules=configure script options.\n\n$ cd $DOWNLOAD_HTTPD\n$ ./configure\n\nFor dynamically loaded modules comment out or remove the LoadModule directive for mod_auth_basic, and mod_auth_digest modules from the httpd.conf file.\n\n##LoadModule mod_auth_basic modules/mod_auth_basic.so\n##LoadModule mod_auth_digest modules/mod_auth_digest.so\n\nDefault Value:\n\nThe mod_auth_basic and mod_auth_digest modules are not enabled with a default source build.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION -M | /usr/bin/grep -P 'auth_digest_module' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_15": {
        "system": "Linux",
        "description": "3.1 Ensure the Apache Web Server Runs As a Non-Root User - 'httpd.conf User = apache'",
        "info": "Although Apache is typically started with root privileges in order to listen on port 80 and 443, it can and should run as another non-root user in order to perform the web services. The Apache User and Group directives are used to designate the user and group that the Apache worker processes will assume.\n\nRationale:\n\nOne of the best ways to reduce your exposure to attack when running a web server is to create a unique, unprivileged user and group for the server application. The nobody or daemon user and group that comes default on Unix variants should NOT be used to run the web server, since the account is commonly used for other separate daemon services. Instead, an account used only by the apache software so as to not give unnecessary access to other services. Also, the identifier used for the apache user should be a unique system account. System user accounts UID numbers have lower values which are reserved for the special system accounts not used by regular users, such as discussed in User Accounts section of the CIS Red Hat benchmark. Typically, system accounts numbers range from 1-999, or 1-499 and are defined in the /etc/login.defs file.\n\nAs an even more secure alternative, if the Apache web server can be run on high unprivileged ports, then it is not necessary to start Apache as root, and all of the Apache processes may be run as the Apache specific user as described below.",
        "solution": "Perform the following:\n\nIf the apache user and group do not already exist, create the account and group as a unique system account:\n\n# groupadd -r apache\n# useradd apache -r -g apache -d /var/www -s /sbin/nologin\n\nConfigure the Apache user and group in the Apache configuration file httpd.conf:\n\nUser apache\nGroup apache\n\nDefault Value:\n\nThe default Apache user and group are configured as daemon.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Uu]ser[\\\\s]+",
        "expect": "^[\\\\s]*[Uu]ser[\\\\s]+apache"
    },
    "custom_item_16": {
        "system": "Linux",
        "description": "3.1 Ensure the Apache Web Server Runs As a Non-Root User - 'httpd.conf Group = apache'",
        "info": "Although Apache is typically started with root privileges in order to listen on port 80 and 443, it can and should run as another non-root user in order to perform the web services. The Apache User and Group directives are used to designate the user and group that the Apache worker processes will assume.\n\nRationale:\n\nOne of the best ways to reduce your exposure to attack when running a web server is to create a unique, unprivileged user and group for the server application. The nobody or daemon user and group that comes default on Unix variants should NOT be used to run the web server, since the account is commonly used for other separate daemon services. Instead, an account used only by the apache software so as to not give unnecessary access to other services. Also, the identifier used for the apache user should be a unique system account. System user accounts UID numbers have lower values which are reserved for the special system accounts not used by regular users, such as discussed in User Accounts section of the CIS Red Hat benchmark. Typically, system accounts numbers range from 1-999, or 1-499 and are defined in the /etc/login.defs file.\n\nAs an even more secure alternative, if the Apache web server can be run on high unprivileged ports, then it is not necessary to start Apache as root, and all of the Apache processes may be run as the Apache specific user as described below.",
        "solution": "Perform the following:\n\nIf the apache user and group do not already exist, create the account and group as a unique system account:\n\n# groupadd -r apache\n# useradd apache -r -g apache -d /var/www -s /sbin/nologin\n\nConfigure the Apache user and group in the Apache configuration file httpd.conf:\n\nUser apache\nGroup apache\n\nDefault Value:\n\nThe default Apache user and group are configured as daemon.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Gg]roup[\\\\s]+",
        "expect": "^[\\\\s]*[Gg]roup[\\\\s]+apache"
    },
    "custom_item_17": {
        "system": "Linux",
        "description": "3.1 Ensure the Apache Web Server Runs As a Non-Root User - 'apache account is configured'",
        "info": "Although Apache is typically started with root privileges in order to listen on port 80 and 443, it can and should run as another non-root user in order to perform the web services. The Apache User and Group directives are used to designate the user and group that the Apache worker processes will assume.\n\nRationale:\n\nOne of the best ways to reduce your exposure to attack when running a web server is to create a unique, unprivileged user and group for the server application. The nobody or daemon user and group that comes default on Unix variants should NOT be used to run the web server, since the account is commonly used for other separate daemon services. Instead, an account used only by the apache software so as to not give unnecessary access to other services. Also, the identifier used for the apache user should be a unique system account. System user accounts UID numbers have lower values which are reserved for the special system accounts not used by regular users, such as discussed in User Accounts section of the CIS Red Hat benchmark. Typically, system accounts numbers range from 1-999, or 1-499 and are defined in the /etc/login.defs file.\n\nAs an even more secure alternative, if the Apache web server can be run on high unprivileged ports, then it is not necessary to start Apache as root, and all of the Apache processes may be run as the Apache specific user as described below.",
        "solution": "Perform the following:\n\nIf the apache user and group do not already exist, create the account and group as a unique system account:\n\n# groupadd -r apache\n# useradd apache -r -g apache -d /var/www -s /sbin/nologin\n\nConfigure the Apache user and group in the Apache configuration file httpd.conf:\n\nUser apache\nGroup apache\n\nDefault Value:\n\nThe default Apache user and group are configured as daemon.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/id @APACHE_USR@",
        "expect": "^uid=@UID@\\\\(@APACHE_USR@\\\\)[\\\\s]+gid=@GID@\\\\(@APACHE_GRP@\\\\)[\\\\s]+groups=@GID@\\\\(@APACHE_GRP@\\\\)"
    },
    "custom_item_18": {
        "system": "Linux",
        "description": "3.1 Ensure the Apache Web Server Runs As a Non-Root User - 'httpd services are running as apache user'",
        "info": "Although Apache is typically started with root privileges in order to listen on port 80 and 443, it can and should run as another non-root user in order to perform the web services. The Apache User and Group directives are used to designate the user and group that the Apache worker processes will assume.\n\nRationale:\n\nOne of the best ways to reduce your exposure to attack when running a web server is to create a unique, unprivileged user and group for the server application. The nobody or daemon user and group that comes default on Unix variants should NOT be used to run the web server, since the account is commonly used for other separate daemon services. Instead, an account used only by the apache software so as to not give unnecessary access to other services. Also, the identifier used for the apache user should be a unique system account. System user accounts UID numbers have lower values which are reserved for the special system accounts not used by regular users, such as discussed in User Accounts section of the CIS Red Hat benchmark. Typically, system accounts numbers range from 1-999, or 1-499 and are defined in the /etc/login.defs file.\n\nAs an even more secure alternative, if the Apache web server can be run on high unprivileged ports, then it is not necessary to start Apache as root, and all of the Apache processes may be run as the Apache specific user as described below.",
        "solution": "Perform the following:\n\nIf the apache user and group do not already exist, create the account and group as a unique system account:\n\n# groupadd -r apache\n# useradd apache -r -g apache -d /var/www -s /sbin/nologin\n\nConfigure the Apache user and group in the Apache configuration file httpd.conf:\n\nUser apache\nGroup apache\n\nDefault Value:\n\nThe default Apache user and group are configured as daemon.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/ps axu | /usr/bin/grep @HTTPD_LOCATION@ | /usr/bin/grep -P -v '(^root|grep[\\\\s]+httpd|grep[\\\\s]+apache2)' | /usr/bin/grep -P -v '^@APACHE_USR@' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_19": {
        "system": "Linux",
        "description": "3.2 Ensure the Apache User Account Has an Invalid Shell",
        "info": "The apache account must not be used as a regular login account, and should be assigned an invalid or nologin shell to ensure that the account cannot be used to login.\n\nRationale:\n\nService accounts such as the apache account represent a risk if they can be used to get a login shell to the system.",
        "solution": "Change the apache account to use the nologin shell or an invalid shell such as /dev/null:\n\n# chsh -s /sbin/nologin apache\n\nDefault Value:\n\nThe default Apache user account is daemon. The daemon account may have a valid login shell or a shell of /sbin/nologin depending on the operating system distribution version.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7,800-53|CM-7(1),800-53|SI-7,800-53|SI-7(1),800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|SI-7,800-53r5|SI-7(1),CN-L3|7.1.3.5(b),CSCv7|4.3,CSCv8|2.6,CSCv8|2.7,CSF|PR.DS-6,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|SI-7,ITSG-33|SI-7a.,ITSG-33|SI-7(1),LEVEL|1A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2,SWIFT-CSCv1|2.3,SWIFT-CSCv1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/grep @APACHE_USR@ /etc/passwd | /usr/bin/grep -P -v '(\\/sbin\\/nologin|\\/dev\\/null)[\\\\s]*$' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_20": {
        "system": "Linux",
        "description": "3.3 Ensure the Apache User Account Is Locked",
        "info": "The user account under which Apache runs should not have a valid password, but should be locked.\n\nRationale:\n\nAs a defense-in-depth measure the Apache user account should be locked to prevent logins, and to prevent a user from su'ing to apache using the password. In general, there shouldn't be a need for anyone to have to su as apache, and when there is a need, then sudo should be used instead, which would not require the apache account password.",
        "solution": "Use the passwd command to lock the apache account:\n\n# passwd -l apache\n\nDefault Value:\n\nThe default user is daemon and the account is typically locked.",
        "reference": "800-171|3.1.1,800-53|AC-2(3),800-53r5|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv7|16.8,CSCv8|5.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/passwd -S @APACHE_USR@",
        "expect": "^@APACHE_USR@[\\\\s]+LK[\\\\s]+.+\\\\(Password locked\\\\.\\\\)[\\\\s]*$"
    },
    "custom_item_21": {
        "system": "Linux",
        "description": "3.4 Ensure Apache Directories and Files Are Owned By Root",
        "info": "The Apache directories and files should be owned by root. This applies to all of the Apache software directories and files installed.\n\nRationale:\n\nRestricting ownership of the Apache files and directories will reduce the probability of unauthorized modifications to those resources.",
        "solution": "Perform the following:\nSet ownership on the $APACHE_PREFIX directories such as /usr/local/apache2:\n\n$ chown -R root $APACHE_PREFIX\n\nDefault Value:\n\nDefault ownership and group is a mixture of the user:group that built the software and root:root.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@APACHE_PREFIX@",
        "owner": "root"
    },
    "custom_item_22": {
        "system": "Linux",
        "description": "3.5 Ensure the Group Is Set Correctly on Apache Directories and Files",
        "info": "The Apache directories and files should be set to have a group Id of root, (or a root equivalent) group. This applies to all of the Apache software directories and files installed. The only expected exception is that the Apache web document root ($APACHE_PREFIX/htdocs) is likely to need a designated group to allow web content to be updated (such as webupdate) through a change management process.\n\nRationale:\n\nSecuring Apache files and directories will reduce the probability of unauthorized modifications to those resources.",
        "solution": "Perform the following:\nSet ownership on the $APACHE_PREFIX directories such as /usr/local/apache2:\n\n$ chgrp -R root $APACHE_PREFIX\n\nDefault Value:\n\nDefault ownership and group is a mixture of the user:group that built the software and root:root.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@APACHE_PREFIX@",
        "group": "root"
    },
    "custom_item_23": {
        "system": "Linux",
        "description": "3.6 Ensure Other Write Access on Apache Directories and Files Is Restricted",
        "info": "Permissions on Apache directories should generally be rwxr-xr-x (755) and file permissions should be similar except not executable unless appropriate. This applies to all of the Apache software directories and files installed with the possible exception of the web document root $APACHE_PREFIX/htdocs. The directories and files in the web document root may have a designated group with write access to allow web content to be updated. In summary, the minimum recommendation is to not allow write access by other.\n\nRationale:\n\nNone of the Apache files and directories, including the Web document root must allow other write access. Other write access is likely to be very useful for unauthorized modification of web content, configuration files or software for malicious attacks.",
        "solution": "Perform the following to remove other write access on the $APACHE_PREFIX directories.\n\n# chmod -R o-w $APACHE_PREFIX",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@APACHE_PREFIX@",
        "mask": "022"
    },
    "custom_item_24": {
        "description": "3.7 Secure Core Dump Directory - 'CoreDumpDirectory is defined correctly'",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*CoreDumpDirectory",
        "expect": "^[\\\\s]*CoreDumpDirectory[\\\\s]+\\\\/"
    },
    "custom_item_25": {
        "system": "Linux",
        "description": "3.7 Ensure the Core Dump Directory Is Secured",
        "info": "The CoreDumpDirectory directive is used to specify the directory Apache attempts to switch to before creating the core dump. Core dumps will be disabled if the directory is not writable by the Apache user. Also, core dumps will be disabled if the server is started as root and switches to a non-root user, as is typical. It is recommended that the CoreDumpDirectory directive be set to a directory that is owned by the root user, owned by the group the Apache HTTPD process executes as, and be inaccessible to other users.\n\nRationale:\n\nCore dumps are snapshots of memory and may contain sensitive information that should not be accessible by other accounts on the system.",
        "solution": "Either remove the CoreDumpDirectory directive from the Apache configuration files or ensure that the configured directory meets the following requirements.\n\n\nCoreDumpDirectory is not to be within the Apache web document root ($APACHE_PREFIX/htdocs)\n\nMust be owned by root and have a group ownership of the Apache group (as defined via the Group directive)\n\n# chown root:apache /var/log/httpd\n\nMust have no read-write-search access permission for other users.\n\n# chmod o-rwx /var/log/httpd\n\nDefault Value:\n\nThe default core dump directory is the ServerRoot directory.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@CORE_DUMP_DIR@",
        "owner": "root",
        "mask": "007",
        "group": "root"
    },
    "custom_item_26": {
        "system": "Linux",
        "description": "3.7 Ensure the Core Dump Directory Is Secured",
        "info": "The CoreDumpDirectory directive is used to specify the directory Apache attempts to switch to before creating the core dump. Core dumps will be disabled if the directory is not writable by the Apache user. Also, core dumps will be disabled if the server is started as root and switches to a non-root user, as is typical. It is recommended that the CoreDumpDirectory directive be set to a directory that is owned by the root user, owned by the group the Apache HTTPD process executes as, and be inaccessible to other users.\n\nRationale:\n\nCore dumps are snapshots of memory and may contain sensitive information that should not be accessible by other accounts on the system.",
        "solution": "Either remove the CoreDumpDirectory directive from the Apache configuration files or ensure that the configured directory meets the following requirements.\n\n\nCoreDumpDirectory is not to be within the Apache web document root ($APACHE_PREFIX/htdocs)\n\nMust be owned by root and have a group ownership of the Apache group (as defined via the Group directive)\n\n# chown root:apache /var/log/httpd\n\nMust have no read-write-search access permission for other users.\n\n# chmod o-rwx /var/log/httpd\n\nDefault Value:\n\nThe default core dump directory is the ServerRoot directory.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*CoreDumpDirectory",
        "expect": "^[\\\\s]*CoreDumpDirectory[\\\\s]+\\\\/"
    },
    "custom_item_27": {
        "description": "3.8 Secure the Lock File - 'LockFile is configured'",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*Mutex[\\\\s]+",
        "expect": "^[\\\\s]*Mutex[\\\\s]+(flock|fcntl|file)"
    },
    "custom_item_28": {
        "system": "Linux",
        "description": "3.8 Ensure the Lock File Is Secured - 'LockFile permissions'",
        "info": "The Mutex directive sets the locking mechanism used to serialize access to resources. It may be used to specify that a lock file is to be used as a mutex mechanism and may provide the path to the lock file to be used with the fcntl(2) or flock(2) system calls. Most Linux systems will default to using semaphores instead, so the directive may not apply. However, in the event a lock file is used, it is important for the lock file to be in a local directory that is not writable by other users.\n\nRationale:\n\nIf the lock file to be used as a mutex is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a lock file with the same name.",
        "solution": "Find the directory path in which the lock file would be created. The default value is the ServerRoot/logs directory.\n\nModify the directory if the path is a directory within the Apache DocumentRoot\n\nChange the ownership and group to be root:root, if not already.\n\nChange the permissions so that the directory is only writable by root, or the user under which Apache initially starts up (default is root),\n\nCheck that the lock file directory is on a locally mounted hard drive rather than an NFS mounted file system.\n\nDefault Value:\n\nThe default mechanism for the Mutex directive is platform specific and may be determined by running httpd -V. The default path is the ServerRoot/logs directory.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@LOCK_FILE@",
        "owner": "root",
        "mask": "022",
        "group": "root"
    },
    "custom_item_29": {
        "system": "Linux",
        "description": "3.9 Ensure the Pid File Is Secured - 'PidFile directory'",
        "info": "The PidFile directive sets the file path to the process ID file to which the server records the process id of the server, which is useful for sending a signal to the server process or for checking on the health of the process.\n\nRationale:\n\nIf the PidFile is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a PID file with the same name.",
        "solution": "Find the directory in which the PidFile would be created. The default value is the ServerRoot/logs directory.\n\nModify the directory if the PidFile is in a directory within the Apache 'DocumentRoot'.\n\nChange the ownership and group to be root:root, if not already.\n\nChange the permissions so that the directory is only writable by root, or the user under which Apache initially starts up (default is root).\n\nDefault Value:\n\nThe default process ID file is logs/httpd.pid.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Pp]id[Ff]ile[\\\\s]+",
        "expect": "^[\\\\s]*[Pp]id[Ff]ile[\\\\s]+"
    },
    "custom_item_30": {
        "system": "Linux",
        "description": "3.9 Ensure the Pid File Is Secured - 'PidFile permissions'",
        "info": "The PidFile directive sets the file path to the process ID file to which the server records the process id of the server, which is useful for sending a signal to the server process or for checking on the health of the process.\n\nRationale:\n\nIf the PidFile is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a PID file with the same name.",
        "solution": "Find the directory in which the PidFile would be created. The default value is the ServerRoot/logs directory.\n\nModify the directory if the PidFile is in a directory within the Apache 'DocumentRoot'.\n\nChange the ownership and group to be root:root, if not already.\n\nChange the permissions so that the directory is only writable by root, or the user under which Apache initially starts up (default is root).\n\nDefault Value:\n\nThe default process ID file is logs/httpd.pid.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@PID_FILE@",
        "owner": "root",
        "mask": "022",
        "group": "root"
    },
    "custom_item_31": {
        "description": "ScoreBoard File Security",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ss]core[Bb]oard[Ff]ile[\\\\s]+",
        "expect": "^[\\\\s]*[Ss]core[Bb]oard[Ff]ile[\\\\s]+"
    },
    "custom_item_32": {
        "system": "Linux",
        "description": "3.10 Ensure the ScoreBoard File Is Secured",
        "info": "The ScoreBoardFile directive sets a file path which the server will use for inter-process communication (IPC) among the Apache processes. On most Linux platforms, shared memory will be used instead of a file in the file system, so this directive is not generally needed and does not need to be specified. However, if the directive is specified, then Apache will use the configured file for the inter-process communication. Therefore, if it is specified, it needs to be located in a secure directory.\n\nRationale:\n\nIf the ScoreBoardFile is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a file with the same name, and users could monitor and disrupt the communication between the processes by reading and writing to the file.",
        "solution": "Check to see if the ScoreBoardFile is specified in any of the Apache configuration files. If it is not present, no changes are required.\n\nIf the directive is present, find the directory in which the ScoreBoardFile would be created. The default value is the ServerRoot/logs directory.\n\nModify the directory if the ScoreBoardFile is in a directory within the Apache DocumentRoot\n\nChange the ownership and group to be root:root, if not already.\n\nChange the permissions so that the directory is only writable by root, or the user under which apache initially starts up (default is root),\n\nCheck that the scoreboard file directory is on a locally mounted hard drive rather than an NFS mounted file system.\n\nDefault Value:\n\nThe default scoreboard file is logs/apache_status.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@SCOREBOARD_DIR@",
        "owner": "root",
        "mask": "022",
        "group": "root"
    },
    "custom_item_33": {
        "system": "Linux",
        "description": "3.10 Ensure the ScoreBoard File Is Secured",
        "info": "The ScoreBoardFile directive sets a file path which the server will use for inter-process communication (IPC) among the Apache processes. On most Linux platforms, shared memory will be used instead of a file in the file system, so this directive is not generally needed and does not need to be specified. However, if the directive is specified, then Apache will use the configured file for the inter-process communication. Therefore, if it is specified, it needs to be located in a secure directory.\n\nRationale:\n\nIf the ScoreBoardFile is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a file with the same name, and users could monitor and disrupt the communication between the processes by reading and writing to the file.",
        "solution": "Check to see if the ScoreBoardFile is specified in any of the Apache configuration files. If it is not present, no changes are required.\n\nIf the directive is present, find the directory in which the ScoreBoardFile would be created. The default value is the ServerRoot/logs directory.\n\nModify the directory if the ScoreBoardFile is in a directory within the Apache DocumentRoot\n\nChange the ownership and group to be root:root, if not already.\n\nChange the permissions so that the directory is only writable by root, or the user under which apache initially starts up (default is root),\n\nCheck that the scoreboard file directory is on a locally mounted hard drive rather than an NFS mounted file system.\n\nDefault Value:\n\nThe default scoreboard file is logs/apache_status.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ss]core[Bb]oard[Ff]ile[\\\\s]+",
        "expect": "^[\\\\s]*[Ss]core[Bb]oard[Ff]ile[\\\\s]+"
    },
    "custom_item_34": {
        "system": "Linux",
        "description": "3.11 Ensure Group Write Access for the Apache Directories and Files Is Properly Restricted",
        "info": "Group permissions on Apache directories should generally be r-x and file permissions should be similar except not executable if executable is not appropriate. This applies to all of the Apache software directories and files installed with the possible exception of the web document root $DOCROOT defined by Apache DocumentRoot and defaults to $APACHE_PREFIX/htdocs. The directories and files in the web document root may have a designated web development group with write access to allow web content to be updated.\n\nRationale:\n\nRestricting write permissions on the Apache files and directories can help mitigate attacks that modify web content to provide unauthorized access, or to attack web clients.",
        "solution": "Perform the following to remove group write access on the $APACHE_PREFIX directories.\n\nfind -L $APACHE_PREFIX ! -type l -perm /o=w -exec chmod o-w {}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@APACHE_PREFIX@",
        "mask": "022"
    },
    "custom_item_35": {
        "system": "Linux",
        "description": "3.12 Ensure Group Write Access for the Document Root Directories and Files Is Properly Restricted",
        "info": "Group permissions on Apache Document Root directories $DOCROOT may need to be writable by an authorized group such as development, support, or a production content management tool. However, it is important that the Apache group used to run the server does not have write access to any directories or files in the document root.\n\nRationale:\n\nPreventing Apache from writing to the web document root helps mitigate risk associated with web application vulnerabilities associated with file uploads or command execution. Typically, if an application hosted by Apache needs to write to directory, it is best practice to have that directory live outside the web root.",
        "solution": "Perform the following to remove group write access on the $DOCROOT directories and files with the apache group.\n\n# find -L $DOCROOT -group $GRP -perm /g=w -print | xargs chmod g-w",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@DOCROOT@",
        "mask": "022"
    },
    "custom_item_36": {
        "system": "Linux",
        "description": "4.1 Ensure Access to OS Root Directory Is Denied By Default - 'httpd.conf Require all denied'",
        "info": "The Apache Directory directive allows for directory specific configuration of access controls and many other features and options. One important usage is to create a default deny policy that does not allow access to operating system directories and files, except for those specifically allowed. This is done by denying access to the OS root directory.\n\nRationale:\n\nOne aspect of Apache, which is occasionally misunderstood, is the feature of default access. That is, unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can and will serve it to clients. Having a default deny is a predominate security principle, and then helps prevent the unintended access, and we do that in this case by denying access to the OS root directory using either of two methods but not both:\n\nUsing the Apache Deny directive along with an Order directive.\n\nUsing the Apache Require directive.\n\nEither method is effective. The Order/Deny/Allow combination are now deprecated; they provide three passes where all the directives are processed in the specified order. In contrast, the Require directive works on the first match similar to firewall rules. The Require directive is the default for Apache 2.4 and is demonstrated in the remediation procedure as it may be less likely to be misunderstood.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find a rootelement.\n\nAdd a single Require directive and set the value to all denied\n\nRemove any Deny and Allow directives from the rootelement.. . .\n   Require all denied\n   . . .Default Value:\n\nThe following is the default root directory configuration:. . .\n\n   Require all denied\n\n   . . .",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/Directory>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*Require[\\\\s]+'",
        "expect": "[\\\\s]*Require[\\\\s]*[Aa]ll[\\\\s]+[Dd]enied[\\\\s]*$"
    },
    "custom_item_37": {
        "system": "Linux",
        "description": "4.1 Ensure Access to OS Root Directory Is Denied By Default - 'httpd.conf no Allow directives exist'",
        "info": "The Apache Directory directive allows for directory specific configuration of access controls and many other features and options. One important usage is to create a default deny policy that does not allow access to operating system directories and files, except for those specifically allowed. This is done by denying access to the OS root directory.\n\nRationale:\n\nOne aspect of Apache, which is occasionally misunderstood, is the feature of default access. That is, unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can and will serve it to clients. Having a default deny is a predominate security principle, and then helps prevent the unintended access, and we do that in this case by denying access to the OS root directory using either of two methods but not both:\n\nUsing the Apache Deny directive along with an Order directive.\n\nUsing the Apache Require directive.\n\nEither method is effective. The Order/Deny/Allow combination are now deprecated; they provide three passes where all the directives are processed in the specified order. In contrast, the Require directive works on the first match similar to firewall rules. The Require directive is the default for Apache 2.4 and is demonstrated in the remediation procedure as it may be less likely to be misunderstood.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find a rootelement.\n\nAdd a single Require directive and set the value to all denied\n\nRemove any Deny and Allow directives from the rootelement.. . .\n   Require all denied\n   . . .Default Value:\n\nThe following is the default root directory configuration:. . .\n\n   Require all denied\n\n   . . .",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/Directory>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s\\\\t]*[Aa]llow[\\\\s\\\\t]+' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_38": {
        "system": "Linux",
        "description": "4.1 Ensure Access to OS Root Directory Is Denied By Default",
        "info": "The Apache Directory directive allows for directory specific configuration of access controls and many other features and options. One important usage is to create a default deny policy that does not allow access to operating system directories and files, except for those specifically allowed. This is done by denying access to the OS root directory.\n\nRationale:\n\nOne aspect of Apache, which is occasionally misunderstood, is the feature of default access. That is, unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can and will serve it to clients. Having a default deny is a predominate security principle, and then helps prevent the unintended access, and we do that in this case by denying access to the OS root directory using either of two methods but not both:\n\nUsing the Apache Deny directive along with an Order directive.\n\nUsing the Apache Require directive.\n\nEither method is effective. The Order/Deny/Allow combination are now deprecated; they provide three passes where all the directives are processed in the specified order. In contrast, the Require directive works on the first match similar to firewall rules. The Require directive is the default for Apache 2.4 and is demonstrated in the remediation procedure as it may be less likely to be misunderstood.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find a rootelement.\n\nAdd a single Require directive and set the value to all denied\n\nRemove any Deny and Allow directives from the rootelement.. . .\n   Require all denied\n   . . .Default Value:\n\nThe following is the default root directory configuration:. . .\n\n   Require all denied\n\n   . . .",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/Directory>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*Deny[\\\\s]+' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_39": {
        "system": "Linux",
        "description": "4.2 Ensure Appropriate Access to Web Content Is Allowed",
        "info": "In order to serve Web content, either the Apache Allow directive or the Require directive will need to be used to allow for appropriate access to directories, locations and virtual hosts that contain web content.\n\nRationale:\n\nEither the Allow or Require directives may be used within a directory, a location or other context to allow appropriate access. Access may be allowed to all, or to specific networks, or hosts, or users as appropriate. The Allow/Deny/Order directives are deprecated and should be replaced by the Require directive. It is also recommended that either the Allow directive or the Require directive be used, but not both in the same context.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find allandelements. There should be one for the document root and any special purpose directories or locations. There are likely to be other access control directives in other contexts, such as virtual hosts or special elements like.\n\nInclude the appropriate Require directives, with values that are appropriate for the purposes of the directory.\n\nThe configurations below are just a few possible examples.Require ip 192.169.Require all grantedRequire localRequire valid-userDefault Value:\n\nThe following is the default Web root directory configuration:. . .\n\n    Require all granted\n\n    . . .",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "grep -A 250 '' @HTTPD_CONF_LOCATION@ | grep -B 250 -m 1 '' | grep -P '^[\\\\s]*Require[\\\\s]+'",
        "expect": "[\\\\s]*Require[\\\\s]+@REQUIRE_OPTION@[\\\\s]*$"
    },
    "custom_item_40": {
        "system": "Linux",
        "description": "4.3 Ensure OverRide Is Disabled for the OS Root Directory - AllowOverride None",
        "info": "The Apache AllowOverRide directive and the new AllowOverrideList directive allow for .htaccess files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier access information. When this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the filesystem. When this directive is set to All, then any directive which has the .htaccess Context is allowed in the .htaccess files.\n\nRationale:\n\nWhile the functionality of htaccess files is sometimes convenient, usage decentralizes the access controls and increases the risk of configurations being changed or viewed inappropriately by an unintended or rogue .htaccess file. Consider also that some of the more common vulnerabilities in web servers and web applications allow the web files to be viewed or to be modified, then it is wise to keep the configuration out of the web server from being placed in .htaccess files.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find a rootelement.\n\nRemove any AllowOverrideList directives found.\n\nAdd a single AllowOverride directive if there is none.\n\nSet the value for AllowOverride to None.. . .\n    AllowOverride None\n    . . .Default Value:\n\nThe following is the default root directory configuration:. . .\n\n   AllowOverride None\n\n   . . .",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/Directory>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*[Aa]llow[Oo]verride[\\\\s]+'",
        "expect": "[\\\\s]*[Aa]llow[Oo]verride[\\\\s]+[Nn]one[\\\\s]*$"
    },
    "custom_item_41": {
        "system": "Linux",
        "description": "4.3 Ensure OverRide Is Disabled for the OS Root Directory - exclude AllowOverrideList",
        "info": "The Apache AllowOverRide directive and the new AllowOverrideList directive allow for .htaccess files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier access information. When this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the filesystem. When this directive is set to All, then any directive which has the .htaccess Context is allowed in the .htaccess files.\n\nRationale:\n\nWhile the functionality of htaccess files is sometimes convenient, usage decentralizes the access controls and increases the risk of configurations being changed or viewed inappropriately by an unintended or rogue .htaccess file. Consider also that some of the more common vulnerabilities in web servers and web applications allow the web files to be viewed or to be modified, then it is wise to keep the configuration out of the web server from being placed in .htaccess files.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find a rootelement.\n\nRemove any AllowOverrideList directives found.\n\nAdd a single AllowOverride directive if there is none.\n\nSet the value for AllowOverride to None.. . .\n    AllowOverride None\n    . . .Default Value:\n\nThe following is the default root directory configuration:. . .\n\n   AllowOverride None\n\n   . . .",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/Directory>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*AllowOverrideList[\\\\s]+'",
        "expect": ""
    },
    "custom_item_42": {
        "system": "Linux",
        "description": "4.4 Ensure OverRide Is Disabled for All Directories - AllowOverride",
        "info": "The Apache AllowOverride directive and the new AllowOverrideList directive allow for .htaccess files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier access information. When this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the filesystem. When this directive is set to All, then any directive which has the .htaccess context is allowed in .htaccess files.\n\nRationale:\n\n.htaccess files decentralizes access control and increases the risk of server configuration being changed inappropriately.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find AllowOverride directives.\n\nSet the value for all AllowOverride directives to None.\n\n. . .\nAllowOverride None\n. . .\n\nRemove any AllowOverrideList directives found.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*[Aa]llow[Oo]verride[\\\\s]+' | /usr/bin/grep -P -v '^[\\\\s]*[Aa]llow[Oo]verride[\\\\s]+[Nn]one' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_43": {
        "system": "Linux",
        "description": "4.4 Ensure OverRide Is Disabled for All Directories - AllowOverrideList",
        "info": "The Apache AllowOverride directive and the new AllowOverrideList directive allow for .htaccess files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier access information. When this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the filesystem. When this directive is set to All, then any directive which has the .htaccess context is allowed in .htaccess files.\n\nRationale:\n\n.htaccess files decentralizes access control and increases the risk of server configuration being changed inappropriately.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find AllowOverride directives.\n\nSet the value for all AllowOverride directives to None.\n\n. . .\nAllowOverride None\n. . .\n\nRemove any AllowOverrideList directives found.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*AllowOverrideList[\\\\s]*",
        "expect": "^[\\\\s]*AllowOverrideList[\\\\s]*"
    },
    "custom_item_44": {
        "system": "Linux",
        "description": "5.1 Ensure Options for the OS Root Directory Are Restricted",
        "info": "The Apache Options directive allows for specific configuration of options, including execution of CGI, following symbolic links, server side includes, and content negotiation.\n\nRationale:\n\nThe Options directive for the root OS level is used to create a default minimal options policy that allows only the minimal options at the root directory level. Then for specific web sites or portions of the web site, options may be enabled as needed and appropriate. No options should be enabled and the value for the Options directive should be None.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find a rootelement.\n\nAdd a single Options directive if there is none.\n\nSet the value for Options to None.. . .\n    Options None\n    . . .Default Value:\n\nThe default value for the root directory's Option directive is Indexes FollowSymLinks.",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/Directory>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*[Oo]ptions[\\\\s]+'",
        "expect": "[\\\\s]*[Oo]ptions[\\\\s]+[Nn]one[\\\\s]*$"
    },
    "custom_item_45": {
        "system": "Linux",
        "description": "5.2 Ensure Options for the Web Root Directory Are Restricted",
        "info": "The Apache Options directive allows for specific configuration of options, including:\n\nExecution of CGI\n\nFollowing symbolic links\n\nServer side includes\n\nContent negotiation\n\nRationale:\n\nThe Options directive at the web root or document root level also needs to be restricted to the minimal options required. A setting of None is highly recommended, however it is recognized that this level content negotiation may be needed if multiple languages are supported. No other options should be enabled.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find the document rootelement.\n\nAdd or modify any existing Options directive to have a value of None or Multiviews, if multiviews are needed.. . .\n    Options None\n    . . .Default Value:\n\nThe default value for the web root directory's Option directive is FollowSymLinks.",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "grep -A 250 '' @HTTPD_CONF_LOCATION@ | grep -B 250 -m 1 '' | grep -P '^[\\\\s]*[Oo]ptions[\\\\s]+'",
        "expect": "[\\\\s]*[Oo]ptions[\\\\s]+([Nn]one|[Mm]ulti[Vv]iews)*$"
    },
    "custom_item_46": {
        "system": "Linux",
        "description": "5.3 Ensure Options for Other Directories Are Minimized",
        "info": "The Apache Options directive allows for specific configuration of options, including execution of CGI, following symbolic links, server side includes, and content negotiation.\n\nRationale:\n\nLikewise, the options for other directories and hosts needs to be restricted to the minimal options required. A setting of None is recommended, however it is recognized that other options may be needed in some cases:\n\nMultiviews - Is appropriate if content negotiation is required, such as when multiple languages are supported.\n\nExecCGI - Is only appropriate for special directories dedicated to executable content such as a cgi-bin/ directory. That way you will know what is executed on the server. It is possible to enable CGI script execution based on file extension or permission settings, however this makes script control and management almost impossible as developers may install scripts without your knowledge. This may become a factor in a hosting environment.\n\nFollowSymLinks & SymLinksIfOwnerMatch - The following of symbolic links is not recommended and should be disabled if possible. The usage of symbolic links opens up additional risk for possible attacks that may use inappropriate symbolic links to access content outside of the document root of the web server. Also consider that it could be combined with a vulnerability that allowed an attacker or insider to create an inappropriate link. The option SymLinksIfOwnerMatch is much safer in that the ownership must match in order for the link to be used, however keep in mind there is additional overhead created by requiring Apache to check the ownership.\n\nIncludes & IncludesNOEXEC - The IncludesNOEXEC option should only be needed when server side includes are required. The full Includes option should not be used as it also allows execution of arbitrary shell commands. See Apache Mod Include for details https://httpd.apache.org/docs/2.4/mod/mod_include.html\n\nIndexes - The Indexes option causes automatic generation of indexes, if the default index page is missing, and should be disabled unless required.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files (httpd.conf and any included configuration files) to find allelements.\n\nAdd or modify any existing Options directive to NOT have a value of Includes. Other options may be set if necessary and appropriate as described above.",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.7,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*[Oo]ptions[\\\\s]+' | /usr/bin/grep -P -v '[\\\\s]*[Ii]ncludes[N]o[Ee]xec' | /usr/bin/grep -P '[\\\\s]*[Ii]ncludes' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_47": {
        "system": "Linux",
        "description": "5.4 Ensure Default HTML Content Is Removed - 'httpd-manual is not installed'",
        "info": "Apache installations have default content that is not needed or appropriate for production use. The primary function for this sample content is to provide a default web site, provide user manuals or to demonstrate special features of the web server. All content that is not needed should be removed.\n\nRationale:\n\nHistorically these sample content and features have been remotely exploited and can provide different levels of access to the server. In the Microsoft arena, Code Red exploited a problem with the index service provided by the Internet Information Service. Usually these routines are not written for production use and consequently little thought was given to security in their development.",
        "solution": "Review all pre-installed content and remove content which is not required. In particular look for the unnecessary content which may be found in the document root directory, a configuration directory such as conf/extra directory, or as a Unix/Linux package.\n\nRemove the default index.html or welcome page if it is a separate package. If it is part of main Apache httpd package such as it is on Red Hat Linux, then comment out the configuration as shown below. Removing a file such as the welcome.conf, is not recommended as it may get replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n####     Options -Indexes\n##     ErrorDocument 403 /error/noindex.html\n##Remove the Apache user manual content or comment out configurations referencing the manual\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration.\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any Server Information handler configuration.\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-info\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status.\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler perl-script\n##     PerlResponseHandler Apache2::Status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Default Value:\n\nThe default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the include of conf/extra/proxy-html.conf is not commented out in the httpd.conf.\n\n# Server-pool management (MPM specific)\n\n#Include conf/extra/httpd-mpm.conf\n\n# Multi-language error messages\n\n#Include conf/extra/httpd-multilang-errordoc.conf\n\n# Fancy directory listings\n\n#Include conf/extra/httpd-autoindex.conf\n\n# Language settings\n\n#Include conf/extra/httpd-languages.conf\n\n# User home directories\n\n#Include conf/extra/httpd-userdir.conf\n\n# Real-time info on requests and configuration\n\n#Include conf/extra/httpd-info.conf\n\n# Virtual hosts\n\n#Include conf/extra/httpd-vhosts.conf\n\n# Local access to the Apache HTTP Server Manual\n\n#Include conf/extra/httpd-manual.conf\n\n# Distributed authoring and versioning (WebDAV)\n\n#Include conf/extra/httpd-dav.conf\n\n# Various default settings\n\n#Include conf/extra/httpd-default.conf\n\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n\n#Include conf/extra/httpd-ssl.conf\n\nAlso, the only other default content is a minimal barebones index.html in the document root which contains.It works!",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|7.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "rpm": "httpd-manual-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_48": {
        "system": "Linux",
        "description": "5.4 Ensure Default HTML Content Is Removed - 'Server Status handler does not exist'",
        "info": "Apache installations have default content that is not needed or appropriate for production use. The primary function for this sample content is to provide a default web site, provide user manuals or to demonstrate special features of the web server. All content that is not needed should be removed.\n\nRationale:\n\nHistorically these sample content and features have been remotely exploited and can provide different levels of access to the server. In the Microsoft arena, Code Red exploited a problem with the index service provided by the Internet Information Service. Usually these routines are not written for production use and consequently little thought was given to security in their development.",
        "solution": "Review all pre-installed content and remove content which is not required. In particular look for the unnecessary content which may be found in the document root directory, a configuration directory such as conf/extra directory, or as a Unix/Linux package.\n\nRemove the default index.html or welcome page if it is a separate package. If it is part of main Apache httpd package such as it is on Red Hat Linux, then comment out the configuration as shown below. Removing a file such as the welcome.conf, is not recommended as it may get replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n####     Options -Indexes\n##     ErrorDocument 403 /error/noindex.html\n##Remove the Apache user manual content or comment out configurations referencing the manual\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration.\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any Server Information handler configuration.\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-info\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status.\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler perl-script\n##     PerlResponseHandler Apache2::Status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Default Value:\n\nThe default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the include of conf/extra/proxy-html.conf is not commented out in the httpd.conf.\n\n# Server-pool management (MPM specific)\n\n#Include conf/extra/httpd-mpm.conf\n\n# Multi-language error messages\n\n#Include conf/extra/httpd-multilang-errordoc.conf\n\n# Fancy directory listings\n\n#Include conf/extra/httpd-autoindex.conf\n\n# Language settings\n\n#Include conf/extra/httpd-languages.conf\n\n# User home directories\n\n#Include conf/extra/httpd-userdir.conf\n\n# Real-time info on requests and configuration\n\n#Include conf/extra/httpd-info.conf\n\n# Virtual hosts\n\n#Include conf/extra/httpd-vhosts.conf\n\n# Local access to the Apache HTTP Server Manual\n\n#Include conf/extra/httpd-manual.conf\n\n# Distributed authoring and versioning (WebDAV)\n\n#Include conf/extra/httpd-dav.conf\n\n# Various default settings\n\n#Include conf/extra/httpd-default.conf\n\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n\n#Include conf/extra/httpd-ssl.conf\n\nAlso, the only other default content is a minimal barebones index.html in the document root which contains.It works!",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|7.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[\\\\s]*",
        "expect": "^[\\\\s]*[\\\\s]*"
    },
    "custom_item_49": {
        "system": "Linux",
        "description": "5.4 Ensure Default HTML Content Is Removed - 'Server Information handler does not exist'",
        "info": "Apache installations have default content that is not needed or appropriate for production use. The primary function for this sample content is to provide a default web site, provide user manuals or to demonstrate special features of the web server. All content that is not needed should be removed.\n\nRationale:\n\nHistorically these sample content and features have been remotely exploited and can provide different levels of access to the server. In the Microsoft arena, Code Red exploited a problem with the index service provided by the Internet Information Service. Usually these routines are not written for production use and consequently little thought was given to security in their development.",
        "solution": "Review all pre-installed content and remove content which is not required. In particular look for the unnecessary content which may be found in the document root directory, a configuration directory such as conf/extra directory, or as a Unix/Linux package.\n\nRemove the default index.html or welcome page if it is a separate package. If it is part of main Apache httpd package such as it is on Red Hat Linux, then comment out the configuration as shown below. Removing a file such as the welcome.conf, is not recommended as it may get replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n####     Options -Indexes\n##     ErrorDocument 403 /error/noindex.html\n##Remove the Apache user manual content or comment out configurations referencing the manual\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration.\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any Server Information handler configuration.\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-info\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status.\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler perl-script\n##     PerlResponseHandler Apache2::Status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Default Value:\n\nThe default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the include of conf/extra/proxy-html.conf is not commented out in the httpd.conf.\n\n# Server-pool management (MPM specific)\n\n#Include conf/extra/httpd-mpm.conf\n\n# Multi-language error messages\n\n#Include conf/extra/httpd-multilang-errordoc.conf\n\n# Fancy directory listings\n\n#Include conf/extra/httpd-autoindex.conf\n\n# Language settings\n\n#Include conf/extra/httpd-languages.conf\n\n# User home directories\n\n#Include conf/extra/httpd-userdir.conf\n\n# Real-time info on requests and configuration\n\n#Include conf/extra/httpd-info.conf\n\n# Virtual hosts\n\n#Include conf/extra/httpd-vhosts.conf\n\n# Local access to the Apache HTTP Server Manual\n\n#Include conf/extra/httpd-manual.conf\n\n# Distributed authoring and versioning (WebDAV)\n\n#Include conf/extra/httpd-dav.conf\n\n# Various default settings\n\n#Include conf/extra/httpd-default.conf\n\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n\n#Include conf/extra/httpd-ssl.conf\n\nAlso, the only other default content is a minimal barebones index.html in the document root which contains.It works!",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|7.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[\\\\s]*",
        "expect": "^[\\\\s]*[\\\\s]*"
    },
    "custom_item_50": {
        "system": "Linux",
        "description": "5.4 Ensure Default HTML Content Is Removed - 'other handler does not exist'",
        "info": "Apache installations have default content that is not needed or appropriate for production use. The primary function for this sample content is to provide a default web site, provide user manuals or to demonstrate special features of the web server. All content that is not needed should be removed.\n\nRationale:\n\nHistorically these sample content and features have been remotely exploited and can provide different levels of access to the server. In the Microsoft arena, Code Red exploited a problem with the index service provided by the Internet Information Service. Usually these routines are not written for production use and consequently little thought was given to security in their development.",
        "solution": "Review all pre-installed content and remove content which is not required. In particular look for the unnecessary content which may be found in the document root directory, a configuration directory such as conf/extra directory, or as a Unix/Linux package.\n\nRemove the default index.html or welcome page if it is a separate package. If it is part of main Apache httpd package such as it is on Red Hat Linux, then comment out the configuration as shown below. Removing a file such as the welcome.conf, is not recommended as it may get replaced if the package is updated.\n\n#\n# This configuration file enables the default 'Welcome'\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n####     Options -Indexes\n##     ErrorDocument 403 /error/noindex.html\n##Remove the Apache user manual content or comment out configurations referencing the manual\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration.\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any Server Information handler configuration.\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler server-info\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Remove or comment out any other handler configuration such as perl-status.\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the '.example.com' to match your domain to enable.\n#\n####     SetHandler perl-script\n##     PerlResponseHandler Apache2::Status\n##     Order deny,allow\n##     Deny from all\n##     Allow from .example.com\n##Default Value:\n\nThe default source build provides extra content available in the /usr/local/apache2/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the include of conf/extra/proxy-html.conf is not commented out in the httpd.conf.\n\n# Server-pool management (MPM specific)\n\n#Include conf/extra/httpd-mpm.conf\n\n# Multi-language error messages\n\n#Include conf/extra/httpd-multilang-errordoc.conf\n\n# Fancy directory listings\n\n#Include conf/extra/httpd-autoindex.conf\n\n# Language settings\n\n#Include conf/extra/httpd-languages.conf\n\n# User home directories\n\n#Include conf/extra/httpd-userdir.conf\n\n# Real-time info on requests and configuration\n\n#Include conf/extra/httpd-info.conf\n\n# Virtual hosts\n\n#Include conf/extra/httpd-vhosts.conf\n\n# Local access to the Apache HTTP Server Manual\n\n#Include conf/extra/httpd-manual.conf\n\n# Distributed authoring and versioning (WebDAV)\n\n#Include conf/extra/httpd-dav.conf\n\n# Various default settings\n\n#Include conf/extra/httpd-default.conf\n\n# Configure mod_proxy_html to understand HTML4/XHTML1Include conf/extra/proxy-html.conf# Secure (SSL/TLS) connections\n\n#Include conf/extra/httpd-ssl.conf\n\nAlso, the only other default content is a minimal barebones index.html in the document root which contains.It works!",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|7.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[\\\\s]*",
        "expect": "^[\\\\s]*[\\\\s]*"
    },
    "custom_item_51": {
        "system": "Linux",
        "description": "5.5 Ensure the Default CGI Content printenv Script Is Removed",
        "info": "Most Web Servers, including Apache installations have default CGI content which is not needed or appropriate for production use. The primary function for these sample programs is to demonstrate the capabilities of the web server. One common default CGI content for Apache installations is the script printenv. This script will print back to the requester all of the CGI environment variables which includes many server configuration details and system paths.\n\nRationale:\n\nCGI programs have a long history of security bugs and problems associated with improperly accepting user-input. Since these programs are often targets of attackers, we need to make sure that there are no unnecessary CGI programs that could potentially be used for malicious purposes. Usually these programs are not written for production use and consequently little thought was given to security in their development. The printenv script in particular will disclose inappropriate information about the web server including directory paths and detailed version and configuration information.",
        "solution": "Perform the following to implement the recommended state:\n\nLocate cgi-bin files and directories enabled in the Apache configuration via Script, ScriptAlias, ScriptAliasMatch, or ScriptInterpreterSource directives.\n\nRemove the printenvdefault CGI in cgi-bin directory if it is installed.\n\n# rm $APACHE_PREFIX/cgi-bin/printenv\n\nDefault Value:\n\nThe default source installation includes the printenv script. However, this script is not executable by default.",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|7.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@CGI_BIN@/printenv"
    },
    "custom_item_52": {
        "system": "Linux",
        "description": "5.6 Ensure the Default CGI Content test-cgi Script Is Removed",
        "info": "Most Web Servers, including Apache installations have default CGI content which is not needed or appropriate for production use. The primary function for these sample programs is to demonstrate the capabilities of the web server. A common default CGI content for Apache installations is the script test-cgi. This script will print back to the requester CGI environment variables which includes many server configuration details.\n\nRationale:\n\nCGI programs have a long history of security bugs and problems associated with improperly accepting user-input. Since these programs are often targets of attackers, we need to make sure that there are no unnecessary CGI programs that could potentially be used for malicious purposes. Usually these programs are not written for production use and consequently little thought was given to security in their development. The test-cgi script in particular will disclose inappropriate information about the web server including directory paths and detailed version and configuration information.",
        "solution": "Perform the following to implement the recommended state:\n\nLocate cgi-bin files and directories enabled in the Apache configuration via Script, ScriptAlias, ScriptAliasMatch, or ScriptInterpreterSource directives.\n\nRemove the test-cgi default CGI in cgi-bin directory if it is installed.\n\n# rm $APACHE_PREFIX/cgi-bin/test-cgi\n\nDefault Value:\n\nThe default source installation includes the test-cgi script. However, this script is not executable by default.",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|4.7,CSCv7|7.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@CGI_BIN@/test-cgi"
    },
    "custom_item_53": {
        "system": "Linux",
        "description": "5.7 Ensure HTTP Request Methods Are Restricted",
        "info": "Use the Apachedirective to restrict unnecessary HTTP request methods of the web server to only accept and process the GET, HEAD, POST and OPTIONS HTTP request methods.\n\nRationale:\n\nThe HTTP 1.1 protocol supports several request methods which are rarely used and potentially high risk. For example, methods such as PUT and DELETE are rarely used and should be disabled in keeping with the primary security principal of minimize features and options. Also since the usage of these methods is typically to modify resources on the web server, they should be explicitly disallowed. For normal web server operation, you will typically need to allow only the GET, HEAD and POST request methods. This will allow for downloading of web pages and submitting information to web forms. The OPTIONS request method will also be allowed as it used to request which HTTP request methods are allowed. Unfortunately, the Apachedirective does not deny the TRACE request method. The TRACE request method will be disallowed in another benchmark recommendation with the TraceEnable directive.",
        "solution": "Perform the following to implement the recommended state:\n\nLocate the Apache configuration files and included configuration files.\n\nSearch for the directive on the document root directory such as:. . .Add a directive as shown below within the group of document root directives.\n\n# Limit HTTP methods to standard methods. Note: Does not limit TRACERequire all deniedSearch for other directives in the Apache configuration files other than the OS root directory and add the same directives to each. It is very important to understand that the directives are based on the OS file system hierarchy as accessed by Apache and not the hierarchy of the locations within web site URLs.. . .\n    # Limit HTTP methodsRequire all deniedor use the experimental AllowMethods module\n\nLocate the Apache configuration files and included configuration files.\n\nSearch for the directive 'AllowMethods' on the document root directory such as:. . .Add a directive as shown below within the group of document root directives.\n\nLoadModule allowmethods_module modules/mod_allowmethods.so#other directives\nAllowMethods GET POST OPTIONS4. Search for other directives in the Apache configuration files other than the OS root directory and add the same directives to each. It is very important to understand that the directives are based on the OS file system hierarchy as accessed by Apache and not the hierarchy of the locations within web site URLs.\n\nLoadModule allowmethods_module modules/mod_allowmethods.so#other directives\nAllowMethods GET POST OPTIONSDefault Value:\n\nNo Limits on HTTP methods.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "grep -A 250 '' @HTTPD_CONF_LOCATION@ | grep -B 250 -m 1 '' | grep -P '^[\\\\s]*Require[\\\\s]+'",
        "expect": "^[\\\\s]*Require[\\\\s]+[Aa]ll[\\\\s]*[Dd]enied[\\\\s]*"
    },
    "custom_item_54": {
        "system": "Linux",
        "description": "5.8 Ensure the HTTP TRACE Method Is Disabled",
        "info": "Use the Apache TraceEnable directive to disable the HTTP TRACE request method.\n\nRationale:\n\nThe HTTP 1.1 protocol requires support for the TRACE request method which reflects the request back as a response and was intended for diagnostics purposes. The TRACE method is not needed and is easily subjected to abuse and should be disabled.",
        "solution": "Perform the following to implement the recommended state:\n\nLocate the main Apache configuration file such as httpd.conf.\n\nAdd a TraceEnable directive to the server level configuration with a value of off. Server level configuration is the top-level configuration, not nested within any other directives likeor.\n\nDefault Value:\n\nThe TRACE method is enabled.",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|4.7,CSCv7|7.2,CSCv7|9.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Tt]race[Ee]nable[\\\\s]*",
        "expect": "^[\\\\s]*[Tt]race[Ee]nable[\\\\s]+[Oo][Ff][Ff][\\\\s]*$"
    },
    "custom_item_55": {
        "description": "5.9 Check for Apache Rewrite module",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep 'rewrite_module'",
        "expect": "^[\\\\s]*rewrite_module[\\\\s]*\\\\((shared|static)\\\\)[\\\\s]*$"
    },
    "custom_item_56": {
        "description": "5.9 Ensure Old HTTP Protocol Versions Are Disallowed - 'RewriteEngine on'",
        "info": "The Apache modules mod_rewrite or mod_security can be used to disallow old and invalid HTTP protocols versions. The HTTP version 1.1 RFC is dated June 1999 and has been supported by Apache since version 1.2. It should no longer be necessary to allow ancient versions of HTTP such as 1.0 and prior.\n\nRationale:\n\nMany malicious automated programs, vulnerability scanners and fingerprinting tools will send abnormal HTTP protocol versions to see how the web server responds. These requests are usually part of the attacker's enumeration process and therefore it is important that we respond by denying these requests.",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_rewrite module for Apache by doing either one of the following:\n\nBuild Apache with mod_rewrite statically loaded during the build, by adding the --enable-rewrite option to the ./configure script.\n\n./configure --enable-rewrite.\n\nOr, dynamically loading the module with the LoadModule directive in the httpd.conf configuration file.\n\nLoadModule rewrite_module modules/mod_rewrite.so\n\nLocate the main Apache configuration file such as httpd.conf and add the following rewrite condition to match HTTP/1.1 and the rewrite rule to the global server level configuration to disallow other protocol versions.\n\nRewriteEngine On\nRewriteCond %{THE_REQUEST} !HTTP/1\\.1$\nRewriteRule .* - [F]\n\nBy default, mod_rewrite configuration settings from the main server context are not inherited by virtual hosts. Therefore, it is also necessary to add the following directives in each section to inherit the main server settings.\n\nRewriteEngine On\nRewriteOptions Inherit\n\nDefault Value:\n\nThe default value for the RewriteEngine directive is off.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]ewrite[Ee]ngine[\\\\s]*",
        "expect": "^[\\\\s]*[Rr]ewrite[Ee]ngine[\\\\s]+[Oo][Nn][\\\\s]*"
    },
    "custom_item_57": {
        "description": "5.9 Ensure Old HTTP Protocol Versions Are Disallowed - 'httpd.conf RewriteCond = %{THE_REQUEST} !HTTP/1\\.1$'",
        "info": "The Apache modules mod_rewrite or mod_security can be used to disallow old and invalid HTTP protocols versions. The HTTP version 1.1 RFC is dated June 1999 and has been supported by Apache since version 1.2. It should no longer be necessary to allow ancient versions of HTTP such as 1.0 and prior.\n\nRationale:\n\nMany malicious automated programs, vulnerability scanners and fingerprinting tools will send abnormal HTTP protocol versions to see how the web server responds. These requests are usually part of the attacker's enumeration process and therefore it is important that we respond by denying these requests.",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_rewrite module for Apache by doing either one of the following:\n\nBuild Apache with mod_rewrite statically loaded during the build, by adding the --enable-rewrite option to the ./configure script.\n\n./configure --enable-rewrite.\n\nOr, dynamically loading the module with the LoadModule directive in the httpd.conf configuration file.\n\nLoadModule rewrite_module modules/mod_rewrite.so\n\nLocate the main Apache configuration file such as httpd.conf and add the following rewrite condition to match HTTP/1.1 and the rewrite rule to the global server level configuration to disallow other protocol versions.\n\nRewriteEngine On\nRewriteCond %{THE_REQUEST} !HTTP/1\\.1$\nRewriteRule .* - [F]\n\nBy default, mod_rewrite configuration settings from the main server context are not inherited by virtual hosts. Therefore, it is also necessary to add the following directives in each section to inherit the main server settings.\n\nRewriteEngine On\nRewriteOptions Inherit\n\nDefault Value:\n\nThe default value for the RewriteEngine directive is off.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]ewrite[Cc]ond[\\\\s]+%{THE_REQUEST}[\\\\s]+!HTTP/1\\\\\\\\\\.1\\\\\\$",
        "expect": "^[\\\\s]*[Rr]ewrite[Cc]ond[\\\\s]+%{THE_REQUEST}[\\\\s]+!HTTP/1\\\\\\\\\\.1\\\\\\$"
    },
    "custom_item_58": {
        "description": "5.9 Ensure Old HTTP Protocol Versions Are Disallowed - 'RewriteRule configuration'",
        "info": "The Apache modules mod_rewrite or mod_security can be used to disallow old and invalid HTTP protocols versions. The HTTP version 1.1 RFC is dated June 1999 and has been supported by Apache since version 1.2. It should no longer be necessary to allow ancient versions of HTTP such as 1.0 and prior.\n\nRationale:\n\nMany malicious automated programs, vulnerability scanners and fingerprinting tools will send abnormal HTTP protocol versions to see how the web server responds. These requests are usually part of the attacker's enumeration process and therefore it is important that we respond by denying these requests.",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_rewrite module for Apache by doing either one of the following:\n\nBuild Apache with mod_rewrite statically loaded during the build, by adding the --enable-rewrite option to the ./configure script.\n\n./configure --enable-rewrite.\n\nOr, dynamically loading the module with the LoadModule directive in the httpd.conf configuration file.\n\nLoadModule rewrite_module modules/mod_rewrite.so\n\nLocate the main Apache configuration file such as httpd.conf and add the following rewrite condition to match HTTP/1.1 and the rewrite rule to the global server level configuration to disallow other protocol versions.\n\nRewriteEngine On\nRewriteCond %{THE_REQUEST} !HTTP/1\\.1$\nRewriteRule .* - [F]\n\nBy default, mod_rewrite configuration settings from the main server context are not inherited by virtual hosts. Therefore, it is also necessary to add the following directives in each section to inherit the main server settings.\n\nRewriteEngine On\nRewriteOptions Inherit\n\nDefault Value:\n\nThe default value for the RewriteEngine directive is off.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]ewrite[Rr]ule[\\\\s]+\\\\.\\\\*[\\\\s]+-[\\\\s]+\\\\\\[F\\\\\\][\\\\s]*",
        "expect": "^[\\\\s]*[Rr]ewrite[Rr]ule[\\\\s]+\\\\.\\\\*[\\\\s]+-[\\\\s]+\\\\\\[F\\\\\\][\\\\s]*"
    },
    "custom_item_59": {
        "description": "5.9 Ensure Old HTTP Protocol Versions Are Disallowed - 'httpd.confRewriteEngine = on'",
        "info": "The Apache modules mod_rewrite or mod_security can be used to disallow old and invalid HTTP protocols versions. The HTTP version 1.1 RFC is dated June 1999 and has been supported by Apache since version 1.2. It should no longer be necessary to allow ancient versions of HTTP such as 1.0 and prior.\n\nRationale:\n\nMany malicious automated programs, vulnerability scanners and fingerprinting tools will send abnormal HTTP protocol versions to see how the web server responds. These requests are usually part of the attacker's enumeration process and therefore it is important that we respond by denying these requests.",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_rewrite module for Apache by doing either one of the following:\n\nBuild Apache with mod_rewrite statically loaded during the build, by adding the --enable-rewrite option to the ./configure script.\n\n./configure --enable-rewrite.\n\nOr, dynamically loading the module with the LoadModule directive in the httpd.conf configuration file.\n\nLoadModule rewrite_module modules/mod_rewrite.so\n\nLocate the main Apache configuration file such as httpd.conf and add the following rewrite condition to match HTTP/1.1 and the rewrite rule to the global server level configuration to disallow other protocol versions.\n\nRewriteEngine On\nRewriteCond %{THE_REQUEST} !HTTP/1\\.1$\nRewriteRule .* - [F]\n\nBy default, mod_rewrite configuration settings from the main server context are not inherited by virtual hosts. Therefore, it is also necessary to add the following directives in each section to inherit the main server settings.\n\nRewriteEngine On\nRewriteOptions Inherit\n\nDefault Value:\n\nThe default value for the RewriteEngine directive is off.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '(description : "
    },
    "custom_item_60": {
        "description": "5.9 Ensure Old HTTP Protocol Versions Are Disallowed - 'httpd.confRewriteOptions = inherit'",
        "info": "The Apache modules mod_rewrite or mod_security can be used to disallow old and invalid HTTP protocols versions. The HTTP version 1.1 RFC is dated June 1999 and has been supported by Apache since version 1.2. It should no longer be necessary to allow ancient versions of HTTP such as 1.0 and prior.\n\nRationale:\n\nMany malicious automated programs, vulnerability scanners and fingerprinting tools will send abnormal HTTP protocol versions to see how the web server responds. These requests are usually part of the attacker's enumeration process and therefore it is important that we respond by denying these requests.",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_rewrite module for Apache by doing either one of the following:\n\nBuild Apache with mod_rewrite statically loaded during the build, by adding the --enable-rewrite option to the ./configure script.\n\n./configure --enable-rewrite.\n\nOr, dynamically loading the module with the LoadModule directive in the httpd.conf configuration file.\n\nLoadModule rewrite_module modules/mod_rewrite.so\n\nLocate the main Apache configuration file such as httpd.conf and add the following rewrite condition to match HTTP/1.1 and the rewrite rule to the global server level configuration to disallow other protocol versions.\n\nRewriteEngine On\nRewriteCond %{THE_REQUEST} !HTTP/1\\.1$\nRewriteRule .* - [F]\n\nBy default, mod_rewrite configuration settings from the main server context are not inherited by virtual hosts. Therefore, it is also necessary to add the following directives in each section to inherit the main server settings.\n\nRewriteEngine On\nRewriteOptions Inherit\n\nDefault Value:\n\nThe default value for the RewriteEngine directive is off.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '(description : "
    },
    "custom_item_61": {
        "description": "5.9 Ensure Old HTTP Protocol Versions Are Disallowed - Rewrite module not loaded",
        "info": "The Apache modules mod_rewrite or mod_security can be used to disallow old and invalid HTTP protocols versions. The HTTP version 1.1 RFC is dated June 1999 and has been supported by Apache since version 1.2. It should no longer be necessary to allow ancient versions of HTTP such as 1.0 and prior.\n\nRationale:\n\nMany malicious automated programs, vulnerability scanners and fingerprinting tools will send abnormal HTTP protocol versions to see how the web server responds. These requests are usually part of the attacker's enumeration process and therefore it is important that we respond by denying these requests.",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_rewrite module for Apache by doing either one of the following:\n\nBuild Apache with mod_rewrite statically loaded during the build, by adding the --enable-rewrite option to the ./configure script.\n\n./configure --enable-rewrite.\n\nOr, dynamically loading the module with the LoadModule directive in the httpd.conf configuration file.\n\nLoadModule rewrite_module modules/mod_rewrite.so\n\nLocate the main Apache configuration file such as httpd.conf and add the following rewrite condition to match HTTP/1.1 and the rewrite rule to the global server level configuration to disallow other protocol versions.\n\nRewriteEngine On\nRewriteCond %{THE_REQUEST} !HTTP/1\\.1$\nRewriteRule .* - [F]\n\nBy default, mod_rewrite configuration settings from the main server context are not inherited by virtual hosts. Therefore, it is also necessary to add the following directives in each section to inherit the main server settings.\n\nRewriteEngine On\nRewriteOptions Inherit\n\nDefault Value:\n\nThe default value for the RewriteEngine directive is off.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep 'rewrite_module'",
        "expect": "^[\\\\s]*rewrite_module[\\\\s]*\\\\((shared|static)\\\\)[\\\\s]*$"
    },
    "custom_item_62": {
        "description": "Check for FilesMatch directive",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ | /usr/bin/awk '{print} END {if (NR > 1) print \"pass\"}'",
        "expect": "pass"
    },
    "custom_item_63": {
        "description": "Check for FilesMatch - Deny directive",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[ \t]*[Dd]eny[ \t]+'",
        "expect": "[\\\\s]*[Dd]eny[\\\\s]*"
    },
    "custom_item_64": {
        "description": "5.10 Ensure Access to .ht* Files Is Restricted",
        "info": "Restrict access to any files beginning with .ht using the FilesMatch directive.\n\nRationale:\n\nThe default name for access filename which allows files in web directories to override the Apache configuration is .htaccess. The usage of access files should not be allowed, but as a defense in depth a FilesMatch directive is recommended to prevent web clients from viewing those files in case they are created. Also a common name for web password and group files are .htpasswd and .htgroup. Neither of these files should be placed in the document root, but, in the event they are, the FilesMatch directive can be used to prevent them from being viewed by web clients.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the following lines in the Apache configuration file at the server configuration level.Require all deniedDefault Value:\n\n.ht* files are not accessible.",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|18.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/FilesMatch>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*[Dd]eny[\\\\s]+'",
        "expect": "^[\\\\s]*[Dd]eny[\\\\s]+[Ff]rom[\\\\s]+[Aa]ll[\\\\s]*$"
    },
    "custom_item_65": {
        "description": "5.10 Ensure Access to .ht* Files Is Restricted",
        "info": "Restrict access to any files beginning with .ht using the FilesMatch directive.\n\nRationale:\n\nThe default name for access filename which allows files in web directories to override the Apache configuration is .htaccess. The usage of access files should not be allowed, but as a defense in depth a FilesMatch directive is recommended to prevent web clients from viewing those files in case they are created. Also a common name for web password and group files are .htpasswd and .htgroup. Neither of these files should be placed in the document root, but, in the event they are, the FilesMatch directive can be used to prevent them from being viewed by web clients.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the following lines in the Apache configuration file at the server configuration level.Require all deniedDefault Value:\n\n.ht* files are not accessible.",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|18.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//,/<\\\\/FilesMatch>/p' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s\\\\t]*[Rr]equire[\\\\s\\\\t]+'",
        "expect": "^[\\\\s]*[Rr]equire[\\\\s]+[Aa]ll[\\\\s]*[\\\\s]*[Dd]enied[\\\\s]*$"
    },
    "custom_item_66": {
        "description": "5.11 Ensure Access to .git Files Is Restricted",
        "info": "Restrict access to any files beginning with .git using the FilesMatch directive.\n\nRationale:\n\nMore and more websites track their changes in a Git repository we see a lot of attackers search for .git directories. Access to .git directories should be restricted. These files should be placed in the document root, but, in the event they are, the FilesMatch directive can be used to prevent them from being viewed by web clients.\n\nImpact:\n\n.git files are not accessible.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the following lines in the Apache configuration file at the server configuration level.Require all deniedDefault Value:\n\nThis is not set by default",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|18.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ /dev/null | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "^[\\\\s]*([Rr]equire[\\\\s]+[Aa]ll[\\\\s]+[Dd]enied|[Dd]eny[\\\\s]+[Ff]rom[\\\\s]+[Aa]ll)[\\\\s]*$"
    },
    "custom_item_67": {
        "description": "5.12 Ensure Access to .svn Files Is Restricted",
        "info": "Restrict access to any files beginning with .svn using the FilesMatch directive.\n\nRationale:\n\nMore and more websites track their changes in a SVN repository we see a lot of attackers search for .svn directories. Access to .svn directories should be restricted. These files should be placed in the document root, but, in the event they are, the FilesMatch directive can be used to prevent them from being viewed by web clients.\n\nImpact:\n\n.svn files are not accessible.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the following lines in the Apache configuration file at the server configuration level.Require all deniedDefault Value:\n\nThis is not set by default",
        "reference": "800-171|3.4.9,800-171|3.13.13,800-53|CM-10,800-53|CM-11,800-53|SC-18,800-53r5|CM-10,800-53r5|CM-11,800-53r5|SC-18,CSCv7|18.2,CSCv8|9.4,CSF|DE.CM-3,CSF|DE.CM-5,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,ITSG-33|SC-18,LEVEL|1A,NIAv2|SU3,QCSC-v1|3.2,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/sed -n '//p' @HTTPD_CONF_LOCATION@ /dev/null | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "^[\\\\s]*([Rr]equire[\\\\s]+[Aa]ll[\\\\s]+[Dd]enied|[Dd]eny[\\\\s]+[Ff]rom[\\\\s]+[Aa]ll)[\\\\s]*$"
    },
    "custom_item_68": {
        "system": "Linux",
        "description": "6.1 Ensure the Error Log Filename and Severity Level Are Configured Correctly - 'httpd.conf LogLevel = notice info or debug'",
        "info": "The LogLevel directive is used to configure the severity level for the error logs. While the ErrorLog directive configures the error log file name. The log level values are the standard syslog levels of emerg, alert, crit, error, warn, notice, info and debug. The recommended level is notice for most modules, so that all errors from the emerg level through notice level will be logged. The recommended setting for the core module is info so that any not found requests will be included in the error logs.\n\nRationale:\n\nThe server error logs are invaluable because they can also be used to spot any potential problems before they become serious. Most importantly, they can be used to watch for anomalous behavior such as a lot of not found or unauthorized errors may be an indication that an attack is pending or has occurred. Starting with Apache 2.4 the error log does not include the not found errors except at the info logging level. Therefore, it is important that the log level be set to info for the core module. The not found requests need to be included in the error log for both forensics' investigation and host intrusion detection purposes. Monitoring the access logs may not be practical for many web servers with high volume traffic.",
        "solution": "Perform the following to implement the recommended state:\n\nAdd or modify the LogLevel in the Apache configuration to have a value of info or lower for the core module and notice or lower for all other modules. Note that is it is compliant to have a value of info or debug if there is a need for a more verbose log and the storage and monitoring processes are capable of handling the extra load. The recommended value is notice core:info.\n\nLogLevel notice core:info\n\nAdd an ErrorLog directive if not already configured. The file path may be relative or absolute, or the logs may be configured to be sent to a syslog server.\n\nErrorLog 'logs/error_log'\n\nAdd a similar ErrorLog directive for each virtual host configured if the virtual host will have different people responsible for the web site. Each responsible individual or organization needs access to their own web logs and needs the skills/training/tools for monitoring the logs.\n\nDefault Value:\n\nThe following is the default configuration:\n\nLogLevel warn\n\nErrorLog 'logs/error_log'",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ll]og[Ll]evel[\\\\s]*",
        "expect": "^[\\\\s]*[Ll]og[Ll]evel[\\\\s]+([Nn][Oo][Tt][Ii][Cc][Ee]|[Ii][Nn][Ff][Oo]|[Dd][Ee][Bb][Uu][Gg])[\\\\s]*$"
    },
    "custom_item_69": {
        "system": "Linux",
        "description": "6.1 Ensure the Error Log Filename and Severity Level Are Configured Correctly - 'ErrorLog 'logs/error_log'",
        "info": "The LogLevel directive is used to configure the severity level for the error logs. While the ErrorLog directive configures the error log file name. The log level values are the standard syslog levels of emerg, alert, crit, error, warn, notice, info and debug. The recommended level is notice for most modules, so that all errors from the emerg level through notice level will be logged. The recommended setting for the core module is info so that any not found requests will be included in the error logs.\n\nRationale:\n\nThe server error logs are invaluable because they can also be used to spot any potential problems before they become serious. Most importantly, they can be used to watch for anomalous behavior such as a lot of not found or unauthorized errors may be an indication that an attack is pending or has occurred. Starting with Apache 2.4 the error log does not include the not found errors except at the info logging level. Therefore, it is important that the log level be set to info for the core module. The not found requests need to be included in the error log for both forensics' investigation and host intrusion detection purposes. Monitoring the access logs may not be practical for many web servers with high volume traffic.",
        "solution": "Perform the following to implement the recommended state:\n\nAdd or modify the LogLevel in the Apache configuration to have a value of info or lower for the core module and notice or lower for all other modules. Note that is it is compliant to have a value of info or debug if there is a need for a more verbose log and the storage and monitoring processes are capable of handling the extra load. The recommended value is notice core:info.\n\nLogLevel notice core:info\n\nAdd an ErrorLog directive if not already configured. The file path may be relative or absolute, or the logs may be configured to be sent to a syslog server.\n\nErrorLog 'logs/error_log'\n\nAdd a similar ErrorLog directive for each virtual host configured if the virtual host will have different people responsible for the web site. Each responsible individual or organization needs access to their own web logs and needs the skills/training/tools for monitoring the logs.\n\nDefault Value:\n\nThe following is the default configuration:\n\nLogLevel warn\n\nErrorLog 'logs/error_log'",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/grep -P -o ']*)>' @HTTPD_CONF_LOCATION@ | /bin/sort -u | /bin/sed -e 's/[<>\\\\/]//g' | /usr/bin/awk 'BEGIN { print \"{ p = 1 }\" } { print \"/^ *<\"$1\"[ >]/,/^ *<\\\\\\\\/\"$1\">/ { p = 0 }\" } END { print \"p == 1 { print }\" }' | /usr/bin/awk -f - @HTTPD_CONF_LOCATION@ | /bin/grep '^[\\\\s\\\\t]*ErrorLog.*'",
        "expect": "^[\\\\s]*[Ee]rror[Ll]og[\\\\s]*@ERROR_LOG@[\\\\s]*$"
    },
    "custom_item_70": {
        "system": "Linux",
        "description": "9.6 Ensure Timeout Limits for the Request Body is Set to 20 or Less - RequestReadTimeout",
        "info": "The RequestReadTimeout directive also allows setting timeout values for the body portion of a request. The directive provides for an initial timeout value, and a maximum timeout and minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for each N bytes received. The recommended setting is to have a maximum timeout of 20 seconds or less. The default value is body=20,MinRate=500.\n\nRationale:\n\nIt is not sufficient to timeout only on the header portion of the request, as the server will still be vulnerable to attacks like the OWASP Slow POST attack, which provide the body of the request very slowly. Therefore, the body portion of the request must have a timeout as well. A timeout of 20 seconds or less is recommended.",
        "solution": "Load the mod_requesttimeout module in the Apache configuration with the following configuration.\n\nLoadModule reqtimeout_module modules/mod_reqtimeout.so\n\nAdd a RequestReadTimeout directive similar to the one below with the maximum request body timeout value of 20 seconds or less.\n\nRequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500\n\nDefault Value:\n\nbody=20,MinRate=500",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep 'reqtimeout_module'",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+",
        "expect": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+[Hh]eader=20-(40|[1-3][0-9]),[Mm]in[Rr]ate=500[\\\\s]+[Bb]ody=(20|1[1-9]),[Mm]in[Rr]ate=500[\\\\s]*$",
        "MEDIUMsystem": "Linux",
        "owner": "root",
        "mask": "377",
        "group": "root"
    },
    "custom_item_71": {
        "system": "Linux",
        "description": "6.3 Ensure the Server Access Log Is Configured Correctly - 'httpd.conf LogFormat is configured'",
        "info": "The LogFormat directive defines a nickname for a log format and information to be included in the access log entries. The CustomLog directive specifies the log file, syslog facility or piped logging utility.\n\nRationale:\n\nThe server access logs are also invaluable for a variety of reasons. They can be used to determine what resources are being used most. Most importantly, they can be used to investigate anomalous behavior that may be an indication that an attack is pending or has occurred. If the server only logs errors, and does not log successful access, then it is very difficult to investigate incidents. You may see that the errors stop, and wonder if the attacker gave up, or was the attack successful.",
        "solution": "Perform the following to implement the recommended state:\n\nAdd or modify the LogFormat directives in the Apache configuration to use the combined' format show as shown below.\n\nLogFormat '%h %l %u %t \\'%r\\' %>s %b \\'%{Referer}i\\' \\'%{User-agent}i\\'' combined\n\nAdd or modify the CustomLog directives in the Apache configuration to use the combined format with an appropriate log file, syslog facility or piped logging utility.\n\nCustomLog log/access_log combined\n\nAdd a similar CustomLog directives for each virtual host configured if the virtual host will have different people responsible for the web site. Each responsible individual or organization needs access to their own web logs as well as the skills/training/tools for monitoring the logs.\n\nDefault Value:\n\nThe following are the default log configuration:\n\nLogFormat '%h %l %u %t \\'%r\\' %>s %b \\'%{Referer}i\\' \\'%{User-Agent}i\\' combined\n\nLogFormat '%h %l %u %t \\'%r\\' %>s %b' common\n\nCustomLog 'logs/access_log' common",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ll]og[Ff]ormat[\\\\s]+.+[\\\\s]+[Cc]ombined",
        "expect": "^[\\\\s]*[Ll]og[Ff]ormat[\\\\s]+.*(%h)? (%l)? (%u)? (%t)? .*(%r)?.*(%>s)? (%b)? .*(%{[Rr]eferer}i)?.*(%{[Uu]ser-[Aa]gent}i)?.*[Cc]ombined[\\\\s]*$"
    },
    "custom_item_72": {
        "system": "Linux",
        "description": "6.3 Ensure the Server Access Log Is Configured Correctly - 'httpd.conf CustomLog is configured'",
        "info": "The LogFormat directive defines a nickname for a log format and information to be included in the access log entries. The CustomLog directive specifies the log file, syslog facility or piped logging utility.\n\nRationale:\n\nThe server access logs are also invaluable for a variety of reasons. They can be used to determine what resources are being used most. Most importantly, they can be used to investigate anomalous behavior that may be an indication that an attack is pending or has occurred. If the server only logs errors, and does not log successful access, then it is very difficult to investigate incidents. You may see that the errors stop, and wonder if the attacker gave up, or was the attack successful.",
        "solution": "Perform the following to implement the recommended state:\n\nAdd or modify the LogFormat directives in the Apache configuration to use the combined' format show as shown below.\n\nLogFormat '%h %l %u %t \\'%r\\' %>s %b \\'%{Referer}i\\' \\'%{User-agent}i\\'' combined\n\nAdd or modify the CustomLog directives in the Apache configuration to use the combined format with an appropriate log file, syslog facility or piped logging utility.\n\nCustomLog log/access_log combined\n\nAdd a similar CustomLog directives for each virtual host configured if the virtual host will have different people responsible for the web site. Each responsible individual or organization needs access to their own web logs as well as the skills/training/tools for monitoring the logs.\n\nDefault Value:\n\nThe following are the default log configuration:\n\nLogFormat '%h %l %u %t \\'%r\\' %>s %b \\'%{Referer}i\\' \\'%{User-Agent}i\\' combined\n\nLogFormat '%h %l %u %t \\'%r\\' %>s %b' common\n\nCustomLog 'logs/access_log' common",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/grep -P -o ']*)>' @HTTPD_CONF_LOCATION@ | /usr/bin/sort -u | /usr/bin/sed -e 's/[<>\\\\/]//g' | /usr/bin/awk 'BEGIN { print \"{ p = 1 }\" } { print \"/^ *<\"$1\"[ >]/,/^ *<\\\\\\\\/\"$1\">/ { p = 0 }\" } END { print \"p == 1 { print }\" }' | /usr/bin/awk -f - @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P '^[\\\\s]*[Cc]ustom[Ll]og[\\\\s]*'",
        "expect": "^[\\\\s]*[Cc]ustom[Ll]og[\\\\s]*\"?@CUSTOM_LOG@\"?[\\\\s]+[Cc]ombined[\\\\s]*$"
    },
    "custom_item_73": {
        "system": "Linux",
        "description": "6.4 Ensure Log Storage and Rotation Is Configured Correctly - '/etc/logrotate.conf rotate log files = weekly'",
        "info": "It is important that there is adequate disk space on the partition that will hold all the log files, and that log rotation is configured to retain at least 3 months or 13 weeks if central logging is not used for storage.\n\nRationale:\n\nKeep in mind that the generation of logs is under a potential attacker's control. So, do not hold any Apache log files on the root partition of the OS. This could result in a denial of service against your web server host by filling up the root partition and causing the system to crash. For this reason, it is recommended that the log files should be stored on a dedicated partition. Likewise consider that attackers sometimes put information into your logs which is intended to attack your log collection or log analysis processing software. So, it is important that they are not vulnerable. Investigation of incidents often require access to several months or more of logs, which is why it is important to keep at least 3 months available. Two common log rotation utilities include rotatelogs(8) which is bundled with Apache, and logrotate(8) commonly bundled on Linux distributions are described in the remediation section.",
        "solution": "To implement the recommended state, do either option 'a' if using the Linux logrotate utility or option 'b' if using a piped logging utility such as the Apache rotatelogs:\na) File Logging with Logrotate:\n\nAdd or modify the web log rotation configuration to match your configured log files in /etc/logrotate.d/httpd to be similar to the following.\n\n/var/log/httpd/*log {\n    missingok\n    notifempty\n    sharedscripts\n    postrotate\n    /bin/kill -HUP 'cat /var/run/httpd.pid 2>/dev/null' 2> /dev/null || true\n    endscript\n}\n\nModify the rotation period and number of logs to keep so that at least 13 weeks or 3 months of logs are retained. This may be done as the default value for all logs in /etc/logrotate.conf or in the web specific log rotation configuration in /etc/logrotate.d/httpdto be similar to the following.\n\n# rotate log files weekly\nweekly\n# keep 13 weeks of backlogs\nrotate 13\n\nFor each virtual host configured with its own log files ensure that those log files are also included in a similar log rotation.\n\nb) Piped Logging:\n\nConfigure the log rotation interval and log file names to a suitable interval such as daily.\n\nCustomLog '|bin/rotatelogs -l /var/logs/logfile.%Y.%m.%d 86400' combined\n\nEnsure the log file naming and any rotation scripts provide for retaining at least 3 months or 13 weeks of log files.\n\nFor each virtual host configured with its own log files ensure that those log files are also included in a similar log rotation.\n\nDefault Value:\n\nThe following is the default httpd log rotation configuration in /etc/logrotate.d/httpd:\n\n/var/log/httpd/*log {\n\n    missingok\n\n    notifempty\n\n    sharedscripts\n\n    postrotate\n\n    /bin/kill -HUP 'cat /var/run/httpd.pid 2>/dev/null' 2> /dev/null || true\n\n    endscript\n\n}\n\nThe default log retention configured in /etc/logrotate.conf:\n\n# rotate log files weekly\n\nweekly\n\n# keep 4 weeks worth of backlogs\n\nrotate 4",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "/etc/logrotate.conf",
        "regex": "^[\\\\s]*[Ww]eekly[\\\\s]*$",
        "expect": "^[\\\\s]*[Ww]eekly[\\\\s]*$"
    },
    "custom_item_74": {
        "system": "Linux",
        "description": "6.4 Ensure Log Storage and Rotation Is Configured Correctly - '/etc/logrotate.conf rotate > 52'",
        "info": "It is important that there is adequate disk space on the partition that will hold all the log files, and that log rotation is configured to retain at least 3 months or 13 weeks if central logging is not used for storage.\n\nRationale:\n\nKeep in mind that the generation of logs is under a potential attacker's control. So, do not hold any Apache log files on the root partition of the OS. This could result in a denial of service against your web server host by filling up the root partition and causing the system to crash. For this reason, it is recommended that the log files should be stored on a dedicated partition. Likewise consider that attackers sometimes put information into your logs which is intended to attack your log collection or log analysis processing software. So, it is important that they are not vulnerable. Investigation of incidents often require access to several months or more of logs, which is why it is important to keep at least 3 months available. Two common log rotation utilities include rotatelogs(8) which is bundled with Apache, and logrotate(8) commonly bundled on Linux distributions are described in the remediation section.",
        "solution": "To implement the recommended state, do either option 'a' if using the Linux logrotate utility or option 'b' if using a piped logging utility such as the Apache rotatelogs:\na) File Logging with Logrotate:\n\nAdd or modify the web log rotation configuration to match your configured log files in /etc/logrotate.d/httpd to be similar to the following.\n\n/var/log/httpd/*log {\n    missingok\n    notifempty\n    sharedscripts\n    postrotate\n    /bin/kill -HUP 'cat /var/run/httpd.pid 2>/dev/null' 2> /dev/null || true\n    endscript\n}\n\nModify the rotation period and number of logs to keep so that at least 13 weeks or 3 months of logs are retained. This may be done as the default value for all logs in /etc/logrotate.conf or in the web specific log rotation configuration in /etc/logrotate.d/httpdto be similar to the following.\n\n# rotate log files weekly\nweekly\n# keep 13 weeks of backlogs\nrotate 13\n\nFor each virtual host configured with its own log files ensure that those log files are also included in a similar log rotation.\n\nb) Piped Logging:\n\nConfigure the log rotation interval and log file names to a suitable interval such as daily.\n\nCustomLog '|bin/rotatelogs -l /var/logs/logfile.%Y.%m.%d 86400' combined\n\nEnsure the log file naming and any rotation scripts provide for retaining at least 3 months or 13 weeks of log files.\n\nFor each virtual host configured with its own log files ensure that those log files are also included in a similar log rotation.\n\nDefault Value:\n\nThe following is the default httpd log rotation configuration in /etc/logrotate.d/httpd:\n\n/var/log/httpd/*log {\n\n    missingok\n\n    notifempty\n\n    sharedscripts\n\n    postrotate\n\n    /bin/kill -HUP 'cat /var/run/httpd.pid 2>/dev/null' 2> /dev/null || true\n\n    endscript\n\n}\n\nThe default log retention configured in /etc/logrotate.conf:\n\n# rotate log files weekly\n\nweekly\n\n# keep 4 weeks worth of backlogs\n\nrotate 4",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "/etc/logrotate.conf",
        "regex": "^[\\\\s]*[Rr]otate[\\\\s]+",
        "expect": "^[\\\\s]*[Rr]otate[\\\\s]+([1-9][3-9]|[1-9][0-9][0-9]+)"
    },
    "custom_item_75": {
        "description": "6.5 Ensure Applicable Patches Are Applied",
        "info": "Apply available Apache patches within 1 month of availability.\n\nRationale:\n\nObviously knowing about newly discovered vulnerabilities is only part of the solution; there needs to be a process in place where patches are tested and installed. These patches fix diverse problems, including security issues. It is recommended to use the Apache packages and updates provided by the Linux platform vendor rather than building from source when possible, in order to minimize the disruption and the work of keeping the software up-to-date.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Update to the latest Apache release available according to either of the following:\n\nWhen building from source:\n\nRead release notes and related security patch information\n\nDownload latest source and any dependent modules such as mod_security.\n\nBuild new Apache software according to your build process with the same configuration options.\n\nInstall and test the new software according to your organization's testing process.\n\nMove to production according to your organization's deployment process.\n\nWhen using platform packages:\n\nRead release notes and related security patch information\n\nDownload and install latest available Apache package and any dependent software.\n\nTest the new software according to your organization's testing process.\n\nMove to production according to your organization's deployment process.\n\nDefault Value:\n\nNot Applicable",
        "reference": "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|18.4,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1A,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -V",
        "expect": "Manual Review Required"
    },
    "custom_item_76": {
        "system": "Linux",
        "description": "7.1 Ensure mod_ssl and/or mod_nss Is Installed - 'mod_ssl is loaded'",
        "info": "Secure Sockets Layer (SSL) was developed by Netscape and turned into an open standard and was renamed Transport Layer Security (TLS) as part of the process. TLS is important for protecting communication and can provide authentication of the server and even the client. However, contrary to vendor claims, implementing SSL does NOT directly make your web server more secure! SSL is used to encrypt traffic and therefore does provide confidentiality of private information and users credentials. Keep in mind, however that just because you have encrypted the data in transit does not mean that the data provided by the client is secure while it is on the server. Also, SSL does not protect the web server, as attackers will easily target SSL-Enabled web servers, and the attack will be hidden in the encrypted channel.\n\nThe mod_ssl module is the standard, most used module that implements SSL/TLS for Apache. A newer module found on Red Hat systems can be a compliment or replacement for mod_ssl and provides the same functionality plus additional security services. The mod_nss is an Apache module implementation of the Network Security Services (NSS) software from Mozilla, which implements a wide range of cryptographic functions in addition to TLS.\n\nRationale:\n\nIt is best to plan for SSL/TLS implementation from the beginning of any new web server. As most web servers have some need for SSL/TLS due to:\n\nNon-public information submitted that should be protected as it's transmitted to the web server.\n\nNon-public information that is downloaded from the web server.\n\nUsers are going to be authenticated to some portion of the web server\n\nThere is a need to authenticate the web server to ensure users that they have reached the real web server and have not been phished or redirected to a bogus site.",
        "solution": "Perform either of the following to implement the recommended state:\n\nFor Apache installations built from the source, use the option --with-ssl= to specify the openssl path, and the --enable-ssl configure option to add the SSL modules to the build. The --with-included-apr configure option may be necessary if there are conflicts with the platform version. If a new version of Openssl is needed it may be downloaded from http://www.openssl.org/ See the Apache documentation on building from source http://httpd.apache.org/docs/2.4/install.htmlfor details.\n\n# ./configure --with-included-apr --with-ssl=$OPENSSL_DIR --enable-ssl\n\nFor installations using OS packages, it is typically just a matter of ensuring the mod_ssl package is installed. The mod_nss package might also be installed. The following yum commands are suitable for Red Hat Linux.\n\n# yum install mod_ssl\n\nDefault Value:\n\nSSL/TLS is not enabled by default.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /usr/bin/grep -P '(ssl|nss)_module'",
        "expect": "^[\\\\s]*(ssl|nss)_module[\\\\s]*\\\\((shared|static)\\\\)[\\\\s]*$"
    },
    "custom_item_77": {
        "system": "Linux",
        "description": "7.2 Ensure a Valid Trusted Certificate Is Installed",
        "info": "The default SSL certificate is self-signed and is not trusted. Install a valid certificate signed by a commonly trusted certificate authority. To be valid, the certificate must be:\n\nSigned by a trusted certificate authority\n\nNot be expired, and\n\nHave a common name that matches the host name of the web server, such as www.example.com.\n\nNote: Some previously 'Trusted' Certificate Authority certificates had been signed with a weak hash algorithm such as MD5, or SHA1. These signature algorithms are known to be vulnerable to collision attacks. Note that it's not the just the signature on the server's certificate, but any signature up the certificate chain. Such CA certificates are considered no longer trusted as of January 1, 2017.\n\nRationale:\n\nA digital certificate on your server automatically communicates your site's authenticity to visitors' web browsers. If a trusted authority signs your certificate, it confirms for the visitor they are actually communicating with you, and not with a fraudulent site stealing credit card numbers or personal information.",
        "solution": "Perform the following to implement the recommended state:\n\nDecide on the host name to be used for the certificate. It is important to remember that the browser will compare the host name in the URL to the common name in the certificate, so that it is important that all https: URL's match the correct host name. Specifically, the host name www.example.com is not the same as example.com nor the same as ssl.example.com.\n\nGenerate a private key using openssl. Although certificate key lengths of 1024 have been common in the past, a key length of 2048 is now recommended for strong authentication. The key must be kept confidential and will be encrypted with a passphrase by default. Follow the steps below and respond to the prompts for a passphrase. See the Apache or OpenSSL documentation for details:\n\n\nhttps://httpd.apache.org/docs/2.4/ssl/ssl_faq.html#realcert\n\n\nhttps://www.openssl.org/docs/HOWTO/certificates.txt\n\n# cd /etc/ssl/certs\n# umask 077\n# openssl genrsa -aes128 2048 > example.com.key\nGenerating RSA private key, 2048 bit long modulus\n...+++\n............+++\ne is 65537 (0x10001)\nEnter pass phrase:\nVerifying - Enter pass phrase:\n\nCreate a certificate specific template configuration file. It is important that common name in the certificate exactly make the web host name in the intended URL. If there are multiple host names which may be used, as is very common, then the subjectAltName (SAN) field should be filled with all of the alternate names. Creating a template configuration file specific to the server certificate is helpful, as it allows for multiple entries in the subjectAltName. Also, any typos in the CSR can be potentially costly due to the lost time, so using a file, rather than hand typing helps prevent errors. To create a template configuration file, make a local copy of the openssl.cnf typically found in /etc/ssl/ or /etc/pki/tls/\n\n# cp /etc/ssl/openssl.cnf ex1.cnf\n\nFind the request section which follows the line '[ req ] '. Then add or modify the configuration file to include the appropriate values for the host names. It is recommended (but not required) that the first subjectAltName match the commonName.\n\n[ req ]\n. . .\ndistinguished_name = req_distinguished_name\nreq_extensions = req_ext\n\n[ req_ext ]\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = www.example.com\nDNS.2 = example.com\nDNS.3 = app.example.com\nDNS.4 = service.example.com\n\nContinue editing the configuration file under the request distinguished name section to change the existing default values in the configuration file to match the desired certificates information.\n\n[ req_distinguished_name ]\ncountryName_default             = GB\nstateOrProvinceName_default     = Scotland\nlocalityName_default            = Glasgow\n0.organizationName_default      = Example Company Ltd\norganizationalUnitName_default  = ICT\ncommonName_default              = www.example.com\n\nNow generate the CSR from the template file, verifying the information. If the default values were placed in the template, then just press enter to confirm the default value.\n\n# openssl req -new -config ex2.cnf -out example.com.csr -key example.com.key\nEnter pass phrase for example.com.key:\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [GB]:\nState or Province Name (full name) [Scotland]:\nLocality Name (eg, city) [Glasgow]:\nOrganization Name (eg, company) [Example Company Ltd]:\nOrganizational Unit Name (eg, section) [ICT]:\nCommon Name (e.g. server FQDN or YOUR name) [www.example.com]:\n\nReview and verify the CSR information including the SAN by displaying the information.\n\n# openssl req -in ex2.csr -text | more\n\nCertificate Request:\n    Data:\n        Version: 1 (0x0)\n        Subject: C = GB, ST = Scotland, L = Glasgow, O = Example Company Ltd, OU = ICT, CN = www.example.com\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:cb:c2:7a:04:13:19:7a:c0:74:00:63:dd:e9:6e:\n                    . . .. . .\n                    3a:9d:aa:50:09:4a:40:48:b4:e2:24:ef:fa:7b:42:\n                    a4:33\n                Exponent: 65537 (0x10001)\n        Attributes:\n        Requested Extensions:\n            X509v3 Subject Alternative Name:\n              DNS:www.example.com, DNS:example.com, DNS:app.example.com, DNS:ws.example.com\n            X509v3 Basic Constraints:\n                CA:FALSE\n            X509v3 Key Usage:\n                Digital Signature, Non Repudiation, Key Encipherment\n    Signature Algorithm: sha256WithRSAEncryption\n         73:f0:e3:90:a7:ab:01:e4:7f:12:19:b7:6a:dd:be:4e:5c:f1:\n         . . .\n\nNow move the private key to its intended directory.\n\n# mv www.example.com.key /etc/ssl/private/\n\nSend the certificate signing request (CSR) to a certificate signing authority to be signed, and follow their instructions for submission and validation. The CSR and the final signed certificate are just encoded text and need to be protected for integrity, but not confidentiality. This certificate will be given out for every SSL connection made.\n\nThe resulting signed certificate may be named www.example.com.crt and placed in /etc/ssl/certs/ as readable by all (mode 0444). Please note that the certificate authority does not need the private key (example.com.key) and this file must be carefully protected. With a decrypted copy of the private key, it would be possible to decrypt all conversations with the server.\n\nDo not forget the passphrase used to encrypt the private key. It will be required every time the server is started in https mode. If it is necessary to avoid requiring an administrator having to type the passphrase every time the httpd service is started, the private key may be stored in clear text. Storing the private key in clear text increases the convenience while increasing the risk of disclosure of the key, but may be appropriate for the sake of being able to restart, if the risks are well managed. Be sure that the key file is only readable by root. To decrypt the private key and store it in clear text file the following openssl command may be used. You can tell by the private key headers whether it is encrypted or clear text.\n\n# cd /etc/ssl/private/\n# umask 077\n# openssl rsa -in www.example.com.key -out www.example.com.key.clear\n\nLocate the Apache configuration file for mod_ssl and add or modify the SSLCertificateFile and SSLCertificateKeyFiledirectives to have the correct path for the private key and signed certificate files. If a clear text key is referenced then a passphrase will not be required. You may need to configure the CA's certificate along with any intermediate CA certificates that signed your certificate using the SSLCertificateChainFile directive. As an alternative, starting with Apache version 2.4.8 the CA and intermediate certificates may be concatenated to the server certificate configured with the SSLCertificateFile directive instead.\n\nSSLCertificateFile /etc/ssl/certs/example.com.crt\nSSLCertificateKeyFile /etc/ssl/private/example.com.key\n# Default CA file, can be replaced with your CA certificate.\nSSLCertificateChainFile /etc/ssl/certs/server-chain.crt\n\nLastly, start or restart the httpd service and verify correct functioning with your favorite browser.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/openssl verify -CAfile /etc/pki/tls/certs/ca-bundle.crt -purpose sslserver @SSL_CERT@ 2>&1 | /usr/bin/grep -P '^[Ee]rror' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_78": {
        "system": "Linux",
        "description": "7.3 Ensure the Server's Private Key Is Protected",
        "info": "It is critical to protect the server's private key. The server's private key is encrypted by default as a means of protecting it. However, having it encrypted means that the passphrase is required each time the server is started up, and now it is necessary to protect the passphrase as well. The passphrase may be typed in when it is manually started up or provided by an automated program. To summarize, the options are:\n\nUse SSLPassPhraseDialog builtin, - requires a passphrase to be manually entered.\n\nUse SSLPassPhraseDialog |/path/to/program to provide the passphrase.\n\nUse SSLPassPhraseDialog exec:/path/to/program to provide the passphrase,\n\nStore the private key in clear text so that a passphrase is not required.\n\nAny of the above options 1-4 are acceptable as long as the key and passphrase are protected as described below. Option 1 has the additional security benefit of not storing the passphrase, but is not generally acceptable for most production web servers, since it requires the web server to be manually started. Options 2 and 3 can provide additional security if the programs providing them are secure. Option 4 is the simplest, is widely used and is acceptable as long as the private key is appropriately protected.\n\nRationale:\n\nIf the private key were to be disclosed, it could be used to decrypt all of the SSL communications with the web server as well as to impersonate the web server.",
        "solution": "Perform the following to implement the recommended state:\n\nAll private keys must be stored separately from the public certificates. Find all SSLCertificateFile directives in the Apache configuration files. For any SSLCertificateFile directives that do not have a corresponding separate SSLCertificateKeyFile directive, move the key to a separate file from the certificate, and add the SSLCertificateKeyFile directive for the key file.\n\nFor each of the SSLCertificateKeyFile directives, change the ownership and permissions on the server private key to be owned by root:root with permission 0400.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|1A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@SSL_KEY@",
        "owner": "root",
        "mask": "377",
        "group": "root"
    },
    "custom_item_79": {
        "system": "Linux",
        "description": "7.4 Ensure the TLSv1.0 and TLSv1.1 Protocols are Disabled",
        "info": "The TLSv1.0 and TLSv1.1 protocols should be disabled via the SSLProtocol directive. The TLSv1.0 protocol is vulnerable to information disclosure and both protocols lack support for modern cryptographic algorithms including authenticated encryption. The only SSL/TLS protocols that should be allowed is TLSv1.2 along with the newer TLSv1.3 protocol.\n\nRationale:\n\nThe TLSv1.0 protocol is vulnerable to the BEAST attack when used in CBC mode (October 2011). Unfortunately, the TLSv1.0 uses CBC modes for all of the block mode ciphers, which only leaves the RC4 streaming cipher which is also weak and is not recommended. Therefore, it is recommended that the TLSv1.0 protocol be disabled. The TLSv1.1 protocol does not support Authenticated Encryption with Associated Data (AEAD) which is designed to simultaneously provide confidentiality, integrity, and authenticity. All major up-to-date browsers support TLSv1.2, and most recent versions of FireFox and Chrome support the newer TLSv1.3 protocol, since 2017.\n\nThe NIST SP 800-52r2 guidelines for TLS configuration require that TLS 1.2 is configured with FIPS-based cipher suites be supported by all government TLS servers and clients and requires support of TLS 1.3 by January 1, 2024. A September 2018 IETF draft also depreciates the usage of TLSv1.0 and TLSv1.1 as shown in the references.\n\nAs of March 2020 all major browsers will no longer support TLS 1.0 or TLS 1.1.",
        "solution": "Perform the following to implement the recommended state:\n\nCheck if the TLSv1.3 protocol is supported by the Apache server by either checking that the version of OpenSSL is 1.1.1 or later or place the TLSv1.3 value in the SSLProtocol string of a configuration file and check the syntax with the 'httpd -t' command before using the file in production. Two examples below are shown of servers that do support the TLSv1.3 protocol.\n\n$ openssl version\nOpenSSL 1.1.1a  20 Nov 2018\n\n### _(Add TLSv1.3 to the SSLProtocol directive)_\n# httpd -t\nSyntax OK\n\nSearch the Apache configuration files for the SSLProtocol directive; add the directive, if not present, or change the value to TLSv1.2 or TLSv1.2 TLSv1.3 if the TLSv1.3 protocol is supported.\n\nDefault Value:\n\nSSLProtocol all",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|11.4,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ss][Ss][Ll][Pp]rotocol[\\\\s]*",
        "expect": "^[\\\\s]*[Ss][Ss][Ll][Pp]rotocol[\\\\s]+([Tt][Ll][Ss][Vv]1\\\\.2[\\\\s]+[Tt][Ll][Ss][Vv]1\\\\.3[\\\\s]*|[Tt][Ll][Ss][Vv]1\\\\.2)[\\\\s]*$"
    },
    "custom_item_80": {
        "description": "7.5 Ensure Weak SSL/TLS Ciphers Are Disabled - 'Global SSLHonorCipherOrder = On'",
        "info": "Disable weak SSL ciphers using the SSLCipherSuite, and SSLHonorCipherOrder directives. The SSLCipherSuite directive specifies which ciphers are allowed in the negotiation with the client. While the SSLHonorCipherOrder causes the server's preferred ciphers to be used instead of the clients' specified preferences.\n\nRationale:\n\nThe SSL/TLS protocols support a large number of encryption ciphers including many weak ciphers that are subject to man-in-the middle attacks and information disclosure. Some implementations even support the NULL cipher which allows a TLS connection without any encryption! Therefore, it is critical to ensure the configuration only allows strong ciphers greater than or equal to 128-bit to be negotiated with the client. Stronger 256-bit ciphers should be allowed and preferred. In addition, enabling the SSLHonorCipherOrder further protects the client from man-in-the-middle downgrade attacks by ensuring the server's preferred ciphers will be used rather than the clients' preferences.\n\nIn addition, the RC4 stream ciphers should be disabled, even though they are widely used and have been recommended in previous Apache benchmarks as a means of mitigating attacks based on CBC cipher vulnerabilities. The RC4 ciphers have known cryptographic weaknesses and are no longer recommended. The IETF has published RFC 7465 standard [2] that would disallow RC4 negotiation for all TLS versions. While the document is somewhat new (Feb 2015) it is expected the RC4 cipher suites will begin to disappear from options in TLS deployments. In the meantime, it is important to ensure that RC4-based cipher suites are disabled in the configuration.",
        "solution": "Perform the following to implement the recommended state:\nEnsure the SSLCipherSuite includes all of the following:\n!NULL:!SSLv2:!RC4:!aNULL values. For example, add or modify the following line in the Apache server level configuration and every virtual host that is TLS enabled:\n\nSSLHonorCipherOrder On\nSSLCipherSuite ALL:!EXP:!NULL:!LOW:!SSLv2:!RC4:!aNULL\n\nIt is not recommended to add !SSLv3 to the directive even if the SSLv3 protocol is not in use. Doing so disables ALL of the ciphers that may used with SSLv3, which includes the same ciphers used with the TLS protocols. The !aNULL will disable both the ADH and AECDH ciphers, so the !ADH is not required.\nIMPORTANT NOTE: The above SSLCipherSuite value disables only the weak ciphers but allows medium strength and other ciphers which should also be disabled. Refer to the remaining TLS benchmark recommendations for stronger cipher suite values. The following cipher suite value will meet all of the level 1 and level 2 benchmark recommendations. As always, testing prior to production use is highly recommended.\n\nSSLHonorCipherOrder On\nSSLCipherSuite EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA\n\nDefault Value:\n\nThe following are the default values:\n\nSSLCipherSuite default depends on OpenSSL version.\n\nSSLHonorCipherOrder default is Off",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|11.4,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/grep -P -o ']*)>' @HTTPD_CONF_LOCATION@ | /bin/sort -u | /bin/sed -e 's/[<>\\\\/]//g' | /usr/bin/awk 'BEGIN { print \"{ p = 1 }\" } { print \"/^ *<\"$1\"[ >]/,/^ *<\\\\\\\\/\"$1\">/ { p = 0 }\" } END { print \"p == 1 { print }\" }' | /usr/bin/awk -f - @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P -i '^[\\\\s]*SSLHonorCipherOrder'",
        "expect": "^[\\\\s]*[Ss][Ss][Ll][Hh]onor[Cc]ipher[Oo]rder[\\\\s]+[Oo][Nn][\\\\s]*$"
    },
    "custom_item_81": {
        "system": "Linux",
        "description": "9.6 Ensure Timeout Limits for the Request Body is Set to 20 or Less - RequestReadTimeout",
        "info": "The RequestReadTimeout directive also allows setting timeout values for the body portion of a request. The directive provides for an initial timeout value, and a maximum timeout and minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for each N bytes received. The recommended setting is to have a maximum timeout of 20 seconds or less. The default value is body=20,MinRate=500.\n\nRationale:\n\nIt is not sufficient to timeout only on the header portion of the request, as the server will still be vulnerable to attacks like the OWASP Slow POST attack, which provide the body of the request very slowly. Therefore, the body portion of the request must have a timeout as well. A timeout of 20 seconds or less is recommended.",
        "solution": "Load the mod_requesttimeout module in the Apache configuration with the following configuration.\n\nLoadModule reqtimeout_module modules/mod_reqtimeout.so\n\nAdd a RequestReadTimeout directive similar to the one below with the maximum request body timeout value of 20 seconds or less.\n\nRequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500\n\nDefault Value:\n\nbody=20,MinRate=500",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep 'reqtimeout_module'",
        "expect": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+[Hh]eader=20-(40|[1-3][0-9]),[Mm]in[Rr]ate=500[\\\\s]+[Bb]ody=(20|1[1-9]),[Mm]in[Rr]ate=500[\\\\s]*$",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+"
    },
    "custom_item_82": {
        "system": "Linux",
        "description": "7.5 Ensure Weak SSL/TLS Ciphers Are Disabled - 'Global SSLCipherSuite'",
        "info": "Disable weak SSL ciphers using the SSLCipherSuite, and SSLHonorCipherOrder directives. The SSLCipherSuite directive specifies which ciphers are allowed in the negotiation with the client. While the SSLHonorCipherOrder causes the server's preferred ciphers to be used instead of the clients' specified preferences.\n\nRationale:\n\nThe SSL/TLS protocols support a large number of encryption ciphers including many weak ciphers that are subject to man-in-the middle attacks and information disclosure. Some implementations even support the NULL cipher which allows a TLS connection without any encryption! Therefore, it is critical to ensure the configuration only allows strong ciphers greater than or equal to 128-bit to be negotiated with the client. Stronger 256-bit ciphers should be allowed and preferred. In addition, enabling the SSLHonorCipherOrder further protects the client from man-in-the-middle downgrade attacks by ensuring the server's preferred ciphers will be used rather than the clients' preferences.\n\nIn addition, the RC4 stream ciphers should be disabled, even though they are widely used and have been recommended in previous Apache benchmarks as a means of mitigating attacks based on CBC cipher vulnerabilities. The RC4 ciphers have known cryptographic weaknesses and are no longer recommended. The IETF has published RFC 7465 standard [2] that would disallow RC4 negotiation for all TLS versions. While the document is somewhat new (Feb 2015) it is expected the RC4 cipher suites will begin to disappear from options in TLS deployments. In the meantime, it is important to ensure that RC4-based cipher suites are disabled in the configuration.",
        "solution": "Perform the following to implement the recommended state:\nEnsure the SSLCipherSuite includes all of the following:\n!NULL:!SSLv2:!RC4:!aNULL values. For example, add or modify the following line in the Apache server level configuration and every virtual host that is TLS enabled:\n\nSSLHonorCipherOrder On\nSSLCipherSuite ALL:!EXP:!NULL:!LOW:!SSLv2:!RC4:!aNULL\n\nIt is not recommended to add !SSLv3 to the directive even if the SSLv3 protocol is not in use. Doing so disables ALL of the ciphers that may used with SSLv3, which includes the same ciphers used with the TLS protocols. The !aNULL will disable both the ADH and AECDH ciphers, so the !ADH is not required.\nIMPORTANT NOTE: The above SSLCipherSuite value disables only the weak ciphers but allows medium strength and other ciphers which should also be disabled. Refer to the remaining TLS benchmark recommendations for stronger cipher suite values. The following cipher suite value will meet all of the level 1 and level 2 benchmark recommendations. As always, testing prior to production use is highly recommended.\n\nSSLHonorCipherOrder On\nSSLCipherSuite EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA\n\nDefault Value:\n\nThe following are the default values:\n\nSSLCipherSuite default depends on OpenSSL version.\n\nSSLHonorCipherOrder default is Off",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|11.4,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/grep -P -o ']*)>' @HTTPD_CONF_LOCATION@ | /bin/sort -u | /bin/sed -e 's/[<>\\\\/]//g' | /usr/bin/awk 'BEGIN { print \"{ p = 1 }\" } { print \"/^ *<\"$1\"[ >]/,/^ *<\\\\\\\\/\"$1\">/ { p = 0 }\" } END { print \"p == 1 { print }\" }' | /usr/bin/awk -f - @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P -i '^[\\\\s]*SSLCipherSuite'",
        "expect": "^[\\\\s]*[Ss][Ss][Ll][Cc][Ii][Pp][Hh][Ee][Rr][Ss][Uu][Ii][Tt][Ee][\\\\s]*ALL:((?=.*!EXP)(?=.*!NULL)(?=.*!LOW)(?=.*!SSLv2)(?=.*!RC4)(?=.*!aNULL)).*?$"
    },
    "custom_item_83": {
        "system": "Linux",
        "description": "9.6 Ensure Timeout Limits for the Request Body is Set to 20 or Less - RequestReadTimeout",
        "info": "The RequestReadTimeout directive also allows setting timeout values for the body portion of a request. The directive provides for an initial timeout value, and a maximum timeout and minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for each N bytes received. The recommended setting is to have a maximum timeout of 20 seconds or less. The default value is body=20,MinRate=500.\n\nRationale:\n\nIt is not sufficient to timeout only on the header portion of the request, as the server will still be vulnerable to attacks like the OWASP Slow POST attack, which provide the body of the request very slowly. Therefore, the body portion of the request must have a timeout as well. A timeout of 20 seconds or less is recommended.",
        "solution": "Load the mod_requesttimeout module in the Apache configuration with the following configuration.\n\nLoadModule reqtimeout_module modules/mod_reqtimeout.so\n\nAdd a RequestReadTimeout directive similar to the one below with the maximum request body timeout value of 20 seconds or less.\n\nRequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500\n\nDefault Value:\n\nbody=20,MinRate=500",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep 'reqtimeout_module'",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+",
        "expect": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+[Hh]eader=20-(40|[1-3][0-9]),[Mm]in[Rr]ate=500[\\\\s]+[Bb]ody=(20|1[1-9]),[Mm]in[Rr]ate=500[\\\\s]*$"
    },
    "custom_item_84": {
        "system": "Linux",
        "description": "7.6 Ensure Insecure SSL Renegotiation Is Not Enabled",
        "info": "A man-in-the-middle renegotiation attack was discovered in SSLv3 and TLSv1 in November, 2009 (CVE-2009-3555). First, a work around and then a fix was approved as an Internet Standard as RFC 574, Feb 2010. The work around, which removes the renegotiation, is available from OpenSSL as of version 0.9.8l and newer versions. For details: https://www.openssl.org/news/secadv_20091111.txt The SSLInsecureRenegotiation directive was added in Apache 2.2.15, for web servers linked with OpenSSL version 0.9.8m or later, to provide backward compatibility to clients with the older, unpatched SSL implementations.\n\nRationale:\n\nEnabling the SSLInsecureRenegotiation directive leaves the server vulnerable to man-in-the-middle renegotiation attack. Therefore, the SSLInsecureRenegotiation directive should not be enabled.",
        "solution": "Perform the following to implement the recommended state:\nSearch the Apache configuration files for the SSLInsecureRenegotiation directive. If the directive is present modify the value to be off. If the directive is not present then no action is required.\n\nSSLInsecureRenegotiation off\n\nDefault Value:\n\nSSLInsecureRenegotiation off",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|14.4,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ss][Ss][Ll][Ii]nsecure[Rr]enegotiation[\\\\s]+",
        "expect": "^[\\\\s]*[Ss][Ss][Ll][Ii]nsecure[Rr]enegotiation[\\\\s]+[Oo][Ff][Ff][\\\\s]*$"
    },
    "custom_item_85": {
        "description": "7.7 Ensure SSL Compression is not Enabled - 'Verify SSLCompression exist'",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*SSLCompression",
        "expect": "^[\\\\s]*SSLCompression[\\\\s]+"
    },
    "custom_item_86": {
        "system": "Linux",
        "description": "7.7 Ensure SSL Compression is not Enabled",
        "info": "The SSLCompression directive controls whether SSL compression is used by Apache when serving content over HTTPS. It is recommended that the SSLCompression directive be set to off.\n\nRationale:\n\nIf SSL compression is enabled, HTTPS communication between the client and the server may be at increased risk to the CRIME attack. The CRIME attack increases a malicious actor's ability to derive the value of a session cookie, which commonly contains an authenticator. If the authenticator in a session cookie is derived, it can be used to impersonate the account associated with the authenticator.",
        "solution": "Perform the following to implement the recommended state:\n\nSearch the Apache configuration files for the SSLCompression directive.\n\nIf the directive is present, set it to off.\n\nDefault Value:\n\nIn Apache versions >= 2.4.3, the SSLCompression directive is available and SSL compression is implicitly disabled. In Apache 2.4 - 2.4.2, the SSLCompression directive is not available and SSL compression is implicitly disabled.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*SSLCompression[\\\\s]+",
        "expect": "^[\\\\s]*SSLCompression[\\\\s]+[Oo]ff[\\\\s]*$"
    },
    "custom_item_87": {
        "system": "Linux",
        "description": "7.8 Ensure Medium Strength SSL/TLS Ciphers Are Disabled",
        "info": "The SSLCipherSuite directive specifies which ciphers are allowed in the negotiation with the client. Disable the medium strength ciphers such as Triple DES (3DES) and IDEA by adding !3DES and !IDEA in the SSLCipherSuite directive.\n\nRationale:\n\nAlthough Triple DES has been a trusted standard in the past, several vulnerabilities for it have been published over the years and it is no longer considered secure. A vulnerable against 3DES in CBC mode was nicknamed the SWEET32 attack, was published in 2016 as CVE-2016-2183. The IDEA cipher in CBC mode, is also vulnerable to the SWEET32 attack.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the following lines in the Apache server level configuration and every virtual host that is SSL/TLS enabled:\n\nSSLHonorCipherOrder On\nSSLCipherSuite ALL:!EXP:!NULL:!LOW:!SSLv2:!RC4:!aNULL:!3DES:!IDEA\n\nIMPORTANT NOTE: The above SSLCipherSuite value disables only the weak and medium ciphers but allows other ciphers which should also be disabled. Refer to the remaining TLS benchmark recommendations for more stronger cipher suite values. The following cipher suite value will meet all of the level 1 and level 2 benchmark recommendations. As always, testing prior to production use is highly recommended.\n\nSSLHonorCipherOrder On\nSSLCipherSuite EECDH:EDH:!NULL:!SSLv2:!RC4:!aNULL:!3DES:!IDEA\n\nDefault Value:\n\nThe following are the default values:\n\nSSLCipherSuite default depends on OpenSSL version.",
        "reference": "800-171|3.1.13,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|CM-6,800-53|CM-7,800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|CM-6,800-53r5|CM-7,800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSCv8|4.8,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS15a,NIAv2|SS24,PCI-DSSv3.2.1|2.2.2,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.3,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/grep -P -o ']*)>' @HTTPD_CONF_LOCATION@ | /bin/sort -u | /bin/sed -e 's/[<>\\\\/]//g' | /usr/bin/awk 'BEGIN { print \"{ p = 1 }\" } { print \"/^ *<\"$1\"[ >]/,/^ *<\\\\\\\\/\"$1\">/ { p = 0 }\" } END { print \"p == 1 { print }\" }' | /usr/bin/awk -f - @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P -i '^[\\\\s]*SSLCipherSuite'",
        "expect": "^[\\\\s]*[Ss][Ss][Ll][Cc][Ii][Pp][Hh][Ee][Rr][Ss][Uu][Ii][Tt][Ee][\\\\s]*ALL:(?=.*!EXP)(?=.*!NULL)(?=.*!LOW)(?=.*!SSLv2)(?=.*!RC4)(?=.*!aNULL)(?=.*!3DES)(?=.*!IDEA).*?$"
    },
    "custom_item_88": {
        "system": "Linux",
        "description": "7.9 Ensure All Web Content is Accessed via HTTPS",
        "info": "All of the website content should be served via HTTPS rather than HTTP. A redirect from the HTTP website to the HTTPS content is often useful and is recommended, but all significant content should be accessed via HTTPS so that it is authenticated and encrypted.\n\nRationale:\n\nThe usage of clear text HTTP prevents the client browser from authenticating the connection and ensuring the integrity of the website information. Without the HTTPS authentication, a client may be subjected to a variety of man-in-the-middle and spoofing attacks which would cause them to receive modified web content which could harm the organization's reputation. Through DNS attacks or malicious redirects, the client could arrive at a malicious website instead of the intended website. The malicious website could deliver malware, request credentials, or deliver false information.",
        "solution": "Perform the following to implement the recommended state:\nMove the web content to a TLS enabled website, and add an HTTP Redirect directive to the Apache configuration file to redirect to the TLS enabled website similar to the example shown.\n\nRedirect permanent / https://www.cisecurity.org/\n\nDefault Value:\n\nThe following are the default values:\n\nTLS is not enabled by default.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|11,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "/usr/bin/grep -P '^[\\\\s]*Listen[\\\\s]+' @HTTPD_CONF_LOCATION@ | /usr/bin/grep -P -v '(https|\\\\s443|:443)' | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "none"
    },
    "custom_item_89": {
        "system": "Linux",
        "description": "8.1 Ensure ServerTokens is Set to 'Prod' or 'ProductOnly'",
        "info": "Configure the Apache ServerTokens directive to provide minimal information. By setting the value to Prod or ProductOnly. The only version information given in the server HTTP response header will be Apache rather than details on modules and versions installed.\n\nRationale:\n\nInformation is power and identifying web server details greatly increases the efficiency of any attack, as security vulnerabilities are extremely dependent upon specific software versions and configurations. Excessive probing and requests may cause too much 'noise' being generated and may tip off an administrator. If an attacker can accurately target their exploits, the chances of successful compromise prior to detection increase dramatically. Script Kiddies are constantly scanning the Internet and documenting the version information openly provided by web servers. The purpose of this scanning is to accumulate a database of software installed on those hosts, which can then be used when new vulnerabilities are released.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the ServerTokens directive as shown below to have the value of Prod or ProductOnly:\n\nServerTokens Prod\n\nDefault Value:\n\nThe default value is Full which provides the most detailed information.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.7,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ss]erver[Tt]okens[\\\\s]+",
        "expect": "^[\\\\s]*[Ss]erver[Tt]okens[\\\\s]+([Pp][Rr][Oo][Dd]|[Pp][Rr][Oo][Dd][Uu][Cc][Tt][Oo][Nn][Ll][Yy])[\\\\s]*$"
    },
    "custom_item_90": {
        "system": "Linux",
        "description": "8.2 Ensure ServerSignature Is Not Enabled",
        "info": "Disable the server signatures which generates a signature line as a trailing footer at the bottom of server generated documents such as error pages.\n\nRationale:\n\nServer signatures are helpful when the server is acting as a proxy, since it helps the user distinguish errors from the proxy rather than the destination server, however in this context there is no need for the additional information.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the ServerSignature directive as shown below to have the value of Off:\n\nServerSignature Off\n\nDefault Value:\n\nThe default value is Off for ServerSignature.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|13.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Ss]erver[Ss]ignature[\\\\s]+",
        "expect": "^[\\\\s]*[Ss]erver[Ss]ignature[\\\\s]+[Oo][Ff][Ff][\\\\s]*$"
    },
    "custom_item_91": {
        "system": "Linux",
        "description": "9.1 Ensure the TimeOut Is Set to 10 or Less",
        "info": "Denial of Service (DoS) is an attack technique with the intent of preventing a web site from serving normal user activity. DoS attacks, which are normally applied to the network layer, are also possible at the application layer. These malicious attacks can succeed by starving a system of critical resources, vulnerability exploit, or abuse of functionality. Although there is no 100% solution for preventing DoS attacks, the following recommendation uses the Timeout directive to mitigate some of the risk, by requiring more effort for a successful DoS attack. Of course, DoS attacks can happen in rather unintentional ways as well as intentional and these directives will help in many of those situations as well.\n\nRationale:\n\nOne common technique for DoS is to initiate many connections to the server. By decreasing the timeout for old connections and we allow the server to free up resources more quickly and be more responsive. By making the server more efficient, it will be more resilient to DoS conditions. The Timeout directive affects several timeout values for Apache, so review the Apache document carefully. http://httpd.apache.org/docs/2.4/mod/core.html#timeout",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the Timeout directive in the Apache configuration to have a value of 10 seconds or shorter.\n\nTimeout 10\n\nDefault Value:\n\nTimeout 60",
        "reference": "800-171|3.13.1,800-53|SC-7(8),800-53r5|SC-7(8),CN-L3|8.1.10.6(j),CSCv7|9,CSCv8|13.10,CSF|PR.AC-5,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7(8),LEVEL|1A,NESA|T4.5.4,NIAv2|SU4,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Tt]ime[Oo]ut[\\\\s]+",
        "expect": "^[\\\\s]*[Tt]ime[Oo]ut[\\\\s]+(10|[1-9])[\\\\s]*$"
    },
    "custom_item_92": {
        "system": "Linux",
        "description": "9.2 Ensure KeepAlive Is Enabled",
        "info": "The KeepAlive directive controls whether Apache will reuse the same TCP connection per client to process subsequent HTTP requests from that client. It is recommended that the KeepAlive directive be set to On.\n\nRationale:\n\nAllowing per-client reuse of TCP sockets reduces the amount of system and network resources required to serve requests. This efficiency gain may improve a server's resiliency to DoS attacks.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the KeepAlive directive in the Apache configuration to have a value of On, so that KeepAlive connections are enabled.\n\nKeepAlive On\n\nDefault Value:\n\nKeepAlive On",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Kk]eep[Aa]live[\\\\s]+",
        "expect": "^[\\\\s]*[Kk]eep[Aa]live[\\\\s]+[Oo][Nn][\\\\s]*$"
    },
    "custom_item_93": {
        "system": "Linux",
        "description": "9.3 Ensure MaxKeepAliveRequests is Set to a Value of 100 or Greater",
        "info": "The MaxKeepAliveRequests directive limits the number of requests allowed per connection when KeepAlive is on. If it is set to 0, unlimited requests will be allowed.\n\nRationale:\n\nThe MaxKeepAliveRequests directive is important to be used to mitigate the risk of Denial of Service (DoS) attack technique by reducing the overhead imposed on the server. The KeepAlive directive must be enabled before it is effective. Enabling KeepAlives allows for multiple HTTP requests to be sent while keeping the same TCP connection alive. This reduces the overhead of having to setup and tear down TCP connections for each request. By making the server more efficient, it will be more resilient to DoS conditions.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the MaxKeepAliveRequests directive in the Apache configuration to have a value of 100 or more.\n\nMaxKeepAliveRequests 100\n\nDefault Value:\n\nMaxKeepAliveRequests 100",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Mm]ax[Kk]eep[Aa]live[Rr]equests[\\\\s]+",
        "expect": "^[\\\\s]*[Mm]ax[Kk]eep[Aa]live[Rr]equests[\\\\s]+[1-9][0-9][0-9]+[\\\\s]*$"
    },
    "custom_item_94": {
        "system": "Linux",
        "description": "9.4 Ensure KeepAliveTimeout is Set to a Value of 15 or Less",
        "info": "The KeepAliveTimeout directive specifies the number of seconds Apache will wait for a subsequent request before closing a connection that is being kept alive.\n\nRationale:\n\nThe KeepAliveTimeout directive is used mitigate some of the risk, by requiring more effort for a successful DoS attack. By enabling KeepAlive and keeping the timeout relatively low for old connections and we allow the server to free up resources more quickly and be more responsive.",
        "solution": "Perform the following to implement the recommended state:\nAdd or modify the KeepAliveTimeout directive in the Apache configuration to have a value of 15 or less.\n\nKeepAliveTimeout 15\n\nDefault Value:\n\nKeepAliveTimeout 5",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Kk]eep[Aa]live[Tt]imeout[\\\\s]+",
        "expect": "^[\\\\s]*[Kk]eep[Aa]live[Tt]imeout[\\\\s]+(1[0-5]|[1-9])[\\\\s]*$"
    },
    "custom_item_95": {
        "system": "Linux",
        "description": "9.5 Ensure the Timeout Limits for Request Headers is Set to 40 or Less - mod_reqtimeout",
        "info": "The RequestReadTimeout directive allows configuration of timeout limits for client requests. The header portion of the directive provides for an initial timeout value, a maximum timeout and a minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for each N bytes received. The recommended setting is to have a maximum timeout of 40 seconds or less. Keep in mind that for SSL/TLS virtual hosts the time for the TLS handshake must fit within the timeout.\n\nRationale:\n\nSetting a request header timeout is vital for mitigating Denial of Service attacks based on slow requests. The slow request attacks are particularly lethal and relatively easy to perform, because they require very little bandwidth and can easily be done through anonymous proxies. Starting in June 2009 with the Slow Loris DoS attack, which used a slow GET request as published by Robert Hansen (RSnake) on his blog http://ha.ckers.org/slowloris/. Later in November 2010 at the OWASP App Sec DC conference Wong Onn Chee demonstrated a slow POST request attack which was even more effective. For details, see: https://www.owasp.org/index.php/H.....t.....t....p.......p....o....s....t",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_requesttimeout module in the Apache configuration with the following configuration.\n\nLoadModule reqtimeout_module modules/mod_reqtimeout.so\n\nAdd a RequestReadTimeout directive similar to the one below with the maximum request header timeout value of 40 seconds or less.\n\nRequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500\n\nDefault Value:\n\nheader=20-40,MinRate=500",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep 'reqtimeout_module'",
        "expect": "^[\\\\s]*reqtimeout_module[\\\\s]*\\\\((shared|static)\\\\)[\\\\s]*$"
    },
    "custom_item_96": {
        "system": "Linux",
        "description": "9.5 Ensure the Timeout Limits for Request Headers is Set to 40 or Less - RequestReadTimeout",
        "info": "The RequestReadTimeout directive allows configuration of timeout limits for client requests. The header portion of the directive provides for an initial timeout value, a maximum timeout and a minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for each N bytes received. The recommended setting is to have a maximum timeout of 40 seconds or less. Keep in mind that for SSL/TLS virtual hosts the time for the TLS handshake must fit within the timeout.\n\nRationale:\n\nSetting a request header timeout is vital for mitigating Denial of Service attacks based on slow requests. The slow request attacks are particularly lethal and relatively easy to perform, because they require very little bandwidth and can easily be done through anonymous proxies. Starting in June 2009 with the Slow Loris DoS attack, which used a slow GET request as published by Robert Hansen (RSnake) on his blog http://ha.ckers.org/slowloris/. Later in November 2010 at the OWASP App Sec DC conference Wong Onn Chee demonstrated a slow POST request attack which was even more effective. For details, see: https://www.owasp.org/index.php/H.....t.....t....p.......p....o....s....t",
        "solution": "Perform the following to implement the recommended state:\n\nLoad the mod_requesttimeout module in the Apache configuration with the following configuration.\n\nLoadModule reqtimeout_module modules/mod_reqtimeout.so\n\nAdd a RequestReadTimeout directive similar to the one below with the maximum request header timeout value of 40 seconds or less.\n\nRequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500\n\nDefault Value:\n\nheader=20-40,MinRate=500",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+",
        "expect": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+[Hh]eader=20-(40|[1-3][0-9]|[1-9]),[Mm]in[Rr]ate=500[\\\\s]+[Bb]ody=(20|1[1-9]),[Mm]in[Rr]ate=500[\\\\s]*$"
    },
    "custom_item_97": {
        "system": "Linux",
        "description": "9.6 Ensure Timeout Limits for the Request Body is Set to 20 or Less - mod_reqtimeout",
        "info": "The RequestReadTimeout directive also allows setting timeout values for the body portion of a request. The directive provides for an initial timeout value, and a maximum timeout and minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for each N bytes received. The recommended setting is to have a maximum timeout of 20 seconds or less. The default value is body=20,MinRate=500.\n\nRationale:\n\nIt is not sufficient to timeout only on the header portion of the request, as the server will still be vulnerable to attacks like the OWASP Slow POST attack, which provide the body of the request very slowly. Therefore, the body portion of the request must have a timeout as well. A timeout of 20 seconds or less is recommended.",
        "solution": "Load the mod_requesttimeout module in the Apache configuration with the following configuration.\n\nLoadModule reqtimeout_module modules/mod_reqtimeout.so\n\nAdd a RequestReadTimeout directive similar to the one below with the maximum request body timeout value of 20 seconds or less.\n\nRequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500\n\nDefault Value:\n\nbody=20,MinRate=500",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "cmd": "@HTTPD_LOCATION@ -M | /bin/grep 'reqtimeout_module'",
        "expect": "^[\\\\s]*reqtimeout_module[\\\\s]*\\\\((shared|static)\\\\)[\\\\s]*$"
    },
    "custom_item_98": {
        "system": "Linux",
        "description": "9.6 Ensure Timeout Limits for the Request Body is Set to 20 or Less - RequestReadTimeout",
        "info": "The RequestReadTimeout directive also allows setting timeout values for the body portion of a request. The directive provides for an initial timeout value, and a maximum timeout and minimum rate. The minimum rate specifies that after the initial timeout, the server will wait an additional 1 second for each N bytes received. The recommended setting is to have a maximum timeout of 20 seconds or less. The default value is body=20,MinRate=500.\n\nRationale:\n\nIt is not sufficient to timeout only on the header portion of the request, as the server will still be vulnerable to attacks like the OWASP Slow POST attack, which provide the body of the request very slowly. Therefore, the body portion of the request must have a timeout as well. A timeout of 20 seconds or less is recommended.",
        "solution": "Load the mod_requesttimeout module in the Apache configuration with the following configuration.\n\nLoadModule reqtimeout_module modules/mod_reqtimeout.so\n\nAdd a RequestReadTimeout directive similar to the one below with the maximum request body timeout value of 20 seconds or less.\n\nRequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500\n\nDefault Value:\n\nbody=20,MinRate=500",
        "reference": "800-171|3.1.16,800-171|3.1.17,800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|AC-18,800-53|AC-18(1),800-53|AC-18(3),800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53r5|AC-18,800-53r5|AC-18(1),800-53r5|AC-18(3),800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,CSCv7|5.1,CSCv8|4.2,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.PT-3,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|AC-18(1),ITSG-33|AC-18(3),ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,LEVEL|1A,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T5.4.2,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NIAv2|NS33,NIAv2|NS34,NIAv2|NS38,NIAv2|SS15a,NIAv2|SS16,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/4548",
        "file": "@HTTPD_CONF_LOCATION@",
        "regex": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+",
        "expect": "^[\\\\s]*[Rr]equest[Rr]ead[Tt]imeout[\\\\s]+[Hh]eader=20-(40|[1-3][0-9]),[Mm]in[Rr]ate=500[\\\\s]+[Bb]ody=(20|1[1-9]),[Mm]in[Rr]ate=500[\\\\s]*$"
    }
}