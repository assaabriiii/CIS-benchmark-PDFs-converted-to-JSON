{
    "custom_item_1": {
        "description": "CentOS Linux 8 is installed",
        "file": "/etc/system-release",
        "regex": "^[\\\\s]*CentOS Linux release",
        "expect": "^[\\\\s]*CentOS Linux release @PLATFORM_VERSION@"
    },
    "custom_item_2": {
        "description": "lsmod - squashfs",
        "cmd": "/sbin/lsmod | /bin/grep squashfs | /bin/awk \\'{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "^pass$"
    },
    "custom_item_3": {
        "description": "blacklist - squashfs",
        "file": "/etc/modprobe.d/*",
        "regex": "^blacklist[\\\\s]+squashfs",
        "expect": "^blacklist[\\\\s]+squashfs[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_4": {
        "description": "modprobe - squashfs",
        "cmd": "/sbin/modprobe -n -v squashfs | /bin/grep \"^install\" | /bin/awk \\'{print} END {if (NR == 0) print \"fail\"}\\'",
        "expect": "^install /bin/(true|false)$"
    },
    "custom_item_5": {
        "description": "modprobe - udf",
        "cmd": "/sbin/modprobe -n -v udf | /bin/grep \"^install\" | /bin/awk '{print} END {if (NR == 0) print \"fail\"}'",
        "expect": "^install /bin/(true|false)$"
    },
    "custom_item_6": {
        "description": "blacklist - udf",
        "file": "/etc/modprobe.d/*",
        "regex": "^blacklist[\\\\s]+udf",
        "expect": "^blacklist[\\\\s]+udf[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_7": {
        "description": "lsmod - udf",
        "cmd": "/sbin/lsmod | /bin/grep udf | /bin/awk \\'{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}\\'",
        "expect": "^pass$"
    },
    "custom_item_8": {
        "description": "1.1.3.1 Ensure separate partition exists for /var",
        "info": "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.\n\nThe reasoning for mounting /var on a separate partition is as follow.\n\nProtection from resource exhaustion\n\nThe default installation only creates a single / partition. Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var and cause unintended behavior across the system as the disk is full. See man auditd.conf for details.\n\nFine grained control over the mount\n\nConfiguring /var as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. Other options allow for specific behaviour. See man mount for exact details regarding filesystem-independent and filesystem-specific options.\n\nProtection from exploitation\n\nAn example of exploiting /var may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var\n\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/findmnt -kn /var",
        "expect": "^[\\\\s]*/var[\\\\s]+"
    },
    "custom_item_9": {
        "description": "1.1.4.1 Ensure separate partition exists for /var/tmp",
        "info": "The /var/tmp directory is a world-writable directory used for temporary storage by all users and some applications. Temporary file residing in /var/tmp is to be preserved between reboots.\n\nThe reasoning for mounting /var/tmp on a separate partition is as follow.\n\nProtection from resource exhaustion\n\nThe default installation only creates a single / partition. Since the /var/tmp directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/tmp and cause the potential disruption to daemons as the disk is full.\n\nFine grained control over the mount\n\nConfiguring /var/tmp as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.\n\nProtection from exploitation\n\nAn example of exploiting /var/tmp may be an attacker establishing a hard-link to a system setuid program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/tmp\n\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/findmnt --kernel /var/tmp",
        "expect": "^[\\\\s]*/var/tmp[\\\\s]+.+[\\\\s]+.+"
    },
    "custom_item_10": {
        "description": "1.1.5.1 Ensure separate partition exists for /var/log",
        "info": "The /var/log directory is used by system services to store log data.\n\nThe reasoning for mounting /var/log on a separate partition is as follow.\n\nProtection from resource exhaustion\n\nThe default installation only creates a single / partition. Since the /var/log directory contain the log files that can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole.\n\nFine grained control over the mount\n\nConfiguring /var/log as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.\n\nProtection of log data\n\nAs /var/log contains log files, care should be taken to ensure the security and integrity of the data and mount point.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log\n\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/findmnt --kernel /var/log",
        "expect": "^[\\\\s]*/var/log[\\\\s]+.+[\\\\s]+.+"
    },
    "custom_item_11": {
        "description": "1.1.6.1 Ensure separate partition exists for /var/log/audit",
        "info": "The auditing daemon, auditd stores log data in the /var/log/audit directory.\n\nThe reasoning for mounting /var/log/audit on a separate partition is as follow.\n\nProtection from resource exhaustion\n\nThe default installation only creates a single / partition. Since the /var/log/audit directory contain the audit.log file that can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /var/log/audit and cause auditd to trigger it's space_left_action as the disk is full. See man auditd.conf for details.\n\nFine grained control over the mount\n\nConfiguring /var/log/audit as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.\n\nProtection of audit data\n\nAs /var/log/audit contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /var/log/audit\n\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/findmnt --kernel /var/log/audit",
        "expect": "^[\\\\s]*/var/log/audit[\\\\s]+.+[\\\\s]+.+"
    },
    "custom_item_12": {
        "description": "1.1.7.1 Ensure separate partition exists for /home",
        "info": "The /home directory is used to support disk storage needs of local users.\n\nThe reasoning for mounting /home on a separate partition is as follow.\n\nProtection from resource exhaustion\n\nThe default installation only creates a single / partition. Since the /home directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to /home and impact all local users.\n\nFine grained control over the mount\n\nConfiguring /home as its own file system allows an administrator to set additional mount options such as noexec/nosuid/nodev These options limits an attackers ability to create exploits on the system. In the case of /home options such as usrquota/grpquota may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See man mount for exact details regarding filesystem-independent and filesystem-specific options.\n\nProtection of user data\n\nAs /home contains user data, care should be taken to ensure the security and integrity of the data and mount point.",
        "solution": "For new installations, during installation create a custom partition setup and specify a separate partition for /home\n\nFor systems that were previously installed, create a new partition and configure /etc/fstab as appropriate.\n\nImpact:\n\nResizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/findmnt --kernel /home",
        "expect": "^[\\\\s]*/home[\\\\s]+.+[\\\\s]+.+"
    },
    "custom_item_13": {
        "description": "/etc/selinux/config",
        "file": "/etc/selinux/config",
        "regex": "(?i)^[\\\\s]*SELINUX[\\\\s]*=",
        "expect": "(?i)^[\\\\s]*SELINUX[\\\\s]*=[\\\\s]*enforcing[\\\\s]*$"
    },
    "custom_item_14": {
        "description": "getenforce",
        "cmd": "/sbin/getenforce",
        "expect": "(?i)^[\\\\s]*enforcing[\\\\s]*$"
    },
    "custom_item_15": {
        "description": "1.8.1 Ensure GNOME Display Manager is removed",
        "info": "The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.\n\nIf a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system.",
        "solution": "Run the following command to remove the gdm package\n\n# dnf remove gdm\n\nImpact:\n\nRemoving the GNOME Display manager will remove the GUI from the system.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|2M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "rpm": "gdm-0.0.0-0",
        "operator": "lte"
    },
    "custom_item_16": {
        "description": "modprobe sctp - install",
        "cmd": "/bin/sheltie modprobe -n -v sctp | /bin/grep -E '(sctp|install)'",
        "expect": "install /bin/(true|false)"
    },
    "custom_item_17": {
        "description": "check if sctp is loaded",
        "file": "/proc/modules",
        "regex": "^[\\\\s]*sctp[\\\\s]*",
        "expect": "^[\\\\s]*sctp[\\\\s]*"
    },
    "custom_item_18": {
        "system": "Linux",
        "description": "modprobe - dccp",
        "cmd": "/sbin/modprobe -n -v dccp",
        "expect": "(install /bin/true|FATAL: Module dccp not found)"
    },
    "custom_item_19": {
        "system": "Linux",
        "description": "lsmod - dccp",
        "cmd": "/sbin/lsmod | /bin/grep dccp | /bin/awk \\'{print} END {if (NR == 0) print \"pass\"; else print \"fail\"}\\'",
        "expect": "^pass$"
    },
    "custom_item_20": {
        "description": "4.1.1.1 Ensure auditd is installed",
        "info": "auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk\n\nThe capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
        "solution": "Run the following command to Install auditd\n\n# dnf install audit",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "rpm": "audit-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_21": {
        "description": "4.1.1.2 Ensure auditd service is enabled",
        "info": "Turn on the auditd daemon to record system events.\n\nThe capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
        "solution": "Run the following command to enable auditd :\n\n# systemctl --now enable auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/systemctl is-enabled auditd | /bin/awk '{print} END {if(NR==0) print \"disabled\" }'",
        "expect": "^enabled$"
    },
    "custom_item_22": {
        "description": "4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled",
        "info": "Configure grub2 so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.\n\nAudit events need to be captured on processes that start up prior to auditd so that potential malicious activity cannot go undetected.",
        "solution": "Run the following command to add audit=1 to GRUB_CMDLINE_LINUX :\n\n# grubby --update-kernel ALL --args 'audit=1'",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "#!/bin/bash\n  {\n  l_output=\"\" l_output2=\"\" l_gout=\"\"\n  l_gparameters=\"audit=1\"\n\n\tl_gpfile=\"$(find /boot -type f \\\\( -name 'grubenv' -o -name 'grub.conf' -o -name 'grub.cfg' \\\\) -exec grep -Pl -- '^\\\\h*(kernelopts=|linux|kernel)' {} +)\"\n\t[ -f \"$l_gpfile\" ] && l_gout=\"$(grep -P -- \"\\\\b$l_gparameters\\\\b\" \"$l_gpfile\")\"\n\tl_lout=\"$(grep -Ps -- \"\\\\b$l_gparameters\\\\b\" /boot/loader/entries/*)\"\n\tif [ -n \"$l_gout\" ] || [ -n \"$l_lout\" ]; then\n\t\t[ -n \"$l_gout\" ] && l_output=\"$l_output\\\\n - Grub parameter: \\\\\"$l_gparameters\\\\\" exists in: \\\\\"$l_gpfile\\\\\"\"\n\t\t[ -n \"$l_lout\" ] && l_output=\"$l_output\\\\n - Grub parameter: \\\\\"$l_gparameters\\\\\" exists in: \\\\\"$(grep -Pls -- \"\\\\b$l_gparameters\\\\b\" /boot/loader/entries/*)\\\\\"\"\n\telse\n\t\tl_output2=\"$l_output2\\\\n - Grub parameter: \\\\\"$l_gparameters\\\\\" is not set\"\n\tfi\n\n# If l_output2 is not set, then we pass\nif [ -z \"$l_output2\" ]; then\n\techo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\nelse\n\techo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n\t[ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\nfi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_23": {
        "description": "4.1.1.4 Ensure audit_backlog_limit is sufficient",
        "info": "The backlog limit has a default setting of 64\n\nDuring boot if audit=1 then the backlog will hold 64 records. If more that 64 records are created during boot, auditd records will be lost and potential malicious activity could go undetected.",
        "solution": "Run the following command to add audit_backlog_limit=to GRUB_CMDLINE_LINUX:\n\n# grubby --update-kernel ALL --args 'audit_backlog_limit='\n\nExample:\n\n# grubby --update-kernel ALL --args 'audit_backlog_limit=8192'",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/sbin/grubby --info=ALL | /bin/grep -Po '\\\\baudit_backlog_limit=@BACKLOG_SIZE@\\\\b' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_24": {
        "description": "4.1.2.1 Ensure audit log storage size is configured",
        "info": "Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.\n\nIt is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.",
        "solution": "Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:\n\nmax_log_file =",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*max_log_file[\\\\s]*=",
        "expect": "^[\\\\s]*max_log_file[\\\\s]*=[\\\\s]*@MAX_AUDIT_LOG_FILE_SIZE@[\\\\s]*$"
    },
    "custom_item_25": {
        "description": "4.1.2.2 Ensure audit logs are not automatically deleted",
        "info": "The max_log_file_action setting determines how to handle the audit log file reaching the max file size. A value of keep_logs will rotate the logs but never delete old logs.\n\nIn high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.",
        "solution": "Set the following parameter in /etc/audit/auditd.conf:\n\nmax_log_file_action = keep_logs",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*max_log_file_action[\\\\s]*=",
        "expect": "^[\\\\s]*max_log_file_action[\\\\s]*=[\\\\s]*(?i)keep_logs(?-i)[\\\\s]*$"
    },
    "custom_item_26": {
        "description": "auditd.conf - space_left_action",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)email(?-i)[\\\\s]*$"
    },
    "custom_item_27": {
        "description": "auditd.conf - action_mail_acct",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)action_mail_acct(?-i)[\\\\s]*=",
        "expect": "^[\\\\s]*(?i)action_mail_acct(?-i)[\\\\s]*=[\\\\s]*(?i)root(?-i)[\\\\s]*$"
    },
    "custom_item_28": {
        "description": "auditd.conf - admin_space_left_action",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*admin_space_left_action[\\\\s]*=",
        "expect": "^[\\\\s]*admin_space_left_action[\\\\s]*=[\\\\s]*(?i)(halt|single)(?-i)[\\\\s]*$"
    },
    "custom_item_29": {
        "description": "auditctl /etc/sudoers",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\\\\/etc\\\\/sudoers / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\"; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_30": {
        "description": "auditctl /etc/sudoers.d",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\\\\/etc\\\\/sudoers\\\\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\"; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_31": {
        "description": "rules.d /etc/sudoers",
        "cmd": "/bin/awk '/^ *-w/ &&/\\\\/etc\\\\/sudoers / &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\"; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_32": {
        "description": "rules.d /etc/sudoers.d",
        "cmd": "/bin/awk '/^ *-w/ &&/\\\\/etc\\\\/sudoers\\\\.d/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\"; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_33": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_34": {
        "description": "rules.d b32 mount",
        "cmd": "UID_MIN=$(/bin/awk  '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk  \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_35": {
        "description": "rules.d b64 mount",
        "cmd": "UID_MIN=$(/bin/awk  '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk  \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_36": {
        "description": "auditctl b64 mount",
        "cmd": "UID_MIN=$(/bin/awk  '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk  \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_37": {
        "description": "auditctl b32 mount",
        "cmd": "UID_MIN=$(/bin/awk  '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk  \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_38": {
        "description": "rules.d b64 mount",
        "cmd": "UID_MIN=$(/bin/awk  '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk  \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_39": {
        "description": "auditctl b32 mount",
        "cmd": "UID_MIN=$(/bin/awk  '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk  \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -S/ &&/mount/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_40": {
        "description": "rules.d /var/log/btmp",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/var\\\\/log\\\\/btmp/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_41": {
        "description": "auditctl /var/run/utmp",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/var\\\\/run\\\\/utmp/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_42": {
        "description": "rules.d /var/log/wtmp",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/var\\\\/log\\\\/wtmp/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_43": {
        "description": "auditctl /var/log/btmp",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/var\\\\/log\\\\/btmp/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_44": {
        "description": "auditctl /var/log/wtmp",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/var\\\\/log\\\\/wtmp/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_45": {
        "description": "rules.d /var/run/utmp",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/var\\\\/run\\\\/utmp/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_46": {
        "description": "auditctl /var/run/faillock",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/var\\\\/run\\\\/faillock/) &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_47": {
        "description": "auditctl /var/log/lastlog",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/var\\\\/log\\\\/lastlog/) &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_48": {
        "description": "rules.d /var/log/lastlog",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/var\\\\/log\\\\/lastlog/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_49": {
        "description": "rules.d /var/run/faillock",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/var\\\\/run\\\\/faillock/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_50": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_51": {
        "description": "rules.d b32 renameat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/renameat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_52": {
        "description": "rules.d b32 unlinkat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlinkat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_53": {
        "description": "rules.d b64 unlinkat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlinkat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_54": {
        "description": "auditctl b32 rename",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/rename/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_55": {
        "description": "rules.d b64 unlink",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlink/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_56": {
        "description": "auditctl b64 unlinkat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlinkat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_57": {
        "description": "rules.d b64 rename",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/rename/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_58": {
        "description": "rules.d b64 renameat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/renameat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_59": {
        "description": "rules.d b32 rename",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/rename/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_60": {
        "description": "auditctl b64 renameat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/renameat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_61": {
        "description": "auditctl b32 renameat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/renameat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_62": {
        "description": "rules.d b32 unlink",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlink/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_63": {
        "description": "auditctl b32 unlinkat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlinkat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_64": {
        "description": "auditctl b64 rename",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/rename/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_65": {
        "description": "auditctl b64 unlink",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlink/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_66": {
        "description": "auditctl b32 unlink",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlink/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_67": {
        "description": "rules.d b32 renameat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/renameat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_68": {
        "description": "rules.d b32 unlinkat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlinkat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_69": {
        "description": "auditctl b32 rename",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/rename/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_70": {
        "description": "rules.d b32 rename",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/rename/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_71": {
        "description": "auditctl b32 renameat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/renameat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_72": {
        "description": "rules.d b32 unlink",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlink/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_73": {
        "description": "auditctl b32 unlinkat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlinkat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_74": {
        "description": "auditctl b32 unlink",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/unlink/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_75": {
        "description": "rules.d /usr/share/selinux",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/usr\\\\/share\\\\/selinux/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_76": {
        "description": "auditctl /etc/selinux",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/selinux/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_77": {
        "description": "auditctl /usr/share/selinux",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/usr\\\\/share\\\\/selinux/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_78": {
        "description": "rules.d /etc/selinux",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/selinux/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_79": {
        "description": "rules.d /usr/bin/chcon",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n  \"${UID_MIN}\" ] && /bin/awk  \"/^ *-a *always,exit/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\\\\/usr\\\\/bin\\\\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_80": {
        "description": "rules.d /usr/bin/chcon",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n  \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk  \"/^ *-a *always,exit/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\\\\/usr\\\\/bin\\\\/chcon/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-S[\\\\s]+all[\\\\s]+-F[\\\\s]+path=/usr/bin/chcon[\\\\s]+-F[\\\\s]+perm=x[\\\\s]+-F[\\\\s]+auid>=1000[\\\\s]+-F[\\\\s]+auid!=-1[\\\\s]+-F[\\\\s]+key=perm_chng[\\\\s]*$"
    },
    "custom_item_81": {
        "description": "rules.d /usr/bin/setfacl",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n  \"${UID_MIN}\" ] && /bin/awk  \"/^ *-a *always,exit/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -F *perm=x/  &&/ -F *path=\\\\/usr\\\\/bin\\\\/setfacl/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf  \"ERROR: Variable 'UID_MIN' is unset. \\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_82": {
        "description": "auditctl /usr/bin/setfacl",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\\\\/usr\\\\/bin\\\\/setfacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_83": {
        "description": "auditctl /usr/bin/chacl",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\\\\/usr\\\\/bin\\\\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_84": {
        "description": "rules.d /usr/bin/chacl",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\\\\/usr\\\\/bin\\\\/chacl/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_85": {
        "description": "rules.d /usr/sbin/usermod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\\\\/usr\\\\/sbin\\\\/usermod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+path=/usr/sbin/usermod[\\\\s]+-F[\\\\s]+perm=x[\\\\s]+-F[\\\\s]+auid>=1000[\\\\s]+-F[\\\\s]+auid!=unset[\\\\s]+-k[\\\\s]usermod$"
    },
    "custom_item_86": {
        "description": "auditctl /usr/sbin/usermod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -F *perm=x/  &&/ -F *path=\\\\/usr\\\\/sbin\\\\/usermod/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-S[\\\\s]+all[\\\\s]+-F[\\\\s]+path=/usr/sbin/usermod[\\\\s]+-F[\\\\s]+perm=x[\\\\s]+-F[\\\\s]+auid>=1000[\\\\s]+-F[\\\\s]+auid!=-1[\\\\s]+-F[\\\\s]key=usermod$"
    },
    "custom_item_87": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_88": {
        "description": "auditctl finit_module",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b[2346]{2}/ &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) &&/ -S/ &&(/finit_module/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_89": {
        "description": "rules.d b64 create_module",
        "cmd": "/bin/awk '/^ *-a *always,exit/  &&/ -F *arch=b64/  &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/)  &&/ -S/  &&(/create_module/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_90": {
        "description": "auditctl create_module",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b[2346]{2}/ &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) &&/ -S/ &&(/create_module/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_91": {
        "description": "rules.d init_module",
        "cmd": "/bin/awk '/^ *-a *always,exit/  &&/ -F *arch=b64/  &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/)  &&/ -S/  &&(/init_module/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_92": {
        "description": "auditctl delete_module",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b[2346]{2}/ &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) &&/ -S/ &&(/delete_module/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_93": {
        "description": "rules.d b64 finit_module",
        "cmd": "/bin/awk '/^ *-a *always,exit/  &&/ -F *arch=b64/  &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/)  &&/ -S/  &&(/finit_module/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_94": {
        "description": "auditctl query_module",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b[2346]{2}/ &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) &&/ -S/ &&(/query_module/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_95": {
        "description": "rules.d /usr/bin/kmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/  &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/)  &&/ -F *auid>=${UID_MIN}/  &&/ -F *perm=x/  &&/ -F *path=\\\\/usr\\\\/bin\\\\/kmod/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_96": {
        "description": "rules.d b64 delete_module",
        "cmd": "/bin/awk '/^ *-a *always,exit/  &&/ -F *arch=b64/  &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/)  &&/ -S/  &&(/delete_module/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_97": {
        "description": "auditctl /usr/bin/kmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&/ -F *perm=x/ &&/ -F *path=\\\\/usr\\\\/bin\\\\/kmod/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_98": {
        "description": "auditctl init_module",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b[2346]{2}/ &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) &&/ -S/ &&(/init_module/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_99": {
        "description": "check symlinks",
        "cmd": "S_LINKS=$(ls -l /usr/sbin/lsmod /usr/sbin/rmmod /usr/sbin/insmod /usr/sbin/modinfo /usr/sbin/modprobe /usr/sbin/depmod | /bin/grep -v \" -> ../bin/kmod\" || true) && if [[ \"${S_LINKS}\" != \"\" ]]; then printf \"Issue with symlinks: ${S_LINKS}\\\\n\"; else printf \"OK\\\\n\"; fi",
        "expect": "^OK$"
    },
    "custom_item_100": {
        "description": "rules.d b64 query_module",
        "cmd": "/bin/awk '/^ *-a *always,exit/  &&/ -F *arch=b64/  &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/)  &&/ -S/  &&(/query_module/)  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_101": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_102": {
        "description": "rules.d b64 execve",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_103": {
        "description": "rules.d b32 execve",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_104": {
        "description": "auditctl b32 execve",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_105": {
        "description": "auditctl b64 execve",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_106": {
        "description": "rules.d b32 execve",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_107": {
        "description": "auditctl b32 execve",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&(/ -C *euid!=uid/||/ -C *uid!=euid/) &&/ -S *execve/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_108": {
        "description": "4.1.3.20 Ensure the audit configuration is immutable",
        "info": "Set system audit so that audit rules cannot be modified with auditctl Setting the flag \"-e 2\" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.\n\nNote: This setting will require the system to be rebooted to update the active auditd configuration settings.\n\nIn immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.",
        "solution": "Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the following line at the end of the file:\n\n-e 2",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|6.2,CSCv7|6.3,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/grep -Ph -- '^\\\\h*-e\\\\h+2\\\\b' /etc/audit/rules.d/*.rules | tail -1",
        "expect": "^[\\\\s]*-e[\\\\s]+2[\\\\s]*$"
    },
    "custom_item_109": {
        "description": "4.1.3.21 Ensure the running and on disk configuration is the same",
        "info": "The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ.\n\nNote: Due to the limitations of augenrules and auditctl it is not absolutely guaranteed that loading the rule sets via augenrules --load will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.\n\nConfiguration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.",
        "solution": "If the rules are not aligned across all three () areas, run the following command to merge and load all rules:\n\n# augenrules --load\n\nCheck if reboot is required.\n\nif [[ $(auditctl -s | grep \"enabled\") =~ \"2\" ]]; then echo \"Reboot required to load rules\"; fi",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|2M,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/sbin/augenrules --check",
        "expect": "^[\\\\s]*/sbin/augenrules:[\\\\s]*No change[\\\\s]*$"
    },
    "custom_item_110": {
        "description": "sudo log",
        "cmd": "SUDO_LOG_FILE_ESCAPED=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/\"//g' -e 's|/|\\\\\\\\/|g'); [ -n \"${SUDO_LOG_FILE_ESCAPED}\" ] && awk \"/^ *-w/ &&/\"${SUDO_LOG_FILE_ESCAPED}\"/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_111": {
        "description": "auditctl sudo log",
        "cmd": "SUDO_LOG_FILE_ESCAPED=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/\"//g' -e 's|/|\\\\\\\\/|g'); [ -n \"${SUDO_LOG_FILE_ESCAPED}\" ] && auditctl -l | /bin/awk \"/^ *-w/ &&/\"${SUDO_LOG_FILE_ESCAPED}\"/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_112": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_113": {
        "description": "rules.d b64 adjtimex settimeofday clock_settime",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&/ -S/ &&(/adjtimex/ ||/settimeofday/ ||/clock_settime/ ) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_114": {
        "description": "rules.d b32 adjtimex settimeofday clock_settime",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/adjtimex/ ||/settimeofday/ ||/clock_settime/ ) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_115": {
        "description": "auditctl /etc/localtime",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\\\\/etc\\\\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_116": {
        "description": "rules.d /etc/localtime",
        "cmd": "/bin/awk '/^ *-w/ &&/\\\\/etc\\\\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_117": {
        "description": "auditctl b64 adjtimex settimeofday clock_settime",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&/ -S/ &&(/adjtimex/ ||/settimeofday/ ||/clock_settime/ ) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_118": {
        "description": "auditctl b32 adjtimex settimeofday clock_settime",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/adjtimex/ ||/settimeofday/ ||/clock_settime/ ) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_119": {
        "description": "rules.d b32 adjtimex settimeofday clock_settime",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/adjtimex/ ||/settimeofday/ ||/clock_settime/ ) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_120": {
        "description": "auditctl /etc/localtime",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&/\\\\/etc\\\\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_121": {
        "description": "rules.d /etc/localtime",
        "cmd": "/bin/awk '/^ *-w/ &&/\\\\/etc\\\\/localtime/ &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_122": {
        "description": "auditctl b32 adjtimex settimeofday clock_settime",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/adjtimex/ ||/settimeofday/ ||/clock_settime/ ) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_123": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_124": {
        "description": "auditctl b64 setdomainname",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&/ -S/ &&(/setdomainname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_125": {
        "description": "rules.d /etc/issue",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_126": {
        "description": "auditctl /etc/issue",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_127": {
        "description": "auditctl b64 sethostname",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&/ -S/ &&(/sethostname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_128": {
        "description": "rules.d b32 sethostname",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/sethostname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_129": {
        "description": "auditctl /etc/issue.net",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue.net/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_130": {
        "description": "rules.d /etc/issue.net",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue.net/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_131": {
        "description": "auditctl b32 setdomainname",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/setdomainname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_132": {
        "description": "rules.d /etc/sysconfig/network-scripts",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network-scripts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_133": {
        "description": "auditctl /etc/sysconfig/network-scripts",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network-scripts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_134": {
        "description": "rules.d /etc/sysconfig/network",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network /) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_135": {
        "description": "auditctl b32 sethostname",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/sethostname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_136": {
        "description": "auditctl /etc/sysconfig/network",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network /) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_137": {
        "description": "rules.d b64 setdomainname",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&/ -S/ &&(/setdomainname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_138": {
        "description": "rules.d /etc/hosts",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/hosts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_139": {
        "description": "auditctl /etc/hosts",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/hosts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_140": {
        "description": "rules.d b32 setdomainname",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/setdomainname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_141": {
        "description": "rules.d b64 sethostname",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b64/ &&/ -S/ &&(/sethostname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_142": {
        "description": "rules.d /etc/issue",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_143": {
        "description": "auditctl /etc/issue",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_144": {
        "description": "rules.d b32 sethostname",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/sethostname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_145": {
        "description": "auditctl /etc/issue.net",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue.net/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_146": {
        "description": "rules.d /etc/issue.net",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/issue.net/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_147": {
        "description": "auditctl b32 setdomainname",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/setdomainname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_148": {
        "description": "rules.d /etc/sysconfig/network-scripts",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network-scripts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_149": {
        "description": "auditctl /etc/sysconfig/network-scripts",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network-scripts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_150": {
        "description": "rules.d /etc/sysconfig/network",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network /) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_151": {
        "description": "auditctl b32 sethostname",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/sethostname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_152": {
        "description": "auditctl /etc/sysconfig/network",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/sysconfig\\\\/network /) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_153": {
        "description": "rules.d /etc/hosts",
        "cmd": "/bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/hosts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_154": {
        "description": "auditctl /etc/hosts",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/ &&(/\\\\/etc\\\\/hosts/) &&/ +-p *wa/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_155": {
        "description": "rules.d b32 setdomainname",
        "cmd": "/bin/awk '/^ *-a *always,exit/ &&/ -F *arch=b32/ &&/ -S/ &&(/setdomainname/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_156": {
        "description": "auditctl",
        "cmd": "RUNNING=$(/sbin/auditctl -l); [ -n \"${RUNNING}\" ] && for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv \"noexec|nosuid\" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find \"${PARTITION}\" -xdev -perm /6000 -type f); do printf -- \"${RUNNING}\" | /bin/grep -q \"${PRIVILEGED}\" && printf \"OK: '${PRIVILEGED}' found in auditing rules.\\\\n\" || printf \"Warning: '${PRIVILEGED}' not found in running configuration.\\\\n\"; done; done | /bin/awk '{print} END { if ($1 ~ \"Warning\") print \"Fail - Warnings found\"; else print \"Pass - No warning entries found\" }'",
        "expect": "^Pass - No warning entries found$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_157": {
        "description": "/etc/audit/rules.d",
        "cmd": "for PARTITION in $(/bin/findmnt -n -l -k -it $(/bin/awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | /bin/grep -Pv \"noexec|nosuid\" | /bin/awk '{print $1}'); do for PRIVILEGED in $(/bin/find \"${PARTITION}\" -xdev -perm /6000 -type f); do /bin/grep -qr \"${PRIVILEGED}\" /etc/audit/rules.d && printf \"OK: '${PRIVILEGED}' found in auditing rules.\\\\n\" || printf \"Warning: '${PRIVILEGED}' not found in on disk configuration.\\\\n\"; done; done | /bin/awk '{print} END { if ($1 ~ \"Warning\") print \"Fail - Warnings found\"; else print \"Pass - No warning entries found\" }'",
        "expect": "^Pass - No warning entries found$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_158": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_159": {
        "description": "auditctl b64 creat open truncate EPERM",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EPERM/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_160": {
        "description": "rules.d b32 creat open truncate EPERM",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EPERM/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'|| printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_161": {
        "description": "rules.d b64 creat open truncate EACCES",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EACCES/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'|| printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_162": {
        "description": "auditctl b32 creat open truncate EACCES",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EACCES/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_163": {
        "description": "rules.d b64 creat open truncate EPERM",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EPERM/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'|| printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_164": {
        "description": "rules.d b32 creat open truncate EACCES",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EACCES/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'|| printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_165": {
        "description": "auditctl b32 creat open truncate EPERM",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EPERM/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_166": {
        "description": "auditctl b64 creat open truncate EACCES",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EACCES/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_167": {
        "description": "rules.d b32 creat open truncate EPERM",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EPERM/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'|| printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_168": {
        "description": "auditctl b32 creat open truncate EACCES",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EACCES/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_169": {
        "description": "rules.d b32 creat open truncate EACCES",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EACCES/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'|| printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_170": {
        "description": "auditctl b32 creat open truncate EPERM",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -F *auid>=${UID_MIN}/ &&(/ -F *exit=-EPERM/) &&/ -S/ &&/creat/ &&/open/ &&/truncate/ &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_171": {
        "description": "rules.d /etc/shadow",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/shadow/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_172": {
        "description": "auditctl /etc/group",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/group/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_173": {
        "description": "rules.d /etc/group",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/group/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_174": {
        "description": "auditctl /etc/shadow",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/shadow/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_175": {
        "description": "rules.d /etc/passwd",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/passwd/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_176": {
        "description": "auditctl /etc/security/opasswd",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/security\\\\/opasswd/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_177": {
        "description": "rules.d  /etc/security/opasswd",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/security\\\\/opasswd/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_178": {
        "description": "rules.d /etc/gshadow",
        "cmd": "/bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/gshadow/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_179": {
        "description": "auditctl /etc/gshadow",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/gshadow/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_180": {
        "description": "auditctl /etc/passwd",
        "cmd": "/sbin/auditctl -l | /bin/awk '/^ *-w/  &&(/\\\\/etc\\\\/passwd/)  &&/ +-p *wa/  &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_181": {
        "description": "check if 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_182": {
        "description": "auditctl b32 fchmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_183": {
        "description": "rules.d b64 setxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/setxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_184": {
        "description": "auditctl b64 fchmodat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmodat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_185": {
        "description": "rules.d b32 setxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/setxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_186": {
        "description": "rules.d b64 lchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_187": {
        "description": "rules.d b64 fsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_188": {
        "description": "rules.d b64 lsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_189": {
        "description": "rules.d b64 chmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_190": {
        "description": "auditctl b32 fchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_191": {
        "description": "auditctl b32 lchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_192": {
        "description": "rules.d b64 fremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_193": {
        "description": "auditctl b32 chown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_194": {
        "description": "auditctl b64 lremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_195": {
        "description": "rules.d b32 fchmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_196": {
        "description": "rules.d b32 chown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_197": {
        "description": "auditctl b64 fchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_198": {
        "description": "auditctl b64 fsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_199": {
        "description": "rules.d b32 lsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_200": {
        "description": "auditctl b32 setxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/setxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_201": {
        "description": "rules.d b32 removexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/removexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_202": {
        "description": "rules.d b64 fchmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_203": {
        "description": "rules.d b64 fchownat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchownat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_204": {
        "description": "rules.d b32 fchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_205": {
        "description": "rules.d b32 fsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_206": {
        "description": "auditctl b64 lsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_207": {
        "description": "auditctl b64 removexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/removexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_208": {
        "description": "auditctl b32 fremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_209": {
        "description": "auditctl b64 chown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_210": {
        "description": "auditctl b32 lsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_211": {
        "description": "rules.d b64 removexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/removexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_212": {
        "description": "rules.d b32 lchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_213": {
        "description": "auditctl b64 chmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_214": {
        "description": "auditctl b32 lremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_215": {
        "description": "auditctl b64 setxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/setxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_216": {
        "description": "auditctl b64 fchownat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchownat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_217": {
        "description": "rules.d b32 chmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_218": {
        "description": "rules.d b64 fchmodat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmodat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_219": {
        "description": "rules.d b64 chown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_220": {
        "description": "auditctl b32 fsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_221": {
        "description": "rules.d b32 fremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_222": {
        "description": "auditctl b64 lchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_223": {
        "description": "auditctl b64 fremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_224": {
        "description": "auditctl b64 fchmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_225": {
        "description": "auditctl b32 chmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_226": {
        "description": "auditctl b32 removexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/removexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_227": {
        "description": "rules.d b32 lremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_228": {
        "description": "rules.d b32 fchownat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchownat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_229": {
        "description": "auditctl b32 fchmodat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmodat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_230": {
        "description": "rules.d b64 lremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_231": {
        "description": "rules.d b64 fchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b64/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_232": {
        "description": "auditctl b32 fchownat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchownat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_233": {
        "description": "rules.d b32 fchmodat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmodat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_234": {
        "description": "auditctl b32 fchmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_235": {
        "description": "rules.d b32 setxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/setxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_236": {
        "description": "auditctl b32 fchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_237": {
        "description": "auditctl b32 lchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_238": {
        "description": "auditctl b32 chown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_239": {
        "description": "rules.d b32 fchmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_240": {
        "description": "rules.d b32 chown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_241": {
        "description": "rules.d b32 lsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_242": {
        "description": "auditctl b32 setxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/setxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_243": {
        "description": "rules.d b32 removexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/removexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_244": {
        "description": "rules.d b32 fchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_245": {
        "description": "rules.d b32 fsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_246": {
        "description": "auditctl b32 fremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_247": {
        "description": "auditctl b32 lsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_248": {
        "description": "rules.d b32 lchown",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lchown/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_249": {
        "description": "auditctl b32 lremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_250": {
        "description": "rules.d b32 chmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_251": {
        "description": "auditctl b32 fsetxattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fsetxattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_252": {
        "description": "rules.d b32 fremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_253": {
        "description": "auditctl b32 chmod",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/chmod/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_254": {
        "description": "auditctl b32 removexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/removexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_255": {
        "description": "rules.d b32 lremovexattr",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/lremovexattr/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_256": {
        "description": "rules.d b32 fchownat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchownat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_257": {
        "description": "auditctl b32 fchmodat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmodat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_258": {
        "description": "auditctl b32 fchownat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /sbin/auditctl -l | /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchownat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\\\n\"",
        "expect": "^pass$"
    },
    "custom_item_259": {
        "description": "rules.d b32 fchmodat",
        "cmd": "UID_MIN=$(/bin/awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs); [ -n \"${UID_MIN}\" ] && /bin/awk \"/^ *-a *always,exit/ &&/ -F *arch=b32/ &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) &&/ -S/ &&/ -F *auid>=${UID_MIN}/ &&(/fchmodat/) &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)\" /etc/audit/rules.d/*.rules | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}' || printf \"ERROR: Variable 'UID_MIN' is unset.\\n\"",
        "expect": "^pass$"
    },
    "custom_item_260": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_261": {
        "description": "sshd -T - X11Forwarding",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)X11Forwarding(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)X11Forwarding(?-i)[\\\\s]+\"?yes\"?[\\\\s]*$"
    },
    "custom_item_262": {
        "description": "sshd -T - x11forwarding",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^x11forwarding)\"; done | /bin/awk 'BEGIN {f=0} /x11forwarding/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_263": {
        "description": "openssh-server is installed",
        "rpm": "openssh-server-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_264": {
        "description": "ssh config files - AllowTcpForwarding",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)AllowTcpForwarding(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)AllowTcpForwarding(?-i)[\\\\s]+\"?yes\"?[\\\\s]*$"
    },
    "custom_item_265": {
        "description": "sshd -T - AllowTcpForwarding",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^allowtcpforwarding)\"; done | /bin/awk 'BEGIN {f=0} /allowtcpforwarding/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_266": {
        "description": "5.3.4 Ensure users must provide password for escalation",
        "info": "The operating system must be configured so that users must provide a password for privilege escalation.\n\nWithout re-authentication, users may access resources or perform tasks for which they do not have authorization.\n\nWhen operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.",
        "solution": "Based on the outcome of the audit procedure, use visudo -fto edit the relevant sudoers file.\n\nRemove any line with occurrences of NOPASSWD tags in the file.\n\nImpact:\n\nThis will prevent automated processes from being able to elevate privileges. To include Ansible and AWS builds",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|2A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "file": "/etc/sudoers /etc/sudoers.d/*",
        "regex": "^[^#]*NOPASSWD",
        "expect": "^[^#]*NOPASSWD"
    },
    "custom_item_267": {
        "description": "6.1.1 Audit system file permissions",
        "info": "The RPM package manager has a number of useful options. One of these, the -V for RPM option, can be used to verify that system packages are correctly installed. The -V option can be used to verify a particular package or to verify all system packages. If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option:\n\nCode Meaning\nS File size differs.\nM File mode differs (includes permissions and file type).\n5 The MD5 checksum differs.\nD The major and minor version numbers differ on a device file.\nL A mismatch occurs in a link.\nU The file ownership differs.\nG The file group owner differs.\nT The file time (mtime) differs.\n\nThe rpm -qf command can be used to determine which package a particular file belongs to. For example the following commands determines which package the /bin/bash file belongs to:\n\n# rpm -qf /bin/bash\nbash-4.1.2-29.el6.x86_64\n# rpm -S /bin/bash\nbash: /bin/bash\n\nTo verify the settings for the package that controls the /bin/bash file, run the following:\n\n# rpm -V bash-4.1.2-29.el6.x86_64\n.M....... /bin/bash\n# rpm --verify bash\n??5?????? c /etc/bash.bashrc\n\nNote that you can feed the output of the rpm -qf command to the rpm -V command:\n\n# rpm -V `rpm -qf /etc/passwd`\n.M...... c /etc/passwd\nS.5....T c /etc/printcap\n\nIt is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Correct any discrepancies found and rerun the audit until output is clean or risk is mitigated or accepted.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|2M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/files/3742",
        "cmd": "/bin/rpm -Va --nomtime --nosize --nomd5 --nolinkto | /bin/awk '{ print } END { if (NR==0) print \"none\" }'",
        "expect": "^none$"
    }
}