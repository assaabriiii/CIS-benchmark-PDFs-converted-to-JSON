{
    "custom_item_1": {
        "description": "5.4.2.1 Ensure root is the only UID 0 account",
        "info": "Any account with UID 0 has superuser privileges on the system.\n\nThis access must be limited to only the default root account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.",
        "solution": "Run the following command to change the root account UID to 0 :\n\n# usermod -u 0 root\n\nModify any users other than root with UID 0 and assign them a new UID.",
        "reference": "800-171|3.1.5,800-53|AC-6(5),800-53r5|AC-6(5),CN-L3|8.1.10.6(a),CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM32,NIAv2|AM33,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "passwd_zero_uid"
    },
    "custom_item_2": {
        "description": "5.4.2.3 Ensure group root is the only GID 0 group",
        "info": "The groupmod command can be used to specify which group the root group belongs to. This affects permissions of files that are group owned by the root group.\n\nUsing GID 0 for the root group helps prevent root group owned files from accidentally becoming accessible to non-privileged users.",
        "solution": "Run the following command to set the root group's GID to 0 :\n\n# groupmod -g 0 root\n\nRemove any groups other than the root group with GID 0 or assign them a new GID if appropriate.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "group_zero_gid"
    },
    "custom_item_3": {
        "description": "7.1.11 Ensure world writable files and directories are secured",
        "info": "World writable files are the least secure. Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity. See the chmod(2) man page for more information.\n\nSetting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.\n\nData in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.\n\nThis feature prevents the ability to delete or rename files in world writable directories (such as /tmp ) that are owned by another user.",
        "solution": "- World Writable Files:\n - It is recommended that write access is removed from other with the command ( chmod o-w), but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.\n\n - World Writable Directories:\n - Set the sticky bit on all world writable directories with the command ( chmod a+t)\n\nRun the following script to:\n\n - Remove other write permission from any world writable files\n - Add the sticky bit to all world writable directories\n\n#!/usr/bin/env bash\n\n{\n   l_smask='01000'\n   a_path=(); a_arr=() # Initialize array\n   a_path=(! -path \"/run/user/*\" -a ! -path \"/proc/*\" -a ! -path \"*/containerd/*\" -a ! -path \"*/kubelet/pods/*\" -a ! -path \"/sys/*\" -a ! -path \"/snap/*\")\n   while read -r l_bfs; do\n      a_path+=( -a ! -path \"\"$l_bfs\"/*\")\n   done < <(findmnt -Dkerno fstype,target | awk '$1 ~ /^\\s*(nfs|proc|smb|vfat)/ {print $2}')\n   # Populate array with files\n   while IFS= read -r -d $'\\0' l_file; do\n      [ -e \"$l_file\" ] && a_arr+=(\"$(stat -Lc '%n^%#a' \"$l_file\")\")\n   done < <(find / \\( \"${a_path[@]}\" \\) \\( -type f -o -type d \\) -perm -0002 -print0 2>/dev/null)\n   while IFS=\"^\" read -r l_fname l_mode; do # Test files in the array\n      if [ -f \"$l_fname\" ]; then # Remove excess permissions from WW files\n         echo -e \" - File: \\\\\"$l_fname\\\\\" is mode: \\\\\"$l_mode\\\\\"\\n - removing write permission on \\\\\"$l_fname\\\\\" from \\\\\"other\\\\\"\"\n         chmod o-w \"$l_fname\"\n      fi\n      if [ -d \"$l_fname\" ]; then\n         if [ ! $(( $l_mode & $l_smask )) -gt 0 ]; then # Add sticky bit\n            echo -e \" - Directory: \\\\\"$l_fname\\\\\" is mode: \\\\\"$l_mode\\\\\" and doesn't have the sticky bit set\\n - Adding the sticky bit\"\n            chmod a+t \"$l_fname\"\n         fi\n      fi\n   done < <(printf '%s\\n' \"${a_arr[@]}\")\n   unset a_path; unset a_arr # Remove array\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "find_world_writeable_files",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_4": {
        "description": "7.1.12 Ensure no files or directories without an owner and a group exist",
        "info": "Administrators may delete users or groups from the system and neglect to remove all files and/or directories owned by those users or groups.\n\nA new user or group who is assigned a deleted user's user ID or group ID may then end up \"owning\" a deleted user or group's files, and thus have more access on the system than was intended.",
        "solution": "Remove or set ownership and group ownership of these files and/or directories to an active user on the system as appropriate.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "find_orphan_files",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_5": {
        "description": "7.1.13 Ensure SUID and SGID files are reviewed",
        "info": "The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID or SGID program is to enable users to perform functions (such as changing their password) that require root privileges.\n\nThere are valid reasons for SUID and SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different checksum than what from the package. This is an indication that the binary may have been replaced.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Ensure that no rogue SUID or SGID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these binaries.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1M,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "find_suid_sgid_files",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_6": {
        "description": "7.2.3 Ensure all groups in /etc/passwd exist in /etc/group",
        "info": "Over time, system administration errors and changes can lead to groups being defined in /etc/passwd but not in /etc/group\n\nGroups defined in the /etc/passwd file but not in the /etc/group file pose a threat to system security since group permissions are not properly managed.",
        "solution": "Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-2,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv8|3.3,CSCv8|14.6,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "passwd_invalid_gid"
    },
    "custom_item_7": {
        "description": "7.2.5 Ensure no duplicate UIDs exist",
        "info": "Although the useradd program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the /etc/passwd file and change the UID field.\n\nUsers must be assigned unique UIDs for accountability and to ensure appropriate access protections.",
        "solution": "Based on the results of the audit script, establish unique UIDs and review all files owned by the shared UIDs to determine which UID they are supposed to belong to.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "passwd_duplicate_uid"
    },
    "custom_item_8": {
        "description": "7.2.6 Ensure no duplicate GIDs exist",
        "info": "Although the groupadd program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the /etc/group file and change the GID field.\n\nUser groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.",
        "solution": "Based on the results of the audit script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "group_duplicate_gid"
    },
    "custom_item_9": {
        "description": "7.2.7 Ensure no duplicate user names exist",
        "info": "Although the useradd program will not let you create a duplicate user name, it is possible for an administrator to manually edit the /etc/passwd file and change the user name.\n\nIf a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd For example, if \"test4\" has a UID of 1000 and a subsequent \"test4\" entry has a UID of 2000, logging in as \"test4\" will use UID 1000. Effectively, the UID is shared, which is a security problem.",
        "solution": "Based on the results of the audit script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "passwd_duplicate_username"
    },
    "custom_item_10": {
        "description": "7.2.8 Ensure no duplicate group names exist",
        "info": "Although the groupadd program will not let you create a duplicate group name, it is possible for an administrator to manually edit the /etc/group file and change the group name.\n\nIf a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/group Effectively, the GID is shared, which is a security problem.",
        "solution": "Based on the results of the audit script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.",
        "reference": "800-171|3.5.5,800-171|3.5.6,800-53|IA-4d.,800-53r5|IA-4d.,CN-L3|8.1.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-4d.,LEVEL|1A,NESA|T5.5.2,NIAv2|AM14a,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "name": "group_duplicate_name"
    },
    "custom_item_11": {
        "description": "Debian found",
        "file": "/etc/debian_version",
        "regex": "@PLATFORM_VERSION@",
        "expect": "@PLATFORM_VERSION@"
    },
    "custom_item_12": {
        "description": "1.1.1.1 Ensure cramfs kernel module is not available",
        "info": "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the cramfs module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install cramfs /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory\n - Unload cramfs from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist cramfs in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"cramfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n   {\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"cramfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\n\n -- INFO --\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n   }",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_13": {
        "description": "1.1.1.2 Ensure freevxfs kernel module is not available",
        "info": "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the freevxfs module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install freevxfs /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory\n - Unload freevxfs from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist freevxfs in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"freevxfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n   {\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"freevxfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\n\n -- INFO --\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n   }",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_14": {
        "description": "1.1.1.3 Ensure hfs kernel module is not available",
        "info": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the hfs module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install hfs /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory\n - Unload hfs from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist hfs in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"hfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"hfs\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_15": {
        "description": "1.1.1.4 Ensure hfsplus kernel module is not available",
        "info": "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the hfsplus module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install hfsplus /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory\n - Unload hfsplus from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist hfsplus in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"hfsplus\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"hfsplus\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_16": {
        "description": "1.1.1.5 Ensure jffs2 kernel module is not available",
        "info": "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.",
        "solution": "Run the following script to disable the jffs2 module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install jffs2 /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory\n - Unload jffs2 from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist jffs2 in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"jffs2\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"jffs2\" # set module name\n   l_mtype=\"fs\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_17": {
        "description": "1.1.1.8 Ensure usb-storage kernel module is not available",
        "info": "USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.\n\nRestricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.",
        "solution": "Run the following script to disable the usb-storage module:\n\n-IF- the module is available in the running kernel:\n\n - Create a file ending inconf with install usb-storage /bin/false in the /etc/modprobe.d/ directory\n - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory\n - Unload usb-storage from the kernel\n\n-IF- available in ANY installed kernel:\n\n - Create a file ending inconf with blacklist usb-storage in the /etc/modprobe.d/ directory\n\n-IF- the kernel module is not available on the system or pre-compiled into the kernel:\n\n - No remediation is necessary\n\n#!/usr/bin/env bash\n\n{\n   l_mname=\"usb-storage\" # set module name\n   l_mtype=\"drivers\" # set module type\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_fix()\n   {\n      # If the module is currently loadable, add \"install {MODULE_NAME} /bin/false\" to a file in \"/etc/modprobe.d\"\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\h*install|\\b$l_mname)\\b\" <<< \"$l_loadable\")\"\n      if ! grep -Pq -- '^\\h*install \\/bin\\/(true|false)' <<< \"$l_loadable\"; then\n         echo -e \"\\n - setting module: \\\\\"$l_mname\\\\\" to be not loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   module_loaded_fix()\n   {\n      # If the module is currently loaded, unload the module\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \"\\n - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n   }\n   module_deny_fix()\n   {\n      # If the module isn't deny listed, denylist the module\n      if ! modprobe --showconfig | grep -Pq -- \"^\\h*blacklist\\h+$l_mpname\\b\"; then\n         echo -e \"\\n - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mpname\".conf\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" exists in \\\\\"$l_mdir\\\\\"\\n - checking if disabled...\"\n         module_deny_fix\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_fix\n            module_loaded_fix\n         fi\n      else\n         echo -e \"\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\\n\"\n      fi\n   done\n   echo -e \"\\n - remediation of module: \\\\\"$l_mname\\\\\" complete\\n\"\n}\n\nImpact:\n\nDisabling the usb-storage module will disable any usage of USB storage devices.\n\nIf requirements and local site policy allow the use of such devices, other solutions should be configured accordingly instead. One example of a commonly used solution is USBGuard",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|13.7,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\" l_dl=\"\" # Unset output variables\n   l_mname=\"usb-storage\" # set module name\n   l_mtype=\"drivers\" # set module type\n   l_searchloc=\"/lib/modprobe.d/*.conf /usr/local/lib/modprobe.d/*.conf /run/modprobe.d/*.conf /etc/modprobe.d/*.conf\"\n   l_mpath=\"/lib/modules/**/kernel/$l_mtype\"\n   l_mpname=\"$(tr '-' '_' <<< \"$l_mname\")\"\n   l_mndir=\"$(tr '-' '/' <<< \"$l_mname\")\"\n\n   module_loadable_chk()\n   {\n      # Check if the module is currently loadable\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      [ \"$(wc -l <<< \"$l_loadable\")\" -gt \"1\" ] && l_loadable=\"$(grep -P -- \"(^\\\\h*install|\\\\b$l_mname)\\\\b\" <<< \"$l_loadable\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n   }\n   module_loaded_chk()\n   {\n      # Check if the module is currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n   }\n   module_deny_chk()\n   {\n      # Check if the module is deny listed\n      l_dl=\"y\"\n      if modprobe --showconfig | grep -Pq -- '^\\\\h*blacklist\\\\h+'\"$l_mpname\"'\\\\b'; then\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pls -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" $l_searchloc)\\\\\"\"\n      else\n         l_output2=\"$l_output2\\\\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   # Check if the module exists on the system\n   for l_mdir in $l_mpath; do\n      if [ -d \"$l_mdir/$l_mndir\" ] && [ -n \"$(ls -A $l_mdir/$l_mndir)\" ]; then\n         l_output3=\"$l_output3\\\\n  - \\\\\"$l_mdir\\\\\"\"\n         [ \"$l_dl\" != \"y\" ] && module_deny_chk\n         if [ \"$l_mdir\" = \"/lib/modules/$(uname -r)/kernel/$l_mtype\" ]; then\n            module_loadable_chk\n            module_loaded_chk\n         fi\n      else\n         l_output=\"$l_output\\\\n - module: \\\\\"$l_mname\\\\\" doesn't exist in \\\\\"$l_mdir\\\\\"\"\n      fi\n   done\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_output3\" ] && echo -e \"\\\\n\\\\n -- INFO --\\\\n - module: \\\\\"$l_mname\\\\\" exists in:$l_output3\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_18": {
        "description": "1.1.2.1.1 Ensure /tmp is a separate partition",
        "info": "The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.\n\n-IF- an entry for /tmp exists in /etc/fstab it will take precedence over entries in systemd default unit file.\n\nNote: In an environment where the main system is diskless and connected to iSCSI, entries in /etc/fstab may not take precedence.\n\n/tmp can be configured to use tmpfs\n\ntmpfs puts everything into the kernel internal caches and grows and shrinks to accommodate the files it contains and is able to swap unneeded pages out to swap space. It has maximum size limits which can be adjusted on the fly via mount -o remount\n\nSince tmpfs lives completely in the page cache and on swap, all tmpfs pages will be shown as \"Shmem\" in /proc/meminfo and \"Shared\" in free Notice that these counters also include shared memory. The most reliable way to get the count is using df and du\n\ntmpfs has three mount options for sizing:\n\n - size : The limit of allocated bytes for this tmpfs instance. The default is half of your physical RAM without swap. If you oversize your tmpfs instances the machine will deadlock since the OOM handler will not be able to free that memory.\n - nr_blocks : The same as size, but in blocks of PAGE_SIZE.\n - nr_inodes : The maximum number of inodes for this instance. The default is half of the number of your physical RAM pages, or (on a machine with highmem) the number of lowmem RAM pages, whichever is the lower.\n\nThese parameters accept a suffix k, m or g and can be changed on remount. The size parameter also accepts a suffix %to limit this tmpfs instance to that percentage of your physical RAM. The default, when neither size nor nr_blocks is specified, is size=50%\n\nMaking /tmp its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /tmp useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken, and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.\n\nThis can be accomplished by either mounting tmpfs to /tmp or creating a separate partition for /tmp",
        "solution": "First ensure that systemd is correctly configured to ensure that /tmp will be mounted at boot time.\n\n# systemctl unmask tmp.mount\n\nFor specific configuration requirements of the /tmp mount for your environment, modify /etc/fstab\n\nExample of using tmpfs with specific mount options:\n\ntmpfs\t/tmp\ttmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0\n\nNote: the size=2G is an example of setting a specific size for tmpfs\n\nExample of using a volume or disk with specific mount options. The source location of the volume or disk will vary depending on your environment:/tmpdefaults,nodev,nosuid,noexec 0 0\n\nImpact:\n\nBy design files saved to /tmp should have no expectation of surviving a reboot of the system. tmpfs is ram based and all files stored to tmpfs will be lost when the system is rebooted.\n\nIf files need to be persistent through a reboot, they should be saved to /var/tmp not /tmp\n\nSince the /tmp directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to tmpfs or a separate partition.\n\nRunning out of /tmp space is a problem regardless of what kind of filesystem lies under it, but in a configuration where /tmp is not a separate file system it will essentially have the whole disk available, as the default installation only creates a single / partition. On the other hand, a RAM-based /tmp (as with tmpfs ) will almost certainly be much smaller, which can lead to applications filling up the filesystem much more easily. Another alternative is to create a dedicated partition for /tmp from a separate volume or disk. One of the downsides of a disk-based dedicated partition is that it will be slower than tmpfs which is RAM-based.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/findmnt -nk /tmp",
        "expect": "^[\\\\s]*/tmp[\\\\s]+"
    },
    "custom_item_19": {
        "description": "1.1.2.1.2 Ensure nodev option set on /tmp partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /tmp",
        "solution": "- IF - a separate partition exists for /tmp\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp partition.\n\nExample:/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /tmp with the configured options:\n\n# mount -o remount /tmp",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/tmp[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_20": {
        "description": "1.1.2.1.3 Ensure nosuid option set on /tmp partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /tmp",
        "solution": "- IF - a separate partition exists for /tmp\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp partition.\n\nExample:/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /tmp with the configured options:\n\n# mount -o remount /tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/tmp[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_21": {
        "description": "1.1.2.1.4 Ensure noexec option set on /tmp partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /tmp",
        "solution": "- IF - a separate partition exists for /tmp\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp partition.\n\nExample:/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /tmp with the configured options:\n\n# mount -o remount /tmp\n\nImpact:\n\nSetting the noexec option on /tmp may prevent installation and/or updating of some 3rd party software.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/tmp[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_22": {
        "description": "1.1.2.2.1 Ensure /dev/shm is a separate partition",
        "info": "The /dev/shm directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC).\n\nMaking /dev/shm its own file system allows an administrator to set additional mount options such as the noexec option on the mount, making /dev/shm useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system setuid program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.\n\nThis can be accomplished by mounting tmpfs to /dev/shm",
        "solution": "For specific configuration requirements of the /dev/shm mount for your environment, modify /etc/fstab\n\nExample:\n\ntmpfs\t/dev/shm\ttmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0\n\nImpact:\n\nSince the /dev/shm directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.\n\n/dev/shm utilizing tmpfs can be resized using the size={size} parameter in the relevant entry in /etc/fstab",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "[\\\\s]+/dev/shm[\\\\s]+"
    },
    "custom_item_23": {
        "description": "1.1.2.2.2 Ensure nodev option set on /dev/shm partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /dev/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in /dev/shm partitions.",
        "solution": "- IF - a separate partition exists for /dev/shm\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.\n\nExample:\n\ntmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /dev/shm with the configured options:\n\n# mount -o remount /dev/shm\n\nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_24": {
        "description": "1.1.2.2.3 Ensure nosuid option set on /dev/shm partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSetting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.",
        "solution": "- IF - a separate partition exists for /dev/shm\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /dev/shm partition. See the fstab(5) manual page for more information.\n\nExample:\n\ntmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /dev/shm with the configured options:\n\n# mount -o remount /dev/shm\n\nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_25": {
        "description": "1.1.2.2.4 Ensure noexec option set on /dev/shm partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSetting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.",
        "solution": "- IF - a separate partition exists for /dev/shm\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /dev/shm partition.\n\nExample:\n\ntmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /dev/shm with the configured options:\n\n# mount -o remount /dev/shm\n\nNote: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is used as shared memory space by applications.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/dev/shm[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_26": {
        "description": "1.1.2.3.2 Ensure nodev option set on /home partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /home filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /home",
        "solution": "- IF - a separate partition exists for /home\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home partition.\n\nExample:/homedefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /home with the configured options:\n\n# mount -o remount /home",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/home[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_27": {
        "description": "1.1.2.3.3 Ensure nosuid option set on /home partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /home filesystem is only intended for user file storage, set this option to ensure that users cannot create setuid files in /home",
        "solution": "- IF - a separate partition exists for /home\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /home partition.\n\nExample:/homedefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /home with the configured options:\n\n# mount -o remount /home",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/home[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_28": {
        "description": "1.1.2.4.2 Ensure nodev option set on /var partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var",
        "solution": "- IF - a separate partition exists for /var\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var partition.\n\nExample:/vardefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var with the configured options:\n\n# mount -o remount /var",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_29": {
        "description": "1.1.2.4.3 Ensure nosuid option set on /var partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var",
        "solution": "- IF - a separate partition exists for /var\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var partition.\n\nExample:/vardefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var with the configured options:\n\n# mount -o remount /var",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_30": {
        "description": "1.1.2.5.2 Ensure nodev option set on /var/tmp partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var/tmp filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/tmp",
        "solution": "- IF - a separate partition exists for /var/tmp\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/tmp partition.\n\nExample:/var/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/tmp with the configured options:\n\n# mount -o remount /var/tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/tmp[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_31": {
        "description": "1.1.2.5.3 Ensure nosuid option set on /var/tmp partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot create setuid files in /var/tmp",
        "solution": "- IF - a separate partition exists for /var/tmp\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/tmp partition.\n\nExample:/var/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/tmp with the configured options:\n\n# mount -o remount /var/tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/tmp[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_32": {
        "description": "1.1.2.5.4 Ensure noexec option set on /var/tmp partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /var/tmp filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from /var/tmp",
        "solution": "- IF - a separate partition exists for /var/tmp\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/tmp partition.\n\nExample:/var/tmpdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/tmp with the configured options:\n\n# mount -o remount /var/tmp",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/tmp[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_33": {
        "description": "1.1.2.6.2 Ensure nodev option set on /var/log partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var/log filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log",
        "solution": "- IF - a separate partition exists for /var/log\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log partition.\n\nExample:/var/logdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log with the configured options:\n\n# mount -o remount /var/log",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_34": {
        "description": "1.1.2.6.3 Ensure nosuid option set on /var/log partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var/log filesystem is only intended for log files, set this option to ensure that users cannot create setuid files in /var/log",
        "solution": "- IF - a separate partition exists for /var/log\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log partition.\n\nExample:/var/logdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log with the configured options:\n\n# mount -o remount /var/log",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_35": {
        "description": "1.1.2.6.4 Ensure noexec option set on /var/log partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /var/log filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from /var/log",
        "solution": "- IF - a separate partition exists for /var/log\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log partition.\n\nExample:/var/logdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log with the configured options:\n\n# mount -o remount /var/log",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_36": {
        "description": "1.1.2.7.2 Ensure nodev option set on /var/log/audit partition",
        "info": "The nodev mount option specifies that the filesystem cannot contain special devices.\n\nSince the /var/log/audit filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in /var/log/audit",
        "solution": "- IF - a separate partition exists for /var/log/audit\n\nEdit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /var/log/audit partition.\n\nExample:/var/log/auditdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log/audit with the configured options:\n\n# mount -o remount /var/log/audit",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log/audit[\\\\s]+",
        "expect": "nodev"
    },
    "custom_item_37": {
        "description": "1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition",
        "info": "The nosuid mount option specifies that the filesystem cannot contain setuid files.\n\nSince the /var/log/audit filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create setuid files in /var/log/audit",
        "solution": "- IF - a separate partition exists for /var/log/audit\n\nEdit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /var/log/audit partition.\n\nExample:/var/log/auditdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log/audit with the configured options:\n\n# mount -o remount /var/log/audit",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log/audit[\\\\s]+",
        "expect": "nosuid"
    },
    "custom_item_38": {
        "description": "1.1.2.7.4 Ensure noexec option set on /var/log/audit partition",
        "info": "The noexec mount option specifies that the filesystem cannot contain executable binaries.\n\nSince the /var/log/audit filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from /var/log/audit",
        "solution": "- IF - a separate partition exists for /var/log/audit\n\nEdit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /var/log/audit partition.\n\nExample:/var/log/auditdefaults,rw,nosuid,nodev,noexec,relatime 0 0\n\nRun the following command to remount /var/log/audit with the configured options:\n\n# mount -o remount /var/log/audit",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/proc/self/mountinfo",
        "regex": "[\\\\s]+/var/log/audit[\\\\s]+",
        "expect": "noexec"
    },
    "custom_item_39": {
        "description": "1.2.1.1 Ensure GPG keys are configured",
        "info": "Most package managers implement GPG key signing to verify package integrity during installation.\n\nIt is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Update your package manager GPG keys in accordance with site policy.",
        "reference": "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/apt-key list",
        "expect": "^Manual Review Required$"
    },
    "custom_item_40": {
        "description": "1.2.1.2 Ensure package manager repositories are configured",
        "info": "Systems need to have package manager repositories configured to ensure they receive the latest patches and updates.\n\nIf a system's package repositories are misconfigured important patches may not be identified or a rogue repository could introduce compromised software.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure your package manager repositories according to site policy.",
        "reference": "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/apt-cache policy",
        "expect": "^Manual Review Required$"
    },
    "custom_item_41": {
        "description": "1.2.2.1 Ensure updates, patches, and additional security software are installed",
        "info": "Periodically patches are released for included software either due to security flaws or to include additional functionality.\n\nNewer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.",
        "solution": "Run the following command to update all packages following local site policy guidance on applying updates and patches:\n\n# apt update\n\n# apt upgrade\n  - OR -\n# apt dist-upgrade",
        "reference": "800-171|3.11.2,800-171|3.11.3,800-171|3.14.1,800-53|RA-5,800-53|SI-2,800-53|SI-2(2),800-53r5|RA-5,800-53r5|SI-2,800-53r5|SI-2(2),CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSCv7|3.4,CSCv7|3.5,CSCv8|7.3,CSCv8|7.4,CSF|DE.CM-8,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.IP-12,CSF|RS.CO-3,CSF|RS.MI-3,GDPR|32.1.b,GDPR|32.1.d,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.1,ITSG-33|RA-5,ITSG-33|SI-2,ITSG-33|SI-2(2),LEVEL|1M,NESA|M1.2.2,NESA|M5.4.1,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.1,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.1,PCI-DSSv4.0|6.3.3,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,SWIFT-CSCv1|2.2,SWIFT-CSCv1|2.7",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/apt-get -s upgrade | /bin/grep -Ev '(Reading|Building|Calculating)'",
        "expect": "^[\\\\s]*0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded"
    },
    "custom_item_42": {
        "description": "dpkg check apparmor-utils",
        "cmd": "/bin/dpkg -s apparmor-utils 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_43": {
        "description": "dpkg check apparmor",
        "cmd": "/bin/dpkg -s apparmor 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_44": {
        "description": "grub.cfg security=apparmor",
        "file": "/boot/grub/grub.cfg",
        "regex": "^[\\\\s]*linux[\\\\s]*",
        "expect": "(?i)security=apparmor(?-i)"
    },
    "custom_item_45": {
        "description": "grub.cfg apparmor=1",
        "file": "/boot/grub/grub.cfg",
        "regex": "^[\\\\s]*linux[\\\\s]*",
        "expect": "(?i)apparmor=1(?-i)"
    },
    "custom_item_46": {
        "description": "apparmor_status - processes are confined",
        "cmd": "/sbin/apparmor_status",
        "expect": "^[\\\\s]*0[\\\\s]+processes[\\\\s]+are[\\\\s]+unconfined"
    },
    "custom_item_47": {
        "description": "apparmor_status - profiles are loaded",
        "cmd": "/sbin/apparmor_status",
        "expect": "^[\\\\s]*[1-9][0-9]*[\\\\s]+profiles[\\\\s]+are[\\\\s]+loaded"
    },
    "custom_item_48": {
        "description": "grub.cfg superusers",
        "file": "/boot/grub/grub.cfg",
        "regex": "^[\\\\s]*set[\\\\s]*superusers[\\\\s]*=",
        "expect": "^[\\\\s]*set[\\\\s]*superusers[\\\\s]*=\".+\"*$"
    },
    "custom_item_49": {
        "description": "grub.cfg password",
        "file": "/boot/grub/grub.cfg",
        "regex": "^[\\\\s]*password",
        "expect": "^[\\\\s]*password_pbkdf2[\\\\s]+[^\\\\s]+[\\\\s]+[^\\\\s]+[\\\\s]*$"
    },
    "custom_item_50": {
        "description": "1.4.2 Ensure access to bootloader config is configured",
        "info": "The grub configuration file contains information on boot settings and passwords for unlocking boot options.\n\nSetting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.",
        "solution": "Run the following commands to set permissions on your grub configuration:\n\n# chown root:root /boot/grub/grub.cfg\n# chmod u-x,go-rwx /boot/grub/grub.cfg",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/boot/grub/grub.cfg",
        "owner": "root",
        "mask": "7177",
        "group": "root"
    },
    "custom_item_51": {
        "description": "1.5.1 Ensure address space layout randomization is enabled",
        "info": "Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.\n\nRandomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - kernel.randomize_va_space = 2\n\nExample:\n\n# printf \"%s\\n\" \"kernel.randomize_va_space = 2\" >> /etc/sysctl.d/60-kernel_sysctl.conf\n\nRun the following command to set the active kernel parameter:\n\n# sysctl -w kernel.randomize_va_space=2\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-53|SI-16,800-53r5|SI-16,CSCv7|8.3,CSCv8|10.5,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-16,LEVEL|1A",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"kernel.randomize_va_space=2\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_52": {
        "description": "1.5.2 Ensure ptrace_scope is restricted",
        "info": "The ptrace() system call provides a means by which one process (the \"tracer\") may observe and control the execution of another process (the \"tracee\"), and examine and change the tracee's memory and registers.\n\nIf one application is compromised, it would be possible for an attacker to attach to other running processes (e.g. Bash, Firefox, SSH sessions, GPG agent, etc) to extract additional credentials and continue to expand the scope of their attack.\n\nEnabling restricted mode will limit the ability of a compromised process to PTRACE_ATTACH on other processes running under the same user. With restricted mode, ptrace will continue to work with root user.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - kernel.yama.ptrace_scope = 1\n\nExample:\n\n# printf \"%s\\n\" \"kernel.yama.ptrace_scope = 1\" >> /etc/sysctl.d/60-kernel_sysctl.conf\n\nRun the following command to set the active kernel parameter:\n\n# sysctl -w kernel.yama.ptrace_scope=1\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"kernel.yama.ptrace_scope=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_53": {
        "description": "hard core 0",
        "file": "/etc/security/limits.conf /etc/security/limits.d/*",
        "regex": "^\\\\h*\\\\*\\\\h+hard\\\\h+core\\\\h+0\\\\b",
        "expect": "^\\\\h*\\\\*\\\\h+hard\\\\h+core\\\\h+0\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_54": {
        "description": "coredump installed",
        "cmd": "/bin/systemctl list-unit-files | /bin/grep coredump | /bin/awk '{print} END {if (NR == 0) print \"not installed\"; else print \"found\"}'",
        "expect": "^found$"
    },
    "custom_item_55": {
        "description": "fs.suid_dumpable",
        "cmd": "#!/bin/bash\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"fs.suid_dumpable=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_56": {
        "description": "1.5.4 Ensure prelink is not installed",
        "info": "prelink is a program that modifies ELF shared libraries and ELF dynamically linked binaries in such a way that the time needed for the dynamic linker to perform relocations at startup significantly decreases.\n\nThe prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to compromise a common library such as libc.",
        "solution": "Run the following command to restore binaries to normal:\n\n# prelink -ua\n\nUninstall prelink using the appropriate package manager or manual installation:\n\n# apt purge prelink",
        "reference": "800-171|3.1.7,800-171|3.3.1,800-171|3.3.2,800-53|AC-6(9),800-53|AU-2,800-53|AU-12,800-53r5|AC-6(9),800-53r5|AU-2,800-53r5|AU-12,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.3(a),CN-L3|8.1.10.6(a),CSCv7|14.9,CSCv8|3.14,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.3,ITSG-33|AC-6,ITSG-33|AU-2,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.1,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|5.1,SWIFT-CSCv1|6.4,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s prelink 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_57": {
        "description": "/etc/motd exist",
        "file": "/etc/motd"
    },
    "custom_item_58": {
        "description": "mrsv not included in /etc/motd",
        "file": "/etc/motd",
        "regex": "\\\\\\\\[mrsv]",
        "expect": "\\\\\\\\[mrsv]"
    },
    "custom_item_59": {
        "description": "banner text",
        "file": "/etc/motd",
        "content": "@BANNER_TEXT@"
    },
    "custom_item_60": {
        "description": "/etc/issue exist",
        "file": "/etc/issue"
    },
    "custom_item_61": {
        "description": "banner text",
        "file": "/etc/issue",
        "content": "@BANNER_TEXT@"
    },
    "custom_item_62": {
        "description": "mrsv not included in /etc/issue",
        "file": "/etc/issue",
        "regex": "\\\\\\\\[mrsv]",
        "expect": "\\\\\\\\[mrsv]"
    },
    "custom_item_63": {
        "description": "/etc/issue.net exist",
        "file": "/etc/issue.net"
    },
    "custom_item_64": {
        "description": "mrsv not included in /etc/issue.net",
        "file": "/etc/issue.net",
        "regex": "\\\\\\\\[mrsv]",
        "expect": "\\\\\\\\[mrsv]"
    },
    "custom_item_65": {
        "description": "banner text",
        "file": "/etc/issue.net",
        "content": "@BANNER_TEXT@"
    },
    "custom_item_66": {
        "description": "1.6.4 Ensure access to /etc/motd is configured",
        "info": "The contents of the /etc/motd file are displayed to users after login and function as a message of the day for authenticated users.\n\n- IF - the /etc/motd file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/motd :\n\n# chown root:root $(readlink -e /etc/motd)\n# chmod u-x,go-wx $(readlink -e /etc/motd)\n\n- OR -\n\nRun the following command to remove the /etc/motd file:\n\n# rm /etc/motd",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/motd",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_67": {
        "description": "1.6.5 Ensure access to /etc/issue is configured",
        "info": "The contents of the /etc/issue file are displayed to users prior to login for local terminals.\n\n- IF - the /etc/issue file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/issue :\n\n# chown root:root $(readlink -e /etc/issue)\n# chmod u-x,go-wx $(readlink -e /etc/issue)",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/issue",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_68": {
        "description": "1.6.6 Ensure access to /etc/issue.net is configured",
        "info": "The contents of the /etc/issue.net file are displayed to users prior to login for remote connections from configured services.\n\n- IF - the /etc/issue.net file does not have the correct access configured, it could be modified by unauthorized users with incorrect or misleading information.",
        "solution": "Run the following commands to set mode, owner, and group on /etc/issue.net :\n\n# chown root:root $(readlink -e /etc/issue.net)\n# chmod u-x,go-wx $(readlink -e /etc/issue.net)",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/issue.net",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_69": {
        "description": "1.7.10 Ensure XDCMP is not enabled",
        "info": "X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays\n\nXDMCP is inherently insecure.\n\n - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user\n - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.",
        "solution": "Edit all files returned by the audit and remove or commend out the Enable=true line in the [xdmcp] block:\n\nExample file:\n\n# GDM configuration storage\n#\n# See /usr/share/gdm/gdm.schemas for a list of available options.\n\n[daemon]\n# Uncomment the line below to force the login screen to use Xorg\n#WaylandEnable=false\n\n# Enabling automatic login\n# AutomaticLoginEnable = true\n# AutomaticLogin = user1\n\n# Enabling timed login\n# TimedLoginEnable = true\n# TimedLogin = user1\n# TimedLoginDelay = 10\n\n[security]\n\n[xdmcp]\n# Enable=true <- **This line should be removed or commented out**\n\n[chooser]\n\n[debug]\n# Uncomment the line below to turn on debugging\n# More verbose logs\n# Additionally lets the X server dump core if it crashes\n#Enable=true",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n{\n   while IFS= read -r l_file; do\n      /bin/awk '/\\\\[xdmcp\\\\]/{ f = 1;next } /\\\\[/{ f = 0 } f {if (/^\\\\s*Enable\\\\s*=\\\\s*true/) print \"The file: \\\\\"'\"$l_file\"'\\\\\" includes: \\\\\"\" $0 \"\\\\\" in the \\\\\"[xdmcp]\\\\\" block\"}' \"$l_file\"\n   done < <(/bin/grep -Psil -- '^\\\\h*\\\\[xdmcp\\\\]' /etc/{gdm3,gdm}/{custom,daemon}.conf)\n} | /bin/awk '{print} END {if (NR == 0) print \"Pass\"; else print \"Fail\"}'",
        "expect": "^Pass$"
    },
    "custom_item_70": {
        "description": "1.7.2 Ensure GDM login banner is configured",
        "info": "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.\n\nWarning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.",
        "solution": "- IF - GDM is installed:\n\nRun the following script to set and enable the text banner message on the login screen:\n\n#!/usr/bin/env bash\n\n{\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - checking configuration\"\n   done\n   if [ -n \"$l_pkgoutput\" ]; then\n\n      l_gdmprofile=\"gdm\" # Set this to desired profile name IaW Local site policy\n      l_bmessage=\"'Authorized uses only. All activity may be monitored and reported'\" # Set to desired banner message\n      if [ ! -f \"/etc/dconf/profile/$l_gdmprofile\" ]; then\n         echo \"Creating profile \\\\\"$l_gdmprofile\\\\\"\"\n         echo -e \"user-db:user\\nsystem-db:$l_gdmprofile\\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults\" > /etc/dconf/profile/$l_gdmprofile\n      fi\n      if [ ! -d \"/etc/dconf/db/$l_gdmprofile.d/\" ]; then\n         echo \"Creating dconf database directory \\\\\"/etc/dconf/db/$l_gdmprofile.d/\\\\\"\"\n         mkdir /etc/dconf/db/$l_gdmprofile.d/\n      fi\n      if ! grep -Piq '^\\h*banner-message-enable\\h*=\\h*true\\b' /etc/dconf/db/$l_gdmprofile.d/*; then\n         echo \"creating gdm keyfile for machine-wide settings\"\n         if ! grep -Piq -- '^\\h*banner-message-enable\\h*=\\h*' /etc/dconf/db/$l_gdmprofile.d/*; then\n            l_kfile=\"/etc/dconf/db/$l_gdmprofile.d/01-banner-message\"\n            echo -e \"\\n[org/gnome/login-screen]\\nbanner-message-enable=true\" >> \"$l_kfile\"\n         else\n            l_kfile=\"$(grep -Pil -- '^\\h*banner-message-enable\\h*=\\h*' /etc/dconf/db/$l_gdmprofile.d/*)\"\n            ! grep -Pq '^\\h*\\[org\\/gnome\\/login-screen\\]' \"$l_kfile\" && sed -ri '/^\\s*banner-message-enable/ i\\[org/gnome/login-screen]' \"$l_kfile\"\n            ! grep -Pq '^\\h*banner-message-enable\\h*=\\h*true\\b' \"$l_kfile\" && sed -ri 's/^\\s*(banner-message-enable\\s*=\\s*)(\\S+)(\\s*.*$)/\\1true \\3//' \"$l_kfile\"\n # sed -ri '/^\\s*\\[org\\/gnome\\/login-screen\\]/ a\\\\nbanner-message-enable=true' \"$l_kfile\"\n         fi\n      fi\n      if ! grep -Piq \"^\\h*banner-message-text=[\\'\\\\\"]+\\S+\" \"$l_kfile\"; then\n         sed -ri \"/^\\s*banner-message-enable/ a\\banner-message-text=$l_bmessage\" \"$l_kfile\"\n      fi\n      dconf update\n   else\n      echo -e \"\\n\\n - GNOME Desktop Manager isn't installed\\n - Recommendation is Not Applicable\\n - No remediation required\\n\"\n   fi\n}\n\nNotes:\n\n - There is no character limit for the banner message. gnome-shell autodetects longer stretches of text and enters two column mode.\n - The banner message cannot be read from an external file.",
        "reference": "800-171|3.1.9,800-53|AC-8,800-53r5|AC-8,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-8,LEVEL|1A,NESA|M1.3.6,TBA-FIISB|45.2.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_pkgoutput=\"\"\n   if command -v dpkg-query &> /dev/null; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm &> /dev/null; then\n      l_pq=\"rpm -q\"\n   fi\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" &> /dev/null && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\" l_output2=\"\"\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_gdmfile=\"$(grep -Prils '^\\\\h*banner-message-enable\\\\b' /etc/dconf/db/*.d)\"\n      if [ -n \"$l_gdmfile\" ]; then\n         # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n         l_gdmprofile=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_gdmfile\")\"\n         # Check if banner message is enabled\n         if grep -Pisq '^\\\\h*banner-message-enable=true\\\\b' \"$l_gdmfile\"; then\n            l_output=\"$l_output\\\\n - The \\\\\"banner-message-enable\\\\\" option is enabled in \\\\\"$l_gdmfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"banner-message-enable\\\\\" option is not enabled\"\n         fi\n         l_lsbt=\"$(grep -Pios '^\\\\h*banner-message-text=.*$' \"$l_gdmfile\")\"\n         if [ -n \"$l_lsbt\" ]; then\n            l_output=\"$l_output\\\\n - The \\\\\"banner-message-text\\\\\" option is set in \\\\\"$l_gdmfile\\\\\"\\\\n  - banner-message-text is set to:\\\\n  - \\\\\"$l_lsbt\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"banner-message-text\\\\\" option is not set\"\n         fi\n         if grep -Pq \"^\\\\h*system-db:$l_gdmprofile\" /etc/dconf/profile/\"$l_gdmprofile\"; then\n            l_output=\"$l_output\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile exists\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile doesn't exist\"\n         fi\n         if [ -f \"/etc/dconf/db/$l_gdmprofile\" ]; then\n            l_output=\"$l_output\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile exists in the dconf database\"\n         else\n            l_output2=\"$l_output2\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile doesn't exist in the dconf database\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - The \\\\\"banner-message-enable\\\\\" option isn't configured\"\n      fi\n   else\n      echo -e \"\\\\n\\\\n - GNOME Desktop Manager isn't installed\\\\n - Recommendation is Not Applicable\\\\n- Audit result:\\\\n  *** PASS ***\\\\n\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_71": {
        "description": "1.7.3 Ensure GDM disable-user-list option is enabled",
        "info": "GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.\n\nThe disable-user-list option controls if a list of users is displayed on the login screen\n\nDisplaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on.",
        "solution": "- IF - GDM is installed:\n\nRun the following script to enable the disable-user-list option:\n\nNote: the l_gdm_profile variable in the script can be changed if a different profile name is desired in accordance with local site policy.\n\n#!/usr/bin/env bash\n\n{\n   l_gdmprofile=\"gdm\"\n   if [ ! -f \"/etc/dconf/profile/$l_gdmprofile\" ]; then\n      echo \"Creating profile \\\\\"$l_gdmprofile\\\\\"\"\n      echo -e \"user-db:user\\nsystem-db:$l_gdmprofile\\nfile-db:/usr/share/$l_gdmprofile/greeter-dconf-defaults\" > /etc/dconf/profile/$l_gdmprofile\n   fi\n   if [ ! -d \"/etc/dconf/db/$l_gdmprofile.d/\" ]; then\n      echo \"Creating dconf database directory \\\\\"/etc/dconf/db/$l_gdmprofile.d/\\\\\"\"\n      mkdir /etc/dconf/db/$l_gdmprofile.d/\n   fi\n   if ! grep -Piq '^\\h*disable-user-list\\h*=\\h*true\\b' /etc/dconf/db/$l_gdmprofile.d/*; then\n      echo \"creating gdm keyfile for machine-wide settings\"\n      if ! grep -Piq -- '^\\h*\\[org\\/gnome\\/login-screen\\]' /etc/dconf/db/$l_gdmprofile.d/*; then\n         echo -e \"\\n[org/gnome/login-screen]\\n# Do not show the user list\\ndisable-user-list=true\" >> /etc/dconf/db/$l_gdmprofile.d/00-login-screen\n      else\n         sed -ri '/^\\s*\\[org\\/gnome\\/login-screen\\]/ a\\# Do not show the user list\\ndisable-user-list=true' $(grep -Pil -- '^\\h*\\[org\\/gnome\\/login-screen\\]' /etc/dconf/db/$l_gdmprofile.d/*)\n      fi\n   fi\n   dconf update\n}\n\nNote: When the user profile is created or changed, the user will need to log out and log in again before the changes will be applied.",
        "reference": "800-171|3.4.1,800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-171|3.13.1,800-171|3.13.2,800-53|CM-1,800-53|CM-2,800-53|CM-6,800-53|CM-7,800-53|CM-7(1),800-53|CM-9,800-53|SA-3,800-53|SA-8,800-53|SA-10,800-53r5|CM-1,800-53r5|CM-2,800-53r5|CM-6,800-53r5|CM-7,800-53r5|CM-7(1),800-53r5|CM-9,800-53r5|SA-3,800-53r5|SA-8,800-53r5|SA-10,CSF|DE.AE-1,CSF|ID.GV-1,CSF|ID.GV-3,CSF|PR.DS-7,CSF|PR.IP-1,CSF|PR.IP-2,CSF|PR.IP-3,CSF|PR.PT-3,GDPR|32.1.b,GDPR|32.4,HIPAA|164.306(a)(1),ITSG-33|CM-1,ITSG-33|CM-2,ITSG-33|CM-6,ITSG-33|CM-7,ITSG-33|CM-7(1),ITSG-33|CM-9,ITSG-33|SA-3,ITSG-33|SA-8,ITSG-33|SA-8a.,ITSG-33|SA-10,LEVEL|1A,NESA|M1.2.2,NESA|T1.2.1,NESA|T1.2.2,NESA|T3.2.5,NESA|T3.4.1,NESA|T4.5.3,NESA|T4.5.4,NESA|T7.2.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.1,NESA|T7.6.2,NESA|T7.6.3,NESA|T7.6.5,NIAv2|GS8b,NIAv2|SS3,NIAv2|SS15a,NIAv2|SS16,NIAv2|VL2,NIAv2|VL7a,NIAv2|VL7b,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|7.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_pkgoutput=\"\"\n   if command -v dpkg-query &> /dev/null; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm &> /dev/null; then\n      l_pq=\"rpm -q\"\n   fi\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" &> /dev/null && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   if [ -n \"$l_pkgoutput\" ]; then\n      output=\"\" output2=\"\"\n      l_gdmfile=\"$(grep -Pril '^\\\\h*disable-user-list\\\\h*=\\\\h*true\\\\b' /etc/dconf/db)\"\n      if [ -n \"$l_gdmfile\" ]; then\n         output=\"$output\\\\n - The \\\\\"disable-user-list\\\\\" option is enabled in \\\\\"$l_gdmfile\\\\\"\"\n         l_gdmprofile=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_gdmfile\")\"\n         if grep -Pq \"^\\\\h*system-db:$l_gdmprofile\" /etc/dconf/profile/\"$l_gdmprofile\"; then\n            output=\"$output\\\\n - The \\\\\"$l_gdmprofile\\\\\" exists\"\n         else\n            output2=\"$output2\\\\n - The \\\\\"$l_gdmprofile\\\\\" doesn't exist\"\n         fi\n         if [ -f \"/etc/dconf/db/$l_gdmprofile\" ]; then\n            output=\"$output\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile exists in the dconf database\"\n         else\n            output2=\"$output2\\\\n - The \\\\\"$l_gdmprofile\\\\\" profile doesn't exist in the dconf database\"\n         fi\n      else\n         output2=\"$output2\\\\n - The \\\\\"disable-user-list\\\\\" option is not enabled\"\n      fi\n      if [ -z \"$output2\" ]; then\n         echo -e \"$l_pkgoutput\\\\n- Audit result:\\\\n   *** PASS: ***\\\\n$output\\\\n\"\n      else\n         echo -e \"$l_pkgoutput\\\\n- Audit Result:\\\\n   *** FAIL: ***\\\\n$output2\\\\n\"\n         [ -n \"$output\" ] && echo -e \"$output\\\\n\"\n      fi\n   else\n      echo -e \"\\\\n\\\\n - GNOME Desktop Manager isn't installed\\\\n - Recommendation is Not Applicable\\\\n- Audit result:\\\\n  *** PASS ***\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_72": {
        "description": "gdm3 installed",
        "cmd": "/bin/dpkg -s gdm3 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok installed$"
    },
    "custom_item_73": {
        "description": "idle-delay",
        "cmd": "/bin/gsettings get org.gnome.desktop.session idle-delay",
        "expect": "(?i)^[\\\\s]*uint32[\\\\s]+([1-9]|[1-9][0-9]|[1-8][0-9]{2}|900)[\\\\s]*$"
    },
    "custom_item_74": {
        "description": "idle-delay",
        "cmd": "/bin/gsettings get org.gnome.desktop.screensaver lock-delay",
        "expect": "(?i)^[\\\\s]*uint32[\\\\s]+[0-5][\\\\s]*$"
    },
    "custom_item_75": {
        "description": "1.7.5 Ensure GDM screen locks cannot be overridden",
        "info": "GNOME Desktop Manager can lock down specific settings by using the lockdown mode in dconf to prevent users from changing specific settings.\n\nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.\n\nSetting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.\n\nWithout locking down the system settings, user settings take precedence over the system settings.",
        "solution": "- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/screensaver with the following content:\n\n# Lock desktop screensaver settings\n/org/gnome/desktop/session/idle-delay\n/org/gnome/desktop/screensaver/lock-delay- Update the system databases:\n\n# dconf update\n\nNote: Users must log out and back in again before the system-wide settings take effect.",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\n   # Determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space-separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\" l_output2=\"\"\n      # Check if the idle-delay is locked\n      if grep -Psrilq '^\\\\h*idle-delay\\\\h*=\\\\h*uint32\\\\h+\\\\d+\\\\b' /etc/dconf/db/*/; then\n         if grep -Prilq '\\\\/org\\\\/gnome\\\\/desktop\\\\/session\\\\/idle-delay\\\\b' /etc/dconf/db/*/locks; then\n            l_output=\"$l_output\\\\n - \\\\\"idle-delay\\\\\" is locked\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"idle-delay\\\\\" is not locked\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"idle-delay\\\\\" is not set so it cannot be locked\"\n      fi\n      # Check if the lock-delay is locked\n      if grep -Psrilq '^\\\\h*lock-delay\\\\h*=\\\\h*uint32\\\\h+\\\\d+\\\\b' /etc/dconf/db/*/; then\n         if grep -Prilq '\\\\/org\\\\/gnome\\\\/desktop\\\\/screensaver\\\\/lock-delay\\\\b' /etc/dconf/db/*/locks; then\n            l_output=\"$l_output\\\\n - \\\\\"lock-delay\\\\\" is locked\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"lock-delay\\\\\" is not locked\"\n         fi\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"lock-delay\\\\\" is not set so it cannot be locked\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   [ -n \"$l_pkgoutput\" ] && echo -e \"\\\\n$l_pkgoutput\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_76": {
        "description": "1.7.6 Ensure GDM automatic mounting of removable media is disabled",
        "info": "By default GNOME automatically mounts removable media when inserted as a convenience to the user.\n\nWith automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.",
        "solution": "- IF - GDM is installed:\n\nRun the following script to disable automatic mounting of media for all GNOME users:\n\n#!/usr/bin/env bash\n\n{\n   l_pkgoutput=\"\"\n   l_gpname=\"local\" # Set to desired dconf profile name (default is local)\n   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\\n\n   # determine system's package manager\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\h*automount\\b' /etc/dconf/db/*.d)\"\n      l_kfile2=\"$(grep -Prils -- '^\\h*automount-open\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n         echo \" - updating dconf profile name to \\\\\"$l_gpname\\\\\"\"\n      elif [ -f \"$l_kfile2\" ]; then\n         l_gpname=\"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile2\")\"\n         echo \" - updating dconf profile name to \\\\\"$l_gpname\\\\\"\"\n      fi\n      # check for consistency (Clean up configuration if needed)\n      if [ -f \"$l_kfile\" ] && [ \"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\" != \"$l_gpname\" ]; then\n         sed -ri \"/^\\s*automount\\s*=/s/^/# /\" \"$l_kfile\"\n         l_kfile=\"/etc/dconf/db/$l_gpname.d/00-media-automount\"\n      fi\n      if [ -f \"$l_kfile2\" ] && [ \"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile2\")\" != \"$l_gpname\" ]; then\n         sed -ri \"/^\\s*automount-open\\s*=/s/^/# /\" \"$l_kfile2\"\n      fi\n      [ -z \"$l_kfile\" ] && l_kfile=\"/etc/dconf/db/$l_gpname.d/00-media-automount\"\n      # Check if profile file exists\n      if grep -Pq -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*; then\n         echo -e \"\\n - dconf database profile exists in: \\\\\"$(grep -Pl -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*)\\\\\"\"\n      else\n         if [ ! -f \"/etc/dconf/profile/user\" ]; then\n            l_gpfile=\"/etc/dconf/profile/user\"\n         else\n            l_gpfile=\"/etc/dconf/profile/user2\"\n         fi\n         echo -e \" - creating dconf database profile\"\n         {\n            echo -e \"\\nuser-db:user\"\n            echo \"system-db:$l_gpname\"\n         } >> \"$l_gpfile\"\n      fi\n      # create dconf directory if it doesn't exists\n      l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n      if [ -d \"$l_gpdir\" ]; then\n         echo \" - The dconf database directory \\\\\"$l_gpdir\\\\\" exists\"\n      else\n         echo \" - creating dconf database directory \\\\\"$l_gpdir\\\\\"\"\n         mkdir \"$l_gpdir\"\n      fi\n      # check automount-open setting\n      if grep -Pqs -- '^\\h*automount-open\\h*=\\h*false\\b' \"$l_kfile\"; then\n         echo \" - \\\\\"automount-open\\\\\" is set to false in: \\\\\"$l_kfile\\\\\"\"\n      else\n         echo \" - creating \\\\\"automount-open\\\\\" entry in \\\\\"$l_kfile\\\\\"\"\n         ! grep -Psq -- '\\^\\h*\\[org\\/gnome\\/desktop\\/media-handling\\]\\b' \"$l_kfile\" && echo '[org/gnome/desktop/media-handling]' >> \"$l_kfile\"\n         sed -ri '/^\\s*\\[org\\/gnome\\/desktop\\/media-handling\\]/a \\\\nautomount-open=false' \"$l_kfile\"\n      fi\n      # check automount setting\n      if grep -Pqs -- '^\\h*automount\\h*=\\h*false\\b' \"$l_kfile\"; then\n         echo \" - \\\\\"automount\\\\\" is set to false in: \\\\\"$l_kfile\\\\\"\"\n      else\n         echo \" - creating \\\\\"automount\\\\\" entry in \\\\\"$l_kfile\\\\\"\"\n         ! grep -Psq -- '\\^\\h*\\[org\\/gnome\\/desktop\\/media-handling\\]\\b' \"$l_kfile\" && echo '[org/gnome/desktop/media-handling]' >> \"$l_kfile\"\n         sed -ri '/^\\s*\\[org\\/gnome\\/desktop\\/media-handling\\]/a \\\\nautomount=false' \"$l_kfile\"\n      fi\n      # update dconf database\n      dconf update\n   else\n      echo -e \"\\n - GNOME Desktop Manager package is not installed on the system\\n - Recommendation is not applicable\"\n   fi\n}\n\nImpact:\n\nThe use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_pkgoutput=\"\" l_output=\"\" l_output2=\"\"\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space seporated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\\\h*automount\\\\b' /etc/dconf/db/*.d)\"\n      l_kfile2=\"$(grep -Prils -- '^\\\\h*automount-open\\\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n      elif [ -f \"$l_kfile2\" ]; then\n         l_gpname=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile2\")\"\n      fi\n      # If the profile name exist, continue checks\n      if [ -n \"$l_gpname\" ]; then\n         l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n         # Check if profile file exists\n         if grep -Pq -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*; then\n            l_output=\"$l_output\\\\n - dconf database profile file \\\\\"$(grep -Pl -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*)\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - dconf database profile isn't set\"\n         fi\n         # Check if the dconf database file exists\n         if [ -f \"/etc/dconf/db/$l_gpname\" ]; then\n            l_output=\"$l_output\\\\n - The dconf database \\\\\"$l_gpname\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf database \\\\\"$l_gpname\\\\\" doesn't exist\"\n         fi\n         # check if the dconf database directory exists\n         if [ -d \"$l_gpdir\" ]; then\n            l_output=\"$l_output\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" exitst\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" doesn't exist\"\n         fi\n         # check automount setting\n         if grep -Pqrs -- '^\\\\h*automount\\\\h*=\\\\h*false\\\\b' \"$l_kfile\"; then\n            l_output=\"$l_output\\\\n - \\\\\"automount\\\\\" is set to false in: \\\\\"$l_kfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"automount\\\\\" is not set correctly\"\n         fi\n         # check automount-open setting\n         if grep -Pqs -- '^\\\\h*automount-open\\\\h*=\\\\h*false\\\\b' \"$l_kfile2\"; then\n            l_output=\"$l_output\\\\n - \\\\\"automount-open\\\\\" is set to false in: \\\\\"$l_kfile2\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"automount-open\\\\\" is not set correctly\"\n         fi\n      else\n         # Setings don't exist. Nothing further to check\n         l_output2=\"$l_output2\\\\n - neither \\\\\"automount\\\\\" or \\\\\"automount-open\\\\\" is set\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_77": {
        "description": "1.7.7 Ensure GDM disabling automatic mounting of removable media is not overridden",
        "info": "By default GNOME automatically mounts removable media when inserted as a convenience to the user.\n\nBy using the lockdown mode in dconf, you can prevent users from changing specific settings. To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.\n\nWith automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.",
        "solution": "- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-automount with the following content:\n\n[org/gnome/desktop/media-handling]\nautomount=false\nautomount-open=false- Update the systems databases:\n\n# dconf update\n\nImpact:\n\nThe use of portable hard drives is very common for workstation users",
        "reference": "800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|MP-2,800-53r5|MP-2,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   # Check if GNOME Desktop Manager is installed.\n   l_pkgoutput=\"\"\n   if command -v dpkg-query &> /dev/null; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm &> /dev/null; then\n      l_pq=\"rpm -q\"\n   fi\n   l_pcl=\"gdm gdm3\" # space-separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" &> /dev/null && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - Checking configuration\"\n   done\n   # Check for GDM configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      l_output=\"\"\n      l_output2=\"\"\n      # Search /etc/dconf/db/local.d/ for automount settings\n      l_automount_setting=$(grep -Psir -- '^\\\\h*automount=false\\\\b' /etc/dconf/db/local.d/*)\n      l_automount_open_setting=$(grep -Psir -- '^\\\\h*automount-open=false\\\\b' /etc/dconf/db/local.d/*)\n      # Check for automount setting\n      if [[ -n \"$l_automount_setting\" ]]; then\n         l_output=\"$l_output\\\\n - \\\\\"automount\\\\\" setting found\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"automount\\\\\" setting not found\"\n      fi\n      # Check for automount-open setting\n      if [[ -n \"$l_automount_open_setting\" ]]; then\n         l_output=\"$l_output\\\\n - \\\\\"automount-open\\\\\" setting found\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"automount-open\\\\\" setting not found\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures in l_output2, we pass\n   [ -n \"$l_pkgoutput\" ] && echo -e \"\\\\n$l_pkgoutput\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_78": {
        "description": "1.7.8 Ensure GDM autorun-never is enabled",
        "info": "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.\n\nMalware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.",
        "solution": "- IF - GDM is installed:\n\nRun the following script to set autorun-never to true for GDM users:\n\n#!/usr/bin/env bash\n\n{\n   l_pkgoutput=\"\" l_output=\"\" l_output2=\"\"\n   l_gpname=\"local\" # Set to desired dconf profile name (default is local)\n   # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\\n\n   # determine system's package manager\n   if command -v dpkg-query > /dev/null 2>&1; then\n      l_pq=\"dpkg-query -W\"\n   elif command -v rpm > /dev/null 2>&1; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" > /dev/null 2>&1 && l_pkgoutput=\"$l_pkgoutput\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\n - checking configuration\"\n   done\n   echo -e \"$l_pkgoutput\"\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\h*autorun-never\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n         echo \" - updating dconf profile name to \\\\\"$l_gpname\\\\\"\"\n      fi\n      [ ! -f \"$l_kfile\" ] && l_kfile=\"/etc/dconf/db/$l_gpname.d/00-media-autorun\"\n      # Check if profile file exists\n      if grep -Pq -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*; then\n         echo -e \"\\n - dconf database profile exists in: \\\\\"$(grep -Pl -- \"^\\h*system-db:$l_gpname\\b\" /etc/dconf/profile/*)\\\\\"\"\n      else\n         [ ! -f \"/etc/dconf/profile/user\" ] && l_gpfile=\"/etc/dconf/profile/user\" || l_gpfile=\"/etc/dconf/profile/user2\"\n         echo -e \" - creating dconf database profile\"\n         {\n            echo -e \"\\nuser-db:user\"\n            echo \"system-db:$l_gpname\"\n         } >> \"$l_gpfile\"\n      fi\n      # create dconf directory if it doesn't exists\n      l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n      if [ -d \"$l_gpdir\" ]; then\n         echo \" - The dconf database directory \\\\\"$l_gpdir\\\\\" exists\"\n      else\n         echo \" - creating dconf database directory \\\\\"$l_gpdir\\\\\"\"\n         mkdir \"$l_gpdir\"\n      fi\n      # check autorun-never setting\n      if grep -Pqs -- '^\\h*autorun-never\\h*=\\h*true\\b' \"$l_kfile\"; then\n         echo \" - \\\\\"autorun-never\\\\\" is set to true in: \\\\\"$l_kfile\\\\\"\"\n      else\n         echo \" - creating or updating \\\\\"autorun-never\\\\\" entry in \\\\\"$l_kfile\\\\\"\"\n         if grep -Psq -- '^\\h*autorun-never' \"$l_kfile\"; then\n            sed -ri 's/(^\\s*autorun-never\\s*=\\s*)(\\S+)(\\s*.*)$/\\1true \\3/' \"$l_kfile\"\n         else\n            ! grep -Psq -- '\\^\\h*\\[org\\/gnome\\/desktop\\/media-handling\\]\\b' \"$l_kfile\" && echo '[org/gnome/desktop/media-handling]' >> \"$l_kfile\"\n            sed -ri '/^\\s*\\[org\\/gnome\\/desktop\\/media-handling\\]/a \\\\nautorun-never=true' \"$l_kfile\"\n         fi\n      fi\n   else\n      echo -e \"\\n - GNOME Desktop Manager package is not installed on the system\\n - Recommendation is not applicable\"\n   fi\n   # update dconf database\n   dconf update\n}",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_pkgoutput=\"\" l_output=\"\" l_output2=\"\"\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   if command -v dpkg-query &> /dev/null; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm &> /dev/null; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" &> /dev/null && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n      echo -e \"$l_pkgoutput\"\n   done\n   # Check configuration (If applicable)\n   if [ -n \"$l_pkgoutput\" ]; then\n      echo -e \"$l_pkgoutput\"\n      # Look for existing settings and set variables if they exist\n      l_kfile=\"$(grep -Prils -- '^\\\\h*autorun-never\\\\b' /etc/dconf/db/*.d)\"\n      # Set profile name based on dconf db directory ({PROFILE_NAME}.d)\n      if [ -f \"$l_kfile\" ]; then\n         l_gpname=\"$(awk -F\\\\/ '{split($(NF-1),a,\".\");print a[1]}' <<< \"$l_kfile\")\"\n      fi\n      # If the profile name exist, continue checks\n      if [ -n \"$l_gpname\" ]; then\n         l_gpdir=\"/etc/dconf/db/$l_gpname.d\"\n         # Check if profile file exists\n         if grep -Pq -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*; then\n            l_output=\"$l_output\\\\n - dconf database profile file \\\\\"$(grep -Pl -- \"^\\\\h*system-db:$l_gpname\\\\b\" /etc/dconf/profile/*)\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - dconf database profile isn't set\"\n         fi\n         # Check if the dconf database file exists\n         if [ -f \"/etc/dconf/db/$l_gpname\" ]; then\n            l_output=\"$l_output\\\\n - The dconf database \\\\\"$l_gpname\\\\\" exists\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf database \\\\\"$l_gpname\\\\\" doesn't exist\"\n         fi\n         # check if the dconf database directory exists\n         if [ -d \"$l_gpdir\" ]; then\n            l_output=\"$l_output\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" exitst\"\n         else\n            l_output2=\"$l_output2\\\\n - The dconf directory \\\\\"$l_gpdir\\\\\" doesn't exist\"\n         fi\n         # check autorun-never setting\n         if grep -Pqrs -- '^\\\\h*autorun-never\\\\h*=\\\\h*true\\\\b' \"$l_kfile\"; then\n            l_output=\"$l_output\\\\n - \\\\\"autorun-never\\\\\" is set to true in: \\\\\"$l_kfile\\\\\"\"\n         else\n            l_output2=\"$l_output2\\\\n - \\\\\"autorun-never\\\\\" is not set correctly\"\n         fi\n      else\n         # Settings don't exist. Nothing further to check\n         l_output2=\"$l_output2\\\\n - \\\\\"autorun-never\\\\\" is not set\"\n      fi\n   else\n      l_output=\"$l_output\\\\n - GNOME Desktop Manager package is not installed on the system\\\\n  - Recommendation is not applicable\"\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_79": {
        "description": "1.7.9 Ensure GDM autorun-never is not overridden",
        "info": "The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.\n\nBy using the lockdown mode in dconf, you can prevent users from changing specific settings.\n\nTo lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.\n\nMalware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.",
        "solution": "- To prevent the user from overriding these settings, create the file /etc/dconf/db/local.d/locks/00-media-autorun with the following content:\n\n[org/gnome/desktop/media-handling]\nautorun-never=true- Update the systems databases:\n\n# dconf update",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   # Check if GNOME Desktop Manager is installed.  If package isn't installed, recommendation is Not Applicable\\\\n\n   # determine system's package manager\n   l_pkgoutput=\"\"\n   if command -v dpkg-query &> /dev/null; then\n      l_pq=\"dpkg-query -s\"\n   elif command -v rpm &> /dev/null; then\n      l_pq=\"rpm -q\"\n   fi\n   # Check if GDM is installed\n   l_pcl=\"gdm gdm3\" # Space separated list of packages to check\n   for l_pn in $l_pcl; do\n      $l_pq \"$l_pn\" &> /dev/null && l_pkgoutput=\"$l_pkgoutput\\\\n - Package: \\\\\"$l_pn\\\\\" exists on the system\\\\n - checking configuration\"\n   done\n   # Search /etc/dconf/db/ for [org/gnome/desktop/media-handling] settings)\n    l_desktop_media_handling=$(grep -Psir -- '^\\\\h*\\\\[org/gnome/desktop/media-handling\\\\]' /etc/dconf/db/*)\n    if [[ -n \"$l_desktop_media_handling\" ]]; then\n        l_output=\"\" l_output2=\"\"\n        l_autorun_setting=$(grep -Psir -- '^\\\\h*autorun-never=true\\\\b' /etc/dconf/db/local.d/*)\n        # Check for auto-run setting\n        if [[ -n \"$l_autorun_setting\" ]]; then\n            l_output=\"$l_output\\\\n - \\\\\"autorun-never\\\\\" setting found\"\n        else\n            l_output2=\"$l_output2\\\\n - \\\\\"autorun-never\\\\\" setting not found\"\n        fi\n    else\n         l_output=\"$l_output\\\\n - [org/gnome/desktop/media-handling] setting not found in /etc/dconf/db/*\"\n    fi\n   # Report results. If no failures output in l_output2, we pass\n\t[ -n \"$l_pkgoutput\" ] && echo -e \"\\\\n$l_pkgoutput\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_80": {
        "description": "autofs",
        "cmd": "/bin/dpkg -s autofs 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_81": {
        "description": "2.1.1 Ensure autofs services are not in use",
        "info": "autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.\n\nWith automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in the filesystem even if they lacked permissions to mount it themselves.",
        "solution": "Run the following commands to stop autofs.service and remove the autofs package:\n\n# systemctl stop autofs.service\n# apt purge autofs\n\n- OR -\n\n- IF - the autofs package is required as a dependency:\n\nRun the following commands to stop and mask autofs.service :\n\n# systemctl stop autofs.service\n# systemctl mask autofs.service\n\nImpact:\n\nThe use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.\n\nThere may be packages that are dependent on the autofs package. If the autofs package is removed, these dependent packages will be removed as well. Before removing the autofs package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the autofs.service leaving the autofs package installed.",
        "reference": "800-171|3.8.7,800-53|MP-7,800-53r5|MP-7,CN-L3|8.5.4.1(c),CSCv7|8.5,CSCv8|10.3,CSF|PR.PT-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.3.1,ISO/IEC-27001|A.8.3.3,LEVEL|1A,NESA|T1.4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s autofs 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_82": {
        "description": "autofs.service active",
        "cmd": "/bin/systemctl is-active autofs.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_83": {
        "description": "autofs.service enabled",
        "cmd": "/bin/systemctl is-enabled autofs.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_84": {
        "description": "ypserv installed",
        "cmd": "/bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_85": {
        "description": "ypserv.service active",
        "cmd": "/bin/systemctl is-active ypserv.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_86": {
        "description": "ypserv.service enabled",
        "cmd": "/bin/systemctl is-enabled ypserv.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_87": {
        "description": "2.1.10 Ensure nis server services are not in use",
        "info": "The Network Information Service (NIS) (formally known as Yellow Pages) is a client-server directory service protocol for distributing system configuration files. The NIS server is a collection of programs that allow for the distribution of configuration files. The NIS client ( ypbind ) was used to bind a machine to an NIS server and receive the distributed configuration files.\n\nypserv.service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that ypserv.service be removed and other, more secure services be used",
        "solution": "Run the following commands to stop ypserv.service and remove ypserv package:\n\n# systemctl stop ypserv.service\n# apt purge ypserv\n\n- OR -\n\n- IF - the ypserv package is required as a dependency:\n\nRun the following commands to stop and mask ypserv.service :\n\n# systemctl stop ypserv.service\n# systemctl mask ypserv.service\n\nImpact:\n\nThere may be packages that are dependent on the ypserv package. If the ypserv package is removed, these dependent packages will be removed as well. Before removing the ypserv package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the ypserv.service leaving the ypserv package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s ypserv 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_88": {
        "description": "Cups installed",
        "cmd": "/bin/dpkg -s cups 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_89": {
        "description": "cups.socket cups.service active",
        "cmd": "/bin/systemctl is-active cups.socket cups.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_90": {
        "description": "cups.socket cups.service enabled",
        "cmd": "/bin/systemctl is-enabled cups.socket cups.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_91": {
        "description": "2.1.11 Ensure print server services are not in use",
        "info": "The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.\n\nIf the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop cups.socket and cups.service and remove the cups package:\n\n# systemctl stop cups.socket cups.service\n# apt purge cups\n\n- OR -\n\n- IF - the cups package is required as a dependency:\n\nRun the following commands to stop and mask the cups.socket and cups.service :\n\n# systemctl stop cups.socket cups.service\n# systemctl mask cups.socket cups.service\n\nImpact:\n\nRemoving the cups package, or disabling cups.socket and/or cups.service will prevent printing from the system, a common task for workstation systems.\n\nThere may be packages that are dependent on the cups package. If the cups package is removed, these dependent packages will be removed as well. Before removing the cups package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask cups.socket and cups.service leaving the cups package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s cups 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_92": {
        "description": "rpcbind exist",
        "cmd": "/bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_93": {
        "description": "rpcbind.socket rpcbind.service active",
        "cmd": "/bin/systemctl is-active rpcbind.socket rpcbind.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_94": {
        "description": "rpcbind.socket rpcbind.service enabled",
        "cmd": "/bin/systemctl is-enabled rpcbind.socket rpcbind.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_95": {
        "description": "2.1.12 Ensure rpcbind services are not in use",
        "info": "The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind.service redirects the client to the proper port number so it can communicate with the requested service.\n\nPortmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.\n\nA small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended to remove rpcbind package to reduce the potential attack surface.",
        "solution": "Run the following commands to stop rpcbind.socket and rpcbind.service and remove the rpcbind package:\n\n# systemctl stop rpcbind.socket rpcbind.service\n# apt purge rpcbind\n\n- OR -\n\n- IF - the rpcbind package is required as a dependency:\n\nRun the following commands to stop and mask the rpcbind.socket and rpcbind.service :\n\n# systemctl stop rpcbind.socket rpcbind.service\n# systemctl mask rpcbind.socket rpcbind.service\n\nImpact:\n\nMany of the libvirt packages used by Enterprise Linux virtualization, and the nfs-utils package used for The Network File System (NFS), are dependent on the rpcbind package. If the rpcbind package is removed, these dependent packages will be removed as well. Before removing the rpcbind package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the rpcbind.socket and rpcbind.service leaving the rpcbind package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s rpcbind 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_96": {
        "description": "rsync installed",
        "cmd": "/bin/dpkg -s rsync 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_97": {
        "description": "active",
        "cmd": "/bin/systemctl is-active rsync.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_98": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled rsync.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_99": {
        "description": "2.1.13 Ensure rsync services are not in use",
        "info": "The rsync service can be used to synchronize files between systems over network links.\n\nrsync.service presents a security risk as the rsync protocol is unencrypted.\n\nThe rsync package should be removed to reduce the attack area of the system.",
        "solution": "Run the following commands to stop rsync.service and remove the rsync package:\n\n# systemctl stop rsync.service\n# apt purge rsync\n\n- OR -\n\n- IF - the rsync package is required as a dependency:\n\nRun the following commands to stop and mask rsync.service :\n\n# systemctl stop rsync.service\n# systemctl mask rsync.service\n\nImpact:\n\nThere may be packages that are dependent on the rsync package. If the rsync package is removed, these dependent packages will be removed as well. Before removing the rsync package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask rsync.service leaving the rsync package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s rsync 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_100": {
        "description": "installed",
        "cmd": "/bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_101": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled smbd.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_102": {
        "description": "active",
        "cmd": "/bin/systemctl is-active smbd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_103": {
        "description": "2.1.14 Ensure samba file server services are not in use",
        "info": "The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.\n\nIf there is no need to mount directories and file systems to Windows systems, then this service should be deleted to reduce the potential attack surface.",
        "solution": "Run the following commands to stop smbd.service and remove samba package:\n\n# systemctl stop smbd.service\n# apt purge samba\n\n- OR -\n\n- IF - the samba package is required as a dependency:\n\nRun the following commands to stop and mask the smbd.service :\n\n# systemctl stop smbd.service\n# systemctl mask smbd.service\n\nImpact:\n\nThere may be packages that are dependent on the samba package. If the samba package is removed, these dependent packages will be removed as well. Before removing the samba package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the smbd.service leaving the samba package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s samba 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_104": {
        "description": "installed",
        "cmd": "/bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_105": {
        "description": "active",
        "cmd": "/bin/systemctl is-active snmpd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR > 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_106": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled snmpd.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR > 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_107": {
        "description": "check /etc/snmp/snmpd.conf for group v1",
        "file": "/etc/snmp/snmpd.conf",
        "regex": "^[\\\\s]*group.*v1",
        "expect": "^[\\\\s]*group.*v1"
    },
    "custom_item_108": {
        "description": "check /etc/snmp/snmpd.conf for user authpriv",
        "file": "/etc/snmp/snmpd.conf",
        "regex": "^[\\\\s]*r[ow]user",
        "expect": "^[\\\\s]*r[ow]user.*authPriv"
    },
    "custom_item_109": {
        "description": "check /etc/snmp/snmpd.conf for com2sec",
        "file": "/etc/snmp/snmpd.conf",
        "regex": "^[\\\\s]*com2sec",
        "expect": "^[\\\\s]*com2sec.*(public|private)"
    },
    "custom_item_110": {
        "description": "rocommunity",
        "file": "/etc/snmp/snmpd.conf",
        "regex": "^[\\\\s]*r[ow]community6?",
        "expect": "^[\\\\s]*r[ow]community6?[\\\\s]+(public|private)"
    },
    "custom_item_111": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled snmpd.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_112": {
        "description": "active",
        "cmd": "/bin/systemctl is-active snmpd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_113": {
        "description": "2.1.15 Ensure snmp services are not in use",
        "info": "Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs.\n\nNet-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.\n\nSupport for SNMPv2 classic (a.k.a. \"SNMPv2 historic\" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.\n\nThe Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.\n\nThe SNMP server can communicate using SNMPv1 which transmits data in the clear and does not require authentication to execute commands. SNMPv3 replaces the simple/clear text password sharing used in SNMPv2 with more securely encoded parameters. If the the SNMP service is not required, the snmpd package should be removed to reduce the attack surface of the system.\n\nNote: If SNMP is required:\n\n - The server should be configured for SNMP v3 only. User Authentication and Message Encryption should be configured.\n - If SNMP v2 is absolutely necessary, modify the community strings' values.",
        "solution": "Run the following commands to stop snmpd.service and remove the snmpd package:\n\n# systemctl stop snmpd.service\n# apt purge snmpd\n\n- OR - If the package is required for dependencies:\n\nRun the following commands to stop and mask the snmpd.service :\n\n# systemctl stop snmpd.service\n# systemctl mask snmpd.service\n\nImpact:\n\nThere may be packages that are dependent on the snmpd package. If the snmpd package is removed, these packages will be removed as well.\n\nBefore removing the snmpd package, review any dependent packages to determine if they are required on the system. If a dependent package is required, stop and mask the snmpd.service leaving the snmpd package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s snmpd 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_114": {
        "description": "installed",
        "cmd": "/bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_115": {
        "description": "active",
        "cmd": "/bin/systemctl is-active tftpd-hpa.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_116": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled tftpd-hpa.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_117": {
        "description": "2.1.16 Ensure tftp server services are not in use",
        "info": "Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.\n\nUnless there is a need to run the system as a TFTP server, it is recommended that the package be removed to reduce the potential attack surface.\n\nTFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files",
        "solution": "Run the following commands to stop tftpd-hpa.service and remove the tftpd-hpa package:\n\n# systemctl stop tftpd-hpa.service\n# apt purge tftpd-hpa\n\n- OR -\n\n- IF - the tftpd-hpa package is required as a dependency:\n\nRun the following commands to stop and mask tftpd-hpa.service :\n\n# systemctl stop tftpd-hpa.service\n# systemctl mask tftpd-hpa.service\n\nImpact:\n\nTFTP is often used to provide files for network booting such as for PXE based installation of servers.\n\nThere may be packages that are dependent on the tftpd-hpa package. If the tftpd-hpa package is removed, these dependent packages will be removed as well. Before removing the tftpd-hpa package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask tftpd-hpa.service leaving the tftpd-hpa package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s tftpd-hpa 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_118": {
        "description": "squid installed",
        "cmd": "/bin/dpkg -s squid 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_119": {
        "description": "squid.service active",
        "cmd": "/bin/systemctl is-active squid.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_120": {
        "description": "squid.service enabled",
        "cmd": "/bin/systemctl is-enabled squid.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_121": {
        "description": "2.1.17 Ensure web proxy server services are not in use",
        "info": "Squid is a standard proxy server used in many distributions and environments.\n\nUnless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.\n\nNote: Several HTTP proxy servers exist. These should be checked and removed unless required.",
        "solution": "Run the following commands to stop squid.service and remove the squid package:\n\n# systemctl stop squid.service\n# apt purge squid\n\n- OR - If the squid package is required as a dependency:\n\nRun the following commands to stop and mask the squid.service :\n\n# systemctl stop squid.service\n# systemctl mask squid.service\n\nImpact:\n\nThere may be packages that are dependent on the squid package. If the squid package is removed, these dependent packages will be removed as well. Before removing the squid package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the squid.service leaving the squid package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s squid 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_122": {
        "description": "nginx installed",
        "cmd": "/bin/dpkg -s nginx 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_123": {
        "description": "apache2 installed",
        "cmd": "/bin/dpkg -s apache2 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_124": {
        "description": "active",
        "cmd": "/bin/systemctl is-active apache2.socket apache2.service nginx.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_125": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled apache2.socket apache2.service nginx.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_126": {
        "description": "xinetd services are installed",
        "cmd": "/bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_127": {
        "description": "xinetd.service enabled",
        "cmd": "/bin/systemctl is-enabled xinetd.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_128": {
        "description": "xinetd.service active",
        "cmd": "/bin/systemctl is-active xinetd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_129": {
        "description": "2.1.19 Ensure xinetd services are not in use",
        "info": "The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.\n\nUnless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.",
        "solution": "Run the following commands to stop xinetd.service and remove the xinetd package:\n\n# systemctl stop xinetd.service\n# apt purge xinetd\n\n-OR-\n\n-IF- the xinetd package is required as a dependency:\n\nRun the following commands to stop and mask the xinetd.service :\n\n# systemctl stop xinetd.service\n# systemctl mask xinetd.service\n\nImpact:\n\nThere may be packages that are dependent on the xinetd package. If the xinetd package is removed, these dependent packages will be removed as well. Before removing the xinetd package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask xinetd.service leaving the xinetd package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s xinetd 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_130": {
        "description": "installed",
        "cmd": "/bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_131": {
        "description": "avahi-daemon.socket enabled",
        "cmd": "/bin/systemctl is-enabled avahi-daemon.socket 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_132": {
        "description": "avahi-daemon.service active",
        "cmd": "/bin/systemctl is-active avahi-daemon.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_133": {
        "description": "avahi-daemon.service enabled",
        "cmd": "/bin/systemctl is-enabled avahi-daemon.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_134": {
        "description": "avahi-daemon.socket active",
        "cmd": "/bin/systemctl is-active avahi-daemon.socket 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_135": {
        "description": "2.1.2 Ensure avahi daemon services are not in use",
        "info": "Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.\n\nAutomatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.",
        "solution": "Run the following commands to stop avahi-daemon.socket and avahi-daemon.service and remove the avahi-daemon package:\n\n# systemctl stop avahi-daemon.socket avahi-daemon.service\n# apt purge avahi-daemon\n\n- OR -\n\n- IF - the avahi-daemon package is required as a dependency:\n\nRun the following commands to stop and mask the avahi-daemon.socket and avahi-daemon.service :\n\n# systemctl stop avahi-daemon.socket avahi-daemon.service\n# systemctl mask avahi-daemon.socket avahi-daemon.service\n\nImpact:\n\nThere may be packages that are dependent on the avahi package. If the avahi package is removed, these dependent packages will be removed as well. Before removing the avahi package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the avahi-daemon.socket and avahi-daemon.service leaving the avahi package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s avahi-daemon 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_136": {
        "description": "2.1.21 Ensure mail transfer agent is configured for local-only mode",
        "info": "Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.\n\nThe software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.",
        "solution": "Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the line below:\n\ninet_interfaces = loopback-only\n\nRun the following command to restart postfix :\n\n# systemctl restart postfix\n\nNote:\n\n - This recommendation is designed around the postfix mail server.\n - Depending on your environment you may have an alternative MTA installed such as exim4. If this is the case consult the documentation for your installed MTA to configure the recommended state.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\nl_output=\"\"\nl_output2=\"\"\na_port_list=(\"25\" \"465\" \"587\")\n\n# Check if inet_interfaces is not set to all\nif [ \"$(postconf -n inet_interfaces)\" != \"inet_interfaces = all\" ]; then\n    for l_port_number in \"${a_port_list[@]}\"; do\n        if ss -plntu | grep -P -- ':'\"$l_port_number\"'\\\\b' | grep -Pvq -- '\\\\h+(127\\\\.0\\\\.0\\\\.1|\\\\[?::1\\\\]?):'\"$l_port_number\"'\\\\b'; then\n            l_output2=\"$l_output2\\\\n - Port \\\\\"$l_port_number\\\\\" is listening on a non-loopback network interface\"\n        else\n            l_output=\"$l_output\\\\n - Port \\\\\"$l_port_number\\\\\" is not listening on a non-loopback network interface\"\n        fi\n    done\nelse\n    l_output2=\"$l_output2\\\\n - Postfix is bound to all interfaces\"\nfi\n\nunset a_port_list\n\n# Provide output from checks\nif [ -z \"$l_output2\" ]; then\n    echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\nelse\n    # If error output (l_output2) is not empty, we fail. Also output anything that's correctly configured\n    echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n    [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\nfi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_137": {
        "description": "2.1.22 Ensure only approved services are listening on a network interface",
        "info": "A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.\n\nA listening port is a network port on which an application or process listens on, acting as a communication endpoint.\n\nEach listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.\n\nServices listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Run the following commands to stop the service and remove the package containing the service:\n\n# systemctl stop.socket.service\n# apt purge- OR - If required packages have a dependency:\n\nRun the following commands to stop and mask the service and socket:\n\n# systemctl stop.socket.service\n# systemctl mask.socket.service\n\nNote: replacewith the appropriate service name.\n\nImpact:\n\nThere may be packages that are dependent on the service's package. If the service's package is removed, these dependent packages will be removed as well. Before removing the service's package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the.socket and.service leaving the service's package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/ss -plntu",
        "expect": "^Manual Review Required$"
    },
    "custom_item_138": {
        "description": "installed",
        "cmd": "/bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_139": {
        "description": "isc-dhcp-server.service active",
        "cmd": "/bin/systemctl is-active isc-dhcp-server.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_140": {
        "description": "isc-dhcp-server6.service enabled",
        "cmd": "/bin/systemctl is-enabled isc-dhcp-server6.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_141": {
        "description": "isc-dhcp-server.service enabled",
        "cmd": "/bin/systemctl is-enabled isc-dhcp-server.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_142": {
        "description": "isc-dhcp-server6.service active",
        "cmd": "/bin/systemctl is-active isc-dhcp-server6.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_143": {
        "description": "2.1.3 Ensure dhcp server services are not in use",
        "info": "The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses. There are two versions of the DHCP protocol DHCPv4 and DHCPv6 At startup the server may be started for one or the other via the -4 or -6 arguments.\n\nUnless a system is specifically set up to act as a DHCP server, it is recommended that this package be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop isc-dhcp-server.service and isc-dhcp-server6.service and remove the isc-dhcp-server package:\n\n# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service\n# apt purge isc-dhcp-server\n\n- OR -\n\n- IF - the isc-dhcp-server package is required as a dependency:\n\nRun the following commands to stop and mask isc-dhcp-server.service and isc-dhcp-server6.service :\n\n# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service\n# systemctl mask isc-dhcp-server isc-dhcp-server6.service\n\nImpact:\n\nThere may be packages that are dependent on the isc-dhcp-server package. If the isc-dhcp-server package is removed, these dependent packages will be removed as well. Before removing the isc-dhcp-server package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the isc-dhcp-server.service and isc-dhcp-server6.service leaving the isc-dhcp-server package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s isc-dhcp-server 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_144": {
        "description": "installed",
        "cmd": "/bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_145": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled named.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_146": {
        "description": "active",
        "cmd": "/bin/systemctl is-active named.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_147": {
        "description": "2.1.4 Ensure dns server services are not in use",
        "info": "The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.\n\nUnless a system is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.",
        "solution": "Run the following commands to stop bind9.service and remove the bind9 package:\n\n# systemctl stop bind9.service\n# apt purge bind9\n\n- OR -\n\n- IF - the bind9 package is required as a dependency:\n\nRun the following commands to stop and mask bind9.service :\n\n# systemctl stop bind9.service\n# systemctl mask bind9.service\n\nImpact:\n\nThere may be packages that are dependent on the bind9 package. If the bind9 package is removed, these dependent packages will be removed as well. Before removing the bind9 package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the bind9.service leaving the bind9 package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s bind9 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_148": {
        "description": "dnsmasq services exist",
        "cmd": "/bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_149": {
        "description": "dnsmasq.service active",
        "cmd": "/bin/systemctl is-active dnsmasq.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_150": {
        "description": "dnsmasq.service enabled",
        "cmd": "/bin/systemctl is-enabled dnsmasq.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_151": {
        "description": "2.1.5 Ensure dnsmasq services are not in use",
        "info": "dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.\n\nUnless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop dnsmasq.service and remove dnsmasq package:\n\n# systemctl stop dnsmasq.service\n# apt purge dnsmasq\n\n- OR -\n\n- IF - the dnsmasq package is required as a dependency:\n\nRun the following commands to stop and mask the dnsmasq.service :\n\n# systemctl stop dnsmasq.service\n# systemctl mask dnsmasq.service\n\nImpact:\n\nThere may be packages that are dependent on the dnsmasq package. If the dnsmasq package is removed, these dependent packages will be removed as well. Before removing the dnsmasq package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the dnsmasq.service leaving the dnsmasq package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s dnsmasq 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_152": {
        "description": "ftp services exist",
        "cmd": "/bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_153": {
        "description": "vsftpd.service active",
        "cmd": "/bin/systemctl is-active vsftpd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_154": {
        "description": "vsftpd.service enabled",
        "cmd": "/bin/systemctl is-enabled vsftpd.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_155": {
        "description": "2.1.6 Ensure ftp server services are not in use",
        "info": "The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.\n\nFTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.",
        "solution": "Run the following commands to stop vsftpd.service and remove the vsftpd package:\n\n# systemctl stop vsftpd.service\n# apt purge vsftpd\n\n- OR -\n\n- IF - the vsftpd package is required as a dependency:\n\nRun the following commands to stop and mask the vsftpd.service :\n\n# systemctl stop vsftpd.service\n# systemctl mask vsftpd.service\n\nNote: Other ftp server packages may exist. If not required and authorized by local site policy, they should also be removed. If the package is required for a dependency, the service should be stopped and masked.\n\nImpact:\n\nThere may be packages that are dependent on the vsftpd package. If the vsftpd package is removed, these dependent packages will be removed as well. Before removing the vsftpd package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the vsftpd.service leaving the vsftpd package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s vsftpd 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_156": {
        "description": "installed",
        "cmd": "/bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_157": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled slapd.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_158": {
        "description": "active",
        "cmd": "/bin/systemctl is-active slapd.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_159": {
        "description": "2.1.7 Ensure ldap server services are not in use",
        "info": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.\n\nIf the system will not need to act as an LDAP server, it is recommended that the software be removed to reduce the potential attack surface.",
        "solution": "Run the following commands to stop slapd.service and remove the slapd package:\n\n# systemctl stop slapd.service\n# apt purge slapd\n\n- OR -\n\n- IF - the slapd package is required as a dependency:\n\nRun the following commands to stop and mask slapd.service :\n\n# systemctl stop slapd.service\n# systemctl mask slapd.service\n\nImpact:\n\nThere may be packages that are dependent on the slapd package. If the slapd package is removed, these dependent packages will be removed as well. Before removing the slapd package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the slapd.service leaving the slapd package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s slapd 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_160": {
        "description": "dovecot-imapd",
        "cmd": "/bin/dpkg -s dovecot-imapd 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_161": {
        "description": "dovecot-pop3",
        "cmd": "/bin/dpkg -s dovecot-pop3d 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_162": {
        "description": "dovecot.socket active",
        "cmd": "/bin/systemctl is-active dovecot.socket 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_163": {
        "description": "dovecot.service enabled",
        "cmd": "/bin/systemctl is-enabled dovecot.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_164": {
        "description": "dovecot.socket enabled",
        "cmd": "/bin/systemctl is-enabled dovecot.socket 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_165": {
        "description": "dovecot.service active",
        "cmd": "/bin/systemctl is-active dovecot.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_166": {
        "description": "dovecot-pop3 not installed",
        "cmd": "/bin/dpkg -s dovecot-pop3 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_167": {
        "description": "dpkg check dovecot-imapd",
        "cmd": "/bin/dpkg -s dovecot-imapd 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_168": {
        "description": "installed",
        "cmd": "/bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_169": {
        "description": "active",
        "cmd": "/bin/systemctl is-active nfs-server.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_170": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled nfs-server.service 2>/dev/null | /bin/grep '^enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_171": {
        "description": "2.1.9 Ensure network file system services are not in use",
        "info": "The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.\n\nIf the system does not export NFS shares, it is recommended that the nfs-kernel-server package be removed to reduce the remote attack surface.",
        "solution": "Run the following command to stop nfs-server.service and remove nfs-kernel-server package:\n\n# systemctl stop nfs-server.service\n# apt purge nfs-kernel-server\n\n- OR -\n\n- IF - the nfs-kernel-server package is required as a dependency:\n\nRun the following commands to stop and mask the nfs-server.service :\n\n# systemctl stop nfs-server.service\n# systemctl mask nfs-server.service\n\nImpact:\n\nThere may be packages that are dependent on the nfs-kernel-server package. If the nfs-kernel-server package is removed, these dependent packages will be removed as well. Before removing the nfs-kernel-server package, review any dependent packages to determine if they are required on the system.\n\n- IF - a dependent package is required: stop and mask the nfs-server.service leaving the nfs-kernel-server package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s nfs-kernel-server 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_172": {
        "description": "2.2.1 Ensure NIS Client is not installed",
        "info": "The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files. The NIS client was used to bind a machine to an NIS server and receive the distributed configuration files.\n\nThe NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.",
        "solution": "Uninstall nis :\n\n# apt purge nis\n\nImpact:\n\nMany insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|2.6,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s nis 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_173": {
        "description": "2.2.2 Ensure rsh client is not installed",
        "info": "The rsh-client package contains the client commands for the rsh services.\n\nThese legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the rsh-client package removes the clients for rsh rcp and rlogin",
        "solution": "Uninstall rsh :\n\n# apt purge rsh-client\n\nImpact:\n\nMany insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s rsh-client 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_174": {
        "description": "2.2.3 Ensure talk client is not installed",
        "info": "The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client, which allows initialization of talk sessions, is installed by default.\n\nThe software presents a security risk as it uses unencrypted protocols for communication.",
        "solution": "Uninstall talk :\n\n# apt purge talk\n\nImpact:\n\nMany insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s talk 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_175": {
        "description": "2.2.4 Ensure telnet client is not installed",
        "info": "The telnet package contains the telnet client, which allows users to start connections to other systems via the telnet protocol.\n\nThe telnet protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The ssh package provides an encrypted session and stronger security and is included in most Linux distributions.",
        "solution": "Uninstall telnet :\n\n# apt purge telnet\n\nImpact:\n\nMany insecure service clients are used as troubleshooting tools and in testing environments. Uninstalling them can inhibit capability to test and troubleshoot. If they are required it is advisable to remove the clients after use to prevent accidental or intentional misuse.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s telnet 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_176": {
        "description": "2.2.5 Ensure ldap client is not installed",
        "info": "The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.\n\nIf the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.",
        "solution": "Uninstall ldap-utils :\n\n# apt purge ldap-utils\n\nImpact:\n\nRemoving the LDAP client will prevent or inhibit using LDAP for authentication in your environment.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s ldap-utils 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_177": {
        "description": "2.2.6 Ensure ftp client is not installed",
        "info": "FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).\n\nFTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.",
        "solution": "Run the following command to uninstall ftp :\n\n# apt purge ftp",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s ftp 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_178": {
        "description": "2.3.1.1 Ensure a single time synchronization daemon is in use",
        "info": "System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.\n\nNotes:\n\n - On virtual systems where host based time synchronization is available consult your virtualization software documentation and verify that host based synchronization is in use and follows local site policy. In this scenario, this section should be skipped\n - Only one time synchronization method should be in use on the system. Configuring multiple time synchronization methods could lead to unexpected or unreliable results\n\nTime synchronization is important to support time sensitive security mechanisms and ensures log files have consistent time records across the enterprise, which aids in forensic investigations.",
        "solution": "On physical systems, and virtual systems where host based time synchronization is not available.\n\nSelect one of the two time synchronization daemons; chrony (1) or systemd-timesyncd (2) and following the remediation procedure for the selected daemon.\n\nNote: enabling more than one synchronization daemon could lead to unexpected or unreliable results:\n\n - chrony\n\nRun the following command to install chrony :\n\n# apt install chrony\n\nRun the following commands to stop and mask the systemd-timesyncd daemon:\n\n# systemctl stop systemd-timesyncd.service\n\n# systemctl mask systemd-timesyncd.service\n\nNote:\n\n - Subsection:\n\nConfigure chrony\n\nshould be followed\n - Subsection:\n\nConfigure systemd-timesyncd\n\nshould be skipped- systemd-timesyncd\n\nRun the following command to remove the chrony package:\n\n# apt purge chrony\n# apt autoremove chrony\n\nNote:\n\n - Subsection:\n\nConfigure systemd-timesyncd\n\nshould be followed\n - Subsection:\n\nConfigure chrony\n\nshould be skipped",
        "reference": "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n    l_output=\"\" l_output2=\"\"\n    service_not_enabled_chk()\n    {\n        l_out2=\"\"\n        if systemctl is-enabled \"$l_service_name\" 2>/dev/null | grep -q 'enabled'; then\n            l_out2=\"$l_out2\\\\n  - Daemon: \\\\\"$l_service_name\\\\\" is enabled on the system\"\n        fi\n        if systemctl is-active \"$l_service_name\" 2>/dev/null | grep -q '^active'; then\n            l_out2=\"$l_out2\\\\n  - Daemon: \\\\\"$l_service_name\\\\\" is active on the system\"\n        fi\n    }\n    l_service_name=\"systemd-timesyncd.service\" # Check systemd-timesyncd daemon\n    service_not_enabled_chk\n    if [ -n \"$l_out2\" ]; then\n        l_timesyncd=\"y\"\n        l_out_tsd=\"$l_out2\"\n    else\n        l_timesyncd=\"n\"\n        l_out_tsd=\"\\\\n  - Daemon: \\\\\"$l_service_name\\\\\" is not enabled and not active on the system\"\n    fi\n    l_service_name=\"chrony.service\" # Check chrony\n    service_not_enabled_chk\n    if [ -n \"$l_out2\" ]; then\n        l_chrony=\"y\"\n        l_out_chrony=\"$l_out2\"\n    else\n        l_chrony=\"n\"\n        l_out_chrony=\"\\\\n  - Daemon: \\\\\"$l_service_name\\\\\" is not enabled and not active on the system\"\n    fi\n    l_status=\"$l_timesyncd$l_chrony\"\n    case \"$l_status\" in\n        yy)\n            l_output2=\" - More than one time sync daemon is in use on the system$l_out_tsd$l_out_chrony\"\n            ;;\n        nn)\n            l_output2=\" - No time sync daemon is in use on the system$l_out_tsd$l_out_chrony\"\n            ;;\n        yn|ny)\n            l_output=\" - Only one time sync daemon is in use on the system$l_out_tsd$l_out_chrony\"\n            ;;\n        *)\n            l_output2=\" - Unable to determine time sync daemon(s) status\"\n            ;;\n    esac\n\n    if [ -z \"$l_output2\" ]; then\n        echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n    else\n        echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\\\\n\"\n    fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_179": {
        "description": "active",
        "cmd": "/bin/systemctl is-active systemd-timesyncd",
        "expect": "^[\\\\s]*active[\\\\s]*$"
    },
    "custom_item_180": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled systemd-timesyncd",
        "expect": "^[\\\\s]*enabled[\\\\s]*$"
    },
    "custom_item_181": {
        "description": "2.3.2.1 Ensure systemd-timesyncd configured with authorized timeserver",
        "info": "NTP=\n\n - A space-separated list of NTP server host names or IP addresses. During runtime this list is combined with any per-interface NTP servers acquired from systemd-networkd.service(8). systemd-timesyncd will contact all configured system or per-interface servers in turn, until one responds. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. This setting defaults to an empty list.\n\nFallbackNTP=\n\n - A space-separated list of NTP server host names or IP addresses to be used as the fallback NTP servers. Any per-interface NTP servers obtained from systemd-networkd.service(8) take precedence over this setting, as do any servers set via NTP= above. This setting is hence only relevant if no other NTP server information is known. When the empty string is assigned, the list of NTP servers is reset, and all prior assignments will have no effect. If this option is not given, a compiled-in list of NTP servers is used.\n\nTime synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations",
        "solution": "Set NTP and/or FallbackNPT parameters to local site approved authoritative time server(s) in /etc/systemd/timesyncd.conf or a file in /etc/systemd/timesyncd.conf.d/ ending inconf in the [Time] section:\n\nExample file:\n\n[Time]\nNTP=time.nist.gov # Uses the generic name for NIST's time servers\nFallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space separated list of NIST time servers\n\nExample script to create systemd drop-in file:\n\n#!/usr/bin/env bash\n\n{\n   [ ! -d /etc/systemd/timesyncd.conf.d/ ] && mkdir /etc/systemd/timesyncd.conf.d/\n   printf '%s\\n' \"[Time]\" \"NTP=time.nist.gov\" \"FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov\" >> /etc/systemd/timesyncd.conf.d/60-timesyncd.conf\n}\n\nNote: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten\n\nRun to following command to update the parameters in the service:\n\n# systemctl reload-or-restart systemd-journald",
        "reference": "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"NTP=[^#\\\\n\\\\r]+\" \"FallbackNTP=[^#\\\\n\\\\r]+\")\n   l_systemd_config_file=\"/etc/systemd/timesyncd.conf\" # Main systemd configuration file\n   config_file_parameter_chk()\n   {\n      unset A_out; declare -A A_out # Check config file(s) setting\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               grep -Piq -- \"^\\\\h*$l_systemd_parameter_name\\\\b\" <<< \"$l_systemd_parameter\" && A_out+=([\"$l_systemd_parameter\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/bin/systemd-analyze cat-config \"$l_systemd_config_file\" | grep -Pio '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do\n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\"\n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\"\n            if grep -Piq \"^\\\\h*$l_systemd_parameter_value\\\\b\" <<< \"$l_systemd_file_parameter_value\"; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is correctly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is incorrectly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value matching: \\\\\"$l_systemd_parameter_value\\\\\"\\\\n\"\n            fi\n         done < <(grep -Pio -- \"^\\\\h*$l_systemd_parameter_name\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_systemd_parameter_name\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and check parameters\n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"\n      l_systemd_parameter_value=\"${l_systemd_parameter_value// /}\"\n      config_file_parameter_chk\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_182": {
        "description": "dpkg check systemd-timesyncd",
        "cmd": "/bin/dpkg -s systemd-timesyncd | /bin/grep -E Status:",
        "expect": "^Status: install ok installed$"
    },
    "custom_item_183": {
        "description": "check if systemd-timesyncd is enabled",
        "cmd": "/bin/systemctl is-enabled systemd-timesyncd",
        "expect": "^enabled$"
    },
    "custom_item_184": {
        "description": "check if systemd-timesyncd is active",
        "cmd": "/bin/systemctl is-active systemd-timesyncd",
        "expect": "^active$"
    },
    "custom_item_185": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled chrony",
        "expect": "^[\\\\s]*enabled[\\\\s]*$"
    },
    "custom_item_186": {
        "description": "active",
        "cmd": "/bin/systemctl is-active chrony",
        "expect": "^[\\\\s]*active[\\\\s]*$"
    },
    "custom_item_187": {
        "description": "2.3.3.1 Ensure chrony is configured with authorized timeserver",
        "info": "-\n\nserver\n\n - The server directive specifies an NTP server which can be used as a time source. The client-server relationship is strictly hierarchical: a client might synchronize its system time to that of the server, but the server's system time will never be influenced by that of a client.\n - This directive can be used multiple times to specify multiple servers.\n - The directive is immediately followed by either the name of the server, or its IP address.\n\n -\n\npool\n\n - The syntax of this directive is similar to that for the server directive, except that it is used to specify a pool of NTP servers rather than a single NTP server. The pool name is expected to resolve to multiple addresses which might change over time.\n - This directive can be used multiple times to specify multiple pools.\n - All options valid in the server directive can be used in this directive too.\n\nTime synchronization is important to support time sensitive security mechanisms and to ensure log files have consistent time records across the enterprise to aid in forensic investigations",
        "solution": "Edit /etc/chrony/chrony.conf or a file ending insources in /etc/chrony/sources.d/ and add or edit server or pool lines as appropriate according to local site policy:\n\n<[server|pool]> <[remote-server|remote-pool]>\n\nExamples:\n\npool directive:\n\npool time.nist.gov iburst maxsources 4 #The maxsources option is unique to the pool directive\n\nserver directive:\n\nserver time-a-g.nist.gov iburst\nserver 132.163.97.3 iburst\nserver time-d-b.nist.gov iburst\n\nRun one of the following commands to load the updated time sources into chronyd running config:\n\n# systemctl restart chronyd\n\n- OR if sources are in a .sources file -\n\n# chronyc reload sources\n\n- OR -\n\nIf another time synchronization service is in use on the system, run the following command to remove chrony from the system:\n\n# apt purge chrony\n# apt autoremove chrony",
        "reference": "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1M,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n    l_output=\"\"\n    l_output2=\"\"\n    a_parlist=(\"^\\\\h*(server|pool)\\\\h+\\\\H+\")\n    l_chrony_config_dir=\"/etc/chrony\" # Chrony configuration directory\n    config_file_parameter_chk() {\n        unset A_out\n        declare -A A_out\n        while read -r l_out; do\n            if [ -n \"$l_out\" ]; then\n                if [[ $l_out =~ ^\\\\s*# ]]; then\n                    l_file=\"${l_out//# /}\"\n                else\n                    l_chrony_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n                    A_out+=([\"$l_chrony_parameter\"]=\"$l_file\")\n                fi\n            fi\n        done < <(find \"$l_chrony_config_dir\" -name '*.conf' -exec systemd-analyze cat-config {} + | grep -Pio '^\\\\h*((server|pool)\\\\h+\\\\H+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n\n        if (( ${#A_out[@]} > 0 )); then\n            for l_chrony_parameter in \"${!A_out[@]}\"; do\n                l_file=\"${A_out[$l_chrony_parameter]}\"\n                l_output=\"$l_output\\\\n - \\\\\"$l_chrony_parameter\\\\\" is set in \\\\\"$l_file\\\\\"\\\\n\"\n            done\n        else\n            l_output2=\"$l_output2\\\\n - No 'server' or 'pool' settings found in Chrony configuration files\\\\n\"\n        fi\n    }\n    for l_chrony_parameter_regex in \"${a_parlist[@]}\"; do\n        config_file_parameter_chk \"$l_chrony_parameter_regex\"\n    done\n\n    if [ -z \"$l_output2\" ]; then\n        echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n    else\n        echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n        [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n    fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_188": {
        "description": "check if chrony is enabled",
        "cmd": "/bin/systemctl is-enabled chrony",
        "expect": "^enabled$"
    },
    "custom_item_189": {
        "description": "check if chrony is active",
        "cmd": "/bin/systemctl is-active chrony",
        "expect": "^active$"
    },
    "custom_item_190": {
        "description": "2.3.3.2 Ensure chrony is running as user _chrony",
        "info": "The chrony package is installed with a dedicated user account _chrony This account is granted the access required by the chronyd service\n\nThe chronyd service should run with only the required privlidges",
        "solution": "Add or edit the user line to /etc/chrony/chrony.conf or a file ending inconf in /etc/chrony/conf.d/ :\n\nuser _chrony\n\n- OR -\n\nIf another time synchronization service is in use on the system, run the following command to remove chrony from the system:\n\n# apt purge chrony\n# apt autoremove chrony",
        "reference": "800-171|3.3.6,800-171|3.3.7,800-53|AU-7,800-53|AU-8,800-53r5|AU-7,800-53r5|AU-8,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(b),CSCv7|6.1,CSCv8|8.4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-7,ITSG-33|AU-8,LEVEL|1A,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|37.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/ps -ef | /bin/grep chronyd | /bin/grep -v grep | /bin/cut -d ' ' -f 1",
        "expect": "^_chrony$"
    },
    "custom_item_191": {
        "description": "dpkg check chrony",
        "cmd": "/bin/dpkg -s chrony | /bin/grep -E Status:",
        "expect": "^Status: install ok installed$"
    },
    "custom_item_192": {
        "description": "check if chrony is enabled",
        "cmd": "/bin/systemctl is-enabled chrony",
        "expect": "^enabled$"
    },
    "custom_item_193": {
        "description": "check if chrony is active",
        "cmd": "/bin/systemctl is-active chrony",
        "expect": "^active$"
    },
    "custom_item_194": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_195": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_196": {
        "description": "enabled",
        "cmd": "/bin/systemctl list-unit-files | /bin/awk '$1~/^crond?\\\\.service/{print $2}'",
        "expect": "^[\\\\s]*enabled[\\\\s]*$"
    },
    "custom_item_197": {
        "description": "active",
        "cmd": "/bin/systemctl list-units | /bin/awk '$1~/^crond?\\\\.service/{print $3}'",
        "expect": "^[\\\\s]*active[\\\\s]*$"
    },
    "custom_item_198": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_199": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_200": {
        "description": "2.4.1.2 Ensure permissions on /etc/crontab are configured",
        "info": "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.\n\nThis file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.",
        "solution": "- IF - cron is installed on the system:\n\nRun the following commands to set ownership and permissions on /etc/crontab :\n\n# chown root:root /etc/crontab\n# chmod og-rwx /etc/crontab",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/crontab",
        "owner": "root",
        "mask": "177",
        "group": "root"
    },
    "custom_item_201": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_202": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_203": {
        "description": "2.4.1.3 Ensure permissions on /etc/cron.hourly are configured",
        "info": "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "- IF - cron is installed on the system:\n\nRun the following commands to set ownership and permissions on the /etc/cron.hourly directory:\n\n# chown root:root /etc/cron.hourly/\n# chmod og-rwx /etc/cron.hourly/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/cron.hourly",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_204": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_205": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_206": {
        "description": "2.4.1.4 Ensure permissions on /etc/cron.daily are configured",
        "info": "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "- IF - cron is installed on the system:\n\nRun the following commands to set ownership and permissions on the /etc/cron.daily directory:\n\n# chown root:root /etc/cron.daily/\n# chmod og-rwx /etc/cron.daily/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/cron.daily",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_207": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_208": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_209": {
        "description": "2.4.1.5 Ensure permissions on /etc/cron.weekly are configured",
        "info": "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "- IF - cron is installed on the system:\n\nRun the following commands to set ownership and permissions on the /etc/cron.weekly directory:\n\n# chown root:root /etc/cron.weekly/\n# chmod og-rwx /etc/cron.weekly/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/cron.weekly",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_210": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_211": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_212": {
        "description": "2.4.1.6 Ensure permissions on /etc/cron.monthly are configured",
        "info": "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "- IF - cron is installed on the system:\n\nRun the following commands to set ownership and permissions on the /etc/cron.monthly directory:\n\n# chown root:root /etc/cron.monthly/\n# chmod og-rwx /etc/cron.monthly/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/cron.monthly",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_213": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_214": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_215": {
        "description": "2.4.1.7 Ensure permissions on /etc/cron.d are configured",
        "info": "The /etc/cron.d directory contains system cron jobs that need to run in a similar manner to the hourly, daily weekly and monthly jobs from /etc/crontab but require more granular control as to when they run. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.\n\nGranting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.",
        "solution": "- IF - cron is installed on the system:\n\nRun the following commands to set ownership and permissions on the /etc/cron.d directory:\n\n# chown root:root /etc/cron.d/\n# chmod og-rwx /etc/cron.d/",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/cron.d",
        "owner": "root",
        "mask": "077",
        "group": "root"
    },
    "custom_item_216": {
        "description": "cron installed",
        "cmd": "/bin/dpkg -s cron 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_217": {
        "description": "cronie installed",
        "cmd": "/bin/dpkg -s cronie 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_218": {
        "description": "/etc/cron.deny file permissions",
        "file": "/etc/cron.deny",
        "owner": "root",
        "mask": "7137",
        "group": "root"
    },
    "custom_item_219": {
        "description": "/etc/cron.allow file permissions",
        "file": "/etc/cron.allow",
        "owner": "root",
        "mask": "7137",
        "group": "root"
    },
    "custom_item_220": {
        "description": "at is installed",
        "cmd": "/bin/dpkg -s at 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_221": {
        "description": "/etc/at.allow file permissions",
        "file": "/etc/at.allow",
        "owner": "root",
        "mask": "137",
        "group": "root"
    },
    "custom_item_222": {
        "description": "/etc/at.deny file permissions",
        "file": "/etc/at.deny",
        "owner": "root",
        "mask": "137",
        "group": "root"
    },
    "custom_item_223": {
        "description": "3.1.1 Ensure IPv6 status is identified",
        "info": "Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion, which is 340 trillion3 addresses.\n\nFeatures of IPv6\n\n - Hierarchical addressing and routing infrastructure\n - Stateful and Stateless configuration\n - Support for quality of service (QoS)\n - An ideal protocol for neighboring node interaction\n\nIETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.\n\n-IF- dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.\n\nNote: It is recommended that IPv6 be enabled and configured unless this is against local site policy\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Enable or disable IPv6 in accordance with system requirements and local site policy\n\nImpact:\n\nIETF RFC 4038 recommends that applications are built with an assumption of dual stack.\n\nWhen enabled, IPv6 will require additional configuration to reduce risk to the system.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1M,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && echo -e \"\\\\n - IPv6 is enabled\\\\n\" || echo -e \"\\\\n - IPv6 is not enabled\\\\n\"",
        "expect": "Manual Review Required"
    },
    "custom_item_224": {
        "description": "3.1.2 Ensure wireless interfaces are disabled",
        "info": "Wireless networking is used when wired networks are unavailable.\n\n-IF- wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.",
        "solution": "Run the following script to disable any wireless interfaces:\n\n#!/usr/bin/env bash\n\n{\n   module_fix()\n   {\n      if ! modprobe -n -v \"$l_mname\" | grep -P -- '^\\h*install \\/bin\\/(true|false)'; then\n         echo -e \" - setting module: \\\\\"$l_mname\\\\\" to be un-loadable\"\n         echo -e \"install $l_mname /bin/false\" >> /etc/modprobe.d/\"$l_mname\".conf\n      fi\n      if lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         echo -e \" - unloading module \\\\\"$l_mname\\\\\"\"\n         modprobe -r \"$l_mname\"\n      fi\n      if ! grep -Pq -- \"^\\h*blacklist\\h+$l_mname\\b\" /etc/modprobe.d/*; then\n         echo -e \" - deny listing \\\\\"$l_mname\\\\\"\"\n         echo -e \"blacklist $l_mname\" >> /etc/modprobe.d/\"$l_mname\".conf\n      fi\n   }\n   if [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then\n      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)\n      for l_mname in $l_dname; do\n         module_fix\n      done\n   fi\n}\n\nImpact:\n\nMany if not all laptop workstations and some desktop workstations will connect via wireless requiring these interfaces be enabled.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|15.4,CSCv7|15.5,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n        l_output=\"\" l_output2=\"\"\n   module_chk()\n   {\n      # Check how module will be loaded\n      l_loadable=\"$(modprobe -n -v \"$l_mname\")\"\n      if grep -Pq -- '^\\\\h*install \\\\/bin\\\\/(true|false)' <<< \"$l_loadable\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loadable: \\\\\"$l_loadable\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loadable: \\\\\"$l_loadable\\\\\"\"\n      fi\n      # Check is the module currently loaded\n      if ! lsmod | grep \"$l_mname\" > /dev/null 2>&1; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is not loaded\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is loaded\"\n      fi\n      # Check if the module is deny listed\n      if modprobe --showconfig | grep -Pq -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\"; then\n         l_output=\"$l_output\n - module: \\\\\"$l_mname\\\\\" is deny listed in: \\\\\"$(grep -Pl -- \"^\\\\h*blacklist\\\\h+$l_mname\\\\b\" /etc/modprobe.d/*)\\\\\"\"\n      else\n         l_output2=\"$l_output2\n - module: \\\\\"$l_mname\\\\\" is not deny listed\"\n      fi\n   }\n   if [ -n \"$(find /sys/class/net/*/ -type d -name wireless)\" ]; then\n      l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name wireless | xargs -0 dirname); do basename \"$(readlink -f \"$driverdir\"/device/driver/module)\";done | sort -u)\n      for l_mname in $l_dname; do\n         module_chk\n      done\n   fi\n   # Report results. If no failures output in l_output2, we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  ** PASS **\"\n      if [ -z \"$l_output\" ]; then\n         echo -e \"\n - System has no wireless NICs installed\"\n      else\n         echo -e \"\n$l_output\n\"\n      fi\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n  }",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_225": {
        "description": "bluez",
        "cmd": "/bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_226": {
        "description": "3.1.3 Ensure bluetooth services are not in use",
        "info": "Bluetooth is a short-range wireless technology standard that is used for exchanging data between devices over short distances. It employs UHF radio waves in the ISM bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire connections.\n\nAn attacker may be able to find a way to access or corrupt your data. One example of this type of activity is bluesnarfing which refers to attackers using a Bluetooth connection to steal information off of your Bluetooth device. Also, viruses or other malicious code can take advantage of Bluetooth technology to infect other devices. If you are infected, your data may be corrupted, compromised, stolen, or lost.",
        "solution": "Run the following commands to stop bluetooth.service and remove the bluez package:\n\n# systemctl stop bluetooth.service\n# apt purge bluez\n\n- OR -\n\n- IF - the bluez package is required as a dependency:\n\nRun the following commands to stop and mask bluetooth.service :\n\n# systemctl stop bluetooth.service\n# systemctl mask bluetooth.service\n\nNote: A reboot may be required\n\nImpact:\n\nMany personal electronic devices (PEDs) use Bluetooth technology. For example, you may be able to operate your computer with a wireless keyboard. Disabling Bluetooth will prevent these devices from connecting to the system.\n\nThere may be packages that are dependent on the bluez package. If the bluez package is removed, these dependent packages will be removed as well. Before removing the bluez package, review any dependent packages to determine if they are required on the system.\n\n-IF- a dependent package is required: stop and mask bluetooth.service leaving the bluez package installed.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s bluez 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_227": {
        "description": "bluetooth.service active",
        "cmd": "/bin/systemctl is-active bluetooth.service 2>/dev/null | /bin/grep '^active' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_228": {
        "description": "bluetooth.service enabled",
        "cmd": "/bin/systemctl is-enabled bluetooth.service 2>/dev/null | /bin/grep 'enabled' | /bin/awk '{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_229": {
        "description": "3.3.1 Ensure ip forwarding is disabled",
        "info": "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not.\n\nSetting net.ipv4.ip_forward and net.ipv6.conf.all.forwarding to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.ip_forward = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.ip_forward = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.ip_forward=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\n- IF - IPv6 is enabled on the system:\n\nSet the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.forwarding = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv6.conf.all.forwarding = 0\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv6.conf.all.forwarding=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten\n\nImpact:\n\nIP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.\n\nMany Cloud Service Provider (CSP) hosted systems require IP forwarding to be enabled. If the system is running on a CSP platform, this requirement should be reviewed before disabling IP forwarding.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.ip_forward=0\" \"net.ipv6.conf.all.forwarding=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_230": {
        "description": "3.3.10 Ensure tcp syn cookies is enabled",
        "info": "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.\n\nAttackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. Setting net.ipv4.tcp_syncookies to 1 enables SYN cookies, allowing the system to keep accepting valid connections, even if under a denial of service attack.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.tcp_syncookies = 1\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.tcp_syncookies = 1\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.tcp_syncookies=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.tcp_syncookies=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_231": {
        "description": "3.3.11 Ensure ipv6 router advertisements are not accepted",
        "info": "This setting disables the system's ability to accept IPv6 router advertisements.\n\nIt is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes. Setting net.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra to 0 disables the system's ability to accept IPv6 router advertisements.",
        "solution": "- IF - IPv6 is enabled on the system:\n\nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.accept_ra = 0\n - net.ipv6.conf.default.accept_ra = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv6.conf.all.accept_ra = 0\" \"net.ipv6.conf.default.accept_ra = 0\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv6.conf.all.accept_ra=0\n   sysctl -w net.ipv6.conf.default.accept_ra=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv6.conf.all.accept_ra=0\" \"net.ipv6.conf.default.accept_ra=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_232": {
        "description": "3.3.2 Ensure packet redirect sending is disabled",
        "info": "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.\n\nAn attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.send_redirects = 0\n - net.ipv4.conf.default.send_redirects = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.conf.all.send_redirects = 0\" \"net.ipv4.conf.default.send_redirects = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.conf.all.send_redirects=0\n   sysctl -w net.ipv4.conf.default.send_redirects=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten\n\nImpact:\n\nIP forwarding is required on systems configured to act as a router. If these parameters are disabled, the system will not be able to perform as a router.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.send_redirects=0\" \"net.ipv4.conf.default.send_redirects=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_233": {
        "description": "3.3.3 Ensure bogus icmp responses are ignored",
        "info": "Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.\n\nSome routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.icmp_ignore_bogus_error_responses = 1\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.icmp_ignore_bogus_error_responses = 1\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.icmp_ignore_bogus_error_responses=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_234": {
        "description": "3.3.4 Ensure broadcast icmp requests are ignored",
        "info": "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.\n\nAccepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.",
        "solution": "Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.icmp_echo_ignore_broadcasts = 1\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.icmp_echo_ignore_broadcasts = 1\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.icmp_echo_ignore_broadcasts=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_235": {
        "description": "3.3.5 Ensure icmp redirects are not accepted",
        "info": "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables.\n\nICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects net.ipv4.conf.default.accept_redirects net.ipv6.conf.all.accept_redirects and net.ipv6.conf.default.accept_redirects to 0 the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.accept_redirects = 0\n - net.ipv4.conf.default.accept_redirects = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.conf.all.accept_redirects = 0\" \"net.ipv4.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.conf.all.accept_redirects=0\n   sysctl -w net.ipv4.conf.default.accept_redirects=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\n- IF - IPv6 is enabled on the system:\n\nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.accept_redirects = 0\n - net.ipv6.conf.default.accept_redirects = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv6.conf.all.accept_redirects = 0\" \"net.ipv6.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv6.conf.all.accept_redirects=0\n   sysctl -w net.ipv6.conf.default.accept_redirects=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.accept_redirects=0\" \"net.ipv4.conf.default.accept_redirects=0\" \"net.ipv6.conf.all.accept_redirects=0\" \"net.ipv6.conf.default.accept_redirects=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\n\"\n            else\n               l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_kpname\\\\\" is not set in an included file\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\n- Audit Result:\n  ** PASS **\n$l_output\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n\"\n      [ -n \"$l_output\" ] && echo -e \"\n- Correctly set:\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_236": {
        "description": "3.3.6 Ensure secure icmp redirects are not accepted",
        "info": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.\n\nIt is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects and net.ipv4.conf.default.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.secure_redirects = 0\n - net.ipv4.conf.default.secure_redirects = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.conf.all.secure_redirects = 0\" \"net.ipv4.conf.default.secure_redirects = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.conf.all.secure_redirects=0\n   sysctl -w net.ipv4.conf.default.secure_redirects=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n     l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.secure_redirects=0\" \"net.ipv4.conf.default.secure_redirects=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_237": {
        "description": "3.3.7 Ensure reverse path filtering is enabled",
        "info": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).\n\nSetting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.rp_filter = 1\n - net.ipv4.conf.default.rp_filter = 1\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.conf.all.rp_filter = 1\" \"net.ipv4.conf.default.rp_filter = 1\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.conf.all.rp_filter=1\n   sysctl -w net.ipv4.conf.default.rp_filter=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten\n\nImpact:\n\nIf you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n    l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.rp_filter=1\" \"net.ipv4.conf.default.rp_filter=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_238": {
        "description": "3.3.8 Ensure source routed packets are not accepted",
        "info": "In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.\n\nSetting net.ipv4.conf.all.accept_source_route net.ipv4.conf.default.accept_source_route net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.accept_source_route = 0\n - net.ipv4.conf.default.accept_source_route = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.conf.all.accept_source_route = 0\" \"net.ipv4.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.conf.all.accept_source_route=0\n   sysctl -w net.ipv4.conf.default.accept_source_route=0\n   sysctl -w net.ipv4.route.flush=1\n}\n\n- IF - IPv6 is enabled on the system:\n\nSet the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv6.conf.all.accept_source_route = 0\n - net.ipv6.conf.default.accept_source_route = 0\n\nExample:\n\n# printf '%s\\n' \"net.ipv6.conf.all.accept_source_route = 0\" \"net.ipv6.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/60-netipv6_sysctl.conf\n\nRun the following command to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv6.conf.all.accept_source_route=0\n   sysctl -w net.ipv6.conf.default.accept_source_route=0\n   sysctl -w net.ipv6.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.4.2,800-171|3.4.6,800-171|3.4.7,800-53|CM-6,800-53|CM-7,800-53r5|CM-6,800-53r5|CM-7,CSCv7|9.2,CSCv8|4.8,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.accept_source_route=0\" \"net.ipv4.conf.default.accept_source_route=0\" \"net.ipv6.conf.all.accept_source_route=0\" \"net.ipv6.conf.default.accept_source_route=0\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_239": {
        "description": "3.3.9 Ensure suspicious packets are logged",
        "info": "When enabled, this feature logs packets with un-routable source addresses to the kernel log.\n\nSetting net.ipv4.conf.all.log_martians and net.ipv4.conf.default.log_martians to 1 enables this feature. Logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.",
        "solution": "Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending inconf :\n\n - net.ipv4.conf.all.log_martians = 1\n - net.ipv4.conf.default.log_martians = 1\n\nExample:\n\n# printf '%s\\n' \"net.ipv4.conf.all.log_martians = 1\" \"net.ipv4.conf.default.log_martians = 1\" >> /etc/sysctl.d/60-netipv4_sysctl.conf\n\nRun the following script to set the active kernel parameters:\n\n#!/usr/bin/env bash\n\n{\n   sysctl -w net.ipv4.conf.all.log_martians=1\n   sysctl -w net.ipv4.conf.default.log_martians=1\n   sysctl -w net.ipv4.route.flush=1\n}\n\nNote: If these settings appear in a canonically later file, or later in the same file, these settings will be overwritten",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"net.ipv4.conf.all.log_martians=1\" \"net.ipv4.conf.default.log_martians=1\")\n   l_ufwscf=\"$([ -f /etc/default/ufw ] && awk -F= '/^\\\\s*IPT_SYSCTL=/ {print $2}' /etc/default/ufw)\"\n   kernel_parameter_chk()\n   {\n      l_krp=\"$(sysctl \"$l_kpname\" | awk -F= '{print $2}' | xargs)\" # Check running configuration\n      if [ \"$l_krp\" = \"$l_kpvalue\" ]; then\n         l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_krp\\\\\" in the running configuration\"\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_krp\\\\\" in the running configuration and should have a value of: \\\\\"$l_kpvalue\\\\\"\"\n      fi\n      unset A_out; declare -A A_out # Check durable setting (files)\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_kpar=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/lib/systemd/systemd-sysctl --cat-config | grep -Po '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if [ -n \"$l_ufwscf\" ]; then # Account for systems with UFW (Not covered by systemd-sysctl --cat-config)\n         l_kpar=\"$(grep -Po \"^\\\\h*$l_kpname\\\\b\" \"$l_ufwscf\" | xargs)\"\n         l_kpar=\"${l_kpar//\\\\//.}\"\n         [ \"$l_kpar\" = \"$l_kpname\" ] && A_out+=([\"$l_kpar\"]=\"$l_ufwscf\")\n      fi\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_fkpname l_fkpvalue; do\n            l_fkpname=\"${l_fkpname// /}\"; l_fkpvalue=\"${l_fkpvalue// /}\"\n            if [ \"$l_fkpvalue\" = \"$l_kpvalue\" ]; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_kpname\\\\\" is correctly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is incorrectly set to \\\\\"$l_fkpvalue\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value of: \\\\\"$l_kpvalue\\\\\"\\\\n\"\n            fi\n         done < <(grep -Po -- \"^\\\\h*$l_kpname\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_kpname\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_kpname\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_kpname l_kpvalue; do # Assess and check parameters\n      l_kpname=\"${l_kpname// /}\"; l_kpvalue=\"${l_kpvalue// /}\"\n      if ! grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && grep -q '^net.ipv6.' <<< \"$l_kpname\"; then\n         l_output=\"$l_output\\\\n - IPv6 is disabled on the system, \\\\\"$l_kpname\\\\\" is not applicable\"\n      else\n         kernel_parameter_chk\n      fi\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_240": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_241": {
        "description": "4.1.1 Ensure ufw is installed",
        "info": "The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited for host-based firewalls. ufw provides a framework for managing netfilter, as well as a command-line interface for manipulating the firewall\n\nA firewall utility is required to configure the Linux kernel's netfilter framework via the iptables or nftables back-end.\n\nThe Linux kernel's netfilter framework host-based firewall can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.\n\nNote: Only one firewall utility should be installed and configured. UFW is dependent on the iptables package",
        "solution": "Run the following command to install Uncomplicated Firewall (UFW):\n\napt install ufw",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_242": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_243": {
        "description": "4.1.2 Ensure iptables-persistent is not installed with ufw",
        "info": "The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin\n\nRunning both ufw and the services included in the iptables-persistent package may lead to conflict",
        "solution": "Run the following command to remove the iptables-persistent package:\n\n# apt purge iptables-persistent",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s iptables-persistent 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_244": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_245": {
        "description": "check if ufw is enabled",
        "cmd": "/bin/systemctl is-enabled ufw",
        "expect": "^enabled$"
    },
    "custom_item_246": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_247": {
        "description": "ufw status",
        "cmd": "/sbin/ufw status | /bin/grep 'Status: active'",
        "expect": "^Status: active$"
    },
    "custom_item_248": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_249": {
        "description": "ufw - Anywhere DENY IN ::1",
        "cmd": "/sbin/ufw status verbose",
        "expect": "(?i)^[\\\\s]*Anywhere[\\\\s]+\\\\(v6\\\\)[\\\\s]+DENY[\\\\s]+IN[\\\\s]+::1[\\\\s]*$"
    },
    "custom_item_250": {
        "description": "ufw - Anywhere DENY IN 127.0.0.0/8",
        "cmd": "/sbin/ufw status verbose",
        "expect": "(?i)^[\\\\s]*Anywhere[\\\\s]+DENY[\\\\s]+IN[\\\\s]+127.0.0.0/8[\\\\s]*$"
    },
    "custom_item_251": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_252": {
        "description": "4.1.5 Ensure ufw outbound connections are configured",
        "info": "Configure the firewall rules for new outbound connections.\n\nNote:\n\n - Changing firewall settings while connected over network can result in being locked out of the system.\n - Unlike iptables, when a new outbound rule is added, ufw automatically takes care of associated established connections, so no rules for the latter kind are required.\n\nIf rules are not in place for new outbound connections all packets will be dropped by the default policy preventing network usage.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure ufw in accordance with site policy. The following commands will implement a policy to allow all outbound connections on all interfaces:\n\n# ufw allow out on all",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/sbin/ufw status numbered",
        "expect": "^Manual Review Required$"
    },
    "custom_item_253": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_254": {
        "description": "4.1.6 Ensure ufw firewall rules exist for all open ports",
        "info": "Services and ports can be accepted or explicitly rejected.\n\nNote:\n\n - Changing firewall settings while connected over network can result in being locked out of the system\n - The remediation command opens up the port to traffic from all sources. Consult ufw documentation and set any restrictions in compliance with site policy\n\nTo reduce the attack surface of a system, all services and ports should be blocked unless required.\n\n - Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.\n - Without a firewall rule configured for open ports, the default firewall policy will drop all packets to these ports.\n - Required ports should have a firewall rule created to allow approved connections in accordance with local site policy.\n - Unapproved ports should have an explicit deny rule created.",
        "solution": "For each port identified in the audit which does not have a firewall rule, evaluate the service listening on the port and add a rule for accepting or denying inbound connections in accordance with local site policy:\n\nExamples:\n\n# ufw allow in/# ufw deny in/Note: Examples create rules for from any, to any. More specific rules should be concentered when allowing inbound traffic e.g only traffic from this network.\n\nExample to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:\n\nufw allow from 192.168.1.0/24 to any proto tcp port 443",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\nufw_out=\"$(ufw status verbose)\"\nss -tuln | awk '($5!~/%lo:/ && $5!~/127.0.0.1:/ && $5!~/::1/) {split($5, a, \":\"); print a[2]}' | sort | uniq | while read -r lpn; do\n   ! grep -Pq \"^\\\\h*$lpn\\\\b\" <<< \"$ufw_out\" && echo \"- Port: \\\\\"$lpn\\\\\" is missing a firewall rule\"\ndone | /bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_255": {
        "description": "check if ufw is active",
        "cmd": "/bin/systemctl is-active ufw",
        "expect": "^active$"
    },
    "custom_item_256": {
        "description": "4.1.7 Ensure ufw default deny firewall policy",
        "info": "A default deny policy on connections ensures that any unconfigured network usage will be rejected.\n\nNote: Any port or protocol without a explicit allow before the default deny will be blocked\n\nWith a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage.",
        "solution": "Run the following commands to implement a default\n\ndeny\n\npolicy:\n\n# ufw default deny incoming\n# ufw default deny outgoing\n# ufw default deny routed\n\nImpact:\n\nAny port and protocol not explicitly allowed will be blocked. The following rules should be considered before applying the default deny.\n\nufw allow git\n  ufw allow in http\n  ufw allow out http <- required for apt to connect to repository\n  ufw allow in https\n  ufw allow out https\n  ufw allow out 53\n  ufw logging on",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/sbin/ufw status verbose | /bin/grep 'Default:'",
        "expect": "^Default:[\\\\s]+(deny|reject|disabled)[\\\\s]+\\\\(incoming\\\\),[\\\\s]+(deny|reject|disabled)[\\\\s]+\\\\(outgoing\\\\),[\\\\s]+(deny|reject|disabled)[\\\\s]+\\\\(routed\\\\)"
    },
    "custom_item_257": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_258": {
        "description": "4.2.1 Ensure nftables is installed",
        "info": "nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.\n\nNotes:\n\n -\n\nnftables is available in Linux kernel 3.13 and newer\n\n -\n\nOnly one firewall utility should be installed and configured\n\n -\n\nChanging firewall settings while connected over the network can result in being locked out of the system\n\nnftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.",
        "solution": "Run the following command to install nftables :\n\n# apt install nftables",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s nftables 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_259": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_260": {
        "description": "4.2.10 Ensure nftables rules are permanent",
        "info": "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames.\n\nThe nftables service reads the /etc/nftables.conf file for a nftables file or files to include in the nftables ruleset.\n\nA nftables ruleset containing the input, forward, and output base chains allow network traffic to be filtered.\n\nChanges made to nftables ruleset only affect the live system, you will also need to configure the nftables ruleset to apply on boot",
        "solution": "Edit the /etc/nftables.conf file and un-comment or add a line with includefor each nftables file you want included in the nftables ruleset on boot\n\nExample:\n\n# vi /etc/nftables.conf\n\nAdd the line:\n\ninclude \"/etc/nftables.rules\"",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/nftables.conf",
        "regex": "^[\\\\s]*include[\\\\s]+",
        "expect": "^[\\\\s]*include[\\\\s]+\"?@NFTABLES_RULES_FILE@\"?"
    },
    "custom_item_261": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_262": {
        "description": "dpkg check ufw",
        "cmd": "/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_263": {
        "description": "4.2.2 Ensure ufw is uninstalled or disabled with nftables",
        "info": "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.\n\nRunning both the nftables service and ufw may lead to conflict and unexpected results.",
        "solution": "Run one of the following to either remove ufw or disable ufw and mask ufw.service :\n\nRun the following command to remove ufw :\n\n# apt purge ufw\n\n-OR-\n\nRun the following commands to disable ufw and mask ufw.service :\n\n# ufw disable\n# systemctl stop ufw.service\n# systemctl mask ufw.service\n\nNote: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_264": {
        "description": "4.2.2 Ensure ufw is uninstalled or disabled with nftables",
        "info": "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.\n\nRunning both the nftables service and ufw may lead to conflict and unexpected results.",
        "solution": "Run one of the following to either remove ufw or disable ufw and mask ufw.service :\n\nRun the following command to remove ufw :\n\n# apt purge ufw\n\n-OR-\n\nRun the following commands to disable ufw and mask ufw.service :\n\n# ufw disable\n# systemctl stop ufw.service\n# systemctl mask ufw.service\n\nNote: ufw disable needs to be run before systemctl mask ufw.service in order to correctly disable UFW",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/sbin/ufw status 2>/dev/null | /bin/grep Status:",
        "expect": "^Status: inactive$"
    },
    "custom_item_265": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_266": {
        "description": "iptables",
        "cmd": "/sbin/iptables -L",
        "expect": "^Manual Review Required$"
    },
    "custom_item_267": {
        "description": "ip6tables",
        "cmd": "/sbin/ip6tables -L",
        "expect": "^Manual Review Required$"
    },
    "custom_item_268": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_269": {
        "description": "4.2.4 Ensure a nftables table exists",
        "info": "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.\n\nnftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic.",
        "solution": "Run the following command to create a table in nftables\n\n# nft create table inetExample:\n\n# nft create table inet filter\n\nImpact:\n\nAdding rules to a running nftables can cause loss of connectivity to the system",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/sbin/nft list tables | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_270": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_271": {
        "description": "output",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook output'",
        "expect": "^\\\\s*\\\\S+\\\\s+\\\\S+\\\\s+hook\\\\s+output"
    },
    "custom_item_272": {
        "description": "forward",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook forward'",
        "expect": "^\\\\s*\\\\S+\\\\s+\\\\S+\\\\s+hook\\\\s+forward"
    },
    "custom_item_273": {
        "description": "input",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook input'",
        "expect": "^\\\\s*\\\\S+\\\\s+\\\\S+\\\\s+hook\\\\s+input"
    },
    "custom_item_274": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_275": {
        "description": "check if IPv6 is enabled",
        "cmd": "/bin/grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && /bin/echo 'IPv6 is enabled' || /bin/echo 'IPv6 is not enabled'",
        "expect": "^IPv6 is enabled"
    },
    "custom_item_276": {
        "description": "ip6 saddr",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'ip6 saddr'",
        "expect": "^ip6[\\\\s]+saddr[\\\\s]+::1"
    },
    "custom_item_277": {
        "description": "iif lo accept",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'iif \"lo\" accept'",
        "expect": "^iif[\\\\s]+\"lo\"[\\\\s]+accept"
    },
    "custom_item_278": {
        "description": "ip saddr",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'ip saddr'",
        "expect": "^ip[\\\\s]+saddr[\\\\s]+127\\\\.0\\\\.0\\\\.0/8"
    },
    "custom_item_279": {
        "description": "iif lo accept",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'iif \"lo\" accept'",
        "expect": "^iif[\\\\s]+\"lo\"[\\\\s]+accept"
    },
    "custom_item_280": {
        "description": "ip saddr",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep 'ip saddr'",
        "expect": "^ip[\\\\s]+saddr[\\\\s]+127\\\\.0\\\\.0\\\\.0/8"
    },
    "custom_item_281": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_282": {
        "description": "nft list ruleset - ct state",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook output/,/}/' | /bin/grep -E 'ip protocol (tcp|udp|icmp) ct state'",
        "expect": "^Manual Review Required$"
    },
    "custom_item_283": {
        "description": "nft list ruleset - ct state",
        "cmd": "/sbin/nft list ruleset | /bin/awk '/hook input/,/}/' | /bin/grep -E 'ip protocol (tcp|udp|icmp) ct state'",
        "expect": "^Manual Review Required$"
    },
    "custom_item_284": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_285": {
        "description": "input",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook input'",
        "expect": "^\\\\s*type\\\\s+filter\\\\s+hook\\\\s+input\\\\s+(priority\\\\s+\\\\S+;\\\\s+)*policy\\\\s+drop;"
    },
    "custom_item_286": {
        "description": "output",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook output'",
        "expect": "^\\\\s*type\\\\s+filter\\\\s+hook\\\\s+output\\\\s+(priority\\\\s+\\\\S+;\\\\s+)*policy\\\\s+drop;"
    },
    "custom_item_287": {
        "description": "forward",
        "cmd": "/sbin/nft list ruleset | /bin/grep 'hook forward'",
        "expect": "^\\\\s*type\\\\s+filter\\\\s+hook\\\\s+forward\\\\s+(priority\\\\s+\\\\S+;\\\\s+)*policy\\\\s+drop;"
    },
    "custom_item_288": {
        "description": "Nftables check - active",
        "cmd": "/bin/systemctl is-active nftables",
        "expect": "^active$"
    },
    "custom_item_289": {
        "description": "4.2.9 Ensure nftables service is enabled",
        "info": "The nftables service allows for the loading of nftables rulesets during boot, or starting on the nftables service\n\nThe nftables service restores the nftables rules from the rules files referenced in the /etc/nftables.conf file during boot or the starting of the nftables service",
        "solution": "Run the following command to enable the nftables service:\n\n# systemctl enable nftables",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/systemctl is-enabled nftables",
        "expect": "^enabled$"
    },
    "custom_item_290": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_291": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_292": {
        "description": "dpkg check iptables-persistent",
        "cmd": "/bin/dpkg -s iptables-persistent 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_293": {
        "description": "dpkg check iptables",
        "cmd": "/bin/dpkg -s iptables 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_294": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_295": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_296": {
        "description": "4.3.1.2 Ensure nftables is not installed with iptables",
        "info": "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.\n\nRunning both iptables and nftables may lead to conflict.",
        "solution": "Run the following command to remove nftables :\n\n# apt purge nftables",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s nftables 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_297": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_298": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_299": {
        "description": "dpkg check ufw",
        "cmd": "/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_300": {
        "description": "4.3.1.3 Ensure ufw is uninstalled or disabled with iptables",
        "info": "Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to be easy to use.\n\n - Uses a command-line interface consisting of a small number of simple commands\n - Uses iptables for configuration\n\nRunning iptables.persistent with ufw enabled may lead to conflict and unexpected results.",
        "solution": "Run\n\none\n\nof the following commands to either remove ufw or stop and mask ufw\n\nRun the following command to remove ufw :\n\n# apt purge ufw\n\n-OR-\n\nRun the following commands to disable ufw :\n\n# ufw disable\n# systemctl stop ufw\n# systemctl mask ufw\n\nNote: ufw disable needs to be run before systemctl mask ufw in order to correctly disable UFW",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s ufw 2>&1 | /bin/grep -E '(^Status:|not installed)'",
        "expect": "(^Status: deinstall ok|not installed)"
    },
    "custom_item_301": {
        "description": "ufw masked",
        "cmd": "/bin/systemctl is-enabled ufw",
        "expect": "^masked$"
    },
    "custom_item_302": {
        "description": "ufw inactive",
        "cmd": "/sbin/ufw status",
        "expect": "^Status: inactive"
    },
    "custom_item_303": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_304": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_305": {
        "description": "FORWARD",
        "cmd": "/sbin/iptables -L -n | /bin/grep 'Chain FORWARD'",
        "expect": "^Chain FORWARD \\\\(policy (DROP|REJECT)\\\\)"
    },
    "custom_item_306": {
        "description": "INPUT",
        "cmd": "/sbin/iptables -L -n | /bin/grep 'Chain INPUT'",
        "expect": "^Chain INPUT \\\\(policy (DROP|REJECT)\\\\)"
    },
    "custom_item_307": {
        "description": "OUTPUT",
        "cmd": "/sbin/iptables -L -n | /bin/grep 'Chain OUTPUT'",
        "expect": "^Chain OUTPUT \\\\(policy (DROP|REJECT)\\\\)"
    },
    "custom_item_308": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_309": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_310": {
        "description": "INPUT",
        "cmd": "/sbin/iptables -L INPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$6\":\"$7\":\"$8\":\"$9] = NR; print } END { if (a[\"ACCEPT:0:lo:*:0.0.0.0/0:0.0.0.0/0\"] > 0 && a[\"ACCEPT:0:lo:*:0.0.0.0/0:0.0.0.0/0\"] < a[\"DROP:0:*:*:127.0.0.0/8:0.0.0.0/0\"]) { print \"pass\" } else { print \"fail\" } }'",
        "expect": "^pass$"
    },
    "custom_item_311": {
        "description": "OUTPUT",
        "cmd": "/sbin/iptables -L OUTPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$6\":\"$7\":\"$8\":\"$9] = NR; print } END { if (a[\"ACCEPT:0:*:lo:0.0.0.0/0:0.0.0.0/0\"] > 0) { print \"pass\" } else { print \"fail\" } }'",
        "expect": "^pass$"
    },
    "custom_item_312": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_313": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_314": {
        "description": "4.3.2.3 Ensure iptables outbound and established connections are configured",
        "info": "Configure the firewall rules for new outbound, and established connections.\n\nNotes:\n\n -\n\nChanging firewall settings while connected over network can result in being locked out of the system\n\n -\n\nRemediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well\n\nIf rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:\n\n# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT\n# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT\n# iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT\n# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT\n# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT\n# iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/sbin/iptables -L -v -n",
        "expect": "^Manual Review Required$"
    },
    "custom_item_315": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_316": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_317": {
        "description": "4.3.2.4 Ensure iptables firewall rules exist for all open ports",
        "info": "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.\n\nNote:\n\n - Changing firewall settings while connected over network can result in being locked out of the system\n - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well\n - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy\n\nWithout a firewall rule configured for open ports default firewall policy will drop all packets to these ports.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:\n\n# iptables -A INPUT -p--dport-m state --state NEW -j ACCEPT",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/ss -4tuln; /sbin/iptables -L INPUT -v -n",
        "expect": "^Manual Review Required$"
    },
    "custom_item_318": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_319": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_320": {
        "description": "check if IPv6 is enabled",
        "cmd": "/bin/grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && /bin/echo 'IPv6 is enabled' || /bin/echo 'IPv6 is not enabled'",
        "expect": "^IPv6 is enabled"
    },
    "custom_item_321": {
        "description": "INPUT",
        "cmd": "/sbin/ip6tables -L -n | /bin/grep 'Chain INPUT'",
        "expect": "^Chain INPUT \\\\(policy (DROP|REJECT)\\\\)"
    },
    "custom_item_322": {
        "description": "OUTPUT",
        "cmd": "/sbin/ip6tables -L -n | /bin/grep 'Chain OUTPUT'",
        "expect": "^Chain OUTPUT \\\\(policy (DROP|REJECT)\\\\)"
    },
    "custom_item_323": {
        "description": "FORWARD",
        "cmd": "/sbin/ip6tables -L -n | /bin/grep 'Chain FORWARD'",
        "expect": "^Chain FORWARD \\\\(policy (DROP|REJECT)\\\\)"
    },
    "custom_item_324": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_325": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_326": {
        "description": "check if IPv6 is enabled",
        "cmd": "/bin/grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && /bin/echo 'IPv6 is enabled' || /bin/echo 'IPv6 is not enabled'",
        "expect": "^IPv6 is enabled"
    },
    "custom_item_327": {
        "description": "INPUT",
        "cmd": "/sbin/ip6tables -L INPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$6\":\"$7\":\"$8\":\"$9] = NR; print } END { if (a[\"ACCEPT:0:lo:*:::/0:::/0\"] > 0 && a[\"ACCEPT:0:lo:*:::/0:::/0\"] < a[\"DROP:0:*:*:::1:::/0\"]) { print \"pass\" } else { print \"fail\" } }'",
        "expect": "^pass$"
    },
    "custom_item_328": {
        "description": "OUTPUT",
        "cmd": "/sbin/ip6tables -L OUTPUT -v -n | /bin/awk '{ a[$3\":\"$4\":\"$6\":\"$7\":\"$8\":\"$9] = NR; print } END { if (a[\"ACCEPT:0:*:lo:::/0:::/0\"] > 0) { print \"pass\" } else { print \"fail\" } }'",
        "expect": "^pass$"
    },
    "custom_item_329": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_330": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_331": {
        "description": "check if IPv6 is enabled",
        "cmd": "/bin/grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && /bin/echo 'IPv6 is enabled' || /bin/echo 'IPv6 is not enabled'",
        "expect": "^IPv6 is enabled"
    },
    "custom_item_332": {
        "description": "4.3.3.3 Ensure ip6tables outbound and established connections are configured",
        "info": "Configure the firewall rules for new outbound, and established IPv6 connections.\n\nNote:\n\n - Changing firewall settings while connected over network can result in being locked out of the system\n - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well\n\nIf rules are not in place for new outbound, and established connections all packets will be dropped by the default policy preventing network usage.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure iptables in accordance with site policy. The following commands will implement a policy to allow all outbound connections and all established connections:\n\n# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT\n# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT\n# ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT\n# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT\n# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT\n# ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1M,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/sbin/ip6tables -L -v -n",
        "expect": "Manual Review Required$"
    },
    "custom_item_333": {
        "description": "ufw active",
        "cmd": "/bin/systemctl is-active ufw | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_334": {
        "description": "nftables active",
        "cmd": "/bin/systemctl is-active nftables | /bin/awk '{print} END {if(NR==0) print \"inactive\" }'",
        "expect": "^(inactive|unknown|failed)$"
    },
    "custom_item_335": {
        "description": "check if IPv6 is enabled",
        "cmd": "/bin/grep -Pqs '^\\\\h*0\\\\b' /sys/module/ipv6/parameters/disable && /bin/echo 'IPv6 is enabled' || /bin/echo 'IPv6 is not enabled'",
        "expect": "^IPv6 is enabled"
    },
    "custom_item_336": {
        "system": "Linux",
        "description": "4.3.3.4 Ensure ip6tables firewall rules exist for all open ports",
        "info": "Any ports that have been opened on non-loopback addresses need firewall rules to govern traffic.\n\nNote:\n\n - Changing firewall settings while connected over network can result in being locked out of the system\n - Remediation will only affect the active system firewall, be sure to configure the default policy in your firewall management to apply on boot as well\n - The remediation command opens up the port to traffic from all sources. Consult iptables documentation and set any restrictions in compliance with site policy\n\nWithout a firewall rule configured for open ports default firewall policy will drop all packets to these ports.",
        "solution": "For each port identified in the audit which does not have a firewall rule establish a proper rule for accepting inbound connections:\n\n# ip6tables -A INPUT -p--dport-m state --state NEW -j ACCEPT",
        "reference": "800-171|3.13.1,800-171|3.13.5,800-171|3.13.6,800-53|CA-9,800-53|SC-7,800-53|SC-7(5),800-53r5|CA-9,800-53r5|SC-7,800-53r5|SC-7(5),CN-L3|7.1.2.2(c),CN-L3|8.1.10.6(j),CSCv7|9.4,CSCv8|4.4,CSCv8|4.5,CSF|DE.CM-1,CSF|ID.AM-3,CSF|PR.AC-5,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.b,GDPR|32.1.d,GDPR|32.2,HIPAA|164.306(a)(1),ISO/IEC-27001|A.13.1.3,ITSG-33|SC-7,ITSG-33|SC-7(5),LEVEL|1A,NESA|T4.5.4,NIAv2|GS1,NIAv2|GS2a,NIAv2|GS2b,NIAv2|GS7b,NIAv2|NS25,PCI-DSSv3.2.1|1.1,PCI-DSSv3.2.1|1.2,PCI-DSSv3.2.1|1.2.1,PCI-DSSv3.2.1|1.3,PCI-DSSv4.0|1.2.1,PCI-DSSv4.0|1.4.1,QCSC-v1|4.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,SWIFT-CSCv1|2.1,TBA-FIISB|43.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n          {\npassing=\"\" output=\"\" output2=\"\"\n\nip6trules=$(ip6tables -L INPUT -v -n)\nfor oport in $(ss -6tuln | awk '($2~/(LISTEN|UNCONN|ESTAB)/ && $5!~/\\\\{?::1\\\\]?:/){print}' | sed -E 's/^.*:([0-9]+)\\\\s+.*$/\\\\1/'); do\n\tif [ -n \"$oport\" ]; then\n\t\tif echo $ip6trules | grep -Eq \":$oport\\\\b\"; then\n\t\t\t[ -z \"$passing\" ] && passing=true\n\t\telse\n\t\t\tpassing=false\n\t\t\t[ -z \"$output\" ] && output=\"The following open port(s) dont have a firewall rule: \\\\\"$oport\\\\\"\" || output=\"$output, \\\\\"$oport\\\\\"\"\n\t\tfi\n\tfi\ndone\nif [ -z \"$passing\" ] && [ -z \"$output\" ]; then\n\tpassing=true\n\toutput2=\"No open ports found on the system\"\nfi\n\n# If the tests both pass, passing is set to true.  If so, we pass\nif [ \"$passing\" = true ]; then\n\techo \"PASSED: All open ports have a firewall rule\"\nelse\n    # print the reason why we are failing\n    echo \"FAILED: $output\"\nfi\n\t\t\t\t\t}",
        "expect": "^PASSED: All open ports have a firewall rule$"
    },
    "custom_item_337": {
        "description": "5.1.1 Ensure permissions on /etc/ssh/sshd_config are configured",
        "info": "The file /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory, contain configuration specifications for sshd\n\nconfiguration specifications for sshd need to be protected from unauthorized changes by non-privileged users.",
        "solution": "Run the following script to set ownership and permissions on /etc/ssh/sshd_config and files ending inconf in the /etc/ssh/sshd_config.d directory:\n\n#!/usr/bin/env bash\n\n{\n   chmod u-x,og-rwx /etc/ssh/sshd_config\n   chown root:root /etc/ssh/sshd_config\n   while IFS= read -r -d $'\\0' l_file; do\n      if [ -e \"$l_file\" ]; then\n         chmod u-x,og-rwx \"$l_file\"\n         chown root:root \"$l_file\"\n      fi\n   done < <(find /etc/ssh/sshd_config.d -type f -print0)\n}\n\n- IF - other locations are listed in an Include statement, *.conf files in these locations access should also be modified.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   perm_mask='0177' && maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n   SSHD_FILES_CHK()\n   {\n      while IFS=: read -r l_mode l_user l_group; do\n         l_out2=\"\"\n         [ $(( $l_mode & $perm_mask )) -gt 0 ] && l_out2=\"$l_out2\\\\n  - Is mode: \\\\\"$l_mode\\\\\" should be: \\\\\"$maxperm\\\\\" or more restrictive\"\n         [ \"$l_user\" != \"root\" ] && l_out2=\"$l_out2\\\\n  - Is owned by \\\\\"$l_user\\\\\" should be owned by \\\\\"root\\\\\"\"\n         [ \"$l_group\" != \"root\" ] && l_out2=\"$l_out2\\\\n  - Is group owned by \\\\\"$l_user\\\\\" should be group owned by \\\\\"root\\\\\"\"\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\\\\n - File: \\\\\"$l_file\\\\\":$l_out2\"\n         else\n            l_output=\"$l_output\\\\n - File: \\\\\"$l_file\\\\\":\\\\n  - Correct: mode ($l_mode), owner ($l_user), and group owner ($l_group) configured\"\n         fi\n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\")\n   }\n   [ -e \"/etc/ssh/sshd_config\" ] && l_file=\"/etc/ssh/sshd_config\" && SSHD_FILES_CHK\n   while IFS= read -r -d $'\\\\0' l_file; do\n      [ -e \"$l_file\" ] && SSHD_FILES_CHK\n   done < <(find -L /etc/ssh/sshd_config.d -type f  \\\\( -perm /077 -o ! -user root -o ! -group root \\\\) -print0)\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\\\n- Audit Result:\\\\n  *** PASS ***\\\\n- * Correctly set * :\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \" - * Correctly set * :\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_338": {
        "description": "sshd hostbasedauthentication setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^hostbasedauthentication)\"; done | /bin/awk 'BEGIN {f=0} /HostbasedAuthentication/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_339": {
        "description": "config file HostbasedAuthentication setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)HostbasedAuthentication(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)HostbasedAuthentication(?-i)[\\\\s]+\"?yes\"?[\\\\s]*$"
    },
    "custom_item_340": {
        "description": "config file IgnoreRhosts setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)IgnoreRhosts(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)IgnoreRhosts(?-i)[\\\\s]+\"?no\"?[\\\\s]*$"
    },
    "custom_item_341": {
        "description": "sshd ignorerhosts setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ignorerhosts)\"; done | /bin/awk 'BEGIN {f=0} /IgnoreRhosts/i { if ($NF == \"no\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_342": {
        "description": "5.1.12 Ensure sshd KexAlgorithms is configured",
        "info": "Key exchange is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. If the sender and receiver wish to exchange encrypted messages, each must be equipped to encrypt messages to be sent and decrypt messages received\n\nNotes:\n\n - Kex algorithms have a higher preference the earlier they appear in the list\n - Some organizations may have stricter requirements for approved Key exchange algorithms\n - Ensure that Key exchange algorithms used are in compliance with site policy\n - The only Key Exchange Algorithms currently FIPS 140 approved are:\n - ecdh-sha2-nistp256\n - ecdh-sha2-nistp384\n - ecdh-sha2-nistp521\n - diffie-hellman-group-exchange-sha256\n - diffie-hellman-group16-sha512\n - diffie-hellman-group18-sha512\n - diffie-hellman-group14-sha256\n\nKey exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks",
        "solution": "Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a - above any Include entries:\n\nExample:\n\nKexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1\n\nNote: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^kexalgorithms)\"; done | /bin/awk 'BEGIN {f=0} /kexalgorithms/i { if ($NF ~ \"(diffie-hellman-group1-sha1|diffie-hellman-group14-sha1|diffie-hellman-group-exchange-sha1)\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_343": {
        "description": "5.1.13 Ensure sshd LoginGraceTime is configured",
        "info": "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.\n\nSetting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.",
        "solution": "Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60 or 1m :\n\nLoginGraceTime 60\n\nNote: First occurrence of a option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.1.11,800-53|AC-10,800-53|AC-12,800-53r5|AC-10,800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iii),ITSG-33|AC-10,ITSG-33|AC-12,LEVEL|1A,NESA|T5.5.1,NIAv2|NS49,QCSC-v1|5.2.1,QCSC-v1|5.2.2",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^logingracetime)\"; done | /bin/awk 'BEGIN {f=0} /logingracetime/i { if ($NF !~ /^([1-9]|[1-5][0-9]|60|1m)$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_344": {
        "description": "sshd loglevel setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i loglevel)\"; done | /bin/awk 'BEGIN {f=0} /LogLevel/i { if ($NF !~ /^(INFO|VERBOSE)$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_345": {
        "description": "config file loglevel setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)LogLevel(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)LogLevel(?-i)[\\\\s]+\"?(INFO|VERBOSE)\"?[\\\\s]*$"
    },
    "custom_item_346": {
        "description": "5.1.15 Ensure sshd MACs are configured",
        "info": "This variable limits the types of MAC algorithms that SSH can use during communication.\n\nNotes:\n\n - Some organizations may have stricter requirements for approved MACs.\n - Ensure that MACs used are in compliance with site policy.\n - The only \"strong\" MACs currently FIPS 140 approved are:\n - HMAC-SHA1\n - HMAC-SHA2-256\n - HMAC-SHA2-384\n - HMAC-SHA2-512\n\nMD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information.",
        "solution": "Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma separated list of the site unapproved (weak) MACs preceded with a - above any Include entries:\n\nExample:\n\nMACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com\n\n- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs should be added to the exclude list:\n\nhmac-sha1-etm@openssh.com\n\n,\n\nhmac-sha2-256-etm@openssh.com\n\n,\n\nhmac-sha2-512-etm@openssh.com\n\nNote: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv7|16.5,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n{\nports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -Ei '^macs\\\\s')\"; done | /bin/awk 'BEGIN {f=0} /\\\\smacs\\\\s/i { if ($NF ~ \"(hmac-md5|hmac-md5-96|hmac-ripemd160|hmac-sha1-96|umac-64@openssh.com|hmac-md5-etm@openssh.com|hmac-md5-96-etm@openssh.com|hmac-ripemd160-etm@openssh.com|hmac-sha1-96-etm@openssh.com|umac-64-etm@openssh.com|umac-128-etm@openssh.com)\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n}",
        "expect": "^Pass$"
    },
    "custom_item_347": {
        "description": "sshd maxauthtries setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^maxauthtries)\"; done | /bin/awk 'BEGIN {f=0} /maxauthtries/i { if ($NF !~ /^[0-4]$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_348": {
        "description": "config file maxauthtries setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)MaxAuthTries(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)MaxAuthTries(?-i)[\\\\s]+\"?([5-9]|[1-9][0-9]+)\"?[\\\\s]*$"
    },
    "custom_item_349": {
        "description": "config file MaxSessions setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)MaxSessions(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)MaxSessions(?-i)[\\\\s]+\"?(1[1-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\"?[\\\\s]*$"
    },
    "custom_item_350": {
        "description": "sshd maxsessions setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^maxsessions)\"; done | /bin/awk 'BEGIN {f=0} /maxsessions/i { if ($NF !~ /^([0-9]|10)$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_351": {
        "description": "sshd maxstartups setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^maxstartups)\"; done | /bin/awk 'BEGIN {f=0} /maxstartups/i { if ($NF !~ /^([1-9]|10):([1-9]|[12][0-9]|30):([1-9]|[1-5][0-9]|60)$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_352": {
        "description": "ssh config files - MaxStartups",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)MaxStartups(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)MaxStartups(?-i)[\\\\s]+\"?(((1[1-9]|[1-9][0-9][0-9]+):([0-9]+):([0-9]+))|(([0-9]+):(3[1-9]|[4-9][0-9]|[1-9][0-9][0-9]+):([0-9]+))|(([0-9]+):([0-9]+):(6[1-9]|[7-9][0-9]|[1-9][0-9][0-9]+)))\"?[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_353": {
        "description": "config file permitemptypasswords setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)PermitEmptyPasswords(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)PermitEmptyPasswords(?-i)[\\\\s]+\"?yes\"?[\\\\s]*$"
    },
    "custom_item_354": {
        "description": "sshd permitemptypasswords setting",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^PermitEmptyPasswords)\"; done | /bin/awk 'BEGIN {f=0} /PermitEmptyPasswords/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_355": {
        "description": "5.1.2 Ensure permissions on SSH private host key files are configured",
        "info": "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.\n\nIf an unauthorized user obtains the private SSH host key file, the host could be impersonated",
        "solution": "Run the following script to set mode, ownership, and group on the private SSH host key files:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_ssh_group_name=\"$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)\"\n   FILE_ACCESS_FIX()\n   {\n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do\n         echo \"File: \\\\\"$l_file\\\\\" mode: \\\\\"$l_file_mode\\\\\" owner \\\\\"$l_file_own\\\\\" group \\\\\"$l_file_group\\\\\"\"\n         l_out2=\"\"\n         [ \"l_file_group\" = \"$l_ssh_group_name\" ] && l_pmask=\"0137\" || l_pmask=\"0177\"\n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n         if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\\n - Mode: \\\\\"$l_file_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\\n - updating to mode: \\:$l_maxperm\\\\\"\"\n            [ \"l_file_group\" = \"$l_ssh_group_name\" ] && chmod u-x,g-wx,o-rwx \"$l_file\" || chmod u-x,go-rwx\n         fi\n         if [ \"$l_file_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\\n - Owned by: \\\\\"$l_file_owner\\\\\" should be owned by \\\\\"root\\\\\"\\n - Changing ownership to \\\\\"root\\\\\"\"\n            chown root \"$l_file\"\n         fi\n         if [[ ! \"$l_file_group\" =~ ($l_ssh_group_name|root) ]]; then\n            [ -n \"$l_ssh_group_name\" ] && l_new_group=\"$l_ssh_group_name\" || l_new_group=\"root\"\n            l_out2=\"$l_out2\\n - Owned by group \\\\\"$l_file_group\\\\\" should be group owned by: \\\\\"$l_ssh_group_name\\\\\" or \\\\\"root\\\\\"\\n - Changing group ownership to \\\\\"$l_new_group\\\\\"\"\n            chgrp \"$l_new_group\" \"$l_file\"\n         fi\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n         else\n            l_output=\"$l_output\\n - File: \\\\\"$l_file\\\\\"\\n - Correct: mode: \\\\\"$l_file_mode\\\\\", owner: \\\\\"$l_file_owner\\\\\", and group owner: \\\\\"$l_file_group\\\\\" configured\"\n         fi\n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\")\n   }\n   while IFS= read -r -d $'\\0' l_file; do\n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then\n         file \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?private\\h+key\\b' && FILE_ACCESS_FIX\n      fi\n   done < <(find -L /etc/ssh -xdev -type f -print0)\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\n- No access changes required\\n\"\n   else\n      echo -e \"\\n- Remediation results:\\n$l_output2\\n\"\n   fi\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_ssh_group_name=\"$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)\"\n   FILE_CHK()\n   {\n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do\n         l_out2=\"\"\n         [ \"l_file_group\" = \"$l_ssh_group_name\" ] && l_pmask=\"0137\" || l_pmask=\"0177\"\n         l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n         if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\\\\n  - Mode: \\\\\"$l_file_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n         fi\n         if [ \"$l_file_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\\\\n  - Owned by: \\\\\"$l_file_owner\\\\\" should be owned by \\\\\"root\\\\\"\"\n         fi\n         if [[ ! \"$l_file_group\" =~ ($l_ssh_group_name|root) ]]; then\n            l_out2=\"$l_out2\\\\n  - Owned by group \\\\\"$l_file_group\\\\\" should be group owned by: \\\\\"$l_ssh_group_name\\\\\" or \\\\\"root\\\\\"\"\n         fi\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\\\\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n         else\n            l_output=\"$l_output\\\\n - File: \\\\\"$l_file\\\\\"\\\\n  - Correct: mode: \\\\\"$l_file_mode\\\\\", owner: \\\\\"$l_file_owner\\\\\", and group owner: \\\\\"$l_file_group\\\\\" configured\"\n         fi\n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\")\n   }\n   while IFS= read -r -d $'\\\\0' l_file; do\n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then\n         file \"$l_file\" | grep -Piq -- '\\\\bopenssh\\\\h+([^#\\\\n\\\\r]+\\\\h+)?private\\\\h+key\\\\b' && FILE_CHK\n      fi\n   done < <(find -L /etc/ssh -xdev -type f -print0)\n   if [ -z \"$l_output2\" ]; then\n      [ -z \"$l_output\" ] && l_output=\"\\\\n  - No openSSH private keys found\"\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n - * Correctly configured * :$l_output\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n - * Correctly configured * :\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_356": {
        "description": "sshd -T permitrootlogin",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^permitrootlogin)\"; done | /bin/awk 'BEGIN {f=0} /permitrootlogin/i { if ($NF != \"no\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_357": {
        "description": "config file permitrootlogin setting",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "^[\\\\s]*(?i)PermitRootLogin(?-i)[\\\\s]",
        "expect": "^[\\\\s]*(?i)PermitRootLogin(?-i)[\\\\s]+\"?no\"?[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_358": {
        "description": "5.1.21 Ensure sshd PermitUserEnvironment is disabled",
        "info": "The PermitUserEnvironment option allows users to present environment options to the SSH daemon.\n\nPermitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has SSH executing trojan'd programs)",
        "solution": "Edit the /etc/ssh/sshd_config file to set the parameter PermitUserEnvironment to no above any Include entries as follows:\n\nPermitUserEnvironment no\n\nNote: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|1A,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^PermitEmptyPasswords)\"; done | /bin/awk 'BEGIN {f=0} /PermitEmptyPasswords/i { if ($NF == \"yes\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_359": {
        "description": "5.1.22 Ensure sshd UsePAM is enabled",
        "info": "The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If set to yes this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication directives in addition to PAM account and session module processing for all authentication types.\n\nWhen usePAM is set to yes PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server",
        "solution": "Edit the /etc/ssh/sshd_config file to set the parameter above any Include entries as follows:\n\nUsePAM yes\n\nNote: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^usepam)\"; done | /bin/awk 'BEGIN {f=0} /usepam/i { if ($NF == \"no\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_360": {
        "description": "5.1.3 Ensure permissions on SSH public host key files are configured",
        "info": "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.\n\nIf a public host key file is modified by an unauthorized user, the SSH service may be compromised.",
        "solution": "Run the following script to set mode, ownership, and group on the public SSH host key files:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_pmask=\"0133\" && l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n   FILE_ACCESS_FIX()\n   {\n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do\n         l_out2=\"\"\n         if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\\n - Mode: \\\\\"$l_file_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\\n - updating to mode: \\:$l_maxperm\\\\\"\"\n            chmod u-x,go-wx\n         fi\n         if [ \"$l_file_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\\n - Owned by: \\\\\"$l_file_owner\\\\\" should be owned by \\\\\"root\\\\\"\\n - Changing ownership to \\\\\"root\\\\\"\"\n            chown root \"$l_file\"\n         fi\n         if [ \"$l_file_group\" != \"root\" ]; then\n            l_out2=\"$l_out2\\n - Owned by group \\\\\"$l_file_group\\\\\" should be group owned by: \\\\\"root\\\\\"\\n - Changing group ownership to \\\\\"root\\\\\"\"\n            chgrp root \"$l_file\"\n         fi\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n         else\n            l_output=\"$l_output\\n - File: \\\\\"$l_file\\\\\"\\n - Correct: mode: \\\\\"$l_file_mode\\\\\", owner: \\\\\"$l_file_owner\\\\\", and group owner: \\\\\"$l_file_group\\\\\" configured\"\n         fi\n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\")\n   }\n   while IFS= read -r -d $'\\0' l_file; do\n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then\n         file \"$l_file\" | grep -Piq -- '\\bopenssh\\h+([^#\\n\\r]+\\h+)?public\\h+key\\b' && FILE_ACCESS_FIX\n      fi\n   done < <(find -L /etc/ssh -xdev -type f -print0)\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\\n- No access changes required\\n\"\n   else\n      echo -e \"\\n- Remediation results:\\n$l_output2\\n\"\n   fi\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   l_pmask=\"0133\" && l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n   FILE_CHK()\n   {\n      while IFS=: read -r l_file_mode l_file_owner l_file_group; do\n         l_out2=\"\"\n         if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then\n            l_out2=\"$l_out2\\\\n  - Mode: \\\\\"$l_file_mode\\\\\" should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n         fi\n         if [ \"$l_file_owner\" != \"root\" ]; then\n            l_out2=\"$l_out2\\\\n  - Owned by: \\\\\"$l_file_owner\\\\\" should be owned by \\\\\"root\\\\\"\"\n         fi\n         if [ \"$l_file_group\" != \"root\" ]; then\n            l_out2=\"$l_out2\\\\n  - Owned by group \\\\\"$l_file_group\\\\\" should be group owned by group: \\\\\"root\\\\\"\"\n         fi\n         if [ -n \"$l_out2\" ]; then\n            l_output2=\"$l_output2\\\\n - File: \\\\\"$l_file\\\\\"$l_out2\"\n         else\n            l_output=\"$l_output\\\\n - File: \\\\\"$l_file\\\\\"\\\\n  - Correct: mode: \\\\\"$l_file_mode\\\\\", owner: \\\\\"$l_file_owner\\\\\", and group owner: \\\\\"$l_file_group\\\\\" configured\"\n         fi\n      done < <(stat -Lc '%#a:%U:%G' \"$l_file\")\n   }\n   while IFS= read -r -d $'\\\\0' l_file; do\n      if ssh-keygen -lf &>/dev/null \"$l_file\"; then\n         file \"$l_file\" | grep -Piq -- '\\\\bopenssh\\\\h+([^#\\\\n\\\\r]+\\\\h+)?public\\\\h+key\\\\b' && FILE_CHK\n      fi\n   done < <(find -L /etc/ssh -xdev -type f -print0)\n   if [ -z \"$l_output2\" ]; then\n      [ -z \"$l_output\" ] && l_output=\"\\\\n  - No openSSH public keys found\"\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n - * Correctly configured * :$l_output\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n - * Correctly configured * :\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_361": {
        "description": "5.1.4 Ensure sshd access is configured",
        "info": "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:\n\n - AllowUsers :\n - The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.\n\n - AllowGroups :\n - The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.\n\n - DenyUsers :\n - The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.\n\n - DenyGroups :\n - The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.\n\nRestricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.",
        "solution": "Edit the /etc/ssh/sshd_config file to set one or more of the parameter above any Include and Match set statements as follows:\n\nAllowUsers-OR-\nAllowGroups-OR-\nDenyUsers-OR-\nDenyGroupsNote: First occurrence of a option takes precedence, Match set statements withstanding. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in aconf file in a Include directory.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|4.3,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -Pi '^\\\\h*(allow|deny)(users|groups)\\\\h+\\\\H+(\\\\h+.*)?$')\"; done | /bin/awk 'BEGIN {f=0} /(allow|deny)(users|groups)/i { if ($NF ~ \":\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\"}'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_362": {
        "description": "config files Banner",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "(?i)^\\\\h*Banner\\\\h+\"?none\\\\b",
        "expect": "(?i)^\\\\h*Banner\\\\h+\"?none\\\\b"
    },
    "custom_item_363": {
        "description": "sshd -T banner",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^banner)\"; done | /bin/awk 'BEGIN {f=0} /banner/i { if ($NF != \"/etc/issue.net\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_364": {
        "description": "5.1.6 Ensure sshd Ciphers are configured",
        "info": "This variable limits the ciphers that SSH can use during communication.\n\nNotes:\n\n - Some organizations may have stricter requirements for approved ciphers.\n - Ensure that ciphers used are in compliance with site policy.\n - The only \"strong\" ciphers currently FIPS 140 compliant are:\n -\n\naes256-gcm@openssh.com\n\n -\n\naes128-gcm@openssh.com\n\n - aes256-ctr\n - aes192-ctr\n - aes128-ctr\n\nWeak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised.\n\n - The Triple DES ciphers, as used in SSH, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain clear text data via a birthday attack against a long-duration encrypted session, aka a \"Sweet32\" attack.\n - Error handling in the SSH protocol; Client and Server, when using a block cipher algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to recover certain plain text data from an arbitrary block of cipher text in an SSH session via unknown vectors.",
        "solution": "Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma separated list of the site unapproved (weak) Ciphers preceded with a - above any Include entries:\n\nExample:\n\nCiphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-poly1305@openssh.com\n\n- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-poly1305@openssh.com may be removed from the list of excluded ciphers.\n\nNote: First occurrence of an option takes precedence. If Include locations are enabled, used, and order of precedence is understood in your environment, the entry may be created in a file in Include location.",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^ciphers)\"; done | /bin/awk 'BEGIN {f=0} /ciphers/i { if ($NF ~ \"(3des|blowfish|cast128|aes(128|192|256))-cbc|arcfour(128|256)?|rijndael-cbc@lysator\\\\.liu\\\\.se)\") f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_365": {
        "description": "ClientAliveCountMax is greater than 0",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^clientalivecountmax)\"; done | /bin/awk 'BEGIN {f=0} /clientalivecountmax/i { if ($NF !~ /^[1-9][0-9]*$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_366": {
        "description": "ClientAliveInterval is greater than 0",
        "cmd": "#!/bin/bash\n  {\n  ports=$(/bin/grep -s -P \"^(Port|Match)\" /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf | /bin/grep -P -o \"(Port|LocalPort)[\\\\s]+[\\\\d]+\" | /bin/awk '{print $2}; END {if (NR == 0) print \"22\"}' | /bin/uniq); for port in ${ports[@]}; do /sbin/sshd -T -C user=root -C host=\"$(hostname)\" -C addr=\"$(/bin/grep $(hostname) /etc/hosts | /bin/awk '{print $1}')\" -C lport=$port | echo \"port $port: $(/bin/grep -i ^clientaliveinterval)\"; done | /bin/awk 'BEGIN {f=0} /clientaliveinterval/i { if ($NF !~ /^[1-9][0-9]*$/) f++; print $0} END {if (NR == 0) print \"Fail: no results returned\"; else if (f > 0) print \"Fail\"; else print \"Pass\" }'\n  }",
        "expect": "^Pass$"
    },
    "custom_item_367": {
        "description": "config file ClientAliveCountMax",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "(?i)^\\\\h*ClientAliveCountMax\\\\h+\"?0\\\\b",
        "expect": "(?i)^\\\\h*ClientAliveCountMax\\\\h+\"?0\\\\b"
    },
    "custom_item_368": {
        "description": "config file ClientAliveInterval",
        "file": "/etc/ssh/sshd_config /etc/ssh/sshd_config.d/*.conf",
        "regex": "(?i)^\\\\h*ClientAliveInterval\\\\h+\"?0\\\\b",
        "expect": "(?i)^\\\\h*ClientAliveInterval\\\\h+\"?0\\\\b"
    },
    "custom_item_369": {
        "description": "5.2.1 Ensure sudo is installed",
        "info": "sudo allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.\n\nsudo supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the sudo front end. The default security policy is sudoers which is configured via the file /etc/sudoers and any entries in /etc/sudoers.d\n\nThe security policy determines what privileges, if any, a user has to run sudo The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, sudo will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.",
        "solution": "First determine is LDAP functionality is required. If so, then install sudo-ldap else install sudo\n\nExample:\n\n# apt install sudo",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/usr/bin/dpkg -s sudo sudo-ldap 2>&1",
        "expect": "install[\\\\s]+ok[\\\\s]+installed"
    },
    "custom_item_370": {
        "description": "5.2.2 Ensure sudo commands use pty",
        "info": "sudo can be configured to run only from a pseudo terminal ( pseudo-pty ).\n\nAttackers can run a malicious program using sudo which would fork a background process that remains even when the main program has finished executing.",
        "solution": "Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -fand add the following line:\n\nDefaults use_pty\n\nNote:\n\n - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.\n - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second\n - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second\n - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.\n\nImpact:\n\nWARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|5.1,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/grep -s -P '^[\\\\s]*Defaults[\\\\s]+(\\[^#]+,[\\\\s]*)?use_pty' /etc/sudoers /etc/sudoers.d/* | /bin/awk '{print} END {if (NR != 0) print \"pass\" ; else print \"fail\"}'",
        "expect": "^pass$"
    },
    "custom_item_371": {
        "description": "5.2.3 Ensure sudo log file exists",
        "info": "sudo can use a custom log file\n\nA sudo log file simplifies auditing of sudo commands",
        "solution": "Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -fand add the following line:\n\nExample:\n\nDefaults logfile=\"/var/log/sudo.log\"\n\nNote:\n\n - sudo will read each file in /etc/sudoers.d skipping file names that end in ~ or contain a character to avoid causing problems with package manager or editor temporary/backup files.\n - Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will be parsed before /etc/sudoers.d/10_second\n - Be aware that because the sorting is lexical, not numeric, /etc/sudoers.d/1_whoops would be loaded after /etc/sudoers.d/10_second\n - Using a consistent number of leading zeroes in the file names can be used to avoid such problems.\n\nImpact:\n\nWARNING: Editing the sudo configuration incorrectly can cause sudo to stop functioning. Always use visudo to modify sudo configuration files.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/sudoers /etc/sudoers.d/*",
        "regex": "(?i)^\\\\h*Defaults\\\\h+([^#]+,\\\\h*)?logfile\\\\h*=\\\\h*(\\\\\"|\\\\')?\\\\H+(\\\\\"|\\\\')?(,\\\\h*\\\\H+\\\\h*)*\\\\h*(#.*)?$",
        "expect": "(?i)^\\\\h*Defaults\\\\h+([^#]+,\\\\h*)?logfile\\\\h*=\\\\h*(\\\\\"|\\\\')?\\\\H+(\\\\\"|\\\\')?(,\\\\h*\\\\H+\\\\h*)*\\\\h*(#.*)?$",
        "min_occurrences": "1"
    },
    "custom_item_372": {
        "description": "5.2.5 Ensure re-authentication for privilege escalation is not disabled globally",
        "info": "The operating system must be configured so that users must re-authenticate for privilege escalation.\n\nWithout re-authentication, users may access resources or perform tasks for which they do not have authorization.\n\nWhen operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.",
        "solution": "Configure the operating system to require users to reauthenticate for privilege escalation.\n\nBased on the outcome of the audit procedure, use visudo -fto edit the relevant sudoers file.\n\nRemove any occurrences of !authenticate tags in the file(s).",
        "reference": "800-171|3.1.5,800-171|3.1.6,800-53|AC-6(2),800-53|AC-6(5),800-53r5|AC-6(2),800-53r5|AC-6(5),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSCv7|4.3,CSCv8|5.4,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.3,ITSG-33|AC-6(2),ITSG-33|AC-6(5),LEVEL|1A,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.6.1,NIAv2|AM1,NIAv2|AM23f,NIAv2|AM32,NIAv2|AM33,NIAv2|SS13c,NIAv2|SS15c,NIAv2|VL3a,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/sudoers /etc/sudoers.d/*",
        "regex": "^[^#].*\\!authenticate",
        "expect": "^[^#].*\\!authenticate"
    },
    "custom_item_373": {
        "description": "sudo timeout",
        "cmd": "/bin/sudo -V | /bin/grep 'Authentication timestamp timeout:'",
        "expect": "Authentication timestamp timeout:[\\\\s]*([1-9]|1[0-5])\\\\."
    },
    "custom_item_374": {
        "description": "On disk timestamp_timeout",
        "file": "/etc/sudoers /etc/sudoers.d/*",
        "regex": "(?i)^\\\\h*defaults\\\\h+(?:[^#\\\\n\\\\r]+\\\\h*,\\\\h*)?timestamp_timeout=(-1|1[6-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\\\\b(\\\\h*,\\\\h*.*)?$",
        "expect": "(?i)^\\\\h*defaults\\\\h+(?:[^#\\\\n\\\\r]+\\\\h*,\\\\h*)?timestamp_timeout=(-1|1[6-9]|[2-9][0-9]|[1-9][0-9][0-9]+)\\\\b(\\\\h*,\\\\h*.*)?$",
        "min_occurrences": "1"
    },
    "custom_item_375": {
        "description": "5.2.7 Ensure access to the su command is restricted",
        "info": "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su the su command will only allow users in a specific groups to execute su This group should be empty to reinforce the use of sudo for privileged access.\n\nRestricting the use of su and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo whereas su can only record that a user executed the su program.",
        "solution": "Create an empty group that will be specified for use of the su command. The group should be named according to site policy.\n\nExample:\n\n# groupadd sugroup\n\nAdd the following line to the /etc/pam.d/su file, specifying the empty group:\n\nauth required pam_wheel.so use_uid group=sugroup",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "sugroup=$(/bin/grep -Pi '^\\\\h*auth\\\\h+(?:required|requisite)\\\\h+pam_wheel\\\\.so\\\\h+(?:[^#\\\\n\\\\r]+\\\\h+)?((?!\\\\2)(use_uid\\\\b|group=\\\\H+\\\\b))\\\\h+(?:[^#\\\\n\\\\r]+\\\\h+)?((?!\\\\1)(use_uid\\\\b|group=\\\\H+\\\\b))(\\\\h+.*)?$' /etc/pam.d/su | /bin/awk 'BEGIN { FS = \"=\"} ; { print $2 }'); if [ ! -z $sugroup ]; then /bin/grep $sugroup /etc/group | /bin/awk 'BEGIN { FS = \":\" }; { print $4 }' | /bin/awk '{print} END {if (NF == 0) print \"pass - group empty\"; else print \"fail - group not empty\"}'; else echo \"fail - sugroup not found in /etc/pam.d/su\"; fi",
        "expect": "pass - group empty"
    },
    "custom_item_376": {
        "description": "5.3.1.1 Ensure latest version of pam is installed",
        "info": "Updated versions of PAM include additional functionality\n\nTo ensure the system has full functionality and access to the options covered by this Benchmark the latest version of libpam-runtime should be installed on the system",
        "solution": "- IF - the version of libpam-runtime on the system is less that version 1.5.2-6 :\n\nRun the following command to update to the latest version of PAM :\n\n# apt upgrade libpam-runtime",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s libpam-runtime | /bin/grep -E '(Status:|Version)'",
        "expect": "^Version: ([1-9]|[1-9][0-9])\\\\.([5-9]|[1-9][0-9])\\\\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])"
    },
    "custom_item_377": {
        "description": "5.3.1.2 Ensure libpam-modules is installed",
        "info": "Pluggable Authentication Modules for PAM\n\nTo ensure the system has full functionality and access to the PAM options covered by this Benchmark",
        "solution": "- IF - the version of libpam-modules on the system is less that version 1.5.2-6 :\n\nRun the following command to update to the latest version of PAM :\n\n# apt upgrade libpam-modules",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s libpam-modules | /bin/grep -E '(Status:|Version)'",
        "expect": "^Version: (1\\\\.5\\\\.([2-9]|[1-9][0-9])-([6-9]|[1-9][0-9])|1\\\\.([6-9]|[1-9][0-9])\\\\.|[2-9]\\\\.|[1-9][0-9]\\\\.)"
    },
    "custom_item_378": {
        "description": "5.3.1.3 Ensure libpam-pwquality is installed",
        "info": "libpwquality provides common functions for password quality checking and scoring them based on their apparent randomness. The library also provides a function for generating random passwords with good pronounceability.\n\nThis module can be plugged into the password stack of a given service to provide some plug-in strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.\n\nStrong passwords reduce the risk of systems being hacked through brute force methods.",
        "solution": "Run the following command to install libpam-pwquality :\n\n# apt install libpam-pwquality",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s libpam-pwquality 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_379": {
        "description": "common-password",
        "file": "/etc/pam.d/common-password",
        "regex": "^\\\\h*password\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*password\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_380": {
        "description": "common-account",
        "file": "/etc/pam.d/common-account",
        "regex": "^\\\\h*account\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*account\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_381": {
        "description": "common-session",
        "file": "/etc/pam.d/common-session",
        "regex": "^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_382": {
        "description": "common-auth",
        "file": "/etc/pam.d/common-auth",
        "regex": "^\\\\h*auth\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b",
        "expect": "^\\\\h*auth\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b"
    },
    "custom_item_383": {
        "description": "common-account pam_faillock.so",
        "file": "/etc/pam.d/common-account",
        "regex": "(?i)^\\\\h*account\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_faillock\\\\.so\\\\b",
        "expect": "(?i)^\\\\h*account\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_faillock\\\\.so\\\\b"
    },
    "custom_item_384": {
        "description": "common-auth authfail",
        "file": "/etc/pam.d/common-auth",
        "regex": "(?i)^\\\\h*auth\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?authfail\\\\b",
        "expect": "(?i)^\\\\h*auth\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?authfail\\\\b"
    },
    "custom_item_385": {
        "description": "common-auth preauth",
        "file": "/etc/pam.d/common-auth",
        "regex": "(?i)^\\\\h*auth\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?preauth\\\\b",
        "expect": "(?i)^\\\\h*auth\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?preauth\\\\b"
    },
    "custom_item_386": {
        "description": "5.3.2.3 Ensure pam_pwquality module is enabled",
        "info": "The pam_pwquality.so module performs password quality checking. This module can be plugged into the password stack of a given service to provide strength-checking for passwords. The code was originally based on pam_cracklib module and the module is backwards compatible with its options.\n\nThe action of this module is to prompt the user for a password and check its strength against a system dictionary and a set of rules for identifying poor choices.\n\nThe first action is to prompt for a single password, check its strength and then, if it is considered strong, prompt for the password a second time (to verify that it was typed correctly on the first occasion). All being well, the password is passed on to subsequent modules to be installed as the new authentication token.\n\nUse of a unique, complex passwords helps to increase the time and resources required to compromise the password.",
        "solution": "Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:\n\n# grep -P -- '\\bpam_pwquality\\.so\\b' /usr/share/pam-configs/*\n\nOutput should be similar to:\n\n/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3\n/usr/share/pam-configs/pwquality: requisite pam_pwquality.so retry=3\n\n- IF - similar output is returned:\n\nRun the following command to update /etc/pam.d/common-password with the returned profile:\n\n# pam-auth-update --enable {PROFILE_NAME}\n\nExample:\n\n# pam-auth-update pwquality\n\n- IF - similar output is NOT returned:\n\nRun the following script to create a pam-auth-update profile for pwquality :\n\n#!/usr/bin/env bash\n\n{\n   arr=('Name: Pwquality password strength checking' 'Default: yes' 'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' ' requisite pam_pwquality.so retry=3' 'Password-Initial:' ' requisite pam_pwquality.so retry=3')\n   printf '%s\\n' \"${arr[@]}\" > /usr/share/pam-configs/pwquality\n}\n\nRun the following command to update /etc/pam.d/common-password with the pwquality profile:\n\n# pam-auth-update --enable pwquality\n\nNote:\n\n - The name used for the file must be used in the pam-auth-update --enable command\n - The Name: line should be easily recognizable and understood\n - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files\n - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwquality module, enable that module instead",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwquality\\\\.so\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwquality\\\\.so\\\\b"
    },
    "custom_item_387": {
        "description": "5.3.2.4 Ensure pam_pwhistory module is enabled",
        "info": "The pam_pwhistory.so module saves the last passwords for each user in order to force password change history and keep the user from alternating between the same password too frequently.\n\nThis module does not work together with kerberos. In general, it does not make much sense to use this module in conjunction with NIS or LDAP since the old passwords are stored on the local machine and are not available on another machine for password history checking.\n\nUse of a unique, complex passwords helps to increase the time and resources required to compromise the password.",
        "solution": "Run the following script to verify the pam_pwquality.so line exists in a pam-auth-update profile:\n\n# grep -P -- '\\bpam_pwhistory\\.so\\b' /usr/share/pam-configs/*\n\nOutput should be similar to:\n\n/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok\n\n- IF - similar output is returned:\n\nRun the following command to update /etc/pam.d/common-password with the returned profile:\n\n# pam-auth-update --enable {PROFILE_NAME}\n\nExample:\n\n# pam-auth-update pwhistory\n\n- IF - similar output is NOT returned:\n\nRun the following script to create a pam-auth-update profile for pwhistory :\n\n!#/usr/bin/env bash\n\n{\n   arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority: 1024' 'Password-Type: Primary' 'Password:' ' requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')\n   printf '%s\\n' \"${arr[@]}\" > /usr/share/pam-configs/pwhistory\n}\n\nRun the following command to update /etc/pam.d/common-password with the pwhistory profile:\n\n# pam-auth-update --enable pwhistory\n\nNote:\n\n - The name used for the file must be used in the pam-auth-update --enable command\n - The Name: line should be easily recognizable and understood\n - The Priority: Line is important as it effects the order of the lines in the /etc/pam.d/ files\n - If a site specific custom profile is being used in your environment to configure PAM that includes the configuration for the pam_pwhistory module, enable that module instead",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwhistory\\\\.so\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required)\\\\h+pam_pwhistory\\\\.so\\\\b"
    },
    "custom_item_388": {
        "description": "faillock.conf - deny",
        "file": "/etc/security/faillock.conf",
        "regex": "(?i)^\\\\h*deny\\\\h*=\\\\h*@PASSWORD_LOCKOUT@\\\\b",
        "expect": "(?i)^\\\\h*deny\\\\h*=\\\\h*@PASSWORD_LOCKOUT@\\\\b"
    },
    "custom_item_389": {
        "description": "common-auth deny",
        "file": "/etc/pam.d/common-auth",
        "regex": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?deny\\\\h*=",
        "expect": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?deny\\\\h*=\\\\h*@PASSWORD_LOCKOUT@\\\\b"
    },
    "custom_item_390": {
        "description": "faillock.conf - unlock time",
        "file": "/etc/security/faillock.conf",
        "regex": "(?i)^\\\\h*unlock_time\\\\h*=",
        "expect": "(?i)^\\\\h*unlock_time\\\\h*=\\\\h*@PASSWORD_UNLOCK_TIME@\\\\b"
    },
    "custom_item_391": {
        "description": "common-auth unlock_time",
        "file": "/etc/pam.d/common-auth",
        "regex": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?unlock_time\\\\h*=",
        "expect": "^\\\\h*auth\\\\h+(requisite|required|sufficient)\\\\h+pam_faillock\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?unlock_time\\\\h*=\\\\h*@PASSWORD_UNLOCK_TIME@\\\\b"
    },
    "custom_item_392": {
        "description": "pwquality - difok",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*difok\\\\h*=",
        "expect": "(?i)^\\\\h*difok\\\\h*=\\\\h*@PASSWORD_DIFOK@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_393": {
        "description": "common-password difok",
        "file": "/etc/pam.d/common-password",
        "regex": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?difok\\\\h*=",
        "expect": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?difok\\\\h*=\\\\h*@PASSWORD_DIFOK@\\\\b"
    },
    "custom_item_394": {
        "description": "common-password minlen",
        "file": "/etc/pam.d/common-password",
        "regex": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?minlen\\\\h*=",
        "expect": "^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?minlen\\\\h*=\\\\h*@PASSWORD_MINIMUM_LENGTH@\\\\b"
    },
    "custom_item_395": {
        "description": "pwquality - minlen",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*minlen\\\\h*=",
        "expect": "(?i)^\\\\h*minlen\\\\h*=\\\\h*@PASSWORD_MINIMUM_LENGTH@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_396": {
        "description": "minclass",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*minclass[\\\\s]*=",
        "expect": "^[\\\\s]*minclass[\\\\s]*=[\\\\s]*@PASSWORD_MINCLASS@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_397": {
        "description": "5.3.3.2.3 Ensure password complexity is configured",
        "info": "Password complexity can be set through:\n\n - minclass - The minimum number of classes of characters required in a new password. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires digits, uppercase, lower case, and special characters.\n - dcredit - The maximum credit for having digits in the new password. If less than 0 it is the minimum number of digits in the new password. e.g. dcredit = -1 requires at least one digit\n - ucredit - The maximum credit for having uppercase characters in the new password. If less than 0 it is the minimum number of uppercase characters in the new password. e.g. ucredit = -1 requires at least one uppercase character\n - ocredit - The maximum credit for having other characters in the new password. If less than 0 it is the minimum number of other characters in the new password. e.g. ocredit = -1 requires at least one special character\n - lcredit - The maximum credit for having lowercase characters in the new password. If less than 0 it is the minimum number of lowercase characters in the new password. e.g. lcredit = -1 requires at least one lowercase character\n\nStrong passwords protect systems from being hacked through brute force methods.\n\nRequiring at least one non-alphabetic character increases the search space beyond pure dictionary words, which makes the resulting password harder to crack.\n\nForcing users to choose an excessively complex password, e.g. some combination of upper-case, lower-case, numbers, and special characters, has a negative impact. It places an extra burden on users and many will use predictable patterns (for example, a capital letter in the first position, followed by lowercase letters, then one or two numbers, and a \"special character\" at the end). Attackers know this, so dictionary attacks will often contain these common patterns and use the most common substitutions like, $ for s, @ for a, 1 for l, 0 for o.",
        "solution": "Run the following command:\n\n# grep -Pl -- '\\bpam_pwquality\\.so\\h+([^#\\n\\r]+\\h+)?(minclass|[dulo]credit)\\b' /usr/share/pam-configs/*\n\nEdit any returned files and remove the minclass dcredit ucredit lcredit and ocredit arguments from the pam_pwquality.so line(s)\n\nCreate or modify a file ending inconf in the /etc/security/pwquality.conf.d/ directory or the file /etc/security/pwquality.conf and add or modify the following line(s) to set complexity according to local site policy:\n\n - minclass = _N_\n - dcredit = _N_ # Value should be either 0 or a number proceeded by a minus ( - ) symbol\n - ucredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol\n - ocredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol\n - lcredit = -1 # Value should be either 0 or a number proceeded by a minus ( - ) symbol\n\nExample 1 - Set minclass = 3 :\n\n#!/usr/bin/env bash\n\n{\n   sed -ri 's/^\\s*minclass\\s*=/# &/' /etc/security/pwquality.conf\n   sed -ri 's/^\\s*[dulo]credit\\s*=/# &/' /etc/security/pwquality.conf\n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir /etc/security/pwquality.conf.d/\n   printf '\\n%s' \"minclass = 3\" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf\n}\n\nExample 2 - set dcredit = -1 ucredit = -1 and lcredit = -1 :\n\n#!/usr/bin/env bash\n\n{\n   sed -ri 's/^\\s*minclass\\s*=/# &/' /etc/security/pwquality.conf\n   sed -ri 's/^\\s*[dulo]credit\\s*=/# &/' /etc/security/pwquality.conf\n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir /etc/security/pwquality.conf.d/\n   printf '%s\\n' \"dcredit = -1\" \"ucredit = -1\" \"lcredit = -1\" > /etc/security/pwquality.conf.d/50-pwcomplexity.conf\n}\n\nImpact:\n\nPasswords that are too complex in nature make it harder for users to remember, leading to bad practices. In addition, composition requirements provide no defense against common attack types such as social engineering or insecure storage of passwords",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1M,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*minclass[\\\\s]*=",
        "expect": "^[\\\\s]*minclass[\\\\s]*=[\\\\s]*@PASSWORD_MINCLASS@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_398": {
        "description": "ocredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*ocredit[\\\\s]*=",
        "expect": "^[\\\\s]*ocredit[\\\\s]*=[\\\\s]*@PASSWORD_OCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_399": {
        "description": "ucredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*ucredit[\\\\s]*=",
        "expect": "^[\\\\s]*ucredit[\\\\s]*=[\\\\s]*@PASSWORD_UCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_400": {
        "description": "lcredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*lcredit[\\\\s]*=",
        "expect": "^[\\\\s]*lcredit[\\\\s]*=[\\\\s]*@PASSWORD_LCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_401": {
        "description": "dcredit",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "^[\\\\s]*dcredit[\\\\s]*=",
        "expect": "^[\\\\s]*dcredit[\\\\s]*=[\\\\s]*@PASSWORD_DCREDIT@[\\\\s]*$",
        "min_occurrences": "1"
    },
    "custom_item_402": {
        "description": "pwquality - maxrepeat",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*maxrepeat\\\\h*=",
        "expect": "(?i)^\\\\h*maxrepeat\\\\h*=\\\\h*@PASSWORD_MAXREPEAT@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_403": {
        "description": "common-password maxrepeat",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxrepeat\\\\h*=",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxrepeat\\\\h*=\\\\h*@PASSWORD_MAXREPEAT@\\\\b"
    },
    "custom_item_404": {
        "description": "pwquality - maxsequence",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*maxsequence\\\\h*=",
        "expect": "(?i)^\\\\h*maxsequence\\\\h*=\\\\h*@PASSWORD_MAXSEQUENCE@\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_405": {
        "description": "common-password maxsequence",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxsequence\\\\h*=",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?maxsequence\\\\h*=\\\\h*@PASSWORD_MAXSEQUENCE@\\\\b"
    },
    "custom_item_406": {
        "description": "Verify that the dictcheck option is not set to 0 (disabled) in a pwquality configuration file",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*dictcheck\\\\h*=\\\\h*0\\\\b",
        "expect": "(?i)^\\\\h*dictcheck\\\\h*=\\\\h*0\\\\b"
    },
    "custom_item_407": {
        "description": "common-password dictcheck",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?dictcheck\\\\h*=\\\\h*0\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?dictcheck\\\\h*=\\\\h*0\\\\b"
    },
    "custom_item_408": {
        "description": "common-password enforcing",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?enforcing\\\\h*=\\\\h*0\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwquality\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?enforcing\\\\h*=\\\\h*0\\\\b"
    },
    "custom_item_409": {
        "description": "pwquality.conf enforcing",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*enforcing\\\\h*=\\\\h*0\\\\b",
        "expect": "(?i)^\\\\h*enforcing\\\\h*=\\\\h*0\\\\b"
    },
    "custom_item_410": {
        "description": "5.3.3.2.8 Ensure password quality is enforced for the root user",
        "info": "If the pwquality enforce_for_root option is enabled, the module will return error on failed check even if the user changing the password is root.\n\nThis option is off by default which means that just the message about the failed check is printed but root can change the password anyway.\n\nNote: The root is not asked for an old password so the checks that compare the old and new password are not performed.\n\nUse of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determines how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised.",
        "solution": "Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or in /etc/security/pwquality.conf :\n\nExample:\n\n#!/urs/bin/env bash\n\n{\n   [ ! -d /etc/security/pwquality.conf.d/ ] && mkdir /etc/security/pwquality.conf.d/\n   printf '\\n%s\\n' \"enforce_for_root\" > /etc/security/pwquality.conf.d/50-pwroot.conf\n}",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/security/pwquality.conf /etc/security/pwquality.conf.d/*.conf",
        "regex": "(?i)^\\\\h*enforce_for_root\\\\b",
        "expect": "(?i)^\\\\h*enforce_for_root\\\\b",
        "min_occurrences": "1"
    },
    "custom_item_411": {
        "description": "5.3.3.3.1 Ensure password history remember is configured",
        "info": "The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords. The number of passwords remembered is set via the remember argument value in set for the pam_pwhistory module.\n\n - remember=-is the number of old passwords to remember\n\nRequiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password.\n\nNote: These change only apply to accounts configured on the local system.",
        "solution": "Run the following command:\n\n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/*\n\nEdit any returned files and edit or add the remember= argument, with a value of 24 or more, that meets local site policy to the pam_pwhistory line in the Password section:\n\nExample File:\n\nName: pwhistory password history checking\nDefault: yes\nPriority: 1024\nPassword-Type: Primary\nPassword:\n   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes remember=**\n\nRun the following command to update the files in the /etc/pam.d/ directory:\n\n# pam-auth-update --enableExample:\n\n# pam-auth-update --enable pwhistory",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?remember=",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so\\\\h+([^#\\\\r]+\\\\h+)?remember=@PASSWORD_HISTORY_REMEMBER@\\\\b"
    },
    "custom_item_412": {
        "description": "5.3.3.3.2 Ensure password history is enforced for the root user",
        "info": "If the pwhistory enforce_for_root option is enabled, the module will enforce password history for the root user as well\n\nRequiring users not to reuse their passwords make it less likely that an attacker will be able to guess the password or use a compromised password\n\nNote: These change only apply to accounts configured on the local system.",
        "solution": "Run the following command:\n\n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_pwhistory\\.so/) print FILENAME}' /usr/share/pam-configs/*\n\nEdit any returned files and add the enforce_for_root argument to the pam_pwhistory line in the Password section:\n\nExample File:\n\nName: pwhistory password history checking\nDefault: yes\nPriority: 1024\nPassword-Type: Primary\nPassword:\n   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes enforce_for_root**\n\nRun the following command to update the files in the /etc/pam.d/ directory:\n\n# pam-auth-update --enableExample:\n\n# pam-auth-update --enable pwhistory",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_pwhistory\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?enforce_for_root\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_pwhistory\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?enforce_for_root\\\\b"
    },
    "custom_item_413": {
        "description": "5.3.3.3.3 Ensure pam_pwhistory includes use_authtok",
        "info": "use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module\n\nuse_authtok allows multiple pam modules to confirm a new password before it is accepted.",
        "solution": "Edit any returned files and add the use_authtok argument to the pam_pwhistory line in the Password section:\n\nExample File:\n\nName: pwhistory password history checking\nDefault: yes\nPriority: 1024\nPassword-Type: Primary\nPassword:\n   requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok # <- **ensure line includes use_authtok**\n\nRun the following command to update the files in the /etc/pam.d/ directory:\n\n# pam-auth-update --enableExample:\n\n# pam-auth-update --enable pwhistory",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+(requisite|required|sufficient)\\\\h+pam_pwhistory\\\\.so(\\\\h+[^#\\\\n\\\\r]+)?\\\\h+use_authtok\\\\b"
    },
    "custom_item_414": {
        "description": "common-session-noninteractive",
        "file": "/etc/pam.d/common-session-noninteractive",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b"
    },
    "custom_item_415": {
        "description": "common-password",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b"
    },
    "custom_item_416": {
        "description": "common-auth",
        "file": "/etc/pam.d/common-auth",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b"
    },
    "custom_item_417": {
        "description": "common-account",
        "file": "/etc/pam.d/common-account",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b"
    },
    "custom_item_418": {
        "description": "common-session",
        "file": "/etc/pam.d/common-session",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+nullok\\\\b"
    },
    "custom_item_419": {
        "description": "common-session",
        "file": "/etc/pam.d/common-session",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b"
    },
    "custom_item_420": {
        "description": "common-password",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b"
    },
    "custom_item_421": {
        "description": "common-session-noninteractive",
        "file": "/etc/pam.d/common-session-noninteractive",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b"
    },
    "custom_item_422": {
        "description": "common-auth",
        "file": "/etc/pam.d/common-auth",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b"
    },
    "custom_item_423": {
        "description": "common-account",
        "file": "/etc/pam.d/common-account",
        "regex": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b",
        "expect": "(?i)^\\\\h*^\\\\h*[^#\\\\n\\\\r]+\\\\h+pam_unix\\\\.so\\\\b[^#\\\\n\\\\r]+remember=\\\\b"
    },
    "custom_item_424": {
        "description": "5.3.3.4.3 Ensure pam_unix includes a strong password hashing algorithm",
        "info": "A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.\n\nThe pam_unix module can be configured to use one of the following hashing algorithms for user's passwords:\n\n - md5 - When a user changes their password next, encrypt it with the MD5 algorithm.\n - bigcrypt - When a user changes their password next, encrypt it with the DEC C2 algorithm.\n - sha256 - When a user changes their password next, encrypt it with the SHA256 algorithm. The SHA256 algorithm must be supported by the crypt(3) function.\n - sha512 - When a user changes their password next, encrypt it with the SHA512 algorithm. The SHA512 algorithm must be supported by the crypt(3) function.\n - blowfish - When a user changes their password next, encrypt it with the blowfish algorithm. The blowfish algorithm must be supported by the crypt(3) function.\n - gost_yescrypt - When a user changes their password next, encrypt it with the gost-yescrypt algorithm. The gost-yescrypt algorithm must be supported by the crypt(3) function.\n - yescrypt - When a user changes their password next, encrypt it with the yescrypt algorithm. The yescrypt algorithm must be supported by the crypt(3) function.\n\nThe SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local user passwords.\n\nNote: These changes only apply to the local system.",
        "solution": "Run the following command:\n\n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix\\.so/) print FILENAME}' /usr/share/pam-configs/*\n\nEdit any returned files and edit or add a strong hashing algorithm, either sha512 or yescrypt, that meets local site policy to the pam_unix lines in the Password section:\n\nExample File:\n\nName: Unix authentication\nDefault: yes\nPriority: 256\nAuth-Type: Primary # <- Start of \"Auth\" section\nAuth:\n        [success=end default=ignore] pam_unix.so try_first_pass\nAuth-Initial:\n        [success=end default=ignore] pam_unix.so\nAccount-Type: Primary # <- Start of \"Account\" section\nAccount:\n        [success=end new_authtok_reqd=done default=ignore] pam_unix.so\nAccount-Initial:\n        [success=end new_authtok_reqd=done default=ignore] pam_unix.so\nSession-Type: Additional # <- Start of \"Session\" section\nSession:\n        required pam_unix.so\nSession-Initial:\n        required pam_unix.so\nPassword-Type: Primary # <- Start of \"Password\" section\nPassword:\n        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**\nPassword-Initial:\n        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **ensure hashing algorithm is either sha512 or yescrypt**\n\nRun the following command to update the files in the /etc/pam.d/ directory:\n\n# pam-auth-update --enableExample:\n\n# pam-auth-update --enable unix",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?@PASSWORD_ENCRYPTION@\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?@PASSWORD_ENCRYPTION@\\\\b"
    },
    "custom_item_425": {
        "description": "5.3.3.4.4 Ensure pam_unix includes use_authtok",
        "info": "use_authtok - When password changing enforce the module to set the new password to the one provided by a previously stacked password module\n\nuse_authtok allows multiple pam modules to confirm a new password before it is accepted.",
        "solution": "Run the following command:\n\n# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if (/pam_unix\\.so/) print FILENAME}' /usr/share/pam-configs/*\n\nEdit any returned files add use_authtok to the pam_unix line in the Password section under Password: subsection:\n\nNote: The if the file's Password section includes a Password-Initial: subsection, use_authtok should not be added to the pam_unix line in the Password-Initial: subsection\n\nExample File:\n\nName: Unix authentication\nDefault: yes\nPriority: 256\nAuth-Type: Primary # <- Start of \"Auth\" section\nAuth:\n        [success=end default=ignore] pam_unix.so try_first_pass\nAuth-Initial:\n        [success=end default=ignore] pam_unix.so\nAccount-Type: Primary # <- Start of \"Account\" section\nAccount:\n        [success=end new_authtok_reqd=done default=ignore] pam_unix.so\nAccount-Initial:\n        [success=end new_authtok_reqd=done default=ignore] pam_unix.so\nSession-Type: Additional # <- Start of \"Session\" section\nSession:\n        required pam_unix.so\nSession-Initial:\n        required pam_unix.so\nPassword-Type: Primary # <- Start of \"Password\" section\nPassword:\n        [success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt # <- **ensure line includes use_authtok**\nPassword-Initial:\n        [success=end default=ignore] pam_unix.so obscure yescrypt # <- **Password-Initial: subsection does not include use_authtok\n\nRun the following command to update the files in the /etc/pam.d/ directory:\n\n# pam-auth-update --enableExample:\n\n# pam-auth-update --enable unix",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/pam.d/common-password",
        "regex": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?use_authtok\\\\b",
        "expect": "(?i)^\\\\h*password\\\\h+([^#\\\\n\\\\r]+)\\\\h+pam_unix\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?use_authtok\\\\b"
    },
    "custom_item_426": {
        "description": "shadow password max days",
        "file": "/etc/shadow",
        "regex": "^[^:]+:[^!*]",
        "expect": "^([^:]*:){4}@PASSWORD_MAX_DAYS@:"
    },
    "custom_item_427": {
        "description": "login.defs",
        "file": "/etc/login.defs",
        "regex": "(?i)^[\\\\s]*PASS_MAX_DAYS[\\\\s]",
        "expect": "(?i)^[\\\\s]*PASS_MAX_DAYS[\\\\s]+@PASSWORD_MAX_DAYS@[\\\\s]*$"
    },
    "custom_item_428": {
        "description": "login.defs",
        "file": "/etc/login.defs",
        "regex": "(?i)^[\\\\s]*PASS_WARN_AGE[\\\\s]+",
        "expect": "(?i)^[\\\\s]*PASS_WARN_AGE[\\\\s]+@PASSWORD_WARN_AGE@[\\\\s]*$"
    },
    "custom_item_429": {
        "description": "shadow password warn age",
        "file": "/etc/shadow",
        "regex": "^[^:]+:[^!*]",
        "expect": "^([^:]*:){5}@PASSWORD_WARN_AGE@:"
    },
    "custom_item_430": {
        "description": "5.4.1.4 Ensure strong password hashing algorithm is configured",
        "info": "A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.\n\nENCRYPT_METHOD (string) - This defines the system default encryption algorithm for encrypting passwords (if no algorithm are specified on the command line). It can take one of these values:\n\n - MD5 - MD5-based algorithm will be used for encrypting password\n - SHA256 - SHA256-based algorithm will be used for encrypting password\n - SHA512 - SHA512-based algorithm will be used for encrypting password\n - BCRYPT - BCRYPT-based algorithm will be used for encrypting password\n - YESCRYPT - YESCRYPT-based algorithm will be used for encrypting password\n - DES - DES-based algorithm will be used for encrypting password (default)\n\nNote:\n\n - This parameter overrides the deprecated MD5_CRYPT_ENAB variable.\n - This parameter will only affect the generation of group passwords.\n - The generation of user passwords is done by PAM and subject to the PAM configuration.\n - It is recommended to set this variable consistently with the PAM configuration.\n\nThe SHA-512 and yescrypt algorithms provide a stronger hash than other algorithms used by Linux for password hash generation. A stronger hash provides additional protection to the system by increasing the level of effort needed for an attacker to successfully determine local group passwords.",
        "solution": "Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT :\n\nENCRYPT_METHODExample:\n\nENCRYPT_METHOD YESCRYPT\n\nNote:\n\n - This only effects local groups' passwords created after updating the file to use sha512 or yescrypt\n - If it is determined that the password algorithm being used is not sha512 or yescrypt once it is changed, it is recommended that all group passwords be updated to use the stronger hashing algorithm.\n - It is recommended that the chosen hashing algorithm is consistent across /etc/login.defs and the PAM configuration",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/login.defs",
        "regex": "^\\\\s*ENCRYPT_METHOD\\\\s+",
        "expect": "^\\\\s*ENCRYPT_METHOD\\\\s+(?i)@PASSWORD_ENCRYPTION@(?-i)\\\\s*$"
    },
    "custom_item_431": {
        "description": "useradd",
        "cmd": "/sbin/useradd -D | /bin/grep 'INACTIVE'",
        "expect": "(?i)^[\\\\s]*INACTIVE[\\\\s]*=[\\\\s]*@INACTIVE_PASSWORD_LOCK@[\\\\s]*$"
    },
    "custom_item_432": {
        "description": "shadow inactive password lock",
        "file": "/etc/shadow",
        "regex": "^[^:]+:[^!*]",
        "expect": "^([^:]*:){6}@INACTIVE_PASSWORD_LOCK@:"
    },
    "custom_item_433": {
        "description": "5.4.1.6 Ensure all users last password change date is in the past",
        "info": "All users should have a password change date in the past.\n\nIf a user's recorded password change date is in the future, then they could bypass any set password expiration.",
        "solution": "Investigate any users with a password change date in the future and correct them. Locking the account, expiring the password, or resetting the password manually may be appropriate.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n  {\n   while IFS= read -r l_user; do\n      l_change=$(date -d \"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2 | grep -v 'never$')\" +%s)\n      if [[ \"$l_change\" -gt \"$(date +%s)\" ]]; then\n         echo \"User: \\\\\"$l_user\\\\\" last password change was \\\\\"$(chage --list $l_user | grep '^Last password change' | cut -d: -f2)\\\\\"\"\n      fi\n   done < <(awk -F: '/^[^:\\\\r]+:[^!*xX\\\\r]/{print $1}' /etc/shadow)\n} | /bin/awk '{print} END {if (NR == 0) print \"Pass\"}'",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_434": {
        "description": "5.4.2.2 Ensure root is the only GID 0 account",
        "info": "The usermod command can be used to specify which group the root account belongs to. This affects permissions of files that are created by the root account.\n\nUsing GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users.",
        "solution": "Run the following command to set the root user's GID to 0 :\n\n# usermod -g 0 root\n\nRun the following command to set the root group's GID to 0 :\n\n# groupmod -g 0 root\n\nRemove any users other than the root user with GID 0 or assign them a new GID if appropriate.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\nl_output=\"\" l_output2=\"\" l_out2=\"\"\n\nwhile IFS=: read -r l_user l_gid; do\n   while IFS= read -r l_passwd_file_user; do\n      if [ \"$l_passwd_file_user\" != \"$l_user\" ]; then\n         l_out2=\"$l_out2\\\\n  - User \\\\\"$l_passwd_file_user\\\\\" GID is: \\\\\"$l_gid\\\\\"\"\n      fi\n   done < <(awk -F: '($1 !~ /^(sync|shutdown|halt|operator)/ && $4 == \"'\"$l_gid\"'\"){print $1}' /etc/passwd)\n   if [ -n \"$l_out2\" ]; then\n      l_output2=\"$l_output2\\\\n$l_out2\"\n   else\n      l_output=\"$l_output\\\\n  - No unauthorized user's GID is: \\\\\"$l_gid\\\\\"\"\n   fi\n   l_out2=\"\"\n   while IFS= read -r l_passwd_file_gid; do\n   if [ \"$l_passwd_file_gid\" != \"$l_gid\" ]; then\n      l_out2=\"$l_out2\\\\n  - User \\\\\"$l_user\\\\\" GID is: \\\\\"$l_passwd_file_gid\\\\\" and should be: \\\\\"$l_gid\\\\\"\"\n   fi\n   done < <(awk -F: '$1==\"'\"$l_user\"'\"{print $4}' /etc/passwd)\n   if [ -n \"$l_out2\" ]; then\n      l_output2=\"$l_output2\\\\n$l_out2\"\n   else\n      l_output=\"$l_output\\\\n  - User \\\\\"$l_user\\\\\" GID is correctly set to: \\\\\"$l_gid\\\\\"\"\n   fi\ndone <<< \"root:0\"\n\n# If the tests produce no failing output, we pass\nif [ -z \"$l_output2\" ]; then\n\techo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n - * Correctly configured * :$l_output\"\nelse\n\techo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :$l_output2\\\\n\"\n   [ -n \"$l_output\" ] && echo -e \"\\\\n - * Correctly configured * :\\\\n$l_output\\\\n\"\nfi",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_435": {
        "description": "5.4.2.4 Ensure root password is set",
        "info": "There are a number of methods to access the root account directly. Without a password set any user would be able to gain access and thus control over the entire system.\n\nAccess to root should be secured at all times.",
        "solution": "Run the following command to set a password for the root user:\n\n# passwd root\n\nImpact:\n\nIf there are any automated processes that relies on access to the root account without authentication, they will fail after remediation.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/passwd -S root | /bin/awk '$2 ~ /^P/ {print \"User: \\\\\"\" $1 \"\\\\\" Password is set\"}'",
        "expect": "(?i)^User: \"root\" Password is set$"
    },
    "custom_item_436": {
        "description": "5.4.2.5 Ensure root path integrity",
        "info": "The root user can execute any command on the system and could be fooled into executing programs unintentionally if the PATH is not set correctly.\n\nIncluding the current working directory (.) or other writable directory in root 's executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse program.",
        "solution": "Correct or justify any:\n\n - Locations that are not directories\n - Empty directories ( :: )\n - Trailing ( : )\n - Current working directory ( )\n - Non root owned directories\n - Directories that less restrictive than mode 0755",
        "reference": "800-171|3.4.7,800-53|CM-7(2),800-53r5|CM-7(2),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7(2),LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output2=\"\"\n   l_pmask=\"0022\"\n   l_maxperm=\"$( printf '%o' $(( 0777 & ~$l_pmask )) )\"\n   l_root_path=\"$(sudo -Hiu root env | grep '^PATH' | cut -d= -f2)\"\n   unset a_path_loc && IFS=\":\" read -ra a_path_loc <<< \"$l_root_path\"\n   grep -q \"::\" <<< \"$l_root_path\" && l_output2=\"$l_output2\n - root's path contains a empty directory (::)\"\n   grep -Pq \":\\\\h*$\" <<< \"$l_root_path\" && l_output2=\"$l_output2\n - root's path contains a trailing (:)\"\n   grep -Pq '(\\\\h+|:)\\\\.(:|\\\\h*$)' <<< \"$l_root_path\" && l_output2=\"$l_output2\n - root's path contains current working directory (.)\"\n   while read -r l_path; do\n      if [ -d \"$l_path\" ]; then\n         while read -r l_fmode l_fown; do\n            [ \"$l_fown\" != \"root\" ] && l_output2=\"$l_output2\n - Directory: \\\\\"$l_path\\\\\" is owned by: \\\\\"$l_fown\\\\\" should be owned by \\\\\"root\\\\\"\"\n            [ $(( $l_fmode & $l_pmask )) -gt 0 ] && l_output2=\"$l_output2\n - Directory: \\\\\"$l_path\\\\\" is mode: \\\\\"$l_fmode\\\\\" and should be mode: \\\\\"$l_maxperm\\\\\" or more restrictive\"\n         done <<< \"$(stat -Lc '%#a %U' \"$l_path\")\"\n      else\n         l_output2=\"$l_output2\n - \\\\\"$l_path\\\\\" is not a directory\"\n      fi\n   done <<< \"$(printf \"%s\n\" \"${a_path_loc[@]}\")\"\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Result:\n  *** PASS ***\n - Root's path is correctly configured\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_437": {
        "description": "5.4.2.6 Ensure root user umask is configured",
        "info": "The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.\n\numask can be set with either Octal or Symbolic values:\n\n - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.\n - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----\n\nroot user Shell Configuration Files:\n\n - /root/.bash_profile - Is executed to configure the root users' shell before the initial command prompt. Is only read by login shells.\n - /root/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login\n\numask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask\n\nOrder of precedence:\n\n - /root/.bash_profile\n - /root/.bashrc\n - The system default umask\n\nSetting a secure value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.",
        "solution": "Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update any line with umask to be 0027 or more restrictive.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/root/.bash_profile /root/.bashrc",
        "regex": "(?i)^\\\\h*umask\\\\h+(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b|[0-7][0-7][0-6]\\\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\\\b)))",
        "expect": "(?i)^\\\\h*umask\\\\h+(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b|[0-7][0-7][0-6]\\\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\\\b)))"
    },
    "custom_item_438": {
        "description": "5.4.2.7 Ensure system accounts do not have a valid login shell",
        "info": "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.\n\nIt is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.",
        "solution": "Run the following command to set the shell for any service accounts returned by the audit to nologin :\n\n# usermod -s $(command -v nologin)Example script:\n\n#!/usr/bin/env bash\n\n{\n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   awk -v pat=\"$l_valid_shells\" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ && ($3<'\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' || $3 == 65534) && $(NF) ~ pat) {system (\"usermod -s '\"$(command -v nologin)\"' \" $1)}' /etc/passwd\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_valid_shells=\"^($(awk -F\\\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\\\//{s,/,\\\\\\\\\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   awk -v pat=\"$l_valid_shells\" -F: '($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ && ($3<'\"$(awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs)\"' || $3 == 65534) && $(NF) ~ pat) {print \"Service account: \\\\\"\" $1 \"\\\\\" has a valid shell: \" $7}' /etc/passwd\n} | /bin/awk '{ print } END { if (NR == 0) print \"pass\" }'",
        "expect": "^pass$"
    },
    "custom_item_439": {
        "description": "5.4.2.8 Ensure accounts without a valid login shell are locked",
        "info": "There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.\n\nIt is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the nologin shell. This prevents the account from potentially being used to run any commands.",
        "solution": "Run the following command to lock any non-root accounts without a valid login shell returned by the audit:\n\n# usermod -LExample script:\n\n:\n\n#!/usr/bin/env bash\n\n{\n   l_valid_shells=\"^($(awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   while IFS= read -r l_user; do\n      passwd -S \"$l_user\" | awk '$2 !~ /^L/ {system (\"usermod -L \" $1)}'\n   done < <(awk -v pat=\"$l_valid_shells\" -F: '($1 != \"root\" && $(NF) !~ pat) {print $1}' /etc/passwd)\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_valid_shells=\"^($(awk -F\\\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\\\//{s,/,\\\\\\\\\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   while IFS= read -r l_user; do\n      passwd -S \"$l_user\" | awk '$2 !~ /^L/ {print \"Account: \\\\\"\" $1 \"\\\\\" does not have a valid login shell and is not locked\"}'\n   done < <(awk -v pat=\"$l_valid_shells\" -F: '($1 != \"root\" && $(NF) !~ pat) {print $1}' /etc/passwd)\n} | /bin/awk '{ print } END { if (NR == 0) print \"pass\" }'",
        "expect": "^pass$"
    },
    "custom_item_440": {
        "description": "5.4.3.2 Ensure default user shell timeout is configured",
        "info": "TMOUT is an environmental setting that determines the timeout of a shell in seconds.\n\n - TMOUT=\n\nn\n\n- Sets the shell timeout to\n\nn\n\nseconds. A setting of TMOUT=0 disables timeout.\n - readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.\n - export TMOUT - exports the TMOUT variable\n\nSystem Wide Shell Configuration Files:\n\n - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive\n\nlogin\n\nshells, or shells executed with the --login parameter.\n - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.\n - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, /etc/bashrc also invokes /etc/profile.d/*.sh if\n\nnon-login\n\nshell, but redirects output to /dev/null if\n\nnon-interactive.\n\nIs only executed for\n\ninteractive\n\nshells or if BASH_ENV is set to /etc/bashrc\n\nSetting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.",
        "solution": "Review /etc/bashrc /etc/profile and all files ending in *.sh in the /etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site policy. TMOUT should not exceed 900 or be equal to 0\n\nConfigure TMOUT in one of the following files:\n\n - A file in the /etc/profile.d/ directory ending insh\n - /etc/profile\n - /etc/bashrc\n\nTMOUT configuration examples:\n\n - As multiple lines:\n\nTMOUT=900\nreadonly TMOUT\nexport TMOUT\n - As a single line:\n\nreadonly TMOUT=900 ; export TMOUT",
        "reference": "800-171|3.1.1,800-171|3.1.10,800-171|3.1.11,800-53|AC-2(5),800-53|AC-11,800-53|AC-11(1),800-53|AC-12,800-53r5|AC-2(5),800-53r5|AC-11,800-53r5|AC-11(1),800-53r5|AC-12,CN-L3|7.1.2.2(d),CN-L3|7.1.3.2(d),CN-L3|7.1.3.7(b),CN-L3|8.1.4.1(b),CSCv7|16.11,CSCv8|4.3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(iii),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.11.2.8,ITSG-33|AC-2(5),ITSG-33|AC-11,ITSG-33|AC-11(1),ITSG-33|AC-12,LEVEL|1A,NIAv2|AM23c,NIAv2|AM23d,NIAv2|AM28,NIAv2|NS5j,NIAv2|NS49,NIAv2|SS14e,PCI-DSSv3.2.1|8.1.8,PCI-DSSv4.0|8.2.8,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.1,TBA-FIISB|37.1.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   output1=\"\" output2=\"\"\n   [ -f /etc/bashrc ] && BRC=\"/etc/bashrc\"\n   for f in \"$BRC\" /etc/profile /etc/profile.d/*.sh ; do\n      grep -Pq '^\\\\s*([^#]+\\\\s+)?TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\\\\b' \"$f\" && grep -Pq '^\\\\s*([^#]+;\\\\s*)?readonly\\\\s+TMOUT(\\\\s+|\\\\s*;|\\\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\\\\b' \"$f\" && grep -Pq '^\\\\s*([^#]+;\\\\s*)?export\\\\s+TMOUT(\\\\s+|\\\\s*;|\\\\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\\\\b' \"$f\" &&\n   output1=\"$f\"\n   done\n   grep -Pq '^\\\\s*([^#]+\\\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\\\d{3,})\\\\b' /etc/profile /etc/profile.d/*.sh \"$BRC\" && output2=$(grep -Ps '^\\\\s*([^#]+\\\\s+)?TMOUT=(9[0-9][1-9]|9[1-9][0-9]|0+|[1-9]\\\\d{3,})\\\\b' /etc/profile /etc/profile.d/*.sh $BRC)\n   if [ -n \"$output1\" ] && [ -z \"$output2\" ]; then\n      echo -e \"\nPASSED\n\nTMOUT is configured in: \\\\\"$output1\\\\\"\n\"\n   else\n      [ -z \"$output1\" ] && echo -e \"\nFAILED\n\nTMOUT is not configured\n\"\n      [ -n \"$output2\" ] && echo -e \"\nFAILED\n\nTMOUT is incorrectly configured in: \\\\\"$output2\\\\\"\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*passed:?[\\\\s]*\\\\**$"
    },
    "custom_item_441": {
        "description": "5.4.3.3 Ensure default user umask is configured",
        "info": "The user file-creation mode mask ( umask ) is used to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-rw- ). The umask modifies the default Linux permissions by restricting (masking) these permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the umask are cleared in the resulting file mode.\n\numask can be set with either Octal or Symbolic values:\n\n - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027 or umask 027 If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.\n - Symbolic Value - Represented by a comma separated list for User u group g and world/other o The permissions listed are not masked by umask ie a umask set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 This umask would set a newly created directory with file mode drwxr-x--- and a newly created file with file mode rw-r-----\n\nThe default umask can be set to use the pam_umask module or in a System Wide Shell Configuration File The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default umask by adding the umask command into a User Shell Configuration File (bash_profile orbashrc ), in their home directory.\n\nSetting the default umask:\n\n - pam_umask module:\n - will set the umask according to the system default in /etc/login.defs and user settings, solving the problem of different umask settings with different shells, display managers, remote sessions etc.\n - umask=value in the /etc/login.defs file is interpreted as Octal\n - Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):\n - will enable setting of the umask group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the uid is the same as gid and username is the same as the- userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user\n\n - System Wide Shell Configuration File :\n - /etc/profile - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in thebash_profile however this file is used to set an initial PATH or PS1 for all shell users of the system. is only executed for interactive\n\nlogin\n\nshells, or shells executed with the --login parameter.\n - /etc/profile.d - /etc/profile will execute the scripts within /etc/profile.d/*.sh It is recommended to place your configuration in a shell script within /etc/profile.d to set your own system wide environmental variables.\n - /etc/bashrc - System wide version ofbashrc In Fedora derived distributions, etc/bashrc also invokes /etc/profile.d/*.sh if\n\nnon-login\n\nshell, but redirects output to /dev/null if\n\nnon-interactive.\n\nIs only executed for\n\ninteractive\n\nshells or if BASH_ENV is set to /etc/bashrc\n\nUser Shell Configuration Files:\n\n - ~/.bash_profile - Is executed to configure your shell before the initial command prompt. Is only read by login shells.\n - ~/.bashrc - Is executed for interactive shells. only read by a shell that's both interactive and non-login\n\numask is set by order of precedence. If umask is set in multiple locations, this order of precedence will determine the system's default umask\n\nOrder of precedence:\n\n - A file in /etc/profile.d/ ending insh - This will override any other system-wide umask setting\n - In the file /etc/profile\n - On the pam_umask.so module in /etc/pam.d/postlogin\n - In the file /etc/login.defs\n - In the file /etc/default/login\n\nSetting a secure default value for umask ensures that users make a conscious choice about their file permissions. A permissive umask value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.",
        "solution": "Run the following script and perform the instructions in the output:\n\n#!/usr/bin/env bash\n\n{\n   l_output=\"\" l_output2=\"\" l_out=\"\"\n   file_umask_chk()\n   {\n      if grep -Psiq -- '^\\h*umask\\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\h*#.*)?$' \"$l_file\"; then\n         l_out=\"$l_out\\n - umask is set correctly in \\\\\"$l_file\\\\\"\"\n      elif grep -Psiq -- '^\\h*umask\\h+(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b|[0-7][0-7][0-6]\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\b)))' \"$l_file\"; then\n         l_output2=\"$l_output2\\n - \\\\\"$l_file\\\\\"\"\n      fi\n   }\n   while IFS= read -r -d $'\\0' l_file; do\n      file_umask_chk\n   done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)\n   [ -n \"$l_out\" ] && l_output=\"$l_out\"\n   l_file=\"/etc/profile\" && file_umask_chk\n   l_file=\"/etc/bashrc\" && file_umask_chk\n   l_file=\"/etc/bash.bashrc\" && file_umask_chk\n   l_file=\"/etc/pam.d/postlogin\"\n   if grep -Psiq '^\\h*session\\h+[^#\\n\\r]+\\h+pam_umask\\.so\\h+([^#\\n\\r]+\\h+)?umask=(([0-7][0-7][01][0-7]\\b|[0-7][0-7][0-7][0-6]\\b)|([0-7][01][0-7]\\b))' \"$l_file\"; then\n      l_output2=\"$l_output2\\n - \\\\\"$l_file\\\\\"\"\n   fi\n   l_file=\"/etc/login.defs\" && file_umask_chk\n   l_file=\"/etc/default/login\" && file_umask_chk\n   if [ -z \"$l_output2\" ]; then\n      echo -e \" - No files contain a UMASK that is not restrictive enough\\n No UMASK updates required to existing files\"\n   else\n      echo -e \"\\n - UMASK is not restrictive enough in the following file(s):$l_output2\\n\\n- Remediation Procedure:\\n - Update these files and comment out the UMASK line\\n or update umask to be \\\\\"0027\\\\\" or more restrictive\"\n   fi\n   if [ -n \"$l_output\" ]; then\n      echo -e \"$l_output\"\n   else\n      echo -e \" - Configure UMASK in a file in the \\\\\"/etc/profile.d/\\\\\" directory ending in \\\\\".sh\\\\\"\\n\\n Example Command (Hash to represent being run at a root prompt):\\n\\n# printf '%s\\\\\\n' \\\\\"umask 027\\\\\" > /etc/profile.d/50-systemwide_umask.sh\\n\"\n   fi\n}\n\nNotes:\n\n - This method only applies to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are checked\n - If the pam_umask.so module is going to be used to set umask ensure that it's not being overridden by another setting. Refer to the PAM_UMASK(8) man page for more information",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n    l_output=\"\" l_output2=\"\"\n    file_umask_chk()\n    {\n       if grep -Psiq -- '^\\\\h*umask\\\\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\\\\h*#.*)?$' \"$l_file\"; then\n          l_output=\"$l_output\\\\n - umask is set correctly in \\\\\"$l_file\\\\\"\"\n       elif grep -Psiq -- '^\\\\h*umask\\\\h+(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b|[0-7][0-7][0-6]\\\\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\\\\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\\\\b)))' \"$l_file\"; then\n          l_output2=\"$l_output2\\\\n - umask is incorrectly set in \\\\\"$l_file\\\\\"\"\n       fi\n    }\n    while IFS= read -r -d $'\\\\0' l_file; do\n       file_umask_chk\n    done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)\n    [ -z \"$l_output\" ] && l_file=\"/etc/profile\" && file_umask_chk\n    [ -z \"$l_output\" ] && l_file=\"/etc/bashrc\" && file_umask_chk\n    [ -z \"$l_output\" ] && l_file=\"/etc/bash.bashrc\" && file_umask_chk\n    [ -z \"$l_output\" ] && l_file=\"/etc/pam.d/postlogin\"\n    if [ -z \"$l_output\" ]; then\n       if grep -Psiq -- '^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_umask\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?umask=(0?[0-7][2-7]7)\\\\b' \"$l_file\"; then\n          l_output1=\"$l_output1\\\\n - umask is set correctly in \\\\\"$l_file\\\\\"\"\n       elif grep -Psiq '^\\\\h*session\\\\h+[^#\\\\n\\\\r]+\\\\h+pam_umask\\\\.so\\\\h+([^#\\\\n\\\\r]+\\\\h+)?umask=(([0-7][0-7][01][0-7]\\\\b|[0-7][0-7][0-7][0-6]\\\\b)|([0-7][01][0-7]\\\\b))' \"$l_file\"; then\n          l_output2=\"$l_output2\\\\n - umask is incorrectly set in \\\\\"$l_file\\\\\"\"\n       fi\n    fi\n    [ -z \"$l_output\" ] && l_file=\"/etc/login.defs\" && file_umask_chk\n    [ -z \"$l_output\" ] && l_file=\"/etc/default/login\" && file_umask_chk\n    [[ -z \"$l_output\" && -z \"$l_output2\" ]] && l_output2=\"$l_output2\\\\n - umask is not set\"\n    if [ -z \"$l_output2\" ]; then\n       echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n - * Correctly configured * :\\\\n$l_output\\\\n\"\n    else\n       echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - * Reasons for audit failure * :\\\\n$l_output2\"\n       [ -n \"$l_output\" ] && echo -e \"\\\\n- * Correctly configured * :\\\\n$l_output\\\\n\"\n    fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_442": {
        "description": "dpkg check aide-common",
        "cmd": "/bin/dpkg -s aide-common 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_443": {
        "description": "dpkg check aide",
        "cmd": "/bin/dpkg -s aide 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_444": {
        "description": "dailyaidecheck.timer enabled",
        "cmd": "/bin/systemctl list-unit-files | /bin/awk '$1~/^dailyaidecheck\\\\.(timer|service)\\$/{print $1 \"\\\\t\" $2}'",
        "expect": "^[\\\\s]*dailyaidecheck.timer[\\\\s]*enabled[\\\\s]*$"
    },
    "custom_item_445": {
        "description": "dailyaidecheck.service static",
        "cmd": "/bin/systemctl list-unit-files | /bin/awk '$1~/^dailyaidecheck\\\\.(timer|service)\\$/{print $1 \"\\\\t\" $2}'",
        "expect": "^[\\\\s]*dailyaidecheck.service[\\\\s]*static[\\\\s]*$"
    },
    "custom_item_446": {
        "description": "dailyaidecheck.timer active",
        "cmd": "/bin/systemctl is-active dailyaidecheck.timer",
        "expect": "^active$"
    },
    "custom_item_447": {
        "description": "journald check - active",
        "cmd": "/bin/systemctl is-active systemd-journald.service",
        "expect": "^active$"
    },
    "custom_item_448": {
        "description": "journald check - enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journald.service",
        "expect": "^static$"
    },
    "custom_item_449": {
        "description": "6.2.1.1.3 Ensure journald log file rotation is configured",
        "info": "Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file /etc/systemd/journald.conf is the configuration file used to specify how logs generated by Journald should be rotated.\n\nBy keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Edit /etc/systemd/journald.conf or a file ending inconf the /etc/systemd/journald.conf.d/ directory. Set the following parameters in the [Journal] section to ensure logs are rotated according to site policy. The settings should be carefully understood as there are specific edge cases and prioritization of parameters.\n\nThe specific parameters for log rotation are:\n\nSystemMaxUse=\nSystemKeepFree=\nRuntimeMaxUse=\nRuntimeKeepFree=\nMaxFileSec=\n\nNote: If these settings appear in a canonically later file, or later in the same file, the setting will be overwritten",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1M,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/systemd/journald.conf /etc/systemd/journald.conf.d/*",
        "regex": "^[\\\\s]*(SystemMaxUse|SystemKeepFree|RuntimeMaxUse|RuntimeKeepFree|MaxFileSec)[\\\\s]*=",
        "expect": "^Manual Review Required$",
        "min_occurrences": "1"
    },
    "custom_item_450": {
        "description": "6.2.1.1.4 Ensure journald ForwardToSyslog is disabled",
        "info": "Data from journald should be kept in the confines of the service and not forwarded to other services.\n\nLogs of the system should be handled by journald and not forwarded to other logging mechanisms.",
        "solution": "Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :\n\nForwardToSyslog=no\n\nExample:\n\n#!/usr/bin/env bash\n\n{\n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir /etc/systemd/journald.conf.d/\n   if grep -Psq -- '^\\h*\\[Journal\\] /etc/systemd/journald.conf.d/60-journald.conf; then\n      printf '%s\\n' \"ForwardToSyslog=no\" >> /etc/systemd/journald.conf.d/60-journald.conf\n   else\n      printf '%s\\n' \"[Journal]\" \"ForwardToSyslog=no\" >> /etc/systemd/journald.conf.d/60-journald.conf\n   fi\n}\n\nNote: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten\n\nRun to following command to update the parameters in the service:\n\n# systemctl reload-or-restart systemd-journald",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"ForwardToSyslog=yes\")\n   l_systemd_config_file=\"/etc/systemd/journald.conf\" # Main systemd configuration file\n   config_file_parameter_chk()\n   {\n      unset A_out; declare -A A_out # Check config file(s) setting\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               grep -Piq -- \"^\\\\h*$l_systemd_parameter_name\\\\b\" <<< \"$l_systemd_parameter\" && A_out+=([\"$l_systemd_parameter\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/bin/systemd-analyze cat-config \"$l_systemd_config_file\" | grep -Pio '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do\n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\"\n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\"\n            if ! grep -Piq \"^\\\\h*$l_systemd_parameter_value\\\\b\" <<< \"$l_systemd_file_parameter_value\"; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is correctly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is incorrectly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            fi\n         done < <(grep -Pio -- \"^\\\\h*$l_systemd_parameter_name\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_systemd_parameter_name\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and check parameters\n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"\n      l_systemd_parameter_value=\"${l_systemd_parameter_value// /}\"\n      config_file_parameter_chk\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\\\\n\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_451": {
        "description": "6.2.1.1.5 Ensure journald Storage is configured",
        "info": "Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.\n\nWriting log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.",
        "solution": "Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :\n\nStorage=persistent\n\nExample:\n\n#!/usr/bin/env bash\n\n{\n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir /etc/systemd/journald.conf.d/\n   if grep -Psq -- '^\\h*\\[Journal\\] /etc/systemd/journald.conf.d/60-journald.conf; then\n      printf '%s\\n' \"Storage=persistent\" >> /etc/systemd/journald.conf.d/60-journald.conf\n   else\n      printf '%s/n' \"[Journal]\" \"Storage=persistent\" >> /etc/systemd/journald.conf.d/60-journald.conf\n   fi\n}\n\nNote: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten\n\nRun to following command to update the parameters in the service:\n\n# systemctl reload-or-restart systemd-journald",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"Storage=persistent\")\n   l_systemd_config_file=\"/etc/systemd/journald.conf\" # Main systemd configuration file\n   config_file_parameter_chk()\n   {\n      unset A_out; declare -A A_out # Check config file(s) setting\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               grep -Piq -- \"^\\\\h*$l_systemd_parameter_name\\\\b\" <<< \"$l_systemd_parameter\" && A_out+=([\"$l_systemd_parameter\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/bin/systemd-analyze cat-config \"$l_systemd_config_file\" | grep -Pio '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do\n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\"\n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\"\n            if grep -Piq \"^\\\\h*$l_systemd_parameter_value\\\\b\" <<< \"$l_systemd_file_parameter_value\"; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is correctly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is incorrectly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value matching: \\\\\"$l_systemd_parameter_value\\\\\"\\\\n\"\n            fi\n         done < <(grep -Pio -- \"^\\\\h*$l_systemd_parameter_name\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_systemd_parameter_name\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and check parameters\n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"\n      l_systemd_parameter_value=\"${l_systemd_parameter_value// /}\"\n      config_file_parameter_chk\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_452": {
        "description": "6.2.1.1.6 Ensure journald Compress is configured",
        "info": "The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.\n\nUncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.",
        "solution": "Set the following parameter in the [Journal] section in /etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending inconf :\n\nCompress=yes\n\nExample:\n\n#!/usr/bin/env bash\n\n{\n   [ ! -d /etc/systemd/journald.conf.d/ ] && mkdir /etc/systemd/journald.conf.d/\n   if grep -Psq -- '^\\h*\\[Journal\\] /etc/systemd/journald.conf.d/60-journald.conf; then\n      printf '%s\\n' \"Compress=yes\" >> /etc/systemd/journald.conf.d/60-journald.conf\n   else\n      printf '%s\\n' \"[Journal]\" \"Compress=yes\" >> /etc/systemd/journald.conf.d/60-journald.conf\n   fi\n}\n\nNote: If this setting appears in a canonically later file, or later in the same file, the setting will be overwritten\n\nRun to following command to update the parameters in the service:\n\n# systemctl reload-or-restart systemd-journald",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-4,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-4,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv7|6.4,CSCv8|8.2,CSCv8|8.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-4,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.3.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\"\n   a_parlist=(\"Compress=yes\")\n   l_systemd_config_file=\"/etc/systemd/journald.conf\" # Main systemd configuration file\n   config_file_parameter_chk()\n   {\n      unset A_out; declare -A A_out # Check config file(s) setting\n      while read -r l_out; do\n         if [ -n \"$l_out\" ]; then\n            if [[ $l_out =~ ^\\\\s*# ]]; then\n               l_file=\"${l_out//# /}\"\n            else\n               l_systemd_parameter=\"$(awk -F= '{print $1}' <<< \"$l_out\" | xargs)\"\n               grep -Piq -- \"^\\\\h*$l_systemd_parameter_name\\\\b\" <<< \"$l_systemd_parameter\" && A_out+=([\"$l_systemd_parameter\"]=\"$l_file\")\n            fi\n         fi\n      done < <(/usr/bin/systemd-analyze cat-config \"$l_systemd_config_file\" | grep -Pio '^\\\\h*([^#\\\\n\\\\r]+|#\\\\h*\\\\/[^#\\\\n\\\\r\\\\h]+\\\\.conf\\\\b)')\n      if (( ${#A_out[@]} > 0 )); then # Assess output from files and generate output\n         while IFS=\"=\" read -r l_systemd_file_parameter_name l_systemd_file_parameter_value; do\n            l_systemd_file_parameter_name=\"${l_systemd_file_parameter_name// /}\"\n            l_systemd_file_parameter_value=\"${l_systemd_file_parameter_value// /}\"\n            if grep -Piq \"^\\\\h*$l_systemd_parameter_value\\\\b\" <<< \"$l_systemd_file_parameter_value\"; then\n               l_output=\"$l_output\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is correctly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\"\\\\n\"\n            else\n               l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is incorrectly set to \\\\\"$l_systemd_file_parameter_value\\\\\" in \\\\\"$(printf '%s' \"${A_out[@]}\")\\\\\" and should have a value matching: \\\\\"$l_systemd_parameter_value\\\\\"\\\\n\"\n            fi\n         done < <(grep -Pio -- \"^\\\\h*$l_systemd_parameter_name\\\\h*=\\\\h*\\\\H+\" \"${A_out[@]}\")\n      else\n         l_output2=\"$l_output2\\\\n - \\\\\"$l_systemd_parameter_name\\\\\" is not set in an included file\\\\n   ** Note: \\\\\"$l_systemd_parameter_name\\\\\" May be set in a file that's ignored by load procedure **\\\\n\"\n      fi\n   }\n   while IFS=\"=\" read -r l_systemd_parameter_name l_systemd_parameter_value; do # Assess and check parameters\n      l_systemd_parameter_name=\"${l_systemd_parameter_name// /}\"\n      l_systemd_parameter_value=\"${l_systemd_parameter_value// /}\"\n      config_file_parameter_chk\n   done < <(printf '%s\\\\n' \"${a_parlist[@]}\")\n   if [ -z \"$l_output2\" ]; then # Provide output from checks\n      echo -e \"\\\\n- Audit Result:\\\\n  ** PASS **\\\\n$l_output\\\\n\"\n   else\n      echo -e \"\\\\n- Audit Result:\\\\n  ** FAIL **\\\\n - Reason(s) for audit failure:\\\\n$l_output2\"\n      [ -n \"$l_output\" ] && echo -e \"\\\\n- Correctly set:\\\\n$l_output\\\\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    },
    "custom_item_453": {
        "description": "6.2.1.2.1 Ensure systemd-journal-remote is installed",
        "info": "Journald systemd-journal-remote supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.\n\nStoring log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.",
        "solution": "Run the following command to install systemd-journal-remote :\n\n# apt install systemd-journal-remote",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(c),CN-L3|8.1.4.3(a),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/dpkg -s systemd-journal-remote 2>&1 | /bin/grep -E '(Status:|not installed)'",
        "expect": "^Status: install ok"
    },
    "custom_item_454": {
        "description": "Trusted Cert",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*TrustedCertificateFile[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*TrustedCertificateFile[\\\\s]*=[\\\\s]*@JOURNALD_TRUSTED_CERT@[\\\\s]*$"
    },
    "custom_item_455": {
        "description": "Cert",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*ServerCertificateFile[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*ServerCertificateFile[\\\\s]*=[\\\\s]*@JOURNALD_SERVER_CERT@[\\\\s]*$"
    },
    "custom_item_456": {
        "description": "URL",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*URL[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*URL[\\\\s]*=[\\\\s]*@JOURNALD_SERVER@[\\\\s]*$"
    },
    "custom_item_457": {
        "description": "Key",
        "file": "/etc/systemd/journal-upload.conf",
        "regex": "^[\\\\s]*ServerKeyFile[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*ServerKeyFile[\\\\s]*=[\\\\s]*@JOURNALD_SERVER_KEY@[\\\\s]*$"
    },
    "custom_item_458": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journal-upload.service",
        "expect": "^enabled$"
    },
    "custom_item_459": {
        "description": "active",
        "cmd": "/bin/systemctl is-active systemd-journal-upload.service",
        "expect": "^active$"
    },
    "custom_item_460": {
        "description": "active",
        "cmd": "/bin/systemctl is-active systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^active' | /bin/awk '{print} END {if(NR==0) print \"pass\"}'",
        "expect": "^pass$"
    },
    "custom_item_461": {
        "description": "enabled",
        "cmd": "/bin/systemctl is-enabled systemd-journal-remote.socket systemd-journal-remote.service | /bin/grep -P -- '^enabled' | /bin/awk '{print} END {if(NR==0) print \"pass\"}'",
        "expect": "^pass$"
    },
    "custom_item_462": {
        "description": "6.2.2.1 Ensure access to all logfiles has been configured",
        "info": "Log files contain information from many services on the the local system, or in the event of a centralized log server, others systems logs as well.\n\nIn general log files are found in /var/log/ although application can be configured to store logs elsewhere. Should your application store logs in another, ensure to run the same test on that location.\n\nIt is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them.",
        "solution": "Run the following script to update permissions and ownership on files in /var/log\n\nAlthough the script is not destructive, ensure that the output of the audit procedure is captured in the event that the remediation causes issues.\n\n#!/usr/bin/env bash\n\n{\n   l_op2=\"\" l_output2=\"\"\n   l_uidmin=\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"\n   file_test_fix()\n   {\n      l_op2=\"\"\n      l_fuser=\"root\"\n      l_fgroup=\"root\"\n      if [ $(( $l_mode & $perm_mask )) -gt 0 ]; then\n         l_op2=\"$l_op2\\n - Mode: \\\\\"$l_mode\\\\\" should be \\\\\"$maxperm\\\\\" or more restrictive\\n - Removing excess permissions\"\n         chmod \"$l_rperms\" \"$l_fname\"\n      fi\n      if [[ ! \"$l_user\" =~ $l_auser ]]; then\n         l_op2=\"$l_op2\\n - Owned by: \\\\\"$l_user\\\\\" and should be owned by \\\\\"${l_auser//|/ or }\\\\\"\\n - Changing ownership to: \\\\\"$l_fuser\\\\\"\"\n         chown \"$l_fuser\" \"$l_fname\"\n      fi\n      if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n         l_op2=\"$l_op2\\n - Group owned by: \\\\\"$l_group\\\\\" and should be group owned by \\\\\"${l_agroup//|/ or }\\\\\"\\n - Changing group ownership to: \\\\\"$l_fgroup\\\\\"\"\n         chgrp \"$l_fgroup\" \"$l_fname\"\n      fi\n      [ -n \"$l_op2\" ] && l_output2=\"$l_output2\\n - File: \\\\\"$l_fname\\\\\" is:$l_op2\\n\"\n   }\n   unset a_file && a_file=() # clear and initialize array\n   # Loop to create array with stat of files that could possibly fail one of the audits\n   while IFS= read -r -d $'\\0' l_file; do\n      [ -e \"$l_file\" ] && a_file+=(\"$(stat -Lc '%n^%#a^%U^%u^%G^%g' \"$l_file\")\")\n   done < <(find -L /var/log -type f \\( -perm /0137 -o ! -user root -o ! -group root \\) -print0)\n   while IFS=\"^\" read -r l_fname l_mode l_user l_uid l_group l_gid; do\n      l_bname=\"$(basename \"$l_fname\")\"\n      case \"$l_bname\" in\n         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)\n            perm_mask='0113'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"ug-x,o-wx\"\n            l_auser=\"root\"\n            l_agroup=\"(root|utmp)\"\n            file_test_fix\n            ;;\n         secure | auth.log | syslog | messages)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"u-x,g-wx,o-rwx\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            file_test_fix\n            ;;\n         SSSD | sssd)\n            perm_mask='0117'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"ug-x,o-rwx\"\n            l_auser=\"(root|SSSD)\"\n            l_agroup=\"(root|SSSD)\"\n            file_test_fix\n            ;;\n         gdm | gdm3)\n            perm_mask='0117'\n            l_rperms=\"ug-x,o-rwx\"\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|gdm|gdm3)\"\n            file_test_fix\n            ;;\n         *.journal | *.journal~)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"u-x,g-wx,o-rwx\"\n            l_auser=\"root\"\n            l_agroup=\"(root|systemd-journal)\"\n            file_test_fix\n            ;;\n         *)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_rperms=\"u-x,g-wx,o-rwx\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            if [ \"$l_uid\" -lt \"$l_uidmin\" ] && [ -z \"$(awk -v grp=\"$l_group\" -F: '$1==grp {print $4}' /etc/group)\" ]; then\n               if [[ ! \"$l_user\" =~ $l_auser ]]; then\n                  l_auser=\"(root|syslog|$l_user)\"\n               fi\n               if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n                  l_tst=\"\"\n                  while l_out3=\"\" read -r l_duid; do\n                     [ \"$l_duid\" -ge \"$l_uidmin\" ] && l_tst=failed\n                  done <<< \"$(awk -F: '$4=='\"$l_gid\"' {print $3}' /etc/passwd)\"\n                  [ \"$l_tst\" != \"failed\" ] && l_agroup=\"(root|adm|$l_group)\"\n               fi\n            fi\n            file_test_fix\n            ;;\n      esac\n   done <<< \"$(printf '%s\\n' \"${a_file[@]}\")\"\n   unset a_file # Clear array\n   # If all files passed, then we report no changes\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"- All files in \\\\\"/var/log/\\\\\" have appropriate permissions and ownership\\n - No changes required\\n\"\n   else\n      # print report of changes\n      echo -e \"\\n$l_output2\"\n   fi\n}\n\nNote: You may also need to change the configuration for your logging software or services for any logs that had incorrect permissions.\n\nIf there are services that log to other locations, ensure that those log files have the appropriate permissions.",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_op2=\"\" l_output2=\"\"\n   l_uidmin=\"$(awk '/^\\\\s*UID_MIN/{print $2}' /etc/login.defs)\"\n   file_test_chk()\n   {\n      l_op2=\"\"\n      if [ $(( $l_mode & $perm_mask )) -gt 0 ]; then\n         l_op2=\"$l_op2\n  - Mode: \\\\\"$l_mode\\\\\" should be \\\\\"$maxperm\\\\\" or more restrictive\"\n      fi\n      if [[ ! \"$l_user\" =~ $l_auser ]]; then\n         l_op2=\"$l_op2\n  - Owned by: \\\\\"$l_user\\\\\" and should be owned by \\\\\"${l_auser//|/ or }\\\\\"\"\n      fi\n      if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n         l_op2=\"$l_op2\n  - Group owned by: \\\\\"$l_group\\\\\" and should be group owned by \\\\\"${l_agroup//|/ or }\\\\\"\"\n      fi\n      [ -n \"$l_op2\" ] && l_output2=\"$l_output2\n - File: \\\\\"$l_fname\\\\\" is:$l_op2\n\"\n   }\n   unset a_file && a_file=() # clear and initialize array\n   # Loop to create array with stat of files that could possibly fail one of the audits\n   while IFS= read -r -d $'\\\\0' l_file; do\n      [ -e \"$l_file\" ] && a_file+=(\"$(stat -Lc '%n^%#a^%U^%u^%G^%g' \"$l_file\")\")\n   done < <(find -L /var/log -type f \\\\( -perm /0137 -o ! -user root -o ! -group root \\\\) -print0)\n   while IFS=\"^\" read -r l_fname l_mode l_user l_uid l_group l_gid; do\n      l_bname=\"$(basename \"$l_fname\")\"\n      case \"$l_bname\" in\n         lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* | btmp-* | README)\n            perm_mask='0113'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|utmp)\"\n            file_test_chk\n            ;;\n         secure | auth.log | syslog | messages)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            file_test_chk\n            ;;\n         SSSD | sssd)\n            perm_mask='0117'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"(root|SSSD)\"\n            l_agroup=\"(root|SSSD)\"\n            file_test_chk\n            ;;\n         gdm | gdm3)\n            perm_mask='0117'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|gdm|gdm3)\"\n            file_test_chk\n            ;;\n         *.journal | *.journal~)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"root\"\n            l_agroup=\"(root|systemd-journal)\"\n            file_test_chk\n            ;;\n         *)\n            perm_mask='0137'\n            maxperm=\"$( printf '%o' $(( 0777 & ~$perm_mask)) )\"\n            l_auser=\"(root|syslog)\"\n            l_agroup=\"(root|adm)\"\n            if [ \"$l_uid\" -lt \"$l_uidmin\" ] && [ -z \"$(awk -v grp=\"$l_group\" -F: '$1==grp {print $4}' /etc/group)\" ]; then\n               if [[ ! \"$l_user\" =~ $l_auser ]]; then\n                  l_auser=\"(root|syslog|$l_user)\"\n               fi\n               if [[ ! \"$l_group\" =~ $l_agroup ]]; then\n                  l_tst=\"\"\n                  while l_out3=\"\" read -r l_duid; do\n                     [ \"$l_duid\" -ge \"$l_uidmin\" ] && l_tst=failed\n                  done <<< \"$(awk -F: '$4=='\"$l_gid\"' {print $3}' /etc/passwd)\"\n                  [ \"$l_tst\" != \"failed\" ] && l_agroup=\"(root|adm|$l_group)\"\n               fi\n            fi\n            file_test_chk\n            ;;\n      esac\n   done <<< \"$(printf '%s\n' \"${a_file[@]}\")\"\n   unset a_file # Clear array\n   # If all files passed, then we pass\n   if [ -z \"$l_output2\" ]; then\n      echo -e \"\n- Audit Results:\n ** Pass **\n- All files in \\\\\"/var/log/\\\\\" have appropriate permissions and ownership\n\"\n   else\n      # print the reason why we are failing\n      echo -e \"\n- Audit Results:\n ** Fail **\n$l_output2\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_463": {
        "description": "7.1.1 Ensure permissions on /etc/passwd are configured",
        "info": "The /etc/passwd file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.\n\nIt is critical to ensure that the /etc/passwd file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd :\n\n# chmod u-x,go-wx /etc/passwd\n# chown root:root /etc/passwd",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/passwd",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_464": {
        "description": "etc/security/opasswd file permissions",
        "file": "/etc/security/opasswd",
        "owner": "root",
        "mask": "177",
        "group": "root"
    },
    "custom_item_465": {
        "description": "/etc/security/opasswd.old file permissions",
        "file": "/etc/security/opasswd.old",
        "owner": "root",
        "mask": "177",
        "group": "root"
    },
    "custom_item_466": {
        "description": "7.1.2 Ensure permissions on /etc/passwd- are configured",
        "info": "The /etc/passwd- file contains backup user account information.\n\nIt is critical to ensure that the /etc/passwd- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/passwd- :\n\n# chmod u-x,go-wx /etc/passwd-\n# chown root:root /etc/passwd-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/passwd-",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_467": {
        "description": "7.1.3 Ensure permissions on /etc/group are configured",
        "info": "The /etc/group file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.\n\nThe /etc/group file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/group :\n\n# chmod u-x,go-wx /etc/group\n# chown root:root /etc/group",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/group",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_468": {
        "description": "7.1.4 Ensure permissions on /etc/group- are configured",
        "info": "The /etc/group- file contains a backup list of all the valid groups defined in the system.\n\nIt is critical to ensure that the /etc/group- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/group- :\n\n# chmod u-x,go-wx /etc/group-\n# chown root:root /etc/group-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/group-",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_469": {
        "description": "7.1.5 Ensure permissions on /etc/shadow are configured",
        "info": "The /etc/shadow file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIf attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the user accounts.",
        "solution": "Run one of the following commands to set ownership of /etc/shadow to root and group to either root or shadow :\n\n# chown root:shadow /etc/shadow\n  -OR-\n# chown root:root /etc/shadow\n\nRun the following command to remove excess permissions form /etc/shadow :\n\n# chmod u-x,g-wx,o-rwx /etc/shadow",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/shadow",
        "owner": "root",
        "mask": "137",
        "group": "shadow"
    },
    "custom_item_470": {
        "description": "7.1.6 Ensure permissions on /etc/shadow- are configured",
        "info": "The /etc/shadow- file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIt is critical to ensure that the /etc/shadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run one of the following commands to set ownership of /etc/shadow- to root and group to either root or shadow :\n\n# chown root:shadow /etc/shadow-\n  -OR-\n# chown root:root /etc/shadow-\n\nRun the following command to remove excess permissions form /etc/shadow- :\n\n# chmod u-x,g-wx,o-rwx /etc/shadow-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/shadow",
        "owner": "root",
        "mask": "137",
        "group": "shadow"
    },
    "custom_item_471": {
        "description": "7.1.7 Ensure permissions on /etc/gshadow are configured",
        "info": "The /etc/gshadow file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIf attackers can gain read access to the /etc/gshadow file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the /etc/gshadow file (such as group administrators) could also be useful to subvert the group.",
        "solution": "Run one of the following commands to set ownership of /etc/gshadow to root and group to either root or shadow :\n\n# chown root:shadow /etc/gshadow\n  -OR-\n# chown root:root /etc/gshadow\n\nRun the following command to remove excess permissions form /etc/gshadow :\n\n# chmod u-x,g-wx,o-rwx /etc/gshadow",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/gshadow",
        "owner": "root",
        "mask": "137",
        "group": "root"
    },
    "custom_item_472": {
        "description": "7.1.8 Ensure permissions on /etc/gshadow- are configured",
        "info": "The /etc/gshadow- file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.\n\nIt is critical to ensure that the /etc/gshadow- file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run one of the following commands to set ownership of /etc/gshadow- to root and group to either root or shadow :\n\n# chown root:shadow /etc/gshadow-\n  -OR-\n# chown root:root /etc/gshadow-\n\nRun the following command to remove excess permissions form /etc/gshadow- :\n\n# chmod u-x,g-wx,o-rwx /etc/gshadow-",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/gshadow-",
        "owner": "root",
        "mask": "137",
        "group": "root"
    },
    "custom_item_473": {
        "description": "7.1.9 Ensure permissions on /etc/shells are configured",
        "info": "/etc/shells is a text file which contains the full pathnames of valid login shells. This file is consulted by chsh and available to be queried by other programs.\n\nIt is critical to ensure that the /etc/shells file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.",
        "solution": "Run the following commands to remove excess permissions, set owner, and set group on /etc/shells :\n\n# chmod u-x,go-wx /etc/shells\n# chown root:root /etc/shells",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "file": "/etc/shells",
        "owner": "root",
        "mask": "133",
        "group": "root"
    },
    "custom_item_474": {
        "description": "7.2.1 Ensure accounts in /etc/passwd use shadowed passwords",
        "info": "Local accounts can uses shadowed passwords. With shadowed passwords, The passwords are saved in shadow password file, /etc/shadow encrypted by a salted one-way hash. Accounts with a shadowed password have an x in the second field in /etc/passwd\n\nThe /etc/passwd file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the /etc/passwd file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the /etc/passwd file. This can be mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd file to /etc/shadow The /etc/shadow file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack.\n\nNote:\n\n - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.\n - A user account with an empty second field in /etc/passwd allows the account to be logged into by providing only the username.",
        "solution": "Run the following command to set accounts to use shadowed passwords and migrate passwords in /etc/passwd to /etc/shadow :\n\n# pwconv\n\nInvestigate to determine if the account is logged in and what it is being used for, to determine if it needs to be forced off.",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|16.4,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|1A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/awk -F: '($2 != \"x\" ) { print $1 \" is not set to shadowed passwords \"}' /etc/passwd | /bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_475": {
        "description": "7.2.10 Ensure local interactive user dot files access is configured",
        "info": "While the system administrator can establish secure permissions for users' \"dot\" files, the users can easily override these.\n\n - forward file specifies an email address to forward the user's mail to.\n - rhost file provides the \"remote authentication\" database for the rcp, rlogin, and rsh commands and the rcmd() function. These files bypass the standard password-based user authentication mechanism. They specify remote hosts and users that are considered trusted (i.e. are allowed to access the local system without supplying a password)\n - netrc file contains data for logging into a remote host or passing authentication to an API.\n - bash_history file keeps track of the user's commands.\n\nUser configuration files with excessive or incorrect access may enable malicious users to steal or modify other users' data or to gain another user's system privileges.",
        "solution": "Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.\n\nThe following script will:\n\n - remove excessive permissions on dot files within interactive users' home directories\n - change ownership of dot files within interactive users' home directories to the user\n - change group ownership of dot files within interactive users' home directories to the user's primary group\n - listforward andrhost files to be investigated and manually deleted\n\n#!/usr/bin/env bash\n\n{\n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      [[ -n \"$l_epu\" && -n \"$l_eph\" ]] && a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   l_maxsize=\"1000\" # Maximum number of local interactive users before warning (Default 1,000)\n   [ \"$l_asize \" -gt \"$l_maxsize\" ] && echo -e \"\\n ** INFO **\\n - \\\\\"$l_asize\\\\\" Local interactive users found on the system\\n - This may be a long running check\\n\"\n   file_access_fix()\n   {\n      l_facout2=\"\"\n      l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n      if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n         echo -e \" - File: \\\\\"$l_hdfile\\\\\" is mode: \\\\\"$l_mode\\\\\" and should be mode: \\\\\"$l_max\\\\\" or more restrictive\\n - Changing to mode \\\\\"$l_max\\\\\"\"\n         chmod \"$l_chp\" \"$l_hdfile\"\n      fi\n      if [[ ! \"$l_owner\" =~ ($l_user) ]]; then\n         echo -e \" - File: \\\\\"$l_hdfile\\\\\" owned by: \\\\\"$l_owner\\\\\" and should be owned by \\\\\"${l_user//|/ or }\\\\\"\\n - Changing ownership to \\\\\"$l_user\\\\\"\"\n         chown \"$l_user\" \"$l_hdfile\"\n      fi\n      if [[ ! \"$l_gowner\" =~ ($l_group) ]]; then\n         echo -e \" - File: \\\\\"$l_hdfile\\\\\" group owned by: \\\\\"$l_gowner\\\\\" and should be group owned by \\\\\"${l_group//|/ or }\\\\\"\\n - Changing group ownership to \\\\\"$l_group\\\\\"\"\n         chgrp \"$l_group\" \"$l_hdfile\"\n      fi\n   }\n   while read -r l_user l_home; do\n      if [ -d \"$l_home\" ]; then\n         echo -e \"\\n - Checking user: \\\\\"$l_user\\\\\" home directory: \\\\\"$l_home\\\\\"\"\n         l_group=\"$(id -gn \"$l_user\" | xargs)\"\n         l_group=\"${l_group// /|}\"\n         while IFS= read -r -d $'\\0' l_hdfile; do\n            while read -r l_mode l_owner l_gowner; do\n               case \"$(basename \"$l_hdfile\")\" in\n                  .forward | .rhost )\n                     echo -e \" - File: \\\\\"$l_hdfile\\\\\" exists\\n - Please investigate and manually delete \\\\\"$l_hdfile\\\\\"\"\n                  ;;\n                  .netrc )\n                     l_mask='0177'\n                     l_chp=\"u-x,go-rwx\"\n                     file_access_fix ;;\n                  .bash_history )\n                     l_mask='0177'\n                     l_chp=\"u-x,go-rwx\"\n                     file_access_fix ;;\n                  * )\n                     l_mask='0133'\n                     l_chp=\"u-x,go-wx\"\n                     file_access_fix ;;\n                  esac\n            done <<< \"$(stat -Lc '%#a %U %G' \"$l_hdfile\")\"\n         done < <(find \"$l_home\" -xdev -type f -name '.*' -print0)\n      fi\n   done <<< \"$(printf '%s\\n' \"${a_uarr[@]}\")\"\n   unset a_uarr # Remove array\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_output3=\"\"\n   l_bf=\"\" l_df=\"\" l_nf=\"\" l_hf=\"\"\n   l_valid_shells=\"^($( awk -F\\\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\\\//{s,/,\\\\\\\\\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      [[ -n \"$l_epu\" && -n \"$l_eph\" ]] && a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   l_maxsize=\"1000\" # Maximun number of local interactive users before warning (Default 1,000)\n   [ \"$l_asize \" -gt \"$l_maxsize\" ] && echo -e \"\n  ** INFO **\n  - \\\\\"$l_asize\\\\\" Local interactive users found on the system\n  - This may be a long running check\n\"\n   file_access_chk()\n   {\n      l_facout2=\"\"\n      l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n      if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n         l_facout2=\"$l_facout2\n  - File: \\\\\"$l_hdfile\\\\\" is mode: \\\\\"$l_mode\\\\\" and should be mode: \\\\\"$l_max\\\\\" or more restrictive\"\n      fi\n      if [[ ! \"$l_owner\" =~ ($l_user) ]]; then\n         l_facout2=\"$l_facout2\n  - File: \\\\\"$l_hdfile\\\\\" owned by: \\\\\"$l_owner\\\\\" and should be owned by \\\\\"${l_user//|/ or }\\\\\"\"\n      fi\n      if [[ ! \"$l_gowner\" =~ ($l_group) ]]; then\n         l_facout2=\"$l_facout2\n  - File: \\\\\"$l_hdfile\\\\\" group owned by: \\\\\"$l_gowner\\\\\" and should be group owned by \\\\\"${l_group//|/ or }\\\\\"\"\n      fi\n   }\n   while read -r l_user l_home; do\n      l_fe=\"\" l_nout2=\"\" l_nout3=\"\" l_dfout2=\"\" l_hdout2=\"\" l_bhout2=\"\"\n      if [ -d \"$l_home\" ]; then\n         l_group=\"$(id -gn \"$l_user\" | xargs)\"\n         l_group=\"${l_group// /|}\"\n         while IFS= read -r -d $'\\\\0' l_hdfile; do\n            while read -r l_mode l_owner l_gowner; do\n               case \"$(basename \"$l_hdfile\")\" in\n                  .forward | .rhost )\n                     l_fe=\"Y\" && l_bf=\"Y\"\n                     l_dfout2=\"$l_dfout2\n  - File: \\\\\"$l_hdfile\\\\\" exists\" ;;\n                  .netrc )\n                     l_mask='0177'\n                     file_access_chk\n                     if [ -n \"$l_facout2\" ]; then\n                        l_fe=\"Y\" && l_nf=\"Y\"\n                        l_nout2=\"$l_facout2\"\n                     else\n                        l_nout3=\"   - File: \\\\\"$l_hdfile\\\\\" exists\"\n                     fi ;;\n                  .bash_history )\n                     l_mask='0177'\n                     file_access_chk\n                     if [ -n \"$l_facout2\" ]; then\n                        l_fe=\"Y\" && l_hf=\"Y\"\n                        l_bhout2=\"$l_facout2\"\n                     fi ;;\n                  * )\n                     l_mask='0133'\n                     file_access_chk\n                     if [ -n \"$l_facout2\" ]; then\n                        l_fe=\"Y\" && l_df=\"Y\"\n                        l_hdout2=\"$l_facout2\"\n                     fi ;;\n                  esac\n            done <<< \"$(stat -Lc '%#a %U %G' \"$l_hdfile\")\"\n         done < <(find \"$l_home\" -xdev -type f -name '.*' -print0)\n      fi\n      if [ \"$l_fe\" = \"Y\" ]; then\n         l_output2=\"$l_output2\n - User: \\\\\"$l_user\\\\\" Home Directory: \\\\\"$l_home\\\\\"\"\n         [ -n \"$l_dfout2\" ] && l_output2=\"$l_output2$l_dfout2\"\n         [ -n \"$l_nout2\" ] && l_output2=\"$l_output2$l_nout2\"\n         [ -n \"$l_bhout2\" ] && l_output2=\"$l_output2$l_bhout2\"\n         [ -n \"$l_hdout2\" ] && l_output2=\"$l_output2$l_hdout2\"\n      fi\n      [ -n \"$l_nout3\" ] && l_output3=\"$l_output3\n  - User: \\\\\"$l_user\\\\\" Home Directory: \\\\\"$l_home\\\\\"\n$l_nout3\"\n   done <<< \"$(printf '%s\n' \"${a_uarr[@]}\")\"\n   unset a_uarr # Remove array\n   [ -n \"$l_output3\" ] && l_output3=\" - ** Warning **\n - \\\\\".netrc\\\\\" files should be removed unless deemed necessary\n   and in accordance with local site policy:$l_output3\"\n   [ -z \"$l_bf\" ] && l_output=\"$l_output\n   - \\\\\".forward\\\\\" or \\\\\".rhost\\\\\" files\"\n   [ -z \"$l_nf\" ] && l_output=\"$l_output\n   - \\\\\".netrc\\\\\" files with incorrect access configured\"\n   [ -z \"$l_hf\" ] && l_output=\"$l_output\n   - \\\\\".bash_history\\\\\" files with incorrect access configured\"\n   [ -z \"$l_df\" ] && l_output=\"$l_output\n   - \\\\\"dot\\\\\" files with incorrect access configured\"\n   [ -n \"$l_output\" ] && l_output=\"  - No local interactive users home directories contain:$l_output\"\n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\n      echo -e \"\n- Audit Result:\n  ** PASS **\n - * Correctly configured * :\n$l_output\n\"\n      echo -e \"$l_output3\n\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\n\"\n      echo -e \"$l_output3\n\"\n      [ -n \"$l_output\" ] && echo -e \"- * Correctly configured * :\n$l_output\n\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$",
        "timeout": "@FIND_TIMEOUT@"
    },
    "custom_item_476": {
        "description": "7.2.2 Ensure /etc/shadow password fields are not empty",
        "info": "An account with an empty password field means that anybody may log in as that user without providing a password.\n\nAll accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.",
        "solution": "If any accounts in the /etc/shadow file do not have a password, run the following command to lock the account until it can be determined why it does not have a password:\n\n# passwd -lAlso, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv7|4.4,CSCv8|5.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/awk -F : \\'($2 == \"\") { print $1 \" does not have a password.\"}\\' /etc/shadow | /bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "^none$"
    },
    "custom_item_477": {
        "description": "7.2.4 Ensure shadow group is empty",
        "info": "The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.\n\nAny users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the /etc/shadow file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the /etc/shadow file (such as expiration) could also be useful to subvert additional user accounts.",
        "solution": "Run the following command to remove all users from the shadow group\n\n# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\\1/' /etc/group\n\nChange the primary group of any users with shadow as their primary group.\n\n# usermod -g",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "/bin/awk -F: 'FILENAME == \"/etc/group\" && $1 == \"shadow\" { gid=$3; if ($4!=\"\") { print \"secondary \"$4; f=1 } } FILENAME == \"/etc/passwd\" && $4 == gid { print \"primary \"$1; f=1 } END { if (!f) print \"shadow group empty\" }' /etc/group /etc/passwd",
        "expect": "^shadow group empty$"
    },
    "custom_item_478": {
        "description": "7.2.9 Ensure local interactive user home directories are configured",
        "info": "The user home directory is space defined for the particular user to set local environment variables and to store personal files. While the system administrator can establish secure permissions for users' home directories, the users can easily override these. Users can be defined in /etc/passwd without a home directory or with a home directory that does not actually exist.\n\nSince the user is accountable for files stored in the user home directory, the user must be the owner of the directory. Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges. If the user's home directory does not exist or is unassigned, the user will be placed in \"/\" and will not be able to write any files or have local environment variables set.",
        "solution": "If a local interactive users' home directory is undefined and/or doesn't exist, follow local site policy and perform one of the following:\n\n - Lock the user account\n - Remove the user from the system\n - create a directory for the user. If undefined, edit /etc/passwd and add the absolute path to the directory to the last field of the user.\n\nRun the following script to:\n\n - Remove excessive permissions from local interactive users home directories\n - Update the home directory's owner\n\n#!/usr/bin/env bash\n\n{\n   l_output2=\"\"\n   l_valid_shells=\"^($( awk -F\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\//{s,/,\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   [ \"$l_asize \" -gt \"10000\" ] && echo -e \"\\n ** INFO **\\n - \\\\\"$l_asize\\\\\" Local interactive users found on the system\\n - This may be a long running process\\n\"\n   while read -r l_user l_home; do\n      if [ -d \"$l_home\" ]; then\n         l_mask='0027'\n         l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n         while read -r l_own l_mode; do\n            if [ \"$l_user\" != \"$l_own\" ]; then\n               l_output2=\"$l_output2\\n - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is owned by: \\\\\"$l_own\\\\\"\\n - changing ownership to: \\\\\"$l_user\\\\\"\\n\"\n               chown \"$l_user\" \"$l_home\"\n            fi\n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n               l_output2=\"$l_output2\\n - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_max\\\\\" or more restrictive\\n - removing excess permissions\\n\"\n               chmod g-w,o-rwx \"$l_home\"\n            fi\n         done <<< \"$(stat -Lc '%U %#a' \"$l_home\")\"\n      else\n         l_output2=\"$l_output2\\n - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" Doesn't exist\\n - Please create a home in accordance with local site policy\"\n      fi\n   done <<< \"$(printf '%s\\n' \"${a_uarr[@]}\")\"\n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\n      echo -e \" - No modification needed to local interactive users home directories\"\n   else\n      echo -e \"\\n$l_output2\"\n   fi\n}",
        "reference": "800-171|3.1.1,800-171|3.1.4,800-171|3.1.5,800-171|3.8.1,800-171|3.8.2,800-171|3.8.3,800-53|AC-3,800-53|AC-5,800-53|AC-6,800-53|MP-2,800-53r5|AC-3,800-53r5|AC-5,800-53r5|AC-6,800-53r5|MP-2,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSCv8|3.3,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-2,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,ITSG-33|AC-5,ITSG-33|AC-6,ITSG-33|MP-2,ITSG-33|MP-2a.,LEVEL|1A,NESA|T1.3.2,NESA|T1.3.3,NESA|T1.4.1,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,NIAv2|SS29,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/17331",
        "cmd": "#!/bin/bash\n\n{\n   l_output=\"\" l_output2=\"\" l_heout2=\"\" l_hoout2=\"\" l_haout2=\"\"\n   l_valid_shells=\"^($( awk -F\\\\/ '$NF != \"nologin\" {print}' /etc/shells | sed -rn '/^\\\\//{s,/,\\\\\\\\\\\\\\\\/,g;p}' | paste -s -d '|' - ))$\"\n   unset a_uarr && a_uarr=() # Clear and initialize array\n   while read -r l_epu l_eph; do # Populate array with users and user home location\n      a_uarr+=(\"$l_epu $l_eph\")\n   done <<< \"$(awk -v pat=\"$l_valid_shells\" -F: '$(NF) ~ pat { print $1 \" \" $(NF-1) }' /etc/passwd)\"\n   l_asize=\"${#a_uarr[@]}\" # Here if we want to look at number of users before proceeding\n   [ \"$l_asize \" -gt \"10000\" ] && echo -e \"\n  ** INFO **\n  - \\\\\"$l_asize\\\\\" Local interactive users found on the system\n  - This may be a long running check\n\"\n   while read -r l_user l_home; do\n      if [ -d \"$l_home\" ]; then\n         l_mask='0027'\n         l_max=\"$( printf '%o' $(( 0777 & ~$l_mask)) )\"\n         while read -r l_own l_mode; do\n            [ \"$l_user\" != \"$l_own\" ] && l_hoout2=\"$l_hoout2\n  - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is owned by: \\\\\"$l_own\\\\\"\"\n            if [ $(( $l_mode & $l_mask )) -gt 0 ]; then\n               l_haout2=\"$l_haout2\n  - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" is mode: \\\\\"$l_mode\\\\\" should be mode: \\\\\"$l_max\\\\\" or more restrictive\"\n            fi\n         done <<< \"$(stat -Lc '%U %#a' \"$l_home\")\"\n      else\n         l_heout2=\"$l_heout2\n  - User: \\\\\"$l_user\\\\\" Home \\\\\"$l_home\\\\\" Doesn't exist\"\n      fi\n   done <<< \"$(printf '%s\n' \"${a_uarr[@]}\")\"\n   [ -z \"$l_heout2\" ] && l_output=\"$l_output\n   - home directories exist\" || l_output2=\"$l_output2$l_heout2\"\n   [ -z \"$l_hoout2\" ] && l_output=\"$l_output\n   - own their home directory\" || l_output2=\"$l_output2$l_hoout2\"\n   [ -z \"$l_haout2\" ] && l_output=\"$l_output\n   - home directories are mode: \\\\\"$l_max\\\\\" or more restrictive\" || l_output2=\"$l_output2$l_haout2\"\n   [ -n \"$l_output\" ] && l_output=\"  - All local interactive users:$l_output\"\n   if [ -z \"$l_output2\" ]; then # If l_output2 is empty, we pass\n      echo -e \"\n- Audit Result:\n  ** PASS **\n - * Correctly configured * :\n$l_output\"\n   else\n      echo -e \"\n- Audit Result:\n  ** FAIL **\n - * Reasons for audit failure * :\n$l_output2\"\n      [ -n \"$l_output\" ] && echo -e \"\n- * Correctly configured * :\n$l_output\"\n   fi\n}",
        "expect": "(?i)^[\\\\s]*\\\\**[\\\\s]*pass:?[\\\\s]*\\\\**$"
    }
}