{
    "custom_item_1": {
        "description": "Red Hat 5 is installed",
        "file": "/etc/redhat-release",
        "regex": "Red Hat Enterprise.*release",
        "expect": "Red Hat Enterprise.*release @PLATFORM_VERSION@"
    },
    "custom_item_2": {
        "system": "Linux",
        "description": "1.1.18 Disable Mounting of cramfs Filesystems - install cramfs /bin/true'",
        "info": "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/cramfs.conf\nAdd the following line:\n\ninstall cramfs /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/modprobe.d/CIS",
        "regex": "^[\\\\s]*install[\\\\s]+cramfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+cramfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_3": {
        "system": "Linux",
        "description": "1.1.19 Disable Mounting of freevxfs Filesystems - install freevxfs /bin/true'",
        "info": "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating systems.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/freevxfs.conf\nAdd the following line:\n\ninstall freevxfs /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/modprobe.d/CIS",
        "regex": "^[\\\\s]*install[\\\\s]+freevxfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+freevxfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_4": {
        "system": "Linux",
        "description": "1.1.20 Disable Mounting of jffs2 Filesystems - install jffs2 /bin/true'",
        "info": "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/jffs2.conf\nAdd the following line:\n\ninstall jffs2 /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/modprobe.d/CIS",
        "regex": "^[\\\\s]*install[\\\\s]+jffs2[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+jffs2[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_5": {
        "system": "Linux",
        "description": "1.1.21 Disable Mounting of hfs Filesystems - install hfs /bin/true'",
        "info": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/hfs.conf\nAdd the following line:\n\ninstall hfs /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/modprobe.d/CIS",
        "regex": "^[\\\\s]*install[\\\\s]+hfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+hfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_6": {
        "system": "Linux",
        "description": "1.1.22 Disable Mounting of hfsplus Filesystems - install hfsplus /bin/true'",
        "info": "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows you to mount Mac OS filesystems.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/hfsplus.conf\nAdd the following line:\n\ninstall hfsplus /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/modprobe.d/CIS",
        "regex": "^[\\\\s]*install[\\\\s]+hfsplus[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+hfsplus[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_7": {
        "system": "Linux",
        "description": "1.1.23 Disable Mounting of squashfs Filesystems - install squashfs /bin/true'",
        "info": "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to cramfs). A squashfs image can be used without having to first decompress the image.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/squashfs.conf\nAdd the following line:\n\ninstall squashfs /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/modprobe.d/CIS",
        "regex": "^[\\\\s]*install[\\\\s]+squashfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+squashfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_8": {
        "system": "Linux",
        "description": "1.1.24 Disable Mounting of udf Filesystems - modprobe",
        "info": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/udf.conf\nAdd the following line:\n\ninstall udf /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "cmd": "/sbin/modprobe -n -v udf | /usr/bin/awk '{print} END {if (NR == 0) print \"fail\"}'",
        "expect": "install /bin/true"
    },
    "custom_item_9": {
        "system": "Linux",
        "description": "1.1.24 Disable Mounting of udf Filesystems - lsmod",
        "info": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.\n\nRationale:\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nExample: /etc/modprobe.d/udf.conf\nAdd the following line:\n\ninstall udf /bin/true\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "cmd": "/sbin/lsmod udf | /usr/bin/awk \\'{print} END {if (NR == 0) print \"pass\" ; else print \"fail\"}\\'",
        "expect": "pass"
    },
    "custom_item_10": {
        "system": "Linux",
        "description": "1.2.4 Disable the rhnsd Daemon",
        "info": "The rhnsd daemon polls the Red Hat Network web site for scheduled actions.\n\nRationale:\n\nPatch management policies may require that organizations test the impact of a patch before it is deployed in a production environment. Having patches automatically deployed could have a negative impact on the environment. It is best to not allow an action by default but only after appropriate consideration has been made. It is recommended that the service be disabled unless the risk is understood and accepted. This is not scorable item since organizations may have addressed the risk.",
        "solution": "Disable the rhnsd daemon by running the following command:\n\n# chkconfig rhnsd off\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2M,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "service": "rhnsd",
        "levels": "0123456"
    },
    "custom_item_11": {
        "system": "Linux",
        "description": "1.2.5 Disable yum-updatesd",
        "info": "The yum-updatesd utility provides notification of updates that are available for your system.\n\nRationale:\n\nThe yum-updatesd service may introduce unnecessary overhead and prevent other programs from running. When possible, replace this service with a cron job that calls yum directly.",
        "solution": "Disable the yum-updatesd daemon by running the following command:\n\n# chkconfig yum-updatesd off\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "service": "yum-updatesd",
        "levels": "0123456"
    },
    "custom_item_12": {
        "system": "Linux",
        "description": "1.3.1 Install AIDE",
        "info": "In some installations, AIDE is not installed automatically.\n\nRationale:\n\nInstall AIDE to make use of the file integrity features to monitor critical files for changes that could affect the security of the system.",
        "solution": "Run the following command to install AIDE:\n\n# yum install aide\n\nNote: The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Set PRELINKING=no in /etc/sysconfig/prelink and run /usr/sbin/prelink -ua to restore the binaries to their prelinked state, thus avoiding false positives from AIDE.\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|2.2,CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "rpm": "aide-0.0.0-0",
        "operator": "gt"
    },
    "custom_item_13": {
        "system": "Linux",
        "description": "1.3.2 Implement Periodic Execution of File Integrity - 0 5 * * * /usr/sbin/aide --check'",
        "info": "Implement periodic file checking, in compliance with site policy.\n\nRationale:\n\nPeriodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.",
        "solution": "Execute the following command:\n\n# crontab -u root -e\n\nAdd the following line to the crontab:\n\n0 5 * * * /usr/sbin/aide --check\n\nNote: The checking in this instance occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/var/spool/cron/root",
        "regex": "^[\\\\s]*0(0)?[\\\\s]+5[\\\\s]+\\\\*[\\\\s]+\\\\*[\\\\s]+\\\\*[\\\\s]+\\/usr\\/sbin\\/aide[\\\\s]+--check[\\\\s]*$",
        "expect": "^[\\\\s]*0(0)?[\\\\s]+5[\\\\s]+\\\\*[\\\\s]+\\\\*[\\\\s]+\\\\*[\\\\s]+\\/usr\\/sbin\\/aide[\\\\s]+--check[\\\\s]*$"
    },
    "custom_item_14": {
        "system": "Linux",
        "description": "1.4.1 Enable SELinux in /etc/grub.conf - selinux != 0",
        "info": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters\n\nRationale:\n\nSELinux must be enabled at boot time in /etc/grub.conf to ensure that the controls it provides are not overwritten.",
        "solution": "Remove all instances of selinux=0 and enforcing=0 from /etc/grub.conf.\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/grub.conf",
        "regex": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=",
        "expect": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=[\\\\s]*0[\\\\s]*$"
    },
    "custom_item_15": {
        "system": "Linux",
        "description": "1.4.1 Enable SELinux in /etc/grub.conf - enforcing != 0",
        "info": "Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters\n\nRationale:\n\nSELinux must be enabled at boot time in /etc/grub.conf to ensure that the controls it provides are not overwritten.",
        "solution": "Remove all instances of selinux=0 and enforcing=0 from /etc/grub.conf.\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/grub.conf",
        "regex": "^[\\\\s]*[eE][nN][fF][oO][rR][cC][iI][nN][gG][\\\\s]*=",
        "expect": "^[\\\\s]*[eE][nN][fF][oO][rR][cC][iI][nN][gG][\\\\s]*=[\\\\s]*0[\\\\s]*$"
    },
    "custom_item_16": {
        "system": "Linux",
        "description": "1.4.2 Set the SELinux State - SELINUX=enforcing",
        "info": "Set SELinux to enable when the system is booted.\n\nRationale:\n\nSELinux must be enabled at boot time in to ensure that the controls it provides are in effect at all times.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUX parameter:\n\nSELINUX=enforcing\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/selinux/config",
        "regex": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=[\\\\s]*[eE][nN][fF][oO][rR][cC][iI][nN][gG][\\\\s]*$",
        "expect": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][\\\\s]*=[\\\\s]*[eE][nN][fF][oO][rR][cC][iI][nN][gG][\\\\s]*$"
    },
    "custom_item_17": {
        "system": "Linux",
        "description": "1.4.3 Set the SELinux Policy - SELINUXTYPE=targeted",
        "info": "Configure SELinux to meet or exceed the default targeted policy, which constrains daemons and system software only.\n\nRationale:\n\nSecurity configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that at least the default recommendations are met.",
        "solution": "Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:\n\nSELINUXTYPE=targeted\n\nNote: If your organization requires stricter policies, make sure they are added to the /etc/selinux/config file.\n\n\n\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/selinux/config",
        "regex": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE][\\\\s]*=",
        "expect": "^[\\\\s]*[sS][eE][lL][iI][nN][uU][xX][tT][yY][pP][eE][\\\\s]*=[\\\\s]*targeted[\\\\s]*$"
    },
    "custom_item_18": {
        "system": "Linux",
        "description": "1.4.4 Remove SETroubleshoot",
        "info": "The SETroubleshoot service notifies desktop users of SELinux denials through a user-friendly interface. The service provides important information around configuration errors, unauthorized intrusions, and other potential errors.\n\nRationale:\n\nThe SETroubleshoot service is an unnecessary daemon to have running on a server, especially if X Windows is disabled or removed.",
        "solution": "Run the following command to remove setroubleshoot\n\n# yum erase setroubleshoot\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "rpm": "setroubleshoot-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_19": {
        "system": "Linux",
        "description": "1.4.5 Disable MCS Translation Service (mcstrans)",
        "info": "The mcstransd daemon provides category label information to client processes requesting information. The label translations are defined in /etc/selinux/targeted/setrans.conf\n\nRationale:\n\nSince this service is not used very often, disable it to reduce the amount of potentially vulnerable code running on the system.",
        "solution": "Run the following command to disable mcstrans:\n\n# chkconfig mctrans off\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "service": "mctrans",
        "levels": "0123456"
    },
    "custom_item_20": {
        "system": "Linux",
        "description": "1.4.6 Check for Unconfined Daemons",
        "info": "Daemons that are not defined in SELinux policy will inherit the security context of their parent process.\n\nRationale:\n\nSince daemons are launched and descend from the init process, they will inherit the security context label initrc\\_t. This could cause the unintended consequence of giving the process more permission than it requires.",
        "solution": "Investigate any unconfined daemons found during the audit action.\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "cmd": "/bin/ps -eZ | /bin/egrep \"initrc\" | /bin/egrep -vw \"tr|ps|egrep|bash|awk\" | tr ':' ' ' | /bin/awk '{ print $NF }'",
        "expect": ""
    },
    "custom_item_21": {
        "system": "Linux",
        "description": "2.1.11 Remove xinetd",
        "info": "The eXtended InterNET Daemon (xinetd) is an open source super daemon that replaced the original inetd daemon. The xinetd daemon listens for well known services and dispatches the appropriate daemon to properly respond to service requests.\n\nRationale:\n\nIf there are no xinetd services required, it is recommended that the daemon be deleted from the system.",
        "solution": "Run the following commanf to remove xinetd:\n\n# yum erase xinetd\n\nDefault Value:\n\nOS Default: Not Installed",
        "reference": "800-171|3.4.9,800-53|CM-11,800-53r5|CM-11,CSCv7|2.6,CSF|DE.CM-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,LEVEL|2A,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "rpm": "xinetd-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_22": {
        "system": "Linux",
        "description": "4.2.3 Disable Secure ICMP Redirect Acceptance - net.ipv4.conf.all.secure_redirects = 0",
        "info": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.\n\nRationale:\n\nIt is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
        "solution": "Set the net.ipv4.conf.all.secure_redirects and net.ipv4.conf.default.secure_redirects parameters to 0 in /etc/sysctl.conf:\n\nnet.ipv4.conf.all.secure_redirects=0\nnet.ipv4.conf.default.secure_redirects=0\n\nRun the following commands to set the active kernel parameters:\n\n# /sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1\n\n\n\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.2,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/sysctl.conf",
        "regex": "^[\\\\s]*net\\.ipv4\\.conf\\.all\\.secure_redirects[\\\\s]*=",
        "expect": "^[\\\\s]*net\\.ipv4\\.conf\\.all\\.secure_redirects[\\\\s]*=[\\\\s]*0[\\\\s]*$"
    },
    "custom_item_23": {
        "system": "Linux",
        "description": "4.2.3 Disable Secure ICMP Redirect Acceptance - net.ipv4.conf.default.secure_redirects = 0",
        "info": "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.\n\nRationale:\n\nIt is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways.",
        "solution": "Set the net.ipv4.conf.all.secure_redirects and net.ipv4.conf.default.secure_redirects parameters to 0 in /etc/sysctl.conf:\n\nnet.ipv4.conf.all.secure_redirects=0\nnet.ipv4.conf.default.secure_redirects=0\n\nRun the following commands to set the active kernel parameters:\n\n# /sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.conf.default.secure_redirects=0\n# /sbin/sysctl -w net.ipv4.route.flush=1\n\n\n\n\nDefault Value:\n\nOS Default: No",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.2,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/sysctl.conf",
        "regex": "^[\\\\s]*net\\.ipv4\\.conf\\.default\\.secure_redirects[\\\\s]*=",
        "expect": "^[\\\\s]*net\\.ipv4\\.conf\\.default\\.secure_redirects[\\\\s]*=[\\\\s]*0[\\\\s]*$"
    },
    "custom_item_24": {
        "system": "Linux",
        "description": "4.2.7 Enable RFC-recommended Source Route Validation - net.ipv4.conf.all.rp_filter = 1",
        "info": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).\n\nRationale:\n\nSetting these flags is a good way to deter attackers from sending your server bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This is would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your server, you will not be able to enable this feature without breaking the routing.",
        "solution": "Set the net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter parameters to 1 in /etc/sysctl.conf:\n\nnet.ipv4.conf.all.rp_filter=1\nnet.ipv4.conf.default.rp_filter=1\n\nRun the following commands to set the active kernel parameters:\n\n# /sbin/sysctl -w net.ipv4.conf.all.rp_filter=1\n# /sbin/sysctl -w net.ipv4.conf.default.rp_filter=1\n# /sbin/sysctl -w net.ipv4.route.flush=1\n\nDefault Value:\n\nOS Default: Yes",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.2,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/sysctl.conf",
        "regex": "^[\\\\s]*net\\.ipv4\\.conf\\.all\\.rp_filter[\\\\s]*=",
        "expect": "^[\\\\s]*net\\.ipv4\\.conf\\.all\\.rp_filter[\\\\s]*=[\\\\s]*1[\\\\s]*$"
    },
    "custom_item_25": {
        "system": "Linux",
        "description": "4.2.7 Enable RFC-recommended Source Route Validation - net.ipv4.conf.default.rp_filter = 1",
        "info": "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set).\n\nRationale:\n\nSetting these flags is a good way to deter attackers from sending your server bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This is would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your server, you will not be able to enable this feature without breaking the routing.",
        "solution": "Set the net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter parameters to 1 in /etc/sysctl.conf:\n\nnet.ipv4.conf.all.rp_filter=1\nnet.ipv4.conf.default.rp_filter=1\n\nRun the following commands to set the active kernel parameters:\n\n# /sbin/sysctl -w net.ipv4.conf.all.rp_filter=1\n# /sbin/sysctl -w net.ipv4.conf.default.rp_filter=1\n# /sbin/sysctl -w net.ipv4.route.flush=1\n\nDefault Value:\n\nOS Default: Yes",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.2,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|2A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/sysctl.conf",
        "regex": "^[\\\\s]*net\\.ipv4\\.conf\\.default\\.rp_filter[\\\\s]*=",
        "expect": "^[\\\\s]*net\\.ipv4\\.conf\\.default\\.rp_filter[\\\\s]*=[\\\\s]*1[\\\\s]*$"
    },
    "custom_item_26": {
        "system": "Linux",
        "description": "5.3.1.1 Configure Audit Log Storage Size",
        "info": "Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.\n\nRationale:\n\nIt is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.",
        "solution": "Set the max\\_log\\_file parameter in /etc/audit/auditd.conf\n\nmax_log_file =Note: MB is the number of Megabytes the file can be.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2M,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*max_log_file[\\\\s]*",
        "expect": "^[\\\\s]*max_log_file[\\\\s]*=[\\\\s]*@LOG_FILE_SIZE@[\\\\s]*$"
    },
    "custom_item_27": {
        "system": "Linux",
        "description": "5.3.1.2 Disable System on Audit Log Full - space_left_action",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
        "solution": "Add or edit the following lines in the /etc/audit/auditd.conf file.\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2M,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)email(?-i)[\\\\s]*$"
    },
    "custom_item_28": {
        "system": "Linux",
        "description": "5.3.1.2 Disable System on Audit Log Full - action_mail_acct",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
        "solution": "Add or edit the following lines in the /etc/audit/auditd.conf file.\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2M,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*action_mail_acct[\\\\s]*",
        "expect": "^[\\\\s]*action_mail_acct[\\\\s]*=[\\\\s]*@EMAIL_ADDRESS@[\\\\s]*$"
    },
    "custom_item_29": {
        "system": "Linux",
        "description": "5.3.1.2 Disable System on Audit Log Full - admin_space_left_action",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\nRationale:\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",
        "solution": "Add or edit the following lines in the /etc/audit/auditd.conf file.\n\nspace_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2M,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*admin_space_left_action[\\\\s]*",
        "expect": "^[\\\\s]*admin_space_left_action[\\\\s]*=[\\\\s]*halt[\\\\s]*$"
    },
    "custom_item_30": {
        "system": "Linux",
        "description": "5.3.1.3 Keep All Auditing Information",
        "info": "Normally, auditd will hold 4 logs of maximum log file size before deleting older log files.\n\nRationale:\n\nIn high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.",
        "solution": "Add the following line to the /etc/audit/auditd.conf file.\n\nmax_log_file_action = keep_logs",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*",
        "expect": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*=[\\\\s]*(?i)keep_logs(?-i)[\\\\s]*$"
    },
    "custom_item_31": {
        "description": "5.3.2 Enable auditd Service",
        "info": "Turn on the auditd daemon to record system events.\n\nRationale:\n\nThe capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.",
        "solution": "Run the following command to enable auditd:\n\n# chkconfig auditd on\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|3.1,CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "service": "auditd",
        "levels": "2345"
    },
    "custom_item_32": {
        "system": "Linux",
        "description": "5.3.3 Keep All Auditing Information",
        "info": "Normally, auditd will hold 4 logs of maximum log file size before deleting older log files.\n\nRationale:\n\nIn hight security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.",
        "solution": "Add the following line to the /etc/audit/auditd.conf file.\n\nmax_log_file_action = keep_logs\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|6.3,CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*",
        "expect": "^[\\\\s]*(?i)max_log_file_action(?-i)[\\\\s]*=[\\\\s]*(?i)keep_logs(?-i)[\\\\s]*$"
    },
    "custom_item_33": {
        "system": "Linux",
        "description": "5.3.4 Enable Auditing for Processes That Start Prior to auditd",
        "info": "Configure grub so that processes that are capable of being audited can be audited even if they start up prior to auditd startup.\n\nRationale:\n\nAudit events need to be captured on processes that start up prior to auditd, so that potential malicious activity cannot go undetected.",
        "solution": "Run the following:\n\n# ed /etc/grub.conf << END\ng/kernel/s/$/ audit=1/\nw\nq\nEND\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/grub.conf",
        "regex": "^[\\\\s]*kernel[\\\\s]",
        "expect": "^[\\\\s]*kernel[\\\\s].*[\\\\s]audit[\\\\s]*=[\\\\s]*1"
    },
    "custom_item_34": {
        "system": "Linux",
        "description": "5.3.5 Record Events That Modify Date and Time Information - adjtimex",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock\\_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system data and/or time could be a sign of malicious activity on the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-S[\\\\s]+stime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_35": {
        "system": "Linux",
        "description": "5.3.5 Record Events That Modify Date and Time Information - clock_settime",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock\\_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system data and/or time could be a sign of malicious activity on the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_36": {
        "system": "Linux",
        "description": "5.3.5 Record Events That Modify Date and Time Information - time-change",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock\\_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system data and/or time could be a sign of malicious activity on the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/localtime[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/localtime[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_37": {
        "description": "OS is 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_38": {
        "system": "Linux",
        "description": "5.3.5 Record Events That Modify Date and Time Information - arch=b64 -S adjtimex",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock\\_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system data and/or time could be a sign of malicious activity on the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_39": {
        "system": "Linux",
        "description": "5.3.5 Record Events That Modify Date and Time Information - arch=b64 -S clock_settime",
        "info": "Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time, using timeval and timezone structures) stime (using seconds since 1/1/1970) or clock\\_settime (allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit record to the /var/log/audit.log file upon exit, tagging the records with the identifier 'time-change'\n\nRationale:\n\nUnexpected changes in system data and/or time could be a sign of malicious activity on the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_40": {
        "system": "Linux",
        "description": "5.3.6 Record Events That Modify User/Group Information - /etc/group",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier 'identity' in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/group[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/group[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_41": {
        "system": "Linux",
        "description": "5.3.6 Record Events That Modify User/Group Information - /etc/passwd",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier 'identity' in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/passwd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/passwd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_42": {
        "system": "Linux",
        "description": "5.3.6 Record Events That Modify User/Group Information - /etc/gshadow",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier 'identity' in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/gshadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/gshadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_43": {
        "system": "Linux",
        "description": "5.3.6 Record Events That Modify User/Group Information - /etc/shadow",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier 'identity' in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/shadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/shadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_44": {
        "system": "Linux",
        "description": "5.3.6 Record Events That Modify User/Group Information - /etc/security/opasswd",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or /etc/security/opasswd (old passwords, based on remember parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier 'identity' in the audit log file.\n\nRationale:\n\nUnexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/security\\\\/opasswd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/security\\\\/opasswd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_45": {
        "system": "Linux",
        "description": "5.3.7 Record Events That Modify the System's Network Environment - arch=b32 -S sethostname",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_46": {
        "system": "Linux",
        "description": "5.3.7 Record Events That Modify the System's Network Environment - /etc/issue",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_47": {
        "system": "Linux",
        "description": "5.3.7 Record Events That Modify the System's Network Environment - /etc/issue.net",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue\\.net[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue\\.net[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_48": {
        "system": "Linux",
        "description": "5.3.7 Record Events That Modify the System's Network Environment - /etc/hosts",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/hosts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/hosts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_49": {
        "system": "Linux",
        "description": "5.3.7 Record Events That Modify the System's Network Environment - /etc/sysconfig/network",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/sysconfig\\\\/network[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/sysconfig\\\\/network[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_50": {
        "description": "OS is 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_51": {
        "system": "Linux",
        "description": "5.3.7 Record Events That Modify the System's Network Environment - arch=b64 -S sethostname",
        "info": "Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system calls, and write an audit event on system call exit. The other parameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-login), /etc/hosts (file containing host names and associated IP addresses) and /etc/sysconfig/network (directory containing network interface scripts and configurations) files.\n\nRationale:\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to host and domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The /etc/hosts file is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring /etc/sysconfig/network is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/sysconfig/network -p wa -k system-locale\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_52": {
        "system": "Linux",
        "description": "5.3.8 Record Events That Modify the System's Mandatory Access Controls - /etc/selinux/",
        "info": "Monitor SELinux mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the /etc/selinux directory.\n\nRationale:\n\nChanges to files in this directory could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.",
        "solution": "Add the following line to the /etc/audit/audit.rules file.\n\n-w /etc/selinux/ -p wa -k MAC-policy\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/selinux/[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/selinux/[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+MAC-policy[\\\\s]*$"
    },
    "custom_item_53": {
        "system": "Linux",
        "description": "5.3.9 Collect Login and Logout Events - /var/log/faillog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains a tally of failed logins associated with programs that use pam for authentication and have the pam_tally2.so module configured. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp. All audit records will be tagged with the identifier 'logins.'\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n-w /var/log/btmp -p wa -k session\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.1.2,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AU-3,800-53r5|AC-2(12),800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|AU-3,LEVEL|2A,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/faillog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/faillog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_54": {
        "system": "Linux",
        "description": "5.3.9 Collect Login and Logout Events - /var/log/lastlog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains a tally of failed logins associated with programs that use pam for authentication and have the pam_tally2.so module configured. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp. All audit records will be tagged with the identifier 'logins.'\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n-w /var/log/btmp -p wa -k session\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.1.2,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AU-3,800-53r5|AC-2(12),800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|AU-3,LEVEL|2A,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/lastlog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/lastlog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_55": {
        "system": "Linux",
        "description": "5.3.9 Collect Login and Logout Events - /var/log/tallylog",
        "info": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains a tally of failed logins associated with programs that use pam for authentication and have the pam_tally2.so module configured. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp. All audit records will be tagged with the identifier 'logins.'\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n-w /var/log/btmp -p wa -k session\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.1.2,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AU-3,800-53r5|AC-2(12),800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|AU-3,LEVEL|2A,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/tallylog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/tallylog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_56": {
        "system": "Linux",
        "description": "5.3.9 Collect Login and Logout Events - /var/log/btmp",
        "info": "Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file /var/log/faillog tracks failed events from login. The file /var/log/lastlog maintain records of the last time a user successfully logged in. The file /var/log/tallylog maintains a tally of failed logins associated with programs that use pam for authentication and have the pam_tally2.so module configured. The file /var/log/btmp keeps track of failed login attempts and can be read by entering the command /usr/bin/last -f /var/log/btmp. All audit records will be tagged with the identifier 'logins.'\n\nRationale:\n\nMonitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n-w /var/log/btmp -p wa -k session\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.1.2,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AU-3,800-53r5|AC-2(12),800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|AU-3,LEVEL|2A,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/btmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/btmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_57": {
        "system": "Linux",
        "description": "5.3.10 Collect Session Initiation Information - /var/run/utmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. The /var/log/wtmp file tracks logins, logouts, shutdown and reboot events. All audit records will be tagged with the identifier 'session.'\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nNote: Use the last command to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.1.2,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AU-3,800-53r5|AC-2(12),800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|AU-3,LEVEL|2A,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/run/utmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/run/utmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_58": {
        "system": "Linux",
        "description": "5.3.10 Collect Session Initiation Information - /var/log/wtmp",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file /var/run/utmp file tracks all currently logged in users. The /var/log/wtmp file tracks logins, logouts, shutdown and reboot events. All audit records will be tagged with the identifier 'session.'\n\nRationale:\n\nMonitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nNote: Use the last command to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.1.2,800-171|3.3.1,800-171|3.3.2,800-53|AC-2(12),800-53|AU-3,800-53r5|AC-2(12),800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|4.9,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,ITSG-33|AU-3,LEVEL|2A,NESA|M5.3.1,NESA|T3.6.2,NIAv2|AM28,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|NS5j,NIAv2|SS14e,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/wtmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/wtmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_59": {
        "system": "Linux",
        "description": "5.3.11 Collect Discretionary Access Control Permission Modification Events - arch=b32 fchmodat",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters inn this section track changes for system calls that affect file permissions and attributes. The chmod, fchmod and fchmodat system calls affect the permissions associated with a file. The chown, fchown, fchownat and lchown system calls affect owner and group attributes on a file. The setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr, lremovexattr, fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system userids (auid >= 500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier 'perm_mod.'\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_60": {
        "system": "Linux",
        "description": "5.3.11 Collect Discretionary Access Control Permission Modification Events - arch=b32 fchownat",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters inn this section track changes for system calls that affect file permissions and attributes. The chmod, fchmod and fchmodat system calls affect the permissions associated with a file. The chown, fchown, fchownat and lchown system calls affect owner and group attributes on a file. The setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr, lremovexattr, fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system userids (auid >= 500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier 'perm_mod.'\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_61": {
        "system": "Linux",
        "description": "5.3.11 Collect Discretionary Access Control Permission Modification Events - arch=b32 fsetxattr",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters inn this section track changes for system calls that affect file permissions and attributes. The chmod, fchmod and fchmodat system calls affect the permissions associated with a file. The chown, fchown, fchownat and lchown system calls affect owner and group attributes on a file. The setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr, lremovexattr, fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system userids (auid >= 500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier 'perm_mod.'\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_62": {
        "description": "OS is 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_63": {
        "system": "Linux",
        "description": "5.3.11 Collect Discretionary Access Control Permission Modification Events - arch=b64 fchmodat",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters inn this section track changes for system calls that affect file permissions and attributes. The chmod, fchmod and fchmodat system calls affect the permissions associated with a file. The chown, fchown, fchownat and lchown system calls affect owner and group attributes on a file. The setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr, lremovexattr, fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system userids (auid >= 500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier 'perm_mod.'\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_64": {
        "system": "Linux",
        "description": "5.3.11 Collect Discretionary Access Control Permission Modification Events - arch=b64 fchownat",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters inn this section track changes for system calls that affect file permissions and attributes. The chmod, fchmod and fchmodat system calls affect the permissions associated with a file. The chown, fchown, fchownat and lchown system calls affect owner and group attributes on a file. The setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr, lremovexattr, fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system userids (auid >= 500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier 'perm_mod.'\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_65": {
        "system": "Linux",
        "description": "5.3.11 Collect Discretionary Access Control Permission Modification Events - arch=b64 fsetxattr",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters inn this section track changes for system calls that affect file permissions and attributes. The chmod, fchmod and fchmodat system calls affect the permissions associated with a file. The chown, fchown, fchownat and lchown system calls affect owner and group attributes on a file. The setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr, lremovexattr, fremovexattr (remove extended file attributes) control extended file attributes. In all cases, an audit record will only be written for non-system userids (auid >= 500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged with the identifier 'perm_mod.'\n\nRationale:\n\nMonitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_66": {
        "system": "Linux",
        "description": "5.3.12 Collect Unsuccessful Unauthorized Access Attempts to Files - arch=b32 EACCES",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation (creat), opening (open, openat) and truncation (truncate, ftruncate) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier 'access.'\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_67": {
        "system": "Linux",
        "description": "5.3.12 Collect Unsuccessful Unauthorized Access Attempts to Files - arch=b32 EPERM",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation (creat), opening (open, openat) and truncation (truncate, ftruncate) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier 'access.'\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_68": {
        "description": "OS is 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_69": {
        "system": "Linux",
        "description": "5.3.12 Collect Unsuccessful Unauthorized Access Attempts to Files - arch=b64 EACCES",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation (creat), opening (open, openat) and truncation (truncate, ftruncate) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier 'access.'\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_70": {
        "system": "Linux",
        "description": "5.3.12 Collect Unsuccessful Unauthorized Access Attempts to Files - arch=b64 EPERM",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation (creat), opening (open, openat) and truncation (truncate, ftruncate) of files. An audit log record will only be written if the user is a non-privileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the identifier 'access.'\n\nRationale:\n\nFailed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|14.9,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid=>500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid=>500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_71": {
        "system": "Linux",
        "description": "5.3.13 Collect Use of Privileged Commands",
        "info": "Monitor privileged programs (thos that have the setuid and/or setgid bit set on execution) to determine if unprivileged users are running these commands.\n\nRationale:\n\nExecution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "To remediate this issue, the system administrator will have to execute a find command to locate all the privileged programs and then add an audit line for each one of them.\nThe audit parameters associated with this are as follows:\n\n-F path=' $1 '- will populate each file name found through the find command and processed by awk.\n\n-F perm=x - will write an audit record if the file is executed.\n\n-F auid>=500 - will write a record if the user executing the command is not a privileged user.\n\n-F auid!= 4294967295 - will ignore Daemon events\n\nAll audit records should be tagged with the identifier 'privileged'.\nRun the following command replacing with a list of partitions where programs can be executed from on your system:\n\n# find-xdev \\( -perm -4000 -o -perm -2000 \\) -type f | awk '{print '-a always,exit -F path=' $1 ' -F perm=x -F auid>=''$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)'' -F auid!=4294967295 -k privileged' }'\n\nEdit the /etc/audit/audit.rules file.\nExample:\n\n# find / -xdev \\( -perm -4000 -o -perm -2000 \\) -type f | awk '{print '-a always,exit -F path=' $1 ' -F perm=x -F auid>=''$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)'' -F auid!=4294967295 -k privileged' }' >> /etc/audit/audit.rules\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "cmd": "/usr/bin/find / -xdev \\\\( -perm -4000 -o -perm -2000 \\\\) -type f | awk '{print \"-a always,exit -F path=\" $1 \" -F perm=x -F auid>='\"$(awk '/^\\s*UID_MIN/{print $2}' /etc/login.defs)\"' -F auid!=4294967295 -k privileged\" }' | /usr/bin/awk \\'{print} END {if (NR == 0) print \"none\"}\\'",
        "expect": "^none$"
    },
    "custom_item_72": {
        "system": "Linux",
        "description": "5.3.14 Collect Successful File System Mounts - arch=b32",
        "info": "Monitor the use of the mount system call. The mount (and umount) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open, creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.\n\n**Note:**This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS)",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_73": {
        "description": "OS is 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_74": {
        "system": "Linux",
        "description": "5.3.14 Collect Successful File System Mounts - arch=b64",
        "info": "Monitor the use of the mount system call. The mount (and umount) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user\n\nRationale:\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While tracking mount commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful open, creat and truncate system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.\n\n**Note:**This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write (e.g. CD ROMS)",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_75": {
        "system": "Linux",
        "description": "5.3.15 Collect File Deletion Events by User - arch=b32",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier 'delete'.\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",
        "solution": "At a minimum, configure the audit system to collect file deletion events for all users and root.\nFor 64 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_76": {
        "description": "OS is 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^x86_64$"
    },
    "custom_item_77": {
        "system": "Linux",
        "description": "5.3.15 Collect File Deletion Events by User - arch=b64",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the unlink (remove a file), unlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file attribute) system calls and tags them with the identifier 'delete'.\n\nRationale:\n\nMonitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",
        "solution": "At a minimum, configure the audit system to collect file deletion events for all users and root.\nFor 64 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nFor 32 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_78": {
        "system": "Linux",
        "description": "5.3.16 Collect Changes to System Administration Scope (sudoers)",
        "info": "Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the sudo command to execute privileged commands, it is possible to monitor changes in scope. The file /etc/sudoers will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier 'scope.'\n\nRationale:\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/sudoers -p wa -k scope\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/sudoers[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/sudoers[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$"
    },
    "custom_item_79": {
        "system": "Linux",
        "description": "5.3.17 Collect System Administrator Actions (sudolog)",
        "info": "Monitor the sudo log file. If the system has been properly configured to disable the use of the su command and force all administrators to have to log in first and then use sudo to execute privileged commands, then all administrator commands will be logged to /var/log/sudo.log. Any time a command is executed, an audit event will be triggered as the /var/log/sudo.log file will be opened for write and the executed administration command will be written to the log.\n\nRationale:\n\nChanges in /var/log/sudo.log indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to /var/log/sudo.log to verify if unauthorized commands have been executed.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/sudo.log -p wa -k actions\n\nExecute the following command to restart auditd\n\n# pkill -P 1-HUP auditd\n\nNote: The system must be configured with su disabled (See Item 7.6 Restrict Access to the su Command) to force all command execution through sudo. This will not be effective on the console, as administrators can log in as root.\n\n\n\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/sudo\\.log[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/sudo\\.log[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+actions[\\\\s]*$"
    },
    "custom_item_80": {
        "system": "Linux",
        "description": "5.3.18 Collect Kernel Module Loading and Unloading - /sbin/insmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete\\_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of 'modules'.\n\nRationale:\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -S init_module -S delete_module -k modules\n\n\n\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/insmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/insmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_81": {
        "system": "Linux",
        "description": "5.3.18 Collect Kernel Module Loading and Unloading - /sbin/rmmod",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete\\_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of 'modules'.\n\nRationale:\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -S init_module -S delete_module -k modules\n\n\n\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/rmmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/rmmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_82": {
        "system": "Linux",
        "description": "5.3.18 Collect Kernel Module Loading and Unloading - /sbin/modprobe",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete\\_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of 'modules'.\n\nRationale:\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -S init_module -S delete_module -k modules\n\n\n\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/modprobe[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/modprobe[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_83": {
        "system": "Linux",
        "description": "5.3.18 Collect Kernel Module Loading and Unloading - init_module",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a kernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated program to load and unload modules, as well as some other features) control loading and unloading of modules. The init_module (load a module) and delete\\_module (delete a module) system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of 'modules'.\n\nRationale:\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the init_module and delete_module system calls would reflect an unauthorized user attempting to use a different program to load and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n-a always,exit -S init_module -S delete_module -k modules\n\n\n\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv7|5.5,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_84": {
        "system": "Linux",
        "description": "5.3.19 Make the Audit Configuration Immutable - -e 2",
        "info": "Set system audit so that audit rules cannot be modified with auditctl. Setting the flag '-e 2' forces audit to be put in immutable mode. Audit changes can only be made on system reboot.\n\nRationale:\n\nIn immutable mode, unauthorized users cannot execute changes to the audit system to potential hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-e 2\n\nNote: This must be the last entry in the /etc/audit/audit.rules file\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|3.1,CSCv7|6.2,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|2A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "cmd": "/usr/bin/strings /etc/audit/audit.rules | /usr/bin/tail -1",
        "expect": "^[\\\\s]*-e[\\\\s]+2[\\\\s]*$"
    },
    "custom_item_85": {
        "description": "6.1.1 Enable anacron Daemon",
        "info": "The anacron daemon is used on systems that are not up 24x7. The anacron daemon will execute jobs that would have normally been run had the system not been down\n\nRationale:\n\nCron jobs may include critical security or administrative functions that need to run on a regular basis. Use this daemon on machines that are not up 24x7, or if there are jobs that need to be executed after the system has been brought back up after a maintenance window.",
        "solution": "Run the following command:\n\n# chkconfig anacron on\n\nNote: NSA Guidance recommends disabling anacron for systems that are intended to be up 24X7, with the rationale that unnecessary software should be disabled to reduce risk. However, even systems that are designed to be up at all times can experience downtime that could prevent important system maintenance jobs from running. Review the requirements for your site to determine your appropriate risk level.\n\nDefault Value:\n\nOS Default: Enabled",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|2A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "service": "anacron",
        "levels": "2345"
    },
    "custom_item_86": {
        "description": "6.3.6 Remove the pam_ccreds Package",
        "info": "The pam_ccreds module provides the ability for Linux users to locally authenticate using an enterprise identity when the network is unavailable.\n\nRationale:\n\nWhile cached credentials provide flexibility in allowing enterprise users to authenticate when not attached to the network, it provides attackers with the ability of compromising those credentials if they've compromised the system.",
        "solution": "Run the following command to remove pam_ccreds:\n\n# yum erase pam_ccreds\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.4.9,800-53|CM-11,800-53r5|CM-11,CSCv7|2.6,CSF|DE.CM-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.6.2,LEVEL|2A,QCSC-v1|8.2.1,SWIFT-CSCv1|5.1",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "rpm": "pam_ccreds-0.0.0-0",
        "operator": "lt"
    },
    "custom_item_87": {
        "system": "Linux",
        "description": "9.1.1 Verify System File Permissions",
        "info": "The RPM package manager has a number of useful options. One of these, the -V (or -verify) option, can be used to verify that system packages are correctly installed. The -V option can be used to verify a particular package or to verify all system packages (-Va). If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option:\n\nCode Meaning\n\nS - File size differs.\n\nM - File mode differs (includes permissions and file type).\n\n5 - The MD5 checksum differs.\n\nD - The major and minor version numbers differ on a device file.\n\nL - A mismatch occurs in a link.\n\nU - The file ownership differs.\n\nG - The file group owner differs.\n\nT - The file time (mtime) differs.\n\nThe rpm -qf command can be used to determine which package a particular file belongs to. For example the following command determines which package the /etc/passwd file belongs to:\n\n# rpm -qf /etc/passwd\n\n\n\nsetup-2.5.58-7.el5\n\nTo verify the settings for the package that controls the /etc/passwd file, run the following:\n\n# rpm -V setup-2.5.58-7.el5\n\n\n\n.M...... c /etc/passwd\n\nS.5....T c /etc/printcap\n\n\n\n\nNote that you can feed the output of the rpm -qf command to the rpm -V command:\n\n# rpm -V $(rpm -qf /etc/passwd)\n\n.M...... c /etc/passwd\n\nS.5....T c /etc/printcap\n\nRationale:\n\nIt is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor.\n\nNote: Since packages and important files may change with new updates and releases, it is recommended to verify everything, not just a finite list of files. This can be a time consuming task and is therefore not a scorable benchmark item, but is provided for those interested in additional security measures.",
        "solution": "Correct any discrepancies found and rerun the command until output is clean or risk is mitigated or accepted.\n\nDefault Value:\n\nOS Default: N/A",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|2M,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/3096",
        "cmd": "/bin/rpm -Va --nomtime --nosize --nomd5 --nolinkto | /usr/bin/awk \\'{print} END {if (NR == 0) print \"none\"}\\'",
        "expect": "^none$"
    }
}