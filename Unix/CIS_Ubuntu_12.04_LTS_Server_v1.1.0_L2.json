{
    "custom_item_1": {
        "description": "Ubuntu 12.04 is installed",
        "file": "/etc/lsb-release",
        "regex": "^[\\\\s]*DISTRIB_RELEASE[\\\\s]*=",
        "expect": "^[\\\\s]*DISTRIB_RELEASE[\\\\s]*=[\\\\s]*@PLATFORM_VERSION@[\\\\s]*$"
    },
    "custom_item_2": {
        "system": "Linux",
        "description": "2.18 Disable Mounting of cramfs Filesystems",
        "info": "The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small\nfootprint systems. A cramfs image can be used without having to first decompress the\nimage.\n\n*Rationale*\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the\nserver. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line-install cramfs /bin/true",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2NS,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/modprobe.d/CIS.conf",
        "regex": "^[\\\\s]*install[\\\\s]+cramfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+cramfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_3": {
        "system": "Linux",
        "description": "2.19 Disable Mounting of freevxfs Filesystems",
        "info": "The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the\nprimary filesystem type for HP-UX operating systems.\n\n*Rationale*\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the\nserver. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line-install freevxfs /bin/true",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2NS,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/modprobe.d/CIS.conf",
        "regex": "^[\\\\s]*install[\\\\s]+freevxfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+freevxfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_4": {
        "system": "Linux",
        "description": "2.20 Disable Mounting of jffs2 Filesystems",
        "info": "The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem used\nin flash memory devices.\n\n*Rationale*\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the\nserver. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line-\ninstall jffs2 /bin/true",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2NS,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/modprobe.d/CIS.conf",
        "regex": "^[\\\\s]*install[\\\\s]+jffs2[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+jffs2[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_5": {
        "system": "Linux",
        "description": "2.21 Disable Mounting of hfs Filesystems",
        "info": "The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS\nfilesystems.\n\n*Rationale*\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the\nserver. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line-install hfs /bin/true",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2NS,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/modprobe.d/CIS.conf",
        "regex": "^[\\\\s]*install[\\\\s]+hfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+hfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_6": {
        "system": "Linux",
        "description": "2.22 Disable Mounting of hfsplus Filesystems",
        "info": "The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that allows\nyou to mount Mac OS filesystems.\n\n*Rationale*\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the\nserver. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line-install hfsplus /bin/true",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2NS,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/modprobe.d/CIS.conf",
        "regex": "^[\\\\s]*install[\\\\s]+hfsplus[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+hfsplus[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_7": {
        "system": "Linux",
        "description": "2.23 Disable Mounting of squashfs Filesystems",
        "info": "The squashfs filesystem type is a compressed read-only Linux filesystem embedded in\nsmall footprint systems (similar to cramfs). A squashfs image can be used without having to\nfirst decompress the image.\n\n*Rationale*\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the\nserver. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line-install squashfs /bin/true",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2NS,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/modprobe.d/CIS.conf",
        "regex": "^[\\\\s]*install[\\\\s]+squashfs[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+squashfs[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_8": {
        "system": "Linux",
        "description": "2.24 Disable Mounting of udf Filesystems",
        "info": "The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and\nECMA-167 specifications. This is an open vendor filesystem type for data storage on a\nbroad range of media. This filesystem type is necessary to support writing DVDs and newer\noptical disc formats.\n\n*Rationale*\n\nRemoving support for unneeded filesystem types reduces the local attack surface of the\nserver. If this filesystem type is not needed, disable it.",
        "solution": "Edit or create the file /etc/modprobe.d/CIS.conf and add the following line-install udf /bin/true",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2NS,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/modprobe.d/CIS.conf",
        "regex": "^[\\\\s]*install[\\\\s]+udf[\\\\s]",
        "expect": "^[\\\\s]*install[\\\\s]+udf[\\\\s]+/bin/true[\\\\s]*$"
    },
    "custom_item_9": {
        "system": "Linux",
        "description": "4.5 Activate AppArmor - '0 profiles in complain mode'",
        "info": "AppArmor provides a Mandatory Access Control (MAC) system that greatly augments the\ndefault Discretionary Access Control (DAC) model.\n\n*Rationale*\n\nFor an action to occur, both the traditional DAC permissions must be satisfied as well as the\nAppArmor MAC rules. The action will not be allowed if either one of these models does not\npermit the action. In this way, AppArmor rules can only make a system's permissions more\nrestrictive and secure.",
        "solution": "Install apparmor and apparmor-utils if missing (additional profiles can be found in the\napparmor-profiles package)-# apt-get install apparmor apparmor-utilsRemove apparmor=0 from all kernels in /boot/grub/menu.lst-kernel /boot/vmlinuz-3.0.80-0.7-ec2 root=/dev/sda1 xencons=xvc0 console=xvc0\nsplash=silent showoptsSet all profiles to enforce mode-# aa-enforce /etc/apparmor.d/*Any unconfined processes may need to have a profile created or activated for them and\nthen be restarted.",
        "reference": "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53r5|AC-3(3),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,PCI-DSSv3.2.1|7.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "cmd": "/usr/sbin/apparmor_status",
        "expect": "0[\\\\s]+profiles[\\\\s]+are[\\\\s]+in[\\\\s]+complain[\\\\s]+mode"
    },
    "custom_item_10": {
        "system": "Linux",
        "description": "4.5 Activate AppArmor - '0 processes unconfined'",
        "info": "AppArmor provides a Mandatory Access Control (MAC) system that greatly augments the\ndefault Discretionary Access Control (DAC) model.\n\n*Rationale*\n\nFor an action to occur, both the traditional DAC permissions must be satisfied as well as the\nAppArmor MAC rules. The action will not be allowed if either one of these models does not\npermit the action. In this way, AppArmor rules can only make a system's permissions more\nrestrictive and secure.",
        "solution": "Install apparmor and apparmor-utils if missing (additional profiles can be found in the\napparmor-profiles package)-# apt-get install apparmor apparmor-utilsRemove apparmor=0 from all kernels in /boot/grub/menu.lst-kernel /boot/vmlinuz-3.0.80-0.7-ec2 root=/dev/sda1 xencons=xvc0 console=xvc0\nsplash=silent showoptsSet all profiles to enforce mode-# aa-enforce /etc/apparmor.d/*Any unconfined processes may need to have a profile created or activated for them and\nthen be restarted.",
        "reference": "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53r5|AC-3(3),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,PCI-DSSv3.2.1|7.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "cmd": "/usr/sbin/apparmor_status",
        "expect": "0[\\\\s]+processes[\\\\s]+are[\\\\s]+unconfined"
    },
    "custom_item_11": {
        "system": "Linux",
        "description": "4.5 Activate AppArmor - 'Profiles are loaded' - Review",
        "info": "AppArmor provides a Mandatory Access Control (MAC) system that greatly augments the\ndefault Discretionary Access Control (DAC) model.\n\n*Rationale*\n\nFor an action to occur, both the traditional DAC permissions must be satisfied as well as the\nAppArmor MAC rules. The action will not be allowed if either one of these models does not\npermit the action. In this way, AppArmor rules can only make a system's permissions more\nrestrictive and secure.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Install apparmor and apparmor-utils if missing (additional profiles can be found in the\napparmor-profiles package)-# apt-get install apparmor apparmor-utilsRemove apparmor=0 from all kernels in /boot/grub/menu.lst-kernel /boot/vmlinuz-3.0.80-0.7-ec2 root=/dev/sda1 xencons=xvc0 console=xvc0\nsplash=silent showoptsSet all profiles to enforce mode-# aa-enforce /etc/apparmor.d/*Any unconfined processes may need to have a profile created or activated for them and\nthen be restarted.",
        "reference": "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53r5|AC-3(3),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,PCI-DSSv3.2.1|7.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "cmd": "/usr/sbin/apparmor_status",
        "expect": ""
    },
    "custom_item_12": {
        "system": "Linux",
        "description": "8.1.1.1 Configure Audit Log Storage Size",
        "info": "NOTE: Update LOG_FILE_SIZE with the appropriate value forthe local environment.",
        "solution": "Set the max_log_file parameter in /etc/audit/auditd.confmax_log_file =Note- MB is the number of MegaBytes the file can be.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|2NS,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*max_log_file[\\\\s]*=",
        "expect": "^[\\\\s]*max_log_file[\\\\s]*=[\\\\s]*@LOG_FILE_SIZE@[\\\\s]*$"
    },
    "custom_item_13": {
        "system": "Linux",
        "description": "8.1.1.2 Disable System on Audit Log Full- 'space_left_action = email'",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\n*Rationale*\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation\nexceeds the benefit of the system's availability.",
        "solution": "Add the following lines to the /etc/audit/auditd.conf file.space_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-171|3.3.4,800-53|AU-5(1),800-53|AU-5(4),800-53r5|AU-5(1),800-53r5|AU-5(4),CN-L3|7.1.3.3(e),CN-L3|7.1.3.7(e),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5(1),ITSG-33|AU-5(4),LEVEL|2NS,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.3.2",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*",
        "expect": "^[\\\\s]*(?i)space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)email(?-i)[\\\\s]*$"
    },
    "custom_item_14": {
        "system": "Linux",
        "description": "8.1.1.2 Disable System on Audit Log Full - 'action_mail_acct is configured'",
        "info": "NOTE: Update EMAIL_ADDRESS with the appropriate value forthe local environment.",
        "solution": "Add the following lines to the /etc/audit/auditd.conf file.space_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-171|3.3.4,800-53|AU-5,800-53r5|AU-5,CN-L3|7.1.3.3(e),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5,LEVEL|2NS,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*action_mail_acct[\\\\s]*=",
        "expect": "^[\\\\s]*action_mail_acct[\\\\s]*=[\\\\s]*@EMAIL_ADDRESS@[\\\\s]*$"
    },
    "custom_item_15": {
        "system": "Linux",
        "description": "8.1.1.2 Disable System on Audit Log Full - 'admin_space_left_action = halt'",
        "info": "The auditd daemon can be configured to halt the system when the audit logs are full.\n\n*Rationale*\n\nIn high security contexts, the risk of detecting unauthorized access or nonrepudiation\nexceeds the benefit of the system's availability.",
        "solution": "Add the following lines to the /etc/audit/auditd.conf file.space_left_action = email\naction_mail_acct = root\nadmin_space_left_action = halt",
        "reference": "800-171|3.3.4,800-53|AU-5(1),800-53|AU-5(4),800-53r5|AU-5(1),800-53r5|AU-5(4),CN-L3|7.1.3.3(e),CN-L3|7.1.3.7(e),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5(1),ITSG-33|AU-5(4),LEVEL|2NS,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,TBA-FIISB|37.3.2",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*(?i)admin_space_left_action(?-i)[\\\\s]*=",
        "expect": "^[\\\\s]*(?i)admin_space_left_action(?-i)[\\\\s]*=[\\\\s]*(?i)halt(?-i)[\\\\s]*$"
    },
    "custom_item_16": {
        "system": "Linux",
        "description": "8.1.1.3 Keep All Auditing Information",
        "info": "Normally, auditd will hold 4 logs of maximum log file size before deleting older log files.\n\n*Rationale*\n\nIn high security contexts, the benefits of maintaining a long audit history exceed the cost of\nstoring the audit history.",
        "solution": "Add the following line to the /etc/audit/auditd.conf file.max_log_file_action = keep_logs",
        "reference": "800-171|3.3.4,800-53|AU-5,800-53r5|AU-5,CN-L3|7.1.3.3(e),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-5,LEVEL|2S,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/auditd.conf",
        "regex": "^[\\\\s]*max_log_file_action[\\\\s]*=",
        "expect": "^[\\\\s]*max_log_file_action[\\\\s]*=[\\\\s]*[Kk][Ee][Ee][Pp]_[Ll][Oo][Gg][Ss][\\\\s]*$"
    },
    "custom_item_17": {
        "system": "Linux",
        "description": "8.1.2 Install and Enable auditd Service",
        "info": "Install and turn on the auditd daemon to record system events.\n\n*Rationale*\n\nThe capturing of system events provides system administrators with information to allow\nthem to determine if unauthorized access to their system is occurring.",
        "solution": "Install auditd-# apt-get install auditdIf needed create proper start links for auditd in /etc/rc*.d by running the following command\nfrom each of the relevant directories-# ln -s ../init.d/auditd S37auditdStart links should be created for run levels 2, 3, 4, and 5.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53|AU-12c.,800-53r5|AU-12a.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12a.,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "cmd": "/usr/bin/dpkg -s auditd 2>&1",
        "expect": "install[\\\\s]+ok[\\\\s]+installed"
    },
    "custom_item_18": {
        "system": "Linux",
        "description": "8.1.3 Enable Auditing for Processes That Start Prior to auditd",
        "info": "Configure grub or lilo so that processes that are capable of being audited can be audited\neven if they start up prior to auditd startup.\n\n*Rationale*\n\nAudit events need to be captured on processes that start up prior to auditd, so that\npotential malicious activity cannot go undetected.",
        "solution": "Edit /etc/default/grub to include audit=1 as part of GRUB_CMDLINE_LINUX-GRUB_CMDLINE_LINUX='audit=1'And run the following command to update the grub configuration-# update-grub",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/default/grub",
        "regex": "^[\\\\s]*GRUB_CMDLINE_LINUX[\\\\s]*=",
        "expect": "^[\\\\s]*GRUB_CMDLINE_LINUX[\\\\s]*=[\\\\s]*\"audit[\\\\s]*=[\\\\s]*1\""
    },
    "custom_item_19": {
        "system": "Linux",
        "description": "8.1.4 Record Events That Modify Date and Time Information- '32bit adjtimex'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time,\nusing timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier 'time-change'\n\n*Rationale*\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-S[\\\\s]+stime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_20": {
        "system": "Linux",
        "description": "8.1.4 Record Events That Modify Date and Time Information- '32bit clock_settime'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time,\nusing timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier 'time-change'\n\n*Rationale*\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_21": {
        "system": "Linux",
        "description": "8.1.4 Record Events That Modify Date and Time Information- 'time-change'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\nthis section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time,\nusing timeval and timezone structures) stime (using seconds since 1/1/1970) or\nclock_settime (allows for the setting of several internal clocks and timers) system calls\nhave been executed and always write an audit record to the /var/log/audit.log file upon\nexit, tagging the records with the identifier 'time-change'\n\n*Rationale*\n\nUnexpected changes in system date and/or time could be a sign of malicious activity on the\nsystem.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b64 -S clock_settime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n-a always,exit -F arch=b32 -S clock_settime -k time-change\n-w /etc/localtime -p wa -k time-change\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/localtime[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/localtime[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_22": {
        "system": "Linux",
        "description": "8.1.5 Record Events That Modify User/Group Information - '/etc/group'",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier 'identity' in the audit log file.\n\n*Rationale*\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/group[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/group[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_23": {
        "system": "Linux",
        "description": "8.1.5 Record Events That Modify User/Group Information - '/etc/passwd'",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier 'identity' in the audit log file.\n\n*Rationale*\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/passwd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/passwd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_24": {
        "system": "Linux",
        "description": "8.1.5 Record Events That Modify User/Group Information - '/etc/gshadow'",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier 'identity' in the audit log file.\n\n*Rationale*\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/gshadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/gshadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_25": {
        "system": "Linux",
        "description": "8.1.5 Record Events That Modify User/Group Information- '/etc/shadow'",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier 'identity' in the audit log file.\n\n*Rationale*\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/shadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/shadow[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_26": {
        "system": "Linux",
        "description": "8.1.5 Record Events That Modify User/Group Information- '/etc/security/opasswd'",
        "info": "Record events affecting the group, passwd (user IDs), shadow and gshadow (passwords) or\n/etc/security/opasswd (old passwords, based on remember parameter in the PAM\nconfiguration) files. The parameters in this section will watch the files to see if they have\nbeen opened for write or have had attribute changes (e.g. permissions) and tag them with\nthe identifier 'identity' in the audit log file.\n\n*Rationale*\n\nUnexpected changes to these files could be an indication that the system has been\ncompromised and that an unauthorized user is attempting to hide their activities or\ncompromise additional accounts.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /etc/group -p wa -k identity\n-w /etc/passwd -p wa -k identity\n-w /etc/gshadow -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/security/opasswd -p wa -k identity\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/security\\\\/opasswd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/security\\\\/opasswd[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+identity[\\\\s]*$"
    },
    "custom_item_27": {
        "system": "Linux",
        "description": "8.1.6 Record Events That Modify the System's Network Environment- '32bit sethostname'",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/network (directory containing network interface scripts and configurations) files.\n\n*Rationale*\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to\nhost and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored for\nchanges in the file that can indicate an unauthorized intruder is trying to change machine\nassociations with IP addresses and trick users and processes into connecting to unintended\nmachines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put\ndisinformation into those files and trick users into providing information to the intruder.\nMonitoring /etc/network is important as it can show if network interfaces or scripts are\nbeing modified in a way that can lead to the machine becoming unavailable or\ncompromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+(exit,always|always,exit)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+(exit,always|always,exit)[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_28": {
        "system": "Linux",
        "description": "8.1.6 Record Events That Modify the System's Network Environment- '/etc/issue'",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/network (directory containing network interface scripts and configurations) files.\n\n*Rationale*\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to\nhost and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored for\nchanges in the file that can indicate an unauthorized intruder is trying to change machine\nassociations with IP addresses and trick users and processes into connecting to unintended\nmachines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put\ndisinformation into those files and trick users into providing information to the intruder.\nMonitoring /etc/network is important as it can show if network interfaces or scripts are\nbeing modified in a way that can lead to the machine becoming unavailable or\ncompromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_29": {
        "system": "Linux",
        "description": "8.1.6 Record Events That Modify the System's Network Environment- '/etc/issue.net'",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/network (directory containing network interface scripts and configurations) files.\n\n*Rationale*\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to\nhost and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored for\nchanges in the file that can indicate an unauthorized intruder is trying to change machine\nassociations with IP addresses and trick users and processes into connecting to unintended\nmachines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put\ndisinformation into those files and trick users into providing information to the intruder.\nMonitoring /etc/network is important as it can show if network interfaces or scripts are\nbeing modified in a way that can lead to the machine becoming unavailable or\ncompromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue\\.net[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/issue\\.net[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_30": {
        "system": "Linux",
        "description": "8.1.6 Record Events That Modify the System's Network Environment - '/etc/hosts'",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/network (directory containing network interface scripts and configurations) files.\n\n*Rationale*\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to\nhost and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored for\nchanges in the file that can indicate an unauthorized intruder is trying to change machine\nassociations with IP addresses and trick users and processes into connecting to unintended\nmachines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put\ndisinformation into those files and trick users into providing information to the intruder.\nMonitoring /etc/network is important as it can show if network interfaces or scripts are\nbeing modified in a way that can lead to the machine becoming unavailable or\ncompromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/hosts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/hosts[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_31": {
        "system": "Linux",
        "description": "8.1.6 Record Events That Modify the System's Network Environment - '/etc/network'",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/network (directory containing network interface scripts and configurations) files.\n\n*Rationale*\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to\nhost and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored for\nchanges in the file that can indicate an unauthorized intruder is trying to change machine\nassociations with IP addresses and trick users and processes into connecting to unintended\nmachines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put\ndisinformation into those files and trick users into providing information to the intruder.\nMonitoring /etc/network is important as it can show if network interfaces or scripts are\nbeing modified in a way that can lead to the machine becoming unavailable or\ncompromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/network[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/network[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_32": {
        "system": "Linux",
        "description": "8.1.7 Record Events That Modify the System's Mandatory Access Controls",
        "info": "Monitor SELinux mandatory access controls. The parameters below monitor any write\naccess (potential additional, deletion or modification of files in the directory) or attribute\nchanges to the /etc/selinux directory.\n\n*Rationale*\n\nChanges to files in this directory could indicate that an unauthorized user is attempting to\nmodify access controls and change security contexts, leading to a compromise of the\nsystem.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.Add the following lines to /etc/audit/audit.rules\n-w /etc/selinux/ -p wa -k MAC-policy\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/selinux/[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/selinux/[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+MAC-policy[\\\\s]*$"
    },
    "custom_item_33": {
        "system": "Linux",
        "description": "8.1.8 Collect Login and Logout Events- '/var/log/faillog'",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The file\n/var/log/lastlog maintain records of the last time a user successfully logged in. The file\n/var/log/tallylog maintains records of failures via the pam_tally2 module\n\n*Rationale*\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/faillog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/faillog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_34": {
        "system": "Linux",
        "description": "8.1.8 Collect Login and Logout Events- '/var/log/lastlog'",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The file\n/var/log/lastlog maintain records of the last time a user successfully logged in. The file\n/var/log/tallylog maintains records of failures via the pam_tally2 module\n\n*Rationale*\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/lastlog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/lastlog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_35": {
        "system": "Linux",
        "description": "8.1.8 Collect Login and Logout Events- '/var/log/tallylog'",
        "info": "Monitor login and logout events. The parameters below track changes to files associated\nwith login/logout events. The file /var/log/faillog tracks failed events from login. The file\n/var/log/lastlog maintain records of the last time a user successfully logged in. The file\n/var/log/tallylog maintains records of failures via the pam_tally2 module\n\n*Rationale*\n\nMonitoring login/logout events could provide a system administrator with information\nassociated with brute force attacks against user logins.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /var/log/faillog -p wa -k logins\n-w /var/log/lastlog -p wa -k logins\n-w /var/log/tallylog -p wa -k logins\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/tallylog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/tallylog[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+logins[\\\\s]*$"
    },
    "custom_item_36": {
        "system": "Linux",
        "description": "8.1.9 Collect Session Initiation Information- '/var/run/utmp'",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp file tracks all currently logged in\nusers. The /var/log/wtmp file tracks logins, logouts, shutdown and reboot events. All audit\nrecords will be tagged with the identifier 'session.' The file /var/log/btmp keeps track of\nfailed login attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp. All audit records will be tagged with the identifier 'logins.'\n\n*Rationale*\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditdNote- Use the last command to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/run/utmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/run/utmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_37": {
        "system": "Linux",
        "description": "8.1.9 Collect Session Initiation Information- '/var/log/wtmp'",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp file tracks all currently logged in\nusers. The /var/log/wtmp file tracks logins, logouts, shutdown and reboot events. All audit\nrecords will be tagged with the identifier 'session.' The file /var/log/btmp keeps track of\nfailed login attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp. All audit records will be tagged with the identifier 'logins.'\n\n*Rationale*\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditdNote- Use the last command to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/wtmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/wtmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_38": {
        "system": "Linux",
        "description": "8.1.9 Collect Session Initiation Information- '/var/log/btmp'",
        "info": "Monitor session initiation events. The parameters in this section track changes to the files\nassociated with session events. The file /var/run/utmp file tracks all currently logged in\nusers. The /var/log/wtmp file tracks logins, logouts, shutdown and reboot events. All audit\nrecords will be tagged with the identifier 'session.' The file /var/log/btmp keeps track of\nfailed login attempts and can be read by entering the command /usr/bin/last -f\n/var/log/btmp. All audit records will be tagged with the identifier 'logins.'\n\n*Rationale*\n\nMonitoring these files for changes could alert a system administrator to logins occurring at\nunusual hours, which could indicate intruder activity (i.e. a user logging in at a time when\nthey do not normally log in).",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-w /var/run/utmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditdNote- Use the last command to read /var/log/wtmp (last with no parameters) and\n/var/run/utmp (last -f /var/run/utmp)",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+/var/log/btmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+/var/log/btmp[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+session[\\\\s]*$"
    },
    "custom_item_39": {
        "system": "Linux",
        "description": "8.1.10 Collect Discretionary Access Control Permission Modification Events- '32bit chmod/fchmod/fchmodat'",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod, fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown, fchown, fchownat and lchown system calls affect owner and group attributes on a file.\nThe setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr,\nlremovexattr, fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system userids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier 'perm_mod.'\n\n*Rationale*\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_40": {
        "system": "Linux",
        "description": "8.1.10 Collect Discretionary Access Control Permission Modification Events- '32bit chown/fchown/fchownat/lchown'",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod, fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown, fchown, fchownat and lchown system calls affect owner and group attributes on a file.\nThe setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr,\nlremovexattr, fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system userids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier 'perm_mod.'\n\n*Rationale*\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_41": {
        "system": "Linux",
        "description": "8.1.10 Collect Discretionary Access Control Permission Modification Events- '32bit setxattr'",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod, fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown, fchown, fchownat and lchown system calls affect owner and group attributes on a file.\nThe setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr,\nlremovexattr, fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system userids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier 'perm_mod.'\n\n*Rationale*\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_42": {
        "system": "Linux",
        "description": "8.1.11 Collect Unsuccessful Unauthorized Access Attempts to Files- '32bit EACCES'",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation (creat), opening (open, openat) and truncation\n(truncate, ftruncate) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier 'access.'\n\n*Rationale*\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_43": {
        "system": "Linux",
        "description": "8.1.11 Collect Unsuccessful Unauthorized Access Attempts to Files- '32bit EPERM'",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation (creat), opening (open, openat) and truncation\n(truncate, ftruncate) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier 'access.'\n\n*Rationale*\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_44": {
        "system": "Linux",
        "description": "8.1.13 Collect Successful File System Mounts - '32bit mount'",
        "info": "Monitor the use of the mount system call. The mount (and umount) system call controls the\nmounting and unmounting of file systems. The parameters below configure the system to\ncreate an audit record when the mount system call is used by a non-privileged user\n\n*Rationale*\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While\ntracking mount commands gives the system administrator evidence that external media may\nhave been mounted (based on a review of the source of the mount and confirming it's an\nexternal media type), it does not conclusively indicate that data was exported to the media.\nSystem administrators who wish to determine if data were exported, would also have to\ntrack successful open, creat and truncate system calls requiring write access to a file under\nthe mount point of the external media file system. This could give a fair indication that a\nwrite occurred. The only way to truly prove it, would be to track successful writes to the\nexternal media. Tracking write system calls could quickly fill up the audit log and is not\nrecommended. Recommendations on configuration options to track data export to media is\nbeyond the scope of this document.Note- This tracks successful and unsuccessful mount commands. File system mounts do not\nhave to come from external media and this action still does not verify write (e.g. CD ROMS)",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_45": {
        "system": "Linux",
        "description": "8.1.14 Collect File Deletion Events by User- '32bit unlink/unlinkat/rename/renameat'",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file\nattributes. This configuration statement sets up monitoring for the unlink (remove a file),\nunlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file\nattribute) system calls and tags them with the identifier 'delete'.\n\n*Rationale*\n\nMonitoring these calls from non-privileged users could provide a system administrator\nwith evidence that inappropriate removal of files and file attributes associated with\nprotected files is occurring. While this audit option will look at all events, system\nadministrators will want to look for specific privileged files that are being deleted or\naltered.",
        "solution": "At a minimum, configure the audit system to collect file deletion events for all users and\nroot.\n\nFor 64 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_46": {
        "system": "Linux",
        "description": "8.1.15 Collect Changes to System Administration Scope (sudoers)",
        "info": "Monitor scope changes for system administrations. If the system has been properly\nconfigured to force system administrators to log in as themselves first and then use the\nsudo command to execute privileged commands, it is possible to monitor changes in scope.\nThe file /etc/sudoers will be written to when the file or its attributes have changed. The\naudit records will be tagged with the identifier 'scope.'\n\n*Rationale*\n\nChanges in the /etc/sudoers file can indicate that an unauthorized change has been made\nto scope of system administrator activity.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /etc/sudoers -p wa -k scope\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/sudoers[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/etc\\\\/sudoers[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+scope[\\\\s]*$"
    },
    "custom_item_47": {
        "system": "Linux",
        "description": "8.1.16 Collect System Administrator Actions (sudolog)",
        "info": "Monitor the sudo log file. If the system has been properly configured to disable the use of\nthe su command and force all administrators to have to log in first and then use sudo to\nexecute privileged commands, then all administrator commands will be logged to\n/var/log/sudo.log. Any time a command is executed, an audit event will be triggered as the\n/var/log/sudo.log file will be opened for write and the executed administration command\nwill be written to the log.\n\n*Rationale*\n\nChanges in /var/log/sudo.log indicate that an administrator has executed a command or\nthe log file itself has been tampered with. Administrators will want to correlate the events\nwritten to the audit trail with the records written to /var/log/sudo.log to verify if\nunauthorized commands have been executed.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /var/log/sudo.log -p wa -k actions\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\nNote- The system must be configured with su disabled (See Item 9.5 Restrict Access to the\nsu Command) to force all command execution through sudo. This will not be effective on the\nconsole, as administrators can log in as root.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/sudo\\.log[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/var\\\\/log\\\\/sudo\\.log[\\\\s]+-p[\\\\s]+wa[\\\\s]+-k[\\\\s]+actions[\\\\s]*$"
    },
    "custom_item_48": {
        "system": "Linux",
        "description": "8.1.17 Collect Kernel Module Loading and Unloading- '/sbin/insmod'",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of 'modules'.\n\n*Rationale*\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with\nevidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and delete_module\nsystem calls would reflect an unauthorized user attempting to use a different program to\nload and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n\nFor 32 bit systems, add\n-a always,exit arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems, add\n-a always,exit arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/insmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/insmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_49": {
        "system": "Linux",
        "description": "8.1.17 Collect Kernel Module Loading and Unloading- '/sbin/rmmod'",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of 'modules'.\n\n*Rationale*\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with\nevidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and delete_module\nsystem calls would reflect an unauthorized user attempting to use a different program to\nload and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n\nFor 32 bit systems, add\n-a always,exit arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems, add\n-a always,exit arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/rmmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/rmmod[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_50": {
        "system": "Linux",
        "description": "8.1.17 Collect Kernel Module Loading and Unloading - '/sbin/modprobe'",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of 'modules'.\n\n*Rationale*\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with\nevidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and delete_module\nsystem calls would reflect an unauthorized user attempting to use a different program to\nload and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n\nFor 32 bit systems, add\n-a always,exit arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems, add\n-a always,exit arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/modprobe[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-w[\\\\s]+\\\\/sbin\\\\/modprobe[\\\\s]+-p[\\\\s]+x[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_51": {
        "system": "Linux",
        "description": "8.1.17 Collect Kernel Module Loading and Unloading - '32bit init_module/delete_module'",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of 'modules'.\n\n*Rationale*\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with\nevidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and delete_module\nsystem calls would reflect an unauthorized user attempting to use a different program to\nload and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n\nFor 32 bit systems, add\n-a always,exit arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems, add\n-a always,exit arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b32[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_52": {
        "system": "Linux",
        "description": "8.1.18 Make the Audit Configuration Immutable",
        "info": "Set system audit so that audit rules cannot be modified with auditctl. Setting the flag '-e 2'\nforces audit to be put in immutable mode. Audit changes can only be made on system\nreboot.\n\n*Rationale*\n\nIn immutable mode, unauthorized users cannot execute changes to the audit system to\npotentially hide malicious activity and then put the audit rules back. Users would most\nlikely notice a system reboot and that could alert administrators of an attempt to make\nunauthorized audit changes.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.-e 2\n\n Note- This must be the last entry in the /etc/audit/audit.rules file",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CN-L3|8.1.10.6(d),CSCv6|3.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,LEVEL|2S,NESA|T3.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "cmd": "/usr/bin/strings /etc/audit/audit.rules | /usr/bin/tail -1",
        "expect": "^[\\\\s]*-e[\\\\s]+2[\\\\s]*$"
    },
    "custom_item_53": {
        "description": "OS is 64 bit",
        "cmd": "/bin/uname -m",
        "expect": "^[^i][^3-6][^8][^6].*$"
    },
    "custom_item_54": {
        "system": "Linux",
        "description": "8.1.4 Record Events That Modify Date and Time Information  - '64bit adjtimex'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\n  this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time,\n  using timeval and timezone structures) stime (using seconds since 1/1/1970) or\n  clock_settime (allows for the setting of several internal clocks and timers) system calls\n  have been executed and always write an audit record to the /var/log/audit.log file upon\n  exit, tagging the records with the identifier 'time-change'\n\n  *Rationale*\n\n  Unexpected changes in system date and/or time could be a sign of malicious activity on the\n  system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n  -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n  -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n  -a always,exit -F arch=b64 -S clock_settime -k time-change\n  -a always,exit -F arch=b32 -S clock_settime -k time-change\n  -w /etc/localtime -p wa -k time-change\n  # Execute the following command to restart auditd\n  # pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n  -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n  -a always,exit -F arch=b32 -S clock_settime -k time-change\n  -w /etc/localtime -p wa -k time-change\n  # Execute the following command to restart auditd\n  # pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+adjtimex[\\\\s]+-S[\\\\s]+settimeofday[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_55": {
        "system": "Linux",
        "description": "8.1.4 Record Events That Modify Date and Time Information  - '64bit clock_settime'",
        "info": "Capture events where the system date and/or time has been modified. The parameters in\n  this section are set to determine if the adjtimex (tune kernel clock), settimeofday (Set time,\n  using timeval and timezone structures) stime (using seconds since 1/1/1970) or\n  clock_settime (allows for the setting of several internal clocks and timers) system calls\n  have been executed and always write an audit record to the /var/log/audit.log file upon\n  exit, tagging the records with the identifier 'time-change'\n\n  *Rationale*\n\n  Unexpected changes in system date and/or time could be a sign of malicious activity on the\n  system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n  -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change\n  -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n  -a always,exit -F arch=b64 -S clock_settime -k time-change\n  -a always,exit -F arch=b32 -S clock_settime -k time-change\n  -w /etc/localtime -p wa -k time-change\n  # Execute the following command to restart auditd\n  # pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n  -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change\n  -a always,exit -F arch=b32 -S clock_settime -k time-change\n  -w /etc/localtime -p wa -k time-change\n  # Execute the following command to restart auditd\n  # pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+clock_settime[\\\\s]+-k[\\\\s]+time-change[\\\\s]*$"
    },
    "custom_item_56": {
        "system": "Linux",
        "description": "8.1.6 Record Events That Modify the System's Network Environment- '64bit sethostname'",
        "info": "Record changes to network environment files or system calls. The below parameters\nmonitor the sethostname (set the systems host name) or setdomainname (set the systems\ndomainname) system calls, and write an audit event on system call exit. The other\nparameters monitor the /etc/issue and /etc/issue.net files (messages displayed pre-\nlogin), /etc/hosts (file containing host names and associated IP addresses) and\n/etc/network (directory containing network interface scripts and configurations) files.\n\n*Rationale*\n\nMonitoring sethostname and setdomainname will identify potential unauthorized changes to\nhost and domainname of a system. The changing of these names could potentially break\nsecurity parameters that are set based on those names. The /etc/hosts file is monitored for\nchanges in the file that can indicate an unauthorized intruder is trying to change machine\nassociations with IP addresses and trick users and processes into connecting to unintended\nmachines. Monitoring /etc/issue and /etc/issue.net is important, as intruders could put\ndisinformation into those files and trick users into providing information to the intruder.\nMonitoring /etc/network is important as it can show if network interfaces or scripts are\nbeing modified in a way that can lead to the machine becoming unavailable or\ncompromised. All audit records will be tagged with the identifier 'system-locale.'",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditdFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale\n-w /etc/issue -p wa -k system-locale\n-w /etc/issue.net -p wa -k system-locale\n-w /etc/hosts -p wa -k system-locale\n-w /etc/network -p wa -k system-locale\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+(exit,always|always,exit)[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+(exit,always|always,exit)[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+sethostname[\\\\s]+-S[\\\\s]+setdomainname[\\\\s]+-k[\\\\s]+system-locale[\\\\s]*$"
    },
    "custom_item_57": {
        "system": "Linux",
        "description": "8.1.10 Collect Discretionary Access Control Permission Modification Events- '64bit chmod/fchmod/fchmodat'",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod, fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown, fchown, fchownat and lchown system calls affect owner and group attributes on a file.\nThe setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr,\nlremovexattr, fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system userids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier 'perm_mod.'\n\n*Rationale*\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chmod[\\\\s]+-S[\\\\s]+fchmod[\\\\s]+-S[\\\\s]+fchmodat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_58": {
        "system": "Linux",
        "description": "8.1.10 Collect Discretionary Access Control Permission Modification Events- '64bit chown/fchown/fchownat/lchown'",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod, fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown, fchown, fchownat and lchown system calls affect owner and group attributes on a file.\nThe setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr,\nlremovexattr, fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system userids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier 'perm_mod.'\n\n*Rationale*\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+chown[\\\\s]+-S[\\\\s]+fchown[\\\\s]+-S[\\\\s]+fchownat[\\\\s]+-S[\\\\s]+lchown[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_59": {
        "system": "Linux",
        "description": "8.1.10 Collect Discretionary Access Control Permission Modification Events- '64bit setxattr'",
        "info": "Monitor changes to file permissions, attributes, ownership and group. The parameters in\nthis section track changes for system calls that affect file permissions and attributes. The\nchmod, fchmod and fchmodat system calls affect the permissions associated with a file. The\nchown, fchown, fchownat and lchown system calls affect owner and group attributes on a file.\nThe setxattr, lsetxattr, fsetxattr (set extended file attributes) and removexattr,\nlremovexattr, fremovexattr (remove extended file attributes) control extended file\nattributes. In all cases, an audit record will only be written for non-system userids (auid >=\n500) and will ignore Daemon events (auid = 4294967295). All audit records will be tagged\nwith the identifier 'perm_mod.'\n\n*Rationale*\n\nMonitoring for changes in file attributes could alert a system administrator to activity that\ncould indicate intruder activity or policy violation.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod\n-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+setxattr[\\\\s]+-S[\\\\s]+lsetxattr[\\\\s]+-S[\\\\s]+fsetxattr[\\\\s]+-S[\\\\s]+removexattr[\\\\s]+-S[\\\\s]+lremovexattr[\\\\s]+-S[\\\\s]+fremovexattr[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+perm_mod[\\\\s]*$"
    },
    "custom_item_60": {
        "system": "Linux",
        "description": "8.1.11 Collect Unsuccessful Unauthorized Access Attempts to Files- '64bit EACCES'",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation (creat), opening (open, openat) and truncation\n(truncate, ftruncate) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier 'access.'\n\n*Rationale*\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EACCES[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_61": {
        "system": "Linux",
        "description": "8.1.11 Collect Unsuccessful Unauthorized Access Attempts to Files- '64bit EPERM'",
        "info": "Monitor for unsuccessful attempts to access files. The parameters below are associated\nwith system calls that control creation (creat), opening (open, openat) and truncation\n(truncate, ftruncate) of files. An audit log record will only be written if the user is a non-\nprivileged user (auid > = 500), is not a Daemon event (auid=4294967295) and if the system\ncall returned EACCES (permission denied to the file) or EPERM (some other permanent\nerror associated with the specific system call). All audit records will be tagged with the\nidentifier 'access.'\n\n*Rationale*\n\nFailed attempts to open, create or truncate files could be an indication that an individual or\nprocess is trying to gain unauthorized access to the system.",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access\n-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+creat[\\\\s]+-S[\\\\s]+open[\\\\s]+-S[\\\\s]+openat[\\\\s]+-S[\\\\s]+truncate[\\\\s]+-S[\\\\s]+ftruncate[\\\\s]+-F[\\\\s]+exit=-EPERM[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+access[\\\\s]*$"
    },
    "custom_item_62": {
        "system": "Linux",
        "description": "8.1.13 Collect Successful File System Mounts - '64bit mount'",
        "info": "Monitor the use of the mount system call. The mount (and umount) system call controls the\nmounting and unmounting of file systems. The parameters below configure the system to\ncreate an audit record when the mount system call is used by a non-privileged user\n\n*Rationale*\n\nIt is highly unusual for a non privileged user to mount file systems to the system. While\ntracking mount commands gives the system administrator evidence that external media may\nhave been mounted (based on a review of the source of the mount and confirming it's an\nexternal media type), it does not conclusively indicate that data was exported to the media.\nSystem administrators who wish to determine if data were exported, would also have to\ntrack successful open, creat and truncate system calls requiring write access to a file under\nthe mount point of the external media file system. This could give a fair indication that a\nwrite occurred. The only way to truly prove it, would be to track successful writes to the\nexternal media. Tracking write system calls could quickly fill up the audit log and is not\nrecommended. Recommendations on configuration options to track data export to media is\nbeyond the scope of this document.Note- This tracks successful and unsuccessful mount commands. File system mounts do not\nhave to come from external media and this action still does not verify write (e.g. CD ROMS)",
        "solution": "For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following lines to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+mount[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+mounts[\\\\s]*$"
    },
    "custom_item_63": {
        "system": "Linux",
        "description": "8.1.14 Collect File Deletion Events by User- '64bit unlink/unlinkat/rename/renameat'",
        "info": "Monitor the use of system calls associated with the deletion or renaming of files and file\nattributes. This configuration statement sets up monitoring for the unlink (remove a file),\nunlinkat (remove a file attribute), rename (rename a file) and renameat (rename a file\nattribute) system calls and tags them with the identifier 'delete'.\n\n*Rationale*\n\nMonitoring these calls from non-privileged users could provide a system administrator\nwith evidence that inappropriate removal of files and file attributes associated with\nprotected files is occurring. While this audit option will look at all events, system\nadministrators will want to look for specific privileged files that are being deleted or\naltered.",
        "solution": "At a minimum, configure the audit system to collect file deletion events for all users and\nroot.\n\nFor 64 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\n# Execute the following command to restart auditd\n# pkill -HUP -P 1 auditd\n\nFor 32 bit systems, add the following to the /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete\n\n# Execute the following command to restart auditd\n# pkill -P 1-HUP auditd",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+-F[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+unlink[\\\\s]+-S[\\\\s]+unlinkat[\\\\s]+-S[\\\\s]+rename[\\\\s]+-S[\\\\s]+renameat[\\\\s]+-F[\\\\s]+auid>=500[\\\\s]+-F[\\\\s]+auid!=4294967295[\\\\s]+-k[\\\\s]+delete[\\\\s]*$"
    },
    "custom_item_64": {
        "system": "Linux",
        "description": "8.1.17 Collect Kernel Module Loading and Unloading - '64bit init_module/delete_module'",
        "info": "Monitor the loading and unloading of kernel modules. The programs insmod (install a\nkernel module), rmmod (remove a kernel module), and modprobe (a more sophisticated\nprogram to load and unload modules, as well as some other features) control loading and\nunloading of modules. The init_module (load a module) and delete_module (delete a\nmodule) system calls control loading and unloading of modules. Any execution of the\nloading and unloading module programs and system calls will trigger an audit record with\nan identifier of 'modules'.\n\n*Rationale*\n\nMonitoring the use of insmod, rmmod and modprobe could provide system administrators with\nevidence that an unauthorized user loaded or unloaded a kernel module, possibly\ncompromising the security of the system. Monitoring of the init_module and delete_module\nsystem calls would reflect an unauthorized user attempting to use a different program to\nload and unload modules.",
        "solution": "Add the following lines to the /etc/audit/audit.rules file.\n\n-w /sbin/insmod -p x -k modules\n-w /sbin/rmmod -p x -k modules\n-w /sbin/modprobe -p x -k modules\n\nFor 32 bit systems, add\n-a always,exit arch=b32 -S init_module -S delete_module -k modules\n\nFor 64 bit systems, add\n-a always,exit arch=b64 -S init_module -S delete_module -k modules",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,LEVEL|2S,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/etc/audit/audit.rules",
        "regex": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]",
        "expect": "^[\\\\s]*-a[\\\\s]+always,exit[\\\\s]+arch=b64[\\\\s]+-S[\\\\s]+init_module[\\\\s]+-S[\\\\s]+delete_module[\\\\s]+-k[\\\\s]+modules[\\\\s]*$"
    },
    "custom_item_65": {
        "system": "Linux",
        "description": "8.3.1 Install AIDE",
        "info": "In some installations, AIDE is not installed automatically.\n\n*Rationale*\n\nInstall AIDE to make use of the file integrity features to monitor critical files for changes\nthat could affect the security of the system.",
        "solution": "Install AIDE-\n\n# apt-get install aide\n\nInitialize AIDE-# aideinit\n# cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db\n\nNote- The prelinking feature can interfere with AIDE because it alters binaries to speed up\ntheir start up times. Run /usr/sbin/prelink -ua to restore the binaries to their prelinked\nstate, thus avoiding false positives from AIDE.",
        "reference": "800-171|3.4.8,800-53|CM-7(5),800-53r5|CM-7(5),CSCv6|2.2,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|2S,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "cmd": "/usr/bin/dpkg -s aide 2>&1",
        "expect": "install[\\\\s]+ok[\\\\s]+installed"
    },
    "custom_item_66": {
        "system": "Linux",
        "description": "8.3.2 Implement Periodic Execution of File Integrity",
        "info": "Implement periodic file checking, in compliance with site policy.\n\n*Rationale*\n\nPeriodic file checking allows the system administrator to determine on a regular basis if\ncritical files have been changed in an unauthorized fashion.",
        "solution": "Execute the following command-\n\n# crontab -u root -eAdd the following line to the crontab-0 5 * * * /usr/sbin/aide --check\n\nNote- The checking in this instance occurs every day at 5am. Alter the frequency and time\nof the checks in compliance with site policy.",
        "reference": "800-53|SI-7(1),800-53r5|SI-7(1),CN-L3|7.1.3.5(b),CSF|PR.DS-6,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ITSG-33|SI-7(1),LEVEL|2S,NESA|T7.3.3,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2,SWIFT-CSCv1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/91",
        "file": "/var/spool/cron/crontabs/root",
        "regex": "\\/usr\\/sbin\\/aide[\\\\s]+--check[\\\\s]*$",
        "expect": "^[\\\\s]*([1-5][0-9]|0[0-9]|[0-9])[\\\\s]+(2[0-3]|1[0-9]|[1-9])[\\\\s]+\\\\*[\\\\s]+\\\\*[\\\\s]+\\\\*[\\\\s]+\\/usr\\/sbin\\/aide[\\\\s]+--check[\\\\s]*$"
    }
}