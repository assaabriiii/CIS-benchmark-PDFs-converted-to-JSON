{
    "custom_item_1": {
        "description": "Check if this is a Docker Vessel/Host",
        "cmd": "/usr/bin/docker info",
        "expect": "Containers"
    },
    "custom_item_2": {
        "description": "2.9 Confirm default cgroup usage",
        "info": "https://docs.docker.com/engine/reference/commandline/daemon/",
        "solution": "The default setting is good enough and can be left as-is. If you want to specifically set a non-\ndefault cgroup, pass --cgroup-parent parameter to the docker daemon when starting it.For Example,dockerd --cgroup-parent=/foobarImpact-None.\nDefault Value-By default, docker daemon uses /docker for fs cgroup driver and system.slice for\nsystemd cgroup driver.",
        "reference": "800-53|SC-39,800-53r5|SC-39,GDPR|32.1.b,HIPAA|164.306(a)(1),LEVEL|2A,QCSC-v1|5.2.1",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]cgroup-parent | /usr/bin/awk '{print} END {if (NR == 0) print \"none\"}'",
        "expect": "(--cgroup-parent=@CGROUP_PARENT@|none)"
    },
    "custom_item_3": {
        "description": "2.11 Use authorization plugin",
        "info": "https://docs.docker.com/engine/reference/commandline/daemon/#access-authorization\n2.https://docs.docker.com/engine/extend/authorization/\n3.https://github.com/twistlock/authz",
        "solution": "Step 1- Install/Create an authorization plugin.Step 2- Configure the authorization policy as desired.Step 3- Start the docker daemon as below-dockerd --authorization-plugin=Impact-Each docker command specifically passes through authorization plugin mechanism. This\nmight introduce a slight performance drop.Default Value-By default, authorization plugins are not set up.",
        "reference": "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|2A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]authorization-plugin",
        "expect": "authorization-plugin=@AUTH_PLUGIN_ID@"
    },
    "custom_item_4": {
        "description": "2.12 Configure centralized and remote logging",
        "info": "https://docs.docker.com/engine/admin/logging/overview/",
        "solution": "Step 1- Setup the desired log driver by following its documentation.Step 2- Start the docker daemon with that logging driver.For example,dockerd --log-driver=syslog --log-opt syslog-address=tcp-//192.xxx.xxx.xxxImpact-None.Default Value-By default, container logs are maintained as json files",
        "reference": "800-171|3.3.8,800-53|AU-9(2),800-53r5|AU-9(2),CN-L3|8.1.3.5(d),CN-L3|8.1.4.3(c),CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9(2),LEVEL|2A,NESA|M5.2.3,NESA|M5.5.2,NIAv2|SS13e,PCI-DSSv3.2.1|10.5.3,PCI-DSSv3.2.1|10.5.4,PCI-DSSv4.0|10.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "ps -ef | grep docker | grep [\\-][\\-]log-driver",
        "expect": "log-driver=@LOG_DRIVER@"
    },
    "custom_item_5": {
        "description": "4.5 Enable Content trust for Docker",
        "info": "https://docs.docker.com/engine/security/trust/content_trust/\n2.https://docs.docker.com/engine/reference/commandline/cli/#notary\n3.https://docs.docker.com/engine/reference/commandline/cli/#environment-variables",
        "solution": "To enable content trust in a bash shell, enter the following command-export DOCKER_CONTENT_TRUST=1Alternatively, set this environment variable in your profile file so that content trust in\nenabled on every login.Impact-In an environment where DOCKER_CONTENT_TRUST is set, you are required to follow trust\nprocedures while working with images - build, create, pull, push and run. You can use\nthe --disable-content-trust flag to run individual operations on tagged images without\ncontent trust on an as-needed basis but that defeats the purpose of enabling content trust\nand hence, should be avoided wherever possible.Note- Content trust is currently only available for users of the public Docker Hub. It is\ncurrently not available for the Docker Trusted Registry or for private registries.Default Value-By default, content trust is disabled.",
        "reference": "800-53|SI-7(6),800-53r5|SI-7(6),CSF|PR.DS-6,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(c)(1),HIPAA|164.312(c)(2),HIPAA|164.312(e)(2)(i),ITSG-33|SI-7,ITSG-33|SI-7a.,LEVEL|2A,NESA|T3.4.1,NESA|T7.3.2,NESA|T7.3.3,PCI-DSSv3.2.1|10.5.5,QCSC-v1|3.2,SWIFT-CSCv1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "echo $DOCKER_CONTENT_TRUST",
        "expect": "1"
    },
    "custom_item_6": {
        "description": "4.11 Install verified packages only",
        "info": "http://www.oreilly.com/webops-perf/free/files/docker-security.pdf\n2.https://github.com/docker-\nlibrary/httpd/blob/12bf8c8883340c98b3988a7bade8ef2d0d6dcf8a/2.4/Dockerfile\n3.https://github.com/docker-\nlibrary/php/blob/d8a4ccf4d620ec866d5b42335b699742df08c5f0/7.0/alpine/Dockerfile\n4.https://access.redhat.com/security/team/key\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Use GPG keys for downloading and verifying packages or any other secure package\ndistribution mechanism of your choice.Impact-NoneDefault Value-Not Applicable",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "for image in $(docker images|awk {'print $3'}); do docker history $image;done",
        "expect": ""
    },
    "custom_item_7": {
        "description": "5.1 Do not disable AppArmor",
        "info": "http://docs.docker.com/articles/security/#other-kernel-security-features\n2.http://docs.docker.com/reference/run/#security-configuration\n3.http://wiki.apparmor.net/index.php/Main_Page\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If AppArmor is applicable for your Linux OS, use it. You may have to follow below set of\nsteps-1. Verify if AppArmor is installed. If not, install it.\n2. Create or import a AppArmor profile for Docker containers.\n3. Put this profile in enforcing mode.\n4. Start your Docker container using the customized AppArmor profile. For example,docker run --interactive --tty --security-opt='apparmor-PROFILENAME' centos /bin/bashAlternatively, you can keep the docker's default apparmor profile\nImpact-The container (process) would have set of restrictions as defined in AppArmor profile. If\nyour AppArmor profile is mis-configured, then the container may not entirely work as\nexpected.Default Value-By default, docker-default AppArmor profile is applied for running containers and this\nprofile can be found at /etc/apparmor.d/docker.",
        "reference": "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53r5|AC-3(3),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),LEVEL|2S,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,PCI-DSSv3.2.1|7.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: AppArmorProfile={{ .AppArmorProfile }}'",
        "expect": ""
    },
    "custom_item_8": {
        "description": "5.2 Verify SELinux security options, if applicable",
        "info": "http://docs.docker.com/articles/security/#other-kernel-security-features\n2.http://docs.docker.com/reference/run/#security-configuration\n3.http://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "If SELinux is applicable for your Linux OS, use it. You may have to follow below set of steps-1. Set the SELinux State.\n2. Set the SELinux Policy.\n3. Create or import a SELinux policy template for Docker containers.\n4. Start Docker in daemon mode with SELinux enabled. For example,docker daemon --selinux-enabled5. Start your Docker container using the security options. For example,docker run --interactive --tty --security-opt label=level-TopSecret centos\n/bin/bashImpact-The container (process) would have set of restrictions as defined in SELinux policy. If your\nSELinux policy is mis-configured, then the container may not entirely work as expected.\nDefault Value-By default, no SELinux security options are applied on containers.",
        "reference": "800-171|3.1.1,800-171|3.1.2,800-53|AC-3(3),800-53r5|AC-3(3),CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(3),LEVEL|2A,NESA|T5.5.4,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,PCI-DSSv3.2.1|7.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "/usr/bin/docker ps -q | xargs /usr/bin/docker inspect --format '{{ .Id }}: SecurityOpt={{json .HostConfig.SecurityOpt }}'",
        "expect": ""
    },
    "custom_item_9": {
        "description": "5.29 Do not use Docker's default bridge docker0",
        "info": "https://github.com/nyantec/narwhal\n2.https://arxiv.org/pdf/1501.02967\n3.https://docs.docker.com/engine/userguide/networking/dockernetworks/\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Follow Docker documentation and setup a user-defined network. Run all the containers in\nthe defined network.Impact-You have to manage the user-defined networks.Default Value-By default, docker runs containers on its docker0 bridge.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,LEVEL|2M,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/517",
        "cmd": "for net_id in $(docker network ls|awk {'print $1'}); do docker network inspect $net_id;done",
        "expect": ""
    }
}