{
    "custom_item_1": {
        "description": "1.18 Ensure IAM instance roles are used for AWS resource access from instances",
        "info": "AWS access from within AWS instances can be done by either encoding AWS keys into AWS API calls or by assigning the instance to a role which has an appropriate permissions policy for the required access. 'AWS Access' means accessing the APIs of AWS in order to access AWS resources or manage AWS account resources.\n\nRationale:\n\nAWS IAM roles reduce the risks associated with sharing and rotating credentials that can be used outside of AWS itself. If credentials are compromised, they can be used from outside of the AWS account they give access to. In contrast, in order to leverage role permissions an attacker would need to gain and maintain access to a specific instance to use the privileges associated with it.\n\nAdditionally, if credentials are encoded into compiled applications or other hard to change mechanisms, then they are even more unlikely to be properly rotated due to service disruption risks. As time goes on, credentials that cannot be rotated are more likely to be known by an increasing number of individuals who no longer work for the organization owning the credentials.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "From Console:\n\nSign in to the AWS Management Console and navigate to EC2 dashboard at https://console.aws.amazon.com/ec2/.\n\nIn the left navigation panel, choose Instances.\n\nSelect the EC2 instance you want to modify.\n\nClick Actions.\n\nClick Security.\n\nClick Modify IAM role.\n\nClick Create new IAM role if a new IAM role is required.\n\nSelect the IAM role you want to attach to your instance in the IAM role dropdown.\n\nClick Update IAM role.\n\nRepeat steps 3 to 9 for each EC2 instance in your AWS account that requires an IAM role to be attached.\n\nFrom Command Line:\n\nRun the describe-instances command to list all EC2 instance IDs, available in the selected AWS region:\n\naws ec2 describe-instances --region--query 'Reservations[*].Instances[*].InstanceId'\n\nRun the associate-iam-instance-profile command to attach an instance profile (which is attached to an IAM role) to the EC2 instance:\n\naws ec2 associate-iam-instance-profile --region--instance-id--iam-instance-profile Name='Instance-Profile-Name'\n\nRun the describe-instances command again for the recently modified EC2 instance. The command output should return the instance profile ARN and ID:\n\naws ec2 describe-instances --region--instance-id--query 'Reservations[*].Instances[*].IamInstanceProfile'\n\nRepeat steps 1 to 3 for each EC2 instance in your AWS account that requires an IAM role to be attached.",
        "reference": "800-171|3.1.1,800-171|3.1.5,800-171|3.3.8,800-171|3.3.9,800-53|AC-2,800-53|AC-3,800-53|AC-6,800-53|AC-6(1),800-53|AC-6(7),800-53|AU-9(4),800-53r5|AC-2,800-53r5|AC-3,800-53r5|AC-6,800-53r5|AC-6(1),800-53r5|AC-6(7),800-53r5|AU-9(4),CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(d),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.4.2(f),CN-L3|8.1.4.3(d),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.1.10.6(a),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv7|19,CSCv8|6.8,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,CSF|PR.DS-5,CSF|PR.PT-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.5,ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.4,ISO/IEC-27001|A.9.4.5,ISO/IEC-27001|A.12.4.2,ITSG-33|AC-2,ITSG-33|AC-3,ITSG-33|AC-6,ITSG-33|AC-6(1),ITSG-33|AU-9(4),ITSG-33|AU-9(4)(a),ITSG-33|AU-9(4)(b),LEVEL|2A,NESA|M1.1.3,NESA|M1.2.2,NESA|M5.2.3,NESA|M5.5.2,NESA|T4.2.1,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM3,NIAv2|AM23f,NIAv2|AM28,NIAv2|AM31,NIAv2|GS3,NIAv2|GS4,NIAv2|GS8c,NIAv2|NS5j,NIAv2|SM5,NIAv2|SM6,NIAv2|SS13c,NIAv2|SS14e,NIAv2|SS15c,NIAv2|SS29,NIAv2|VL3b,PCI-DSSv3.2.1|7.1.2,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,PCI-DSSv4.0|10.3.2,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,SWIFT-CSCv1|5.1,TBA-FIISB|31.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3",
        "see_also": "https://workbench.cisecurity.org/benchmarks/14207",
        "aws_action": "DescribeInstances",
        "xsl_stmt": "IAM rolefound for EC2 instance(instance is)IAM role not found for EC2 instance(instance is)",
        "regex": "IAM role .*$",
        "not_expect": "IAM role not found .*$"
    },
    "custom_item_2": {
        "description": "2.1.1 Ensure S3 Bucket Policy is set to deny HTTP requests",
        "info": "At the Amazon S3 bucket level, you can configure permissions through a bucket policy making the objects accessible only through HTTPS.\n\nRationale:\n\nBy default, Amazon S3 allows both HTTP and HTTPS requests. To achieve only allowing access to Amazon S3 objects through HTTPS you also have to explicitly deny access to HTTP requests. Bucket policies that allow HTTPS requests without explicitly denying HTTP requests will not comply with this recommendation.",
        "solution": "From Console:\n\nLogin to AWS Management Console and open the Amazon S3 console using https://console.aws.amazon.com/s3/\n\nSelect the Check box next to the Bucket.\n\nClick on 'Permissions'.\n\nClick 'Bucket Policy'\n\nAdd this to the existing policy filling in the required information\n\n{\n            'Sid':',\n            'Effect': 'Deny',\n            'Principal': '*',\n            'Action': 's3:*',\n            'Resource': 'arn:aws:s3:::/*',\n            'Condition': {\n                'Bool': {\n                    'aws:SecureTransport': 'false'\n                }\n            }\n        }\n\nSave\n\nRepeat for all the buckets in your AWS account that contain sensitive data.\n\nFrom Console\nusing AWS Policy Generator:\n\nRepeat steps 1-4 above.\n\nClick on Policy Generator at the bottom of the Bucket Policy Editor\n\nSelect Policy Type\nS3 Bucket Policy\n\nAdd Statements\n\nEffect = Deny\n\nPrincipal = *\n\nAWS Service = Amazon S3\n\nActions = *\n\nAmazon Resource Name =Generate Policy\n\nCopy the text and add it to the Bucket Policy.\n\nFrom Command Line:\n\nExport the bucket policy to a json file.\n\naws s3api get-bucket-policy --bucket--query Policy --output text > policy.json\n\nModify the policy.json file by adding in this statement:\n\n{\n            'Sid':',\n            'Effect': 'Deny',\n            'Principal': '*',\n            'Action': 's3:*',\n            'Resource': 'arn:aws:s3:::/*',\n            'Condition': {\n                'Bool': {\n                    'aws:SecureTransport': 'false'\n                }\n            }\n        }\n\nApply this modified policy back to the S3 bucket:\n\naws s3api put-bucket-policy --bucket--policy file://policy.json\n\nDefault Value:\n\nBoth HTTP and HTTPS Request are allowed",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|2A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/14207",
        "aws_action": "GetBucketPolicy",
        "regex": "HTTP requests denied",
        "expect": "HTTP requests denied",
        "bucket_name": "@S3_BUCKET_NAME@"
    },
    "custom_item_3": {
        "description": "3.2 Ensure CloudTrail log file validation is enabled",
        "info": "CloudTrail log file validation creates a digitally signed digest file containing a hash of each log that CloudTrail writes to S3. These digest files can be used to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log. It is recommended that file validation be enabled on all CloudTrails.\n\nRationale:\n\nEnabling log file validation will provide additional integrity checking of CloudTrail logs.",
        "solution": "Perform the following to enable log file validation on a given trail:\nFrom Console:\n\nSign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/cloudtrail\n\nClick on Trails on the left navigation pane\n\nClick on target trail\n\nWithin the General details section click edit\n\nUnder the Advanced settings section\n\nCheck the enable box under Log file validation\n\nClick Save changes\n\nFrom Command Line:\n\naws cloudtrail update-trail --name--enable-log-file-validation\n\nNote that periodic validation of logs using these digests can be performed by running the following command:\n\naws cloudtrail validate-logs --trail-arn--start-time--end-timeDefault Value:\n\nNot Enabled",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-6,800-53|AU-6(1),800-53|AU-7(1),800-53r5|AU-6,800-53r5|AU-6(1),800-53r5|AU-7(1),CCE|CCE-78914-9,CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(d),CSCv7|6,CSCv8|8.11,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.DP-4,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-2,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-6,ITSG-33|AU-6(1),ITSG-33|AU-7(1),LEVEL|2A,NESA|M5.2.5,QCSC-v1|5.2.3,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/benchmarks/14207",
        "aws_action": "DescribeTrails",
        "regex": "LogFileValidationEnabled = ",
        "expect": "LogFileValidationEnabled = true"
    },
    "custom_item_4": {
        "description": "'Record all resources supported in this region'",
        "aws_action": "DescribeConfigurationRecorders",
        "Name": " + .name + ",
        "regex": "Record all resources supported in this region =",
        "expect": "Record all resources supported in this region = true"
    },
    "custom_item_5": {
        "description": "'Include global resources'",
        "aws_action": "DescribeConfigurationRecorders",
        "Name": " + .name + ",
        "regex": "Include global resources =",
        "expect": "Include global resources = true",
        "any_region": "YES"
    },
    "custom_item_6": {
        "description": "'Recording Status'",
        "aws_action": "DescribeConfigurationRecorderStatus",
        "regex": "Recording =",
        "expect": "Recording = true"
    },
    "custom_item_7": {
        "description": "'Review defined S3 Bucket'",
        "aws_action": "DescribeDeliveryChannels",
        "regex": "S3 bucket =",
        "expect": "S3 bucket = [^\\s]+"
    },
    "custom_item_8": {
        "description": "'Review defined SNS Topic'",
        "aws_action": "DescribeDeliveryChannels",
        "regex": "SNS Topic ARN =",
        "expect": "SNS Topic ARN = arn:"
    },
    "custom_item_9": {
        "description": "3.5 Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
        "info": "AWS CloudTrail is a web service that records AWS API calls for an account and makes those logs available to users and resources in accordance with IAM policies. AWS Key Management Service (KMS) is a managed service that helps create and control the encryption keys used to encrypt account data, and uses Hardware Security Modules (HSMs) to protect the security of encryption keys. CloudTrail logs can be configured to leverage server side encryption (SSE) and KMS customer created master keys (CMK) to further protect CloudTrail logs. It is recommended that CloudTrail be configured to use SSE-KMS.\n\nRationale:\n\nConfiguring CloudTrail to use SSE-KMS provides additional confidentiality controls on log data as a given user must have S3 read permission on the corresponding log bucket and must be granted decrypt permission by the CMK policy.\n\nImpact:\n\nCustomer created keys incur an additional cost. See https://aws.amazon.com/kms/pricing/ for more information.",
        "solution": "Perform the following to configure CloudTrail to use SSE-KMS:\nFrom Console:\n\nSign in to the AWS Management Console and open the CloudTrail console at https://console.aws.amazon.com/cloudtrail\n\nIn the left navigation pane, choose Trails .\n\nClick on a Trail\n\nUnder the S3 section click on the edit button (pencil icon)\n\nClick Advanced\n\nSelect an existing CMK from the KMS key Id drop-down menu\n\nNote: Ensure the CMK is located in the same region as the S3 bucket\n\nNote: You will need to apply a KMS Key policy on the selected CMK in order for CloudTrail as a service to encrypt and decrypt log files using the CMK provided. Steps are provided here for editing the selected CMK Key policy\n\nClick Save\n\nYou will see a notification message stating that you need to have decrypt permissions on the specified KMS key to decrypt log files.\n\nClick Yes\n\nFrom Command Line:\n\naws cloudtrail update-trail --name--kms-idaws kms put-key-policy --key-id--policy",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CCE|CCE-78919-8,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|6,CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/14207",
        "aws_action": "DescribeTrails",
        "regex": "KmsKeyId = ",
        "not_expect": "KmsKeyId = No Key Defined"
    },
    "custom_item_10": {
        "description": "3.6 Ensure rotation for customer-created symmetric CMKs is enabled",
        "info": "AWS Key Management Service (KMS) allows customers to rotate the backing key which is key material stored within the KMS which is tied to the key ID of the customer-created customer master key (CMK). It is the backing key that is used to perform cryptographic operations such as encryption and decryption. Automated key rotation currently retains all prior backing keys so that decryption of encrypted data can take place transparently. It is recommended that CMK key rotation be enabled for symmetric keys. Key rotation can not be enabled for any asymmetric CMK.\n\nRationale:\n\nRotating encryption keys helps reduce the potential impact of a compromised key as data encrypted with a new key cannot be accessed with a previous key that may have been exposed. Keys should be rotated every year, or upon event that would result in the compromise of that key.\n\nImpact:\n\nCreation, management, and storage of CMKs may require additional time from an administrator.",
        "solution": "From Console:\n\nSign in to the AWS Management Console and open the KMS console at: https://console.aws.amazon.com/kms.\n\nIn the left navigation pane, click Customer-managed keys.\n\nSelect a key where Key spec = SYMMETRIC_DEFAULT that does not have automatic rotation enabled.\n\nSelect the Key rotation tab.\n\nCheck the Automatically rotate this KMS key every year checkbox.\n\nClick Save.\n\nRepeat steps 3-6 for all customer-managed CMKs that do not have automatic rotation enabled.\n\nFrom Command Line:\n\nRun the following command to enable key rotation:\n\n  aws kms enable-key-rotation --key-id",
        "reference": "800-171|3.5.2,800-171|3.13.16,800-53|IA-5(1),800-53|SC-28,800-53|SC-28(1),800-53r5|IA-5(1),800-53r5|SC-28,800-53r5|SC-28(1),CCE|CCE-78920-6,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSCv7|6,CSCv7|14.8,CSCv8|3.11,CSF|PR.AC-1,CSF|PR.DS-1,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ITSG-33|IA-5(1),ITSG-33|SC-28,ITSG-33|SC-28a.,ITSG-33|SC-28(1),LEVEL|2A,NESA|T5.2.3,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1,TBA-FIISB|28.1",
        "see_also": "https://workbench.cisecurity.org/benchmarks/14207",
        "aws_action": "GetKeyRotationStatus",
        "ID": " + .KeyId + ",
        "regex": "KeyRotationEnabled =",
        "not_expect": "KeyRotationEnabled = false"
    },
    "custom_item_11": {
        "description": "3.7 Ensure VPC flow logging is enabled in all VPCs",
        "info": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet 'Rejects' for VPCs.\n\nRationale:\n\nVPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n\nImpact:\n\nBy default, CloudWatch Logs will store Logs indefinitely unless a specific retention period is defined for the log group. When choosing the number of days to retain, keep in mind the average days it takes an organization to realize they have been breached is 210 days (at the time of this writing). Since additional time is required to research a breach, a minimum 365 day retention policy allows time for detection and research. You may also wish to archive the logs to a cheaper storage service rather than simply deleting them. See the following AWS resource to manage CloudWatch Logs retention periods:\n\nhttps://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/SettingLogRetention.html",
        "solution": "Perform the following to determine if VPC Flow logs is enabled:\nFrom Console:\n\nSign into the management console\n\nSelect Services then VPC\n\nIn the left navigation pane, select Your VPCs\n\nSelect a VPC\n\nIn the right pane, select the Flow Logs tab.\n\nIf no Flow Log exists, click Create Flow Log\n\nFor Filter, select Reject\n\nEnter in a Role and Destination Log Group\n\nClick Create Log Flow\n\nClick on CloudWatch Logs Group\n\nNote: Setting the filter to 'Reject' will dramatically reduce the logging data accumulation for this recommendation and provide sufficient information for the purposes of breach detection, research and remediation. However, during periods of least privilege security group engineering, setting this the filter to 'All' can be very helpful in discovering existing traffic flows required for proper operation of an already running environment.\n\nFrom Command Line:\n\nCreate a policy document and name it as role_policy_document.json and paste the following content:\n\n{\n'Version': '2012-10-17',\n'Statement': [\n{\n'Sid': 'test',\n'Effect': 'Allow',\n'Principal': {\n'Service': 'ec2.amazonaws.com'\n},\n'Action': 'sts:AssumeRole'\n}\n]\n}\n\nCreate another policy document and name it as iam_policy.json and paste the following content:\n\n{\n'Version': '2012-10-17',\n'Statement': [\n{\n'Effect': 'Allow',\n'Action':[\n'logs:CreateLogGroup',\n'logs:CreateLogStream',\n'logs:DescribeLogGroups',\n'logs:DescribeLogStreams',\n'logs:PutLogEvents',\n'logs:GetLogEvents',\n'logs:FilterLogEvents'\n],\n'Resource': '*'\n}\n]\n}\n\nRun the below command to create an IAM role:\n\naws iam create-role --role-name--assume-role-policy-document file://role_policy_document.json\n\nRun the below command to create an IAM policy:\n\naws iam create-policy --policy-name--policy-document file://iam-policy.json\n\nRun attach-group-policy command using the IAM policy ARN returned at the previous step to attach the policy to the IAM role (if the command succeeds, no output is returned):\n\naws iam attach-group-policy --policy-arn arn:aws:iam:::policy/--group-nameRun describe-vpcs to get the VpcId available in the selected region:\n\naws ec2 describe-vpcs --regionThe command output should return the VPC Id available in the selected region.\n\nRun create-flow-logs to create a flow log for the vpc:\n\naws ec2 create-flow-logs --resource-type VPC --resource-ids--traffic-type REJECT --log-group-name--deliver-logs-permission-arnRepeat step 8 for other vpcs available in the selected region.\n\nChange the region by updating --region and repeat remediation procedure for other vpcs.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-171|3.14.6,800-171|3.14.7,800-53|AU-2,800-53|AU-7,800-53|AU-12,800-53|SI-4,800-53|SI-4(4),800-53r5|AU-2,800-53r5|AU-7,800-53r5|AU-12,800-53r5|SI-4,800-53r5|SI-4(4),CCE|CCE-79202-8,CN-L3|7.1.2.2(c),CN-L3|7.1.2.3(c),CN-L3|7.1.3.5(a),CN-L3|8.1.4.3(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv7|6.2,CSCv7|12.5,CSCv8|8.2,CSCv8|13.6,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|PR.PT-1,CSF|RS.AN-1,CSF|RS.AN-3,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-7,ITSG-33|AU-12,ITSG-33|SI-4,ITSG-33|SI-4(4),LEVEL|2A,NESA|M1.2.2,NESA|M5.5.1,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|NS32,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4,SWIFT-CSCv1|6.5",
        "see_also": "https://workbench.cisecurity.org/benchmarks/14207",
        "aws_action": "DescribeFlowLogsByVpc",
        "xsl_stmt": "VPC:Flow Logs =no flow log foundNo VPC found",
        "regex": "(Flow Logs =|No VPC found)",
        "not_expect": "Flow Logs = no flow log found"
    },
    "custom_item_12": {
        "description": "'No Inbound Rules exist",
        "aws_action": "DescribeSecurityGroups",
        "xsl_stmt": "FAIL - Default Security Group with VPCIDcontains inbound rules.PASS - No Default Security Groups in this region contain any inbound rules.PASS - No VPCs in this region.",
        "regex": ".+",
        "expect": "PASS \\-.+"
    },
    "custom_item_13": {
        "description": "'No Outbound Rules exist",
        "aws_action": "DescribeSecurityGroups",
        "xsl_stmt": "FAIL - Default Security Group with VPCIDcontains outbound rules.PASS - No Default Security Groups in this region contain any outbound rules.PASS - No VPCs in this region.",
        "regex": ".+",
        "expect": "PASS \\-.+"
    }
}