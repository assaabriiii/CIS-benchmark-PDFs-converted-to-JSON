{
    "custom_item_1": {
        "description": "1.1 Ensure Latest SQL Server Service Packs and Hotfixes are Installed",
        "info": "SQL Server patches contain program updates that fix security and product functionality issues found in the software. These patches can be installed with a hotfix which is a single patch, a cumulative update which is a small group of patches or a service pack which is a large collection of patches. The SQL Server version and patch levels should be the most recent compatible with the organizations' operational needs.\n\nRationale:\n\nUsing the most recent SQL Server software, along with all applicable patches can help limit the possibilities for vulnerabilities in the software. The installation version and/or patches applied during setup should be established according to the needs of the organization.",
        "solution": "Identify the current version and patch level of your SQL Server instances and ensure they contain the latest security fixes. Make sure to test these fixes in your test environments before updating production instances.\n\nThe most recent SQL Server patches can be found here:\n\nHotfixes and Cumulative updates: https://docs.microsoft.com/en-us/sql/database-engine/install-windows/latest-updates-for-microsoft-sql-server?view=sql-server-ver15&viewFallbackFrom=sql-server-previousversions\n\nService Packs: https://support.microsoft.com/en-us/help/968382/how-to-obtain-the-latest-service-pack-for-sql-server-2008\n\nDefault Value:\n\nService packs and patches are not installed by default.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/install-windows/latest-updates-for-microsoft-sql-server?view=sql-server-ver15&viewFallbackFrom=sql-server-previousversions\n\nhttps://support.microsoft.com/en-us/help/968382/how-to-obtain-the-latest-service-pack-for-sql-server-2008",
        "reference": "800-171|3.4.8,800-53|CM-7(5),800-53r5|CM-7(5),CSCv6|4,CSCv7|2.2,CSF|PR.IP-1,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),ISO/IEC-27001|A.12.5.1,ISO/IEC-27001|A.12.6.2,ITSG-33|CM-7,LEVEL|1A,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.2,QCSC-v1|3.2,SWIFT-CSCv1|2.3,TBA-FIISB|44.2.2,TBA-FIISB|49.2.3",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT SERVERPROPERTY('ProductLevel') as SP_installed, SERVERPROPERTY('ProductVersion') as Version",
        "sql_expect": "@SERVICE_PACK@"
    },
    "custom_item_2": {
        "description": "2.1 Ensure 'Ad Hoc Distributed Queries' Server Configuration Option is set to '0'",
        "info": "Enabling Ad Hoc Distributed Queries allows users to query data and execute statements on external data sources. This functionality should be disabled.\n\nRationale:\n\nThis feature can be used to remotely access and exploit vulnerabilities on remote SQL Server instances and to run unsafe Visual Basic for Application functions.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'Ad Hoc Distributed Queries', 0;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nDefault Value:\n\n0 (disabled)\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/ad-hoc-distributed-queries-server-configuration-option",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'ad hoc distributed queries'",
        "sql_expect": "Ad Hoc Distributed Queries"
    },
    "custom_item_3": {
        "description": "2.2 Ensure 'CLR Enabled' Server Configuration Option is set to '0'",
        "info": "The clr enabled option specifies whether user assemblies can be run by SQL Server.\n\nRationale:\n\nEnabling use of CLR assemblies widens the attack surface of SQL Server and puts it at risk from both inadvertent and malicious assemblies.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'clr enabled', 0;\nRECONFIGURE;\n\nImpact:\n\nIf CLR assemblies are in use, applications may need to be rearchitected to eliminate their usage before disabling this setting. Alternatively, some organizations may allow this setting to be enabled 1 for assemblies created with the SAFE permission set, but disallow assemblies created with the riskier UNSAFE and EXTERNAL_ACCESS permission sets. To find user-created assemblies, run the following query in all databases, replacingwith each database name:\n\nUSE []\n\nGO\n\nSELECT name AS Assembly_Name, permission_set_desc\n\nFROM sys.assemblies\n\nWHERE is_user_defined = 1;\n\nGO\n\nDefault Value:\n\nBy default, this option is disabled.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/t-sql/statements/create-assembly-transact-sql",
        "reference": "800-171|3.4.1,800-53|CM-2,800-53r5|CM-2,CSCv6|9.1,CSCv7|18.11,CSF|DE.AE-1,CSF|PR.DS-7,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-2,LEVEL|1A,NESA|T3.2.5,NESA|T7.5.1,NIAv2|SS16,QCSC-v1|5.2.1,QCSC-v1|5.2.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'clr enabled'",
        "sql_expect": "clr enabled"
    },
    "custom_item_4": {
        "description": "2.3 Ensure 'Cross DB Ownership Chaining' Server Configuration Option is set to '0'",
        "info": "The cross db ownership chaining option controls cross-database ownership chaining across all databases at the instance (or server) level.\n\nRationale:\n\nWhen enabled, this option allows a member of the db_owner role in a database to gain access to objects owned by a login in any other database, causing an unnecessary information disclosure. When required, cross-database ownership chaining should only be enabled for the specific databases requiring it instead of at the instance level for all databases by using the ALTER DATABASESET DB_CHAINING ON command. This database option may not be changed on the master, model, or tempdb system databases.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'cross db ownership chaining', 0;\nRECONFIGURE;\nGO\n\nDefault Value:\n\nBy default, this option is disabled (0).\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/cross-db-ownership-chaining-server-configuration-option",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|9.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Cross db ownership chaining'",
        "sql_expect": "Cross db ownership chaining"
    },
    "custom_item_5": {
        "description": "2.4 Ensure 'Database Mail XPs' Server Configuration Option is set to '0'",
        "info": "The Database Mail XPs option controls the ability to generate and transmit email messages from SQL Server.\n\nRationale:\n\nDisabling the Database Mail XPs option reduces the SQL Server surface, eliminates a DOS attack vector and channel to exfiltrate data from the database server to a remote host.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'Database Mail XPs', 0;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nDefault Value:\n\nBy default, this option is disabled (0).\n\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms175887(v=sql.105)",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|3.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Database Mail XPs'",
        "sql_expect": "Database Mail XPs"
    },
    "custom_item_6": {
        "description": "2.5 Ensure 'Ole Automation Procedures' Server Configuration Option is set to '0'",
        "info": "The Ole Automation Procedures option controls whether OLE Automation objects can be instantiated within Transact-SQL batches. These are extended stored procedures that allow SQL Server users to execute functions external to SQL Server.\n\nRationale:\n\nEnabling this option will increase the attack surface of SQL Server and allow users to execute functions in the security context of SQL Server.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'Ole Automation Procedures', 0;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nDefault Value:\n\nBy default, this option is disabled (0).\n\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/ole-automation-procedures-server-configuration-option",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|3.1,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Ole Automation Procedures'",
        "sql_expect": "Ole Automation Procedures"
    },
    "custom_item_7": {
        "description": "2.6 Ensure 'Remote Access' Server Configuration Option is set to '0'",
        "info": "The remote access option controls the execution of local stored procedures on remote servers or remote stored procedures on local server.\n\nRationale:\n\nFunctionality can be abused to launch a Denial-of-Service (DoS) attack on remote servers by off-loading query processing to a target.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'remote access', 0;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nRestart the Database Engine.\n\nDefault Value:\n\nBy default, this option is enabled (1).\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-remote-access-server-configuration-option",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Remote access'",
        "sql_expect": "Remote access"
    },
    "custom_item_8": {
        "description": "2.7 Ensure 'Remote Admin Connections' Server Configuration Option is set to '0'",
        "info": "The remote admin connections option controls whether a client application on a remote computer can use the Dedicated Administrator Connection (DAC).\n\nRationale:\n\nThe Dedicated Administrator Connection (DAC) lets an administrator access a running server to execute diagnostic functions or Transact-SQL statements, or to troubleshoot problems on the server, even when the server is locked or running in an abnormal state and not responding to a SQL Server Database Engine connection. In a cluster scenario, the administrator may not actually be logged on to the same node that is currently hosting the SQL Server instance and thus is considered 'remote'. Therefore, this setting should usually be enabled (1) for SQL Server failover clusters; otherwise it should be disabled (0) which is the default.",
        "solution": "Run the following command on non-clustered installations:\n\nEXECUTE sp_configure 'remote admin connections', 0;\nRECONFIGURE;\nGO\n\nDefault Value:\n\nBy default, this option is disabled (0), only local connections may use the DAC.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/remote-admin-connections-server-configuration-option\n\nNotes:\n\nIf it's a clustered installation, it must be enabled as a clustered SQL Server cannot bind to localhost and DAC will be unavailable otherwise. Enable it for clustered installations. Disable it for standalone installations where not required.",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Remote admin connections' AND SERVERPROPERTY('IsClustered') = 0",
        "sql_expect": "Remote admin connections"
    },
    "custom_item_9": {
        "description": "2.8 Ensure 'Scan for Startup Procs' Server Configuration Option is set to '0'",
        "info": "The scan for startup procs option, if enabled, causes SQL Server to scan for and automatically run all stored procedures that are set to execute upon service startup.\n\nRationale:\n\nEnforcing this control reduces the threat of an entity leveraging these facilities for malicious purposes.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'scan for startup procs', 0;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nRestart the Database Engine.\n\n\nImpact:\n\nSetting Scan for Startup Procedures to 0 will prevent certain audit traces and other commonly used monitoring SPs from re-starting on start up. Additionally, replication requires this setting to be enabled (1) and will automatically change this setting if needed.\n\nDefault Value:\n\nBy default, this option is disabled (0).\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-scan-for-startup-procs-server-configuration-option",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|8.4,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Scan for startup procs'",
        "sql_expect": "Scan for startup procs"
    },
    "custom_item_10": {
        "description": "2.9 Ensure 'SQL Mail XPs' Server Configuration Option is set to '0'",
        "info": "SQL Mail provides a mechanism to send, receive, delete, and process e-mail messages using SQL Server.\n\nRationale:\n\nSQL Mail, which is deprecated in favor of Database Mail and if disabled reduces the SQL Server surface, eliminates a DOS attack vector and channel to exfiltrate data from the database server to a remote host.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'SQL Mail XPs', 0;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nDefault Value:\n\n0 (disabled)\n\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms190755(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms190755(v=sql.100).aspx",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'SQL Mail XPs'",
        "sql_expect": "SQL Mail XPs"
    },
    "custom_item_11": {
        "description": "2.10 Ensure 'Trustworthy' Database Property is set to 'Off'",
        "info": "The TRUSTWORTHY database option allows database objects to access objects in other databases under certain circumstances.\n\nRationale:\n\nProvides protection from malicious CLR assemblies or extended procedures.",
        "solution": "Execute the following T-SQL statement against the databases (replacebelow) returned by the Audit Procedure:\n\nALTER DATABASE [] SET TRUSTWORTHY OFF;\n\nDefault Value:\n\nBy default, this database property is OFF (is_trustworthy_on = 0), except for the msdb database in which it is required to be ON.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/relational-databases/security/trustworthy-database-property\n\nhttps://support.microsoft.com/it-it/help/2183687/guidelines-for-using-the-trustworthy-database-setting-in-sql-server",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|3.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name FROM sys.databases WHERE is_trustworthy_on = 1 AND name != 'msdb'"
    },
    "custom_item_12": {
        "description": "2.14 Ensure 'sa' Login Account is set to 'Disabled'",
        "info": "The sa account is a widely known and often widely used SQL Server account with sysadmin privileges. This is the original login created during installation and always has the principal_id=1 and sid=0x01.\n\nRationale:\n\nEnforcing this control reduces the probability of an attacker executing brute force attacks against a well-known principal.",
        "solution": "Execute the following T-SQL query:\n\nUSE [master]\nGO\nDECLARE @tsql nvarchar(max)\nSET @tsql = 'ALTER LOGIN ' + SUSER_NAME(0x01) + ' DISABLE'\nEXEC (@tsql)\nGO\n\n\nImpact:\n\nIt is not a good security practice to code applications or scripts to use the sa account. However, if this has been done, disabling the sa account will prevent scripts and applications from authenticating to the database server and executing required tasks or functions.\n\nDefault Value:\n\nBy default, the sa login account is disabled at install time when Windows Authentication Mode is selected. If mixed mode (SQL Server and Windows Authentication) is selected at install, the default for the sa login is enabled.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms188786(v=sql.100).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms188786(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms189828(v=sql.100).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms189828(v=sql.105).aspx",
        "reference": "800-171|3.1.1,800-53|AC-2(3),800-53r5|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv6|5.1,CSCv7|16.8,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(is_disabled as int) FROM sys.server_principals WHERE sid = 0x01 AND is_disabled = 0"
    },
    "custom_item_13": {
        "description": "2.15 Ensure 'sa' Login Account has been renamed",
        "info": "The sa account is a widely known and often widely used SQL Server login with sysadmin privileges. The sa login is the original login created during installation and always has principal_id=1 and sid=0x01.\n\nRationale:\n\nIt is more difficult to launch password-guessing and brute-force attacks against the sa login if the name is not known.",
        "solution": "Replace thevalue within the below syntax and execute to rename the sa login.\n\nALTER LOGIN sa WITH NAME =;\n\nImpact:\n\nIt is not a good security practice to code applications or scripts to use the sa account. However, if this has been done renaming the sa account will prevent scripts and applications for authenticating to the database server and executing required tasks or functions.\n\nDefault Value:\n\nBy default, the sa login name is 'sa'.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/relational-databases/security/choose-an-authentication-mode",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|5,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name FROM sys.server_principals WHERE sid = 0x01",
        "sql_expect": "@SYS_ADMIN@"
    },
    "custom_item_14": {
        "description": "2.16 Ensure 'xp_cmdshell' Server Configuration Option is set to '0'",
        "info": "The xp_cmdshell option controls whether the xp_cmdshell extended stored procedure can be used by an authenticated SQL Server user to execute operating-system command shell commands and return results as rows within the SQL client.\n\nRationale:\n\nThe xp_cmdshell procedure is commonly used by attackers to read or write data to/from the underlying Operating System of a database server.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'xp_cmdshell', 0;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nDefault Value:\n\nBy default, this option is disabled (0).\n\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/xp-cmdshell-server-configuration-option",
        "reference": "800-171|3.14.6,800-171|3.14.7,800-53|SI-4,800-53r5|SI-4,CN-L3|7.1.3.5(a),CN-L3|8.1.10.5(b),CN-L3|8.1.10.6(f),CSCv6|9.1,CSCv7|9.2,CSF|DE.AE-1,CSF|DE.AE-2,CSF|DE.AE-3,CSF|DE.AE-4,CSF|DE.CM-1,CSF|DE.CM-5,CSF|DE.CM-6,CSF|DE.CM-7,CSF|DE.DP-2,CSF|DE.DP-3,CSF|DE.DP-4,CSF|DE.DP-5,CSF|ID.RA-1,CSF|PR.DS-5,CSF|PR.IP-8,CSF|RS.AN-1,CSF|RS.CO-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|SI-4,LEVEL|1A,NESA|M1.2.2,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|5.2.3,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'xp_cmdshell'",
        "sql_expect": "xp_cmdshell"
    },
    "custom_item_15": {
        "description": "3.1 Ensure 'Server Authentication' Property is set to 'Windows Authentication Mode'",
        "info": "Uses Windows Authentication to validate attempted connections.\n\nRationale:\n\nWindows provides a more robust authentication mechanism than SQL Server authentication.",
        "solution": "Perform either the GUI or T-SQL method shown:\n\nGUI Method\n\nOpen SQL Server Management Studio.\n\nOpen the Object Explorer tab and connect to the target database instance.\n\nRight click the instance name and select Properties.\n\nSelect the Security page from the left menu.\n\nSet the Server authentication setting to Windows Authentication Mode.\n\n\nT-SQL Method\n\nRun the following T-SQL in a Query Window:\n\nUSE [master]\nGO\nEXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'Software\\Microsoft\\MSSQLServer\\MSSQLServer', N'LoginMode', REG_DWORD, 1\nGO\n\nRestart the SQL Server service for the change to take effect.\n\nDefault Value:\n\nWindows Authentication Mode\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms188470(v=sql.100).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms188470(v=sql.105).aspx",
        "reference": "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv6|16.9,CSCv7|16.2,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,LEVEL|1A,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT SERVERPROPERTY('IsIntegratedSecurityOnly') as [login_mode];",
        "sql_expect": "1"
    },
    "custom_item_16": {
        "description": "3.2 Ensure CONNECT permissions on the 'guest user' is Revoked within all SQL Server databases excluding the master, msdb and tempdb",
        "info": "Remove the right of the guest user to connect to SQL Server databases, except for master, msdb, and tempdb.\n\nRationale:\n\nA login assumes the identity of the guest user when a login has access to SQL Server but does not have access to a database through its own account and the database has a guest user account. Revoking the CONNECT permission for the guest user will ensure that a login is not able to access database information without explicit access to do so.",
        "solution": "The following code snippet revokes CONNECT permissions from the guest user in a database. Replaceas appropriate:\n\nUSE;\nGO\nREVOKE CONNECT FROM guest;\n\n\nImpact:\n\nWhen CONNECT permission to the guest user is revoked, a SQL Server instance login must be mapped to a database user explicitly in order to have access to the database.\n\nDefault Value:\n\nThe guest user account is added to each new database but without CONNECT permission by default\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/relational-databases/policy-based-management/guest-permissions-on-user-databases\n\nNotes:\n\nThe guest account cannot have the CONNECT permission revoked in master, msdb and tempdb, but this permission should be revoked in all other databases on the SQL Server instance.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|16,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "EXEC sp_msforeachdb 'use [?] SELECT DB_Name = ''?'',name FROM sys.sysusers WHERE name = ''guest'' AND hasdbaccess != ''0'' AND ''?'' != ''master'' AND ''?'' != ''msdb'' AND ''?'' != ''tempdb''';"
    },
    "custom_item_17": {
        "description": "3.3 Ensure 'Orphaned Users' are Dropped From SQL Server Databases",
        "info": "A database user for which the corresponding SQL Server login is undefined or is incorrectly defined on a server instance cannot log in to the instance and is referred to as orphaned and should be removed.\n\nRationale:\n\nOrphan users should be removed to avoid potential misuse of those broken users in any way.\n\nNOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.",
        "solution": "If the orphaned user cannot or should not be matched to an existing or new login using the Microsoft documented process referenced below, run the following T-SQL query in the appropriate database to remove an orphan user:\n\nUSE [];\nGO\nDROP USER;\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms175475(v=sql.100).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms175475(v=sql.105).aspx",
        "reference": "800-171|3.1.1,800-53|AC-2(3),800-53r5|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv6|16,CSCv7|16.8,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "EXEC sp_MSforeachdb 'USE [?] EXEC sp_change_users_login @Action=''Report'';'"
    },
    "custom_item_18": {
        "description": "3.7 Ensure only the default permissions specified by Microsoft are granted to the public server role",
        "info": "public is a special fixed server role containing all logins. Unlike other fixed server roles, permissions can be changed for the public role. In keeping with the principle of least privileges, the public server role should not be used to grant permissions at the server scope as these would be inherited by all users.\n\nRationale:\n\nEvery SQL Server login belongs to the public role and cannot be removed from this role. Therefore, any permissions granted to this role will be available to all logins unless they have been explicitly denied to specific logins or user-defined server roles.\n\nNOTE: Nessus has not performed this check. Please review the benchmark to ensure target compliance.",
        "solution": "Add the extraneous permissions found in the Audit query results to the specific logins to user-defined server roles which require the access.\n\nRevoke thefrom the public role as shown below\n\nUSE [master]\nGO\nREVOKEFROM public;\nGO\n\nImpact:\n\nWhen the extraneous permissions are revoked from the public server role, access may be lost unless the permissions are granted to the explicit logins or to user-defined server roles containing the logins which require the access.\n\nDefault Value:\n\nBy default, the public server role is granted VIEW ANY DATABASE permission and the CONNECT permission on the default endpoints (TSQL Local Machine, TSQL Named Pipes, TSQL Default TCP, TSQL Default VIA). The VIEW ANY DATABASE permission allows all logins to see database metadata, unless explicitly denied.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles\n\nhttps://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles#permissions-of-fixed-server-roles",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|5.1,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT * FROM master.sys.server_permissions WHERE (grantee_principal_id = SUSER_SID(N'public') and state_desc LIKE 'GRANT%') AND NOT (state_desc = 'GRANT' and [permission_name] = 'VIEW ANY DATABASE' and class_desc = 'SERVER') AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 2) AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 3) AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 4) AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and class_desc = 'ENDPOINT' and major_id = 5);"
    },
    "custom_item_19": {
        "description": "3.8 Ensure Windows BUILTIN groups are not SQL Logins",
        "info": "Prior to SQL Server 2008, the BUILTIN\\Administrators group was added as a SQL Server login with sysadmin privileges during installation by default. Best practices promote creating an Active Directory level group containing approved DBA staff accounts and using this controlled AD group as the login with sysadmin privileges. The AD group should be specified during SQL Server installation and the BUILTIN\\Administrators group would therefore have no need to be a login.\n\nRationale:\n\nThe BUILTIN groups (Administrators, Everyone, Authenticated Users, Guests, etc) generally contain very broad memberships which would not meet the best practice of ensuring only the necessary users have been granted access to a SQL Server instance. These groups should not be used for any level of access into a SQL Server Database Engine instance.",
        "solution": "For each BUILTIN login, if needed create a more restrictive AD group containing only the required user accounts.\n\nAdd the AD group or individual Windows accounts as a SQL Server login and grant it the permissions required.\n\nDrop the BUILTIN login using the syntax below after replacingin [BUILTIN\\].\n\nUSE [master]\nGO\nDROP LOGIN [BUILTIN\\]\nGO\n\nImpact:\n\nBefore dropping the BUILTIN group logins, ensure that alternative AD Groups or Windows logins have been added with equivalent permissions. Otherwise, the SQL Server instance may become totally inaccessible.\n\nDefault Value:\n\nBy default, no BUILTIN groups are added as SQL logins.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT pr.[name], pe.[permission_name], pe.[state_desc] FROM sys.server_principals pr JOIN sys.server_permissions pe ON pr.principal_id = pe.grantee_principal_id WHERE pr.name like 'BUILTIN%';"
    },
    "custom_item_20": {
        "description": "3.9 Ensure Windows local groups are not SQL Logins",
        "info": "Local Windows groups should not be used as logins for SQL Server instances.\n\nRationale:\n\nAllowing local Windows groups as SQL Logins provides a loophole whereby anyone with OS level administrator rights (and no SQL Server rights) could add users to the local Windows groups and thereby give themselves or others access to the SQL Server instance.",
        "solution": "For each LocalGroupName login, if needed create an equivalent AD group containing only the required user accounts.\n\nAdd the AD group or individual Windows accounts as a SQL Server login and grant it the permissions required.\n\nDrop the LocalGroupName login using the syntax below after replacing.\n\nUSE [master]\nGO\nDROP LOGIN []\nGO\n\n\nImpact:\n\nBefore dropping the local group logins, ensure that alternative AD Groups or Windows logins have been added with equivalent permissions. Otherwise, the SQL Server instance may become totally inaccessible.\n\nDefault Value:\n\nBy default, no local groups are added as SQL logins.",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "USE [master] SELECT pr.[name] AS LocalGroupName, pe.[permission_name], pe.[state_desc] FROM sys.server_principals pr JOIN sys.server_permissions pe ON pr.[principal_id] = pe.[grantee_principal_id] WHERE pr.[type_desc] = 'WINDOWS_GROUP' AND pr.[name] like CAST(SERVERPROPERTY('MachineName') AS nvarchar) + '%';"
    },
    "custom_item_21": {
        "description": "3.10 Ensure the public role in the msdb database is not granted access to SQL Agent proxies",
        "info": "The public database role contains every user in the msdb database. SQL Agent proxies define a security context in which a job step can run.\n\nRationale:\n\nGranting access to SQL Agent proxies for the public role would allow all users to utilize the proxy which may have high privileges. This would likely break the principle of least privileges.",
        "solution": "Ensure the required security principals are explicitly granted access to the proxy (use sp_grant_login_to_proxy).\n\nRevoke access to thefrom the public role.\n\nUSE [msdb]\nGO\nEXEC dbo.sp_revoke_login_from_proxy @name = N'public', @proxy_name = N'';\nGO\n\nImpact:\n\nBefore revoking the public role from the proxy, ensure that alternative logins or appropriate user-defined database roles have been added with equivalent permissions. Otherwise, SQL Agent job steps dependent upon this access will fail.\n\nDefault Value:\n\nBy default, the msdb public database role does not have access to any proxy.\n\nReferences:\n\nhttps://support.microsoft.com/en-us/help/2160741/best-practices-in-configuring-sql-server-agent-proxy-account",
        "reference": "800-171|3.1.1,800-53|AC-3,800-53r5|AC-3,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSCv6|14.4,CSCv7|14.6,CSF|PR.AC-4,CSF|PR.PT-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3,LEVEL|1A,NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,TBA-FIISB|31.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "USE [msdb] SELECT sp.name AS proxyname FROM dbo.sysproxylogin spl JOIN sys.database_principals dp ON dp.sid = spl.sid JOIN sysproxies sp ON sp.proxy_id = spl.proxy_id WHERE principal_id = USER_ID('public');"
    },
    "custom_item_22": {
        "description": "4.2 Ensure 'CHECK_EXPIRATION' Option is set to 'ON' for All SQL Authenticated Logins Within the Sysadmin Role",
        "info": "Applies the same password expiration policy used in Windows to passwords used inside SQL Server.\n\nRationale:\n\nEnsuring SQL logins comply with the secure password policy applied by the Windows Server Benchmark will ensure the passwords for SQL logins with sysadmin privileges are changed on a frequent basis to help prevent compromise via a brute force attack. CONTROL SERVER is an equivalent permission to sysadmin and logins with that permission should also be required to have expiring passwords.",
        "solution": "For eachfound by the Audit Procedure, execute the following T-SQL statement:\n\nALTER LOGIN [] WITH CHECK_EXPIRATION = ON;\n\n\nImpact:\n\nThis is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins.\n\nRegarding limiting this rule to only logins with sysadmin and CONTROL SERVER privileges, there are too many cases of applications that run with less than sysadmin level privileges that have hard-coded passwords or effectively hard-coded passwords (whatever is set the first time is nearly impossible to change). There are several line-of-business applications that are considered best of breed which have this failing.\n\nAlso, keep in mind that the password policy is taken from the computer's local policy, which is taken from the Default Domain Policy setting. Many organizations have a different password policy regarding the service accounts. These are handled in AD by setting the account's password to not expire and having some other process track when the password needs to be changed. With this second control in place, this is perfectly acceptable from an audit perspective. If you treat a SQL Server login as a service account, then you have to do the same. This ensures that the password change happens during a communicated downtime window and not arbitrarily.\n\nDefault Value:\n\nCHECK_EXPIRATION is ON by default when using SSMS to create a SQL authenticated login.\n\nCHECK_EXPIRATION is OFF by default when using T-SQL CREATE LOGIN syntax without specifying the CHECK_EXPIRATION option.\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/previous-versions/sql/sql-server-2008-r2/ms161959(v=sql.105)\n\nhttps://docs.microsoft.com/en-us/previous-versions/sql/sql-server-2008/ms161959(v=sql.100)",
        "reference": "800-171|3.1.1,800-53|AC-2(3),800-53r5|AC-2(3),CN-L3|7.1.3.2(e),CN-L3|8.1.4.2(c),CSCv6|16.2,CSCv7|16.10,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ISO/IEC-27001|A.9.2.6,ITSG-33|AC-2(3),LEVEL|1A,NIAv2|AM26,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2,TBA-FIISB|36.2.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT SQLLoginName = sp.name, PasswordExpirationEnforced = CAST(sl.is_expiration_checked as int) FROM sys.server_principals sp JOIN sys.sql_logins AS sl ON sl.principal_id = sp.principal_id WHERE sp.type_desc = 'SQL_LOGIN' AND sl.is_expiration_checked = '0';"
    },
    "custom_item_23": {
        "description": "4.3 Ensure 'CHECK_POLICY' Option is set to 'ON' for All SQL Authenticated Logins",
        "info": "Applies the same password complexity policy used in Windows to passwords used inside SQL Server.\n\nRationale:\n\nEnsure SQL authenticated login passwords comply with the secure password policy applied by the Windows Server Benchmark so that they cannot be easily compromised via brute force attack.",
        "solution": "For eachfound by the Audit Procedure, execute the following T-SQL statement:\n\nALTER LOGIN [] WITH CHECK_POLICY = ON;\n\nImpact:\n\nThis is a mitigating recommendation for systems which cannot follow the recommendation to use only Windows Authenticated logins.\n\nWeak passwords can lead to compromised systems. SQL Server authenticated logins will utilize the password policy set in the computer's local policy, which is typically set by the Default Domain Policy setting.\n\nThe setting is only enforced when the password is changed. This setting does not force existing weak passwords to be changed.\n\nDefault Value:\n\nCHECK_POLICY is ON\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms161959(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms161959(v=sql.100).aspx",
        "reference": "800-171|3.5.2,800-53|IA-5(1),800-53r5|IA-5(1),CSCv6|16,CSCv7|4.4,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|4.1",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT SQLLoginName = sp.name, PasswordPolicyEnforced = CAST(sl.is_policy_checked as int) FROM sys.server_principals sp JOIN sys.sql_logins AS sl ON sl.principal_id = sp.principal_id WHERE sp.type_desc = 'SQL_LOGIN' AND sl.is_policy_checked = '0';"
    },
    "custom_item_24": {
        "description": "5.1 Ensure 'Maximum number of error log files' is set to greater than or equal to '12'",
        "info": "SQL Server error log files must be protected from loss. The log files must be backed up before they are overwritten. Retaining more error logs helps prevent loss from frequent recycling before backups can occur.\n\nRationale:\n\nThe SQL Server error log contains important information about major server events and login attempt information as well.",
        "solution": "Adjust the number of logs to prevent data loss. The default value of 6 may be insufficient for a production environment. Perform either the GUI or T-SQL method shown:\n\nGUI Method\n\nOpen SQL Server Management Studio.\n\nOpen Object Explorer and connect to the target instance.\n\nNavigate to the Management tab in Object Explorer and expand. Right click on the SQL Server Logs file and select Configure\n\nCheck the Limit the number of error log files before they are recycled\n\nSet the Maximum number of error log files to greater than or equal to 12\n\nT-SQL Method\n\nRun the following T-SQL to change the number of error log files, replacewith your desired number of error log files:\n\nEXEC master.sys.xp_instance_regwrite\nN'HKEY_LOCAL_MACHINE',\nN'Software\\Microsoft\\MSSQLServer\\MSSQLServer',\nN'NumErrorLogs',\nREG_DWORD,;\n\nImpact:\n\nOnce the max number of error logs is reached, the oldest error log file is deleted each time SQL Server restarts or sp_cycle_errorlog is executed.\n\nDefault Value:\n\n6 SQL Server error log files in addition to the current error log file are retained by default.\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms177285(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms177285(v=sql.100).aspx",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv6|6.3,CSCv7|6.4,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "DECLARE @NumErrorLogs int; EXEC master.sys.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'Software\\Microsoft\\MSSQLServer\\MSSQLServer', N'NumErrorLogs', @NumErrorLogs OUTPUT; SELECT ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles];"
    },
    "custom_item_25": {
        "description": "5.2 Ensure 'Default Trace Enabled' Server Configuration Option is set to '1'",
        "info": "The default trace provides audit logging of database activity including account creations, privilege elevation and execution of DBCC commands.\n\nRationale:\n\nDefault trace provides valuable audit information regarding security-related activities on the server.",
        "solution": "Run the following T-SQL command:\n\nEXECUTE sp_configure 'show advanced options', 1;\nRECONFIGURE;\nEXECUTE sp_configure 'default trace enabled', 1;\nRECONFIGURE;\nGO\nEXECUTE sp_configure 'show advanced options', 0;\nRECONFIGURE;\n\nDefault Value:\n\n1 (on)\n\n\n\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/database-engine/configure-windows/default-trace-enabled-server-configuration-option",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSCv6|6.2,CSCv7|6.2,CSCv7|6.3,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, CAST(value as int) as value_configured, CAST(value_in_use as int) as value_in_use FROM sys.configurations WHERE name = 'Default trace enabled'",
        "sql_expect": "Default trace enabled"
    },
    "custom_item_26": {
        "description": "5.3 Ensure 'Login Auditing' is set to Both 'failed' and 'successful logins'",
        "info": "Setting logs both successful and failed login SQL Server authentication attempts.\n\nRationale:\n\nLogging successful and failed logins provides key information that can be used to detect/confirm password guessing attacks. Further, logging successful login attempts can be used to confirm server access during forensic investigations.",
        "solution": "Perform the following steps to set the level of auditing:\n\nOpen SQL Server Management Studio.\n\nRight click the target instance and select Properties and navigate to the Security tab.\n\nSelect the option Both failed and successful logins under the Login Auditing section and click OK.\n\nRestart the SQL Server instance.\n\nDefault Value:\n\nBy default, only failed login attempts are captured.\n\nReferences:\n\nhttp://technet.microsoft.com/en-us/library/ms188470(v=sql.105).aspx\n\nhttp://technet.microsoft.com/en-us/library/ms188470(v=sql.100).aspx",
        "reference": "800-171|3.1.2,800-53|AC-2(12),800-53r5|AC-2(12),CN-L3|7.1.3.2(d),CSCv6|16.10,CSCv7|16.13,CSF|DE.CM-1,CSF|DE.CM-3,CSF|PR.AC-1,CSF|PR.AC-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.2.1,ITSG-33|AC-2,LEVEL|1A,NESA|M5.3.1,NIAv2|AM28,NIAv2|NS5j,NIAv2|SS14e,QCSC-v1|5.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,QCSC-v1|15.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "XP_loginconfig 'audit level'",
        "sql_expect": "audit level"
    },
    "custom_item_27": {
        "description": "6.2 Ensure 'CLR Assembly Permission Set' is set to 'SAFE_ACCESS' for All CLR Assemblies",
        "info": "Setting CLR Assembly Permission Sets to SAFE_ACCESS will prevent assemblies from accessing external system resources such as files, the network, environment variables, or the registry.\n\nRationale:\n\nAssemblies with EXTERNAL_ACCESS or UNSAFE permission sets can be used to access sensitive areas of the operating system, steal and/or transmit data and alter the state and other protection measures of the underlying Windows Operating System.\n\nAssemblies which are Microsoft-created (is_user_defined = 0) are excluded from this check as they are required for overall system functionality.",
        "solution": "ALTER ASSEMBLYWITH PERMISSION_SET = SAFE;\n\nImpact:\n\nThe remediation measure should first be tested within a test environment prior to production to ensure the assembly still functions as designed with SAFE permission setting.\n\n\nDefault Value:\n\nSAFE permission set\n\nReferences:\n\nhttp://msdn.microsoft.com/en-us/library/ms345101(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms189790(v=sql.100).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms189790(v=sql.105).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms345101(v=sql.100).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms186711(v=sql.100).aspx\n\nhttp://msdn.microsoft.com/en-us/library/ms186711(v=sql.105).aspx",
        "reference": "800-171|3.4.2,800-53|CM-6,800-53r5|CM-6,CSCv6|18,CSCv7|5.1,CSF|PR.IP-1,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6,LEVEL|1A,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "SELECT name, permission_set_desc FROM sys.assemblies WHERE is_user_defined = 1 AND permission_set_desc != 'SAFE_ACCESS';"
    },
    "custom_item_28": {
        "description": "7.1 Ensure 'Symmetric Key encryption algorithm' is set to 'AES_128' or higher in non-system databases",
        "info": "Per the Microsoft Best Practices, only the SQL Server AES algorithm options, AES_128, AES_192, and AES_256, should be used for a symmetric key encryption algorithm.\n\nRationale:\n\nThe following algorithms (as referred to by SQL Server) are considered weak or deprecated and should no longer be used in SQL Server: DES, DESX, RC2, RC4, RC4_128.\n\nMany organizations may accept the Triple DES algorithms (TDEA) which use keying options 1 (3 key aka 3TDEA) or keying option 2 (2 key aka 2TDEA). In SQL Server, these are referred to as TRIPLE_DES_3KEY and TRIPLE_DES respectively. Additionally, the SQL Server algorithm named DESX is actually the same implementation as the TRIPLE_DES_3KEY option. However, using the DESX identifier as the algorithm type has been deprecated and its usage is now discouraged.",
        "solution": "Refer to Microsoft SQL Server Books Online ALTER SYMMETRIC KEY entry: http://msdn.microsoft.com/en-US/library/ms189440.aspx\n\nImpact:\n\nEliminates use of weak and deprecated algorithms which may put a system at higher risk of an attacker breaking the key.\n\nEncrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it.\n\nDefault Value:\n\nnone\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/t-sql/statements/alter-symmetric-key-transact-sql\n\nhttp://support.microsoft.com/kb/2162020",
        "reference": "800-171|3.13.8,800-53|SC-8,800-53r5|SC-8,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv6|14.2,CSCv7|14.4,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8,ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "EXEC sp_msforeachdb 'use [?] SELECT db_name() AS Database_Name, name AS Key_Name FROM sys.symmetric_keys WHERE algorithm_desc NOT IN (''AES_128'', ''AES_192'', ''AES_256'') AND db_id() > 4';"
    },
    "custom_item_29": {
        "description": "7.2 Ensure Asymmetric Key Size is set to 'greater than or equal to 2048' in non-system databases",
        "info": "Microsoft Best Practices recommend to use at least a 2048-bit encryption algorithm for asymmetric keys.\n\nRationale:\n\nThe RSA_2048 encryption algorithm for asymmetric keys in SQL Server is the highest bit-level provided and therefore the most secure available choice (other choices are RSA_512 and RSA_1024).",
        "solution": "Refer to Microsoft SQL Server Books Online ALTER ASYMMETRIC KEY entry: http://msdn.microsoft.com/en-us/library/ms187311.aspx\n\nImpact:\n\nThe higher-bit level may result in slower performance, but reduces the likelihood of an attacker breaking the key.\n\nEncrypted data cannot be compressed, but compressed data can be encrypted. If you use compression, you should compress data before encrypting it.\n\nDefault Value:\n\nNone\n\nReferences:\n\nhttps://docs.microsoft.com/en-us/sql/t-sql/statements/alter-asymmetric-key-transact-sql\n\nhttp://support.microsoft.com/kb/2162020",
        "reference": "800-171|3.13.8,800-53|SC-8,800-53r5|SC-8,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv6|14.2,CSCv7|14.4,CSF|PR.DS-2,CSF|PR.DS-5,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8,ITSG-33|SC-8a.,LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2",
        "see_also": "https://workbench.cisecurity.org/files/2834",
        "sql_request": "EXEC sp_MSforeachdb 'use [?] SELECT db_name() AS Database_Name, name AS Key_Name FROM sys.asymmetric_keys WHERE key_length < 2048 AND db_id() > 4';"
    }
}