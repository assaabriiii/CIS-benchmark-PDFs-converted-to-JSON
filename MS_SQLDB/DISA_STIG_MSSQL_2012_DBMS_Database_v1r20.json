{
    "custom_item_1": {
        "description": "SQL2-00-021300 - SQL Server must protect data at rest and ensure confidentiality and integrity of data.",
        "info": "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information.  Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.\n\nUser-generated data, as well as, application-specific configuration data, needs to be protected. Configurations and/or rule sets for firewalls, gateways, intrusion detection/prevention systems, filtering routers, and authenticator content are examples of system information likely requiring protection. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.\n\nIf the confidentiality and integrity of SQL Server data is not protected, the data will be open to compromise and unauthorized modification.\n\nProtective measures include encryption, physical security of the facility where the storage devices reside, operating system file permissions, and organizational controls.  Each of these should be applied as necessary and appropriate.",
        "solution": "Apply appropriate controls to protect the confidentiality and integrity of data on a secondary device.\n\nWhere encryption is required, this can be done by full-disk encryption or by database encryption. To enable database encryption, create a master key, create a database encryption key, and protect it by using mechanisms tied to the master key, and then set encryption on.\n\nImplement physical security measures, operating system access control lists and organizational controls appropriate to the sensitivity level of the data in the database(s).",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-53265r5_rule,STIG-ID|SQL2-00-021300,Vuln-ID|V-40911",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT d.name AS [Database Name],CASE e.encryption_state WHEN 0 THEN 'No database encryption key present, no encryption' WHEN 1 THEN 'Unencrypted' WHEN 2 THEN 'Encryption in progress' WHEN 3 THEN 'Encrypted' WHEN 4 THEN 'Key change in progress' WHEN 5 THEN 'Decryption in progress' WHEN 6 THEN 'Protection change in progress' END AS [Encryption State] FROM sys.dm_database_encryption_keys e RIGHT JOIN sys.databases d ON DB_NAME(e.database_id) = d.name WHERE d.name NOT IN ('master','model','msdb')ORDER BY 1;",
        "sql_expect": ".+"
    },
    "custom_item_2": {
        "description": "SQL2-00-009200 - SQL Server must be protected from unauthorized access by developers.",
        "info": "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.\n\nDevelopers granted elevated database and/or operating system privileges on production databases can affect the operation and/or security of the database system. Operating system and database privileges assigned to developers on production systems should not be allowed.",
        "solution": "Remove unnecessary developer accounts from SQL Server instances hosting only production databases, by running the following SQL script:\n\nUSE master\nDROP LOGIN <'account name'>",
        "reference": "800-171|3.1.4,800-53|AC-5c.,800-53r5|AC-5c.,CAT|II,CCI|CCI-002220,CSF|PR.DS-5,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ITSG-33|AC-5c.,NESA|T5.4.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-53920r4_rule,STIG-ID|SQL2-00-009200,SWIFT-CSCv1|5.1,Vuln-ID|V-41395",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT name AS 'Account Name', CONVERT(varchar(10), create_date, 20) AS 'Account Create Date', CONVERT(varchar(10), LOGINPROPERTY(name, 'PasswordLastSetTime'), 20) AS 'Password Last Set on' FROM sys.server_principals WHERE NOT TYPE IN ('C', 'R', 'U') AND NOT name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##') AND sid <> CONVERT(VARBINARY(85), 0x01) AND is_disabled <> 1 ORDER BY name"
    },
    "custom_item_3": {
        "description": "SQL2-00-009300 - SQL Server must be protected from unauthorized access by developers on shared production/development host systems.",
        "info": "Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.\n\nDevelopers granted elevated database and/or operating system privileges on systems that support both development and production databases can affect the operation and/or security of the production database system. Operating system and database privileges assigned to developers on shared development and production systems must be restricted.",
        "solution": "Within the system documentation, clearly identify if SQL Server is hosting both development and production databases.\n\nRestrict developer privileges to production objects to only objects and data where those privileges are required and authorized by running the following scripts as needed:\n\nRemove the user from direct access to server permission by running the following script:\nUSE master\nREVOKE <'server permission name'> TO <'account name'> CASCADE\n\nRemove the user from user-defined role access by running the following script:\nUSE master\nALTER SERVER ROLE [<'server role name'>] DROP MEMBER <'user name'>\n\nRemove permissions from developer user accounts that grant permissions beyond the development database.\n\nNavigate to SQL Server Management Studio >> Object Explorer >> <'SQL Server name'> >> Security >> Logins >> right click <'administrator account name'> >> Properties >> User >> Securables.\n\nRemove 'Securables' permissions from accounts that are beyond what is required.\n\nNavigate from 'Securables' to 'Server Roles'.\n\nRemove 'Server Roles' permissions from accounts that are beyond what is required.\n\nNavigate from 'Server Roles' to 'Users mapped to the login'.\n\nRemove 'Users mapped to the login' permissions from accounts that are beyond what is required.",
        "reference": "800-171|3.1.4,800-53|AC-5c.,800-53r5|AC-5c.,CAT|II,CCI|CCI-002220,CSF|PR.DS-5,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.6.1.2,ITSG-33|AC-5c.,NESA|T5.4.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-53921r2_rule,STIG-ID|SQL2-00-009300,SWIFT-CSCv1|5.1,Vuln-ID|V-41396",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT name AS 'Account Name', CONVERT(varchar(10), create_date, 20) AS 'Account Create Date', CONVERT(varchar(10), LOGINPROPERTY(name, 'PasswordLastSetTime'), 20) AS 'Password Last Set on' FROM sys.server_principals WHERE NOT TYPE IN ('C', 'R', 'U') AND NOT name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##') AND sid <> CONVERT(VARBINARY(85), 0x01) AND is_disabled <> 1 ORDER BY name"
    },
    "custom_item_4": {
        "description": "SQL2-00-011050 - SQL Server utilizing Discretionary Access Control (DAC) must enforce a policy that limits propagation of access rights.",
        "info": "Discretionary Access Control (DAC) is based on the premise that individual users are 'owners' of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment.\n\nDAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled file permissions. DAC models have the potential for the access controls to propagate without limit, resulting in unauthorized access to said objects.\n\nWhen applications provide a discretionary access control mechanism, the application must be able to limit the propagation of those access rights.\n\nThe DBMS must ensure the recipient of object permissions possesses only the access intended. The database must enforce the ability to limit unauthorized rights propagation. If propagation is not prevented, users can continue to grant rights to other users without limit.",
        "solution": "Document and obtain approval for each GRANT_WITH_GRANT_OPTION that is required.\n\nCorrect each unapproved GRANT_WITH_GRANT_OPTION with REVOKE and GRANT statements of the form (replacing 'UPDATE' with the actual permission at issue):\nREVOKE UPDATE ON SampleTable FROM SampleUserOrRole CASCADE;\nGRANT UPDATE ON SampleTable TO SampleRole;  -- Note, no WITH GRANT OPTION clause here.",
        "reference": "800-171|3.1.1,800-53|AC-3(4),800-53r5|AC-3(4),CAT|II,CCI|CCI-002165,CN-L3|8.1.4.2(f),CN-L3|8.1.4.11(b),CN-L3|8.1.10.2(c),CN-L3|8.5.3.1,CN-L3|8.5.4.1(a),CSF|PR.AC-4,CSF|PR.PT-3,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.9.4.1,ISO/IEC-27001|A.9.4.5,ITSG-33|AC-3(4),NESA|T4.2.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.2,NESA|T7.5.3,NIAv2|AM3,NIAv2|SS29,QCSC-v1|3.2,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-53918r3_rule,STIG-ID|SQL2-00-011050,TBA-FIISB|31.1,Vuln-ID|V-41394",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "Select u.name, p.permission_name from sys.database_permissions as p JOIN sys.server_principals AS u ON u.principal_id = p.grantee_principal_id WHERE state_desc = 'GRANT_WITH_GRANT_OPTION'"
    },
    "custom_item_5": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 14'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 14",
        "sql_expect": "14"
    },
    "custom_item_6": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 15'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 15",
        "sql_expect": "15"
    },
    "custom_item_7": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 18'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 18",
        "sql_expect": "18"
    },
    "custom_item_8": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 20'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 20",
        "sql_expect": "20"
    },
    "custom_item_9": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 102'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 102",
        "sql_expect": "102"
    },
    "custom_item_10": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 103'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 103",
        "sql_expect": "103"
    },
    "custom_item_11": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 104'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 104",
        "sql_expect": "104"
    },
    "custom_item_12": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 105'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 105",
        "sql_expect": "105"
    },
    "custom_item_13": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 106'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 106",
        "sql_expect": "106"
    },
    "custom_item_14": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 107'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 107",
        "sql_expect": "107"
    },
    "custom_item_15": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 108'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 108",
        "sql_expect": "108"
    },
    "custom_item_16": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 109'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 109",
        "sql_expect": "109"
    },
    "custom_item_17": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 110'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 110",
        "sql_expect": "110"
    },
    "custom_item_18": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 111'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 111",
        "sql_expect": "111"
    },
    "custom_item_19": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 112'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 112",
        "sql_expect": "112"
    },
    "custom_item_20": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 113'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 113",
        "sql_expect": "113"
    },
    "custom_item_21": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 115'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 115",
        "sql_expect": "115"
    },
    "custom_item_22": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 116'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 116",
        "sql_expect": "116"
    },
    "custom_item_23": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 117'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 117",
        "sql_expect": "117"
    },
    "custom_item_24": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 118'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 118",
        "sql_expect": "118"
    },
    "custom_item_25": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 128'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 128",
        "sql_expect": "128"
    },
    "custom_item_26": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 129'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 129",
        "sql_expect": "129"
    },
    "custom_item_27": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 130'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 130",
        "sql_expect": "130"
    },
    "custom_item_28": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 131'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 131",
        "sql_expect": "131"
    },
    "custom_item_29": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 132'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 132",
        "sql_expect": "132"
    },
    "custom_item_30": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 133'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 133",
        "sql_expect": "133"
    },
    "custom_item_31": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 134'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 134",
        "sql_expect": "134"
    },
    "custom_item_32": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 135'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 135",
        "sql_expect": "135"
    },
    "custom_item_33": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 152'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 152",
        "sql_expect": "152"
    },
    "custom_item_34": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 153'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 153",
        "sql_expect": "153"
    },
    "custom_item_35": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 170'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 170",
        "sql_expect": "170"
    },
    "custom_item_36": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 171'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 171",
        "sql_expect": "171"
    },
    "custom_item_37": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 172'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 172",
        "sql_expect": "172"
    },
    "custom_item_38": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 173'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 173",
        "sql_expect": "173"
    },
    "custom_item_39": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 175'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 175",
        "sql_expect": "175"
    },
    "custom_item_40": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 176'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 176",
        "sql_expect": "176"
    },
    "custom_item_41": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 177'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 177",
        "sql_expect": "177"
    },
    "custom_item_42": {
        "description": "SQL2-00-011200 - SQL Server must provide audit record generation capability for organization-defined auditable events within the database - 'Event ID 178'",
        "info": "Audit records can be generated from various components within the information system (e.g., network interface, hard disk, modem, etc.). From an application perspective, certain specific application functionalities may be audited as well.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.  Examples are auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.\n\nOrganizations define which application components shall provide auditable events.\n\nThe DBMS must provide auditing for the list of events defined by the organization or risk negatively impacting forensic investigations into malicious behavior in the information system.",
        "solution": "Create a trace that meets all auditing requirements.\n\nThe script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-53928r4_rule,STIG-ID|SQL2-00-011200,SWIFT-CSCv1|6.4,Vuln-ID|V-41402",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT DISTINCT(eventid) FROM sys.FN_TRACE_GETEVENTINFO('@TRACE_ID@') WHERE eventid = 178",
        "sql_expect": "178"
    },
    "custom_item_43": {
        "description": "SQL2-00-015600 - Database objects must be owned by accounts authorized for ownership.",
        "info": "SQL Server database ownership is a higher level privilege that grants full rights to everything in that database, including the right to grant privileges to others. SQL Server requires that the owner of a database object be a user, and only one user can be the assigned owner of a database object. This tends to minimize the risk that multiple users could gain unauthorized access, except the one individual who is the owner.\n\nWithin the database, object ownership implies full privileges to the owned object, including the privilege to assign access to the owned objects to other subjects. Unmanaged or uncontrolled ownership of databases can lead to unauthorized granting of privileges and database alterations.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Add and/or update system documentation to include any accounts authorized for object ownership and remove any account not authorized.\n\nReassign database ownership to authorized database owner account:\nNavigate to SQL Server Management Studio >> Object Explorer >> <'SQL Server name'> >> Databases >> right click <'database name'> >> Properties >> Files.\nSelect new database 'Owner':\nNavigate to click on [...] >> Select new Database Owner >> Browse... >> click on box to indicate account >> <'OK'> >> <'OK'> >> <'OK'>",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-53935r2_rule,STIG-ID|SQL2-00-015600,Vuln-ID|V-41407",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT name AS 'Database name', SUSER_SNAME(owner_sid) AS 'Database Owner', state_desc AS 'Database state' FROM sys.databases",
        "sql_expect": "Manual Review Required"
    },
    "custom_item_44": {
        "description": "SQL2-00-019300 - SQL Server must encrypt information stored in the database.",
        "info": "When data is written to digital media, such as hard drives, mobile computers, external/removable hard drives, personal digital assistants, flash/thumb drives, etc., there is risk of data loss and/or compromise.\n\nAn organizational assessment of risk guides the selection of media and associated information contained on that media requiring restricted access. Organizations need to document, in policy and procedures, the media requiring restricted access, individuals authorized to access the media, and the specific measures taken to restrict access.\n\nFewer protection measures are needed for media containing information determined by the organization to be in the public domain, to be publicly releasable, or to have limited or no adverse impact if accessed by other than authorized personnel. In these situations, it is assumed the physical access controls where the media resides provide adequate protection.\n\nAs part of a defense-in-depth strategy, the organization considers routinely encrypting information at rest on selected secondary storage devices. The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies and law. The selection of the cryptographic mechanisms used is based upon maintaining the confidentiality and integrity of the information.\n\nThe strength of mechanisms is commensurate with the classification and sensitivity of the information.\n\nInformation at rest, when not encrypted, is open to compromise from attackers who have gained unauthorized access to the data files.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Use third-party tools or configure SQL Server to encrypt data stored in the database. Use only NIST-certified or NSA-approved cryptography to provide encryption.\n\nRun the following SQL script to create a certificate:\nUSE <'database name'>\nCREATE CERTIFICATE <'certificate name'>\n   ENCRYPTION BY PASSWORD = '<'password'>'\n   FROM FILE = <'path/file_name'>\n   WITH SUBJECT = 'name of person creating key',\n   EXPIRY_DATE = '<'expiration date: yyyymmdd'>'\n\nRun the following SQL script to create a symmetric key and assign an existing certificate:\nUSE <'database name'>\nCREATE SYMMETRIC KEY <'key name'>\n   WITH ALGORITHM = AES_256\n   ENCRYPTION BY <'certificate name'>\n\nSet SQL Server configuration settings to encrypt databases, tables, columns, and/or data elements as required by the organization and the system owner.\n\nDocument all instances of acceptance of risk by the information owner where sensitive or classified data is not encrypted. Have the ISSO document assurance that the unencrypted sensitive or classified information is otherwise inaccessible to those who do not have need-to-know access to the data. Developers should consider using a record-specific encryption method to protect individual records. For example, by employing the session username or other individualized element as part of the encryption key, then decryption of a data element is only possible by that user or other data accessible only by that user. Data labeling can be helpful in implementation. Consider applying additional auditing of access to any unencrypted sensitive or classified data when accessed by users (with and/or without a need to know).",
        "reference": "800-53|AC-16a.,800-53r5|AC-16a.,CAT|II,CCI|CCI-002262,CSF|PR.AC-4,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16a.,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-53939r5_rule,STIG-ID|SQL2-00-019300,Vuln-ID|V-41411",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "EXEC sp_MSforeachdb 'SELECT ''?'' AS ''database'', name, algorithm_desc FROM [?].sys.symmetric_keys ORDER BY name, algorithm_desc'",
        "sql_expect": "Manual Review Required"
    },
    "custom_item_45": {
        "description": "SQL2-00-019500 - SQL Server must implement required cryptographic protections using cryptographic modules complying with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.",
        "info": "Cryptography is only as strong as the encryption modules/algorithms employed to encrypt the data.\n\nUse of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data.\n\nUse of cryptography to provide confidentiality and non-repudiation is not effective unless strong methods are employed with its use. Many earlier encryption methods and modules have been broken and/or overtaken by increasing computing power. The NIST FIPS 140-2 cryptographic standards provide proven methods and strengths to employ cryptography effectively.\n\nDetailed information on the NIST Cryptographic Module Validation Program (CMVP) is available at the following website:  http://csrc.nist.gov/groups/STM/cmvp/index.html.",
        "solution": "Implement required cryptographic protections using cryptographic modules complying with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.\n\nEnsure the database is backed up.\n\nRun the following SQL to undo encryption and drop the existing database encryption key:\nUSE master;\nGO\nALTER DATABASESET ENCRYPTION OFF;\nGO\nUSE;\nGO\nDROP DATABASE ENCRYPTION KEY;\nGO\n\nRun the following SQL to drop a server certificate from the SQL Server instance:\nUSE master;\nGO\nDROP CERTIFICATE;\nGO\n\nIf applicable, run the following SQL to drop a symmetric key:\nUSE;\nGO\nDROP SYMMETRIC KEY;\nGO\n\nConfigure encryption to use approved encryption algorithms. Existing keys are not reconfigurable to use different algorithms.\n\nRun SQL along the lines of the following to import an externally-created server certificate (see Microsoft documentation for options and syntax details):\nUSE master;\nGO\nCREATE CERTIFICATEFROM FILE = ''\n...\n;\nGO\n\nRun the following SQL to create a database encryption key and encrypt the database:\nUSE;\nGO\nCREATE DATABASE ENCRYPTION KEY\n   WITH ALGORITHM = AES_256\n   ENCRYPTION BY SERVER CERTIFICATE;\nGO\nUSE master;\nGO\nALTER DATABASESET ENCRYPTION ON;\nGO\n\nNote: The acceptable algorithms are: 'AES 128', 'AES 192', 'AES 256' and 'Triple DES'.\n\nIf required, run the following SQL to create a symmetric key and assign an existing certificate:\nUSE;\nGO\nCREATE SYMMETRIC KEYWITH ALGORITHM = AES_256\n   ENCRYPTION BY CERTIFICATE;",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CAT|II,CCI|CCI-002450,CSF|PR.DS-5,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,Rule-ID|SV-53940r5_rule,STIG-ID|SQL2-00-019500,Vuln-ID|V-41412",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT algorithm_desc FROM sys.symmetric_keys ORDER BY algorithm_desc",
        "sql_expect": "^(AES_128|AES_192|AES_256|Triple_DES)$"
    },
    "custom_item_46": {
        "description": "SQL2-00-021400 - SQL Server must employ cryptographic mechanisms preventing the unauthorized disclosure of information at rest.",
        "info": "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. If the data is not encrypted, it is subject to compromise and unauthorized disclosure.\n\nNote:  the system databases (master, msdb, model, resource and tempdb) cannot be encrypted.\n\nThe decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies and law.",
        "solution": "Use encryption to protect the data. To enable database encryption, create a master key, create a database encryption key, and protect it by using mechanisms tied to the master key, and then set encryption on.",
        "reference": "800-171|3.13.16,800-53|SC-28(1),800-53r5|SC-28(1),CAT|II,CCI|CCI-002476,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28(1),PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-53949r6_rule,STIG-ID|SQL2-00-021400,TBA-FIISB|28.1,Vuln-ID|V-41420",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT d.name AS [Database Name], CASE k.encryption_state WHEN 0 THEN 'No database encryption key present, no encryption' WHEN 1 THEN 'Unencrypted' WHEN 2 THEN 'Encryption in progress' WHEN 3 THEN 'Encrypted' WHEN 4 THEN 'Key change in progress' WHEN 5 THEN 'Decryption in progress' WHEN 6 THEN 'Protection change in progress' ELSE 'No database encryption key present, no encryption' END AS [Encryption State] FROM sys.databases AS d LEFT JOIN sys.dm_database_encryption_keys AS k ON d.database_id = k.database_id WHERE d.name NOT IN ('master', 'msdb', 'resource', 'tempdb', 'model') OR k.encryption_state <> 3;",
        "sql_expect": ".+"
    },
    "custom_item_47": {
        "description": "SQL2-00-022000 - SQL Server must protect against or limit the effects of the organization-defined types of Denial of Service (DoS) attacks.",
        "info": "Application management includes the ability to control the number of users and user sessions utilizing an application. Limiting the number of allowed users, and sessions per user, is helpful in limiting risks related to DoS attacks.\n\nThis requirement addresses concurrent session control for a single information system account and does not address concurrent sessions by a single user via multiple system accounts.\n\nThis requirement may be met via the application or by utilizing information system session control provided by a web server with specialized session management capabilities. If it has been specified that this requirement will be handled by the application, the capability to limit the maximum number of concurrent single user sessions must be designed and built into the application.\n\nThe organization will need to define the maximum number of concurrent sessions for SQL Server accounts by account type, by account, or a combination thereof and SQL Server shall enforce this requirement.\n\nUnlimited concurrent connections to SQL Server could allow a successful DoS attack by exhausting connection resources.",
        "solution": "Configure SQL Server number of concurrent sessions to the organization-defined maximum number of sessions by running the following script:\n\nUSE MASTER\nGO\n\nEXEC sys.sp_configure N'show advanced options', N'1'  RECONFIGURE WITH OVERRIDE\nGO\nEXEC sys.sp_configure N'user connections', <'maximum number of SQL Server concurrent connections'>\nEXEC sys.sp_configure N'show advanced options', N'0'  RECONFIGURE WITH OVERRIDE\nGO",
        "reference": "800-53|SC-5,800-53r5|SC-5,CAT|II,CCI|CCI-002385,CSF|DE.CM-1,CSF|PR.DS-4,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-5,ITSG-33|SC-5a.,NESA|T3.3.1,NIAv2|GS8e,NIAv2|GS10c,QCSC-v1|8.2.1,Rule-ID|SV-53951r2_rule,STIG-ID|SQL2-00-022000,Vuln-ID|V-41422",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT name, maximum FROM sys.configurations WHERE name = 'user connections'",
        "sql_expect": "user connections"
    },
    "custom_item_48": {
        "description": "SQL2-00-023500 - SQL Server job/batch queues must be reviewed regularly to detect unauthorized SQL Server job submissions.",
        "info": "When dealing with unauthorized SQL Server job submissions, it should be noted any unauthorized job submissions to SQL Server job/batch queues can potentially have significant effects on the overall security of the system.\n\nIf SQL Server were to allow any user to make SQL Server job/batch queue submissions, then those submissions might lead to a compromise of system integrity and/or data. This requirement is contingent upon the SQL Server job/batch queue being review regularly for unauthorized submissions.\n\nAccordingly, only qualified and authorized individuals shall be allowed to obtain access to submit SQL Server jobs. Job/batch queue submissions must adhere to an organization-defined job submission process.\n\nUnmanaged changes that occur to SQL Server job/batch queues can lead to a compromised system.",
        "solution": "Document procedures, within the system documentation, that detect for unauthorized SQL Server job submissions.\n\nDevelop and implement procedures to detect for unauthorized SQL Server job submissions of Stored Procedures that are automatically executed and Agent jobs that are enabled.",
        "reference": "800-171|3.4.2,800-53|CM-6b.,800-53r5|CM-6b.,CAT|II,CCI|CCI-000366,CN-L3|8.1.10.6(d),CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-6b.,NESA|T3.2.1,Rule-ID|SV-53925r2_rule,STIG-ID|SQL2-00-023500,SWIFT-CSCv1|2.3,Vuln-ID|V-41399",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT name FROM master.sys.procedures WHERE is_auto_executed = 1"
    },
    "custom_item_49": {
        "description": "SQL2-00-024100 - The Database Master Key must be encrypted by the Service Master Key where required.",
        "info": "When not encrypted by the Service Master Key, system administrators or application administrators may access and use the Database Master Key to view sensitive data that they are not authorized to view. Where alternate encryption means are not feasible, encryption by the Service Master Key may be necessary. To help protect sensitive data from unauthorized access by DBAs, mitigations may be in order. Mitigations may include automatic alerts or other audit events when the Database Master Key is accessed outside of the application or by a DBA account.",
        "solution": "Where possible, encrypt the Database Master Key with a password known only to the application administrator.\nWhere not possible, configure additional audit events or alerts to detect unauthorized access to the Database Master Key by users not authorized to view sensitive data.",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-53944r3_rule,STIG-ID|SQL2-00-024100,Vuln-ID|V-41415",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT name FROM [master].sys.databases WHERE is_master_key_encrypted_by_server = 1 AND owner_sid <> 1 AND state = 0"
    },
    "custom_item_50": {
        "description": "SQL2-00-024200 - Database Master Key passwords must not be stored in credentials within the database.",
        "info": "Storage of the Database Master Key password in a database credential allows decryption of sensitive data by privileged users who may not have a need-to-know requirement to access the\ndata.",
        "solution": "Use the stored procedure sp_control_dbmasterkey_password to remove any credentials that\nstore Database Master Key passwords.\nFrom the query prompt:\nEXEC SP_CONTROL_DBMASTERKEY_PASSWORD @db_name = '[database name]', @action\n= N'drop'",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-53945r2_rule,STIG-ID|SQL2-00-024200,Vuln-ID|V-41416",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT COUNT(credential_id) FROM [master].sys.master_key_passwords",
        "sql_expect": "0"
    },
    "custom_item_51": {
        "description": "SQL2-00-024300 - Symmetric keys (other than the database master key) must use a DoD certificate to encrypt the key.",
        "info": "Data within the database is protected by use of encryption. The symmetric keys are critical for this process. If the symmetric keys were to be compromised the data could be disclosed to unauthorized personnel.",
        "solution": "Configure or alter symmetric keys to encrypt keys with certificates or authorized asymmetric keys.\nFrom the query prompt:\nALTER SYMMETRIC KEY [key name] ADD ENCRYPTION BY CERTIFICATE [certificate name]\nALTER SYMMETRIC KEY [key name] DROP ENCRYPTION BY [password, symmetric key or asymmetric key]\n\nThe symmetric key must specify a certificate or asymmetric key for encryption.",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|II,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-53946r5_rule,STIG-ID|SQL2-00-024300,Vuln-ID|V-41417",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "SELECT s.name, k.crypt_type_desc FROM sys.symmetric_keys s, sys.key_encryptions k WHERE s.symmetric_key_id = k.key_id AND s.name <> '##MS_DatabaseMasterKey##' AND k.crypt_type IN ('ESKP', 'ESKS') AND s.principal_id <> 1 ORDER BY s.name, k.crypt_type_desc"
    },
    "custom_item_52": {
        "description": "SQL2-00-015610 - In a database owned by [sa], or by any other login having administrative privileges at the instance level, the database property TRUSTWORTHY must be OFF.",
        "info": "SQL Server's fixed (built-in) server roles, especially [sysadmin], have powerful capabilities that could cause great harm if misused, so their use must be tightly controlled.\n\nThe SQL Server instance uses each database's TRUSTWORTHY property to guard against tampering that could enable unwarranted privilege escalation.  When TRUSTWORTHY is 0/False/Off, SQL Server prevents the database from accessing resources in other databases.  When TRUSTWORTHY is 1/True/On, SQL Server permits access to other databases (subject to other protections).  SQL Server sets TRUSTWORTHY OFF when it creates a new database.  SQL Server forces TRUSTWORTHY OFF, irrespective of its prior value, when an existing database is attached to it, to address the possibility that an adversary may have tampered with the database, introducing malicious code.  To set TRUSTWORTHY ON, an account with the [sysadmin] role must issue an ALTER DATABASE command.\n\nAlthough SQL Server itself treats this property conservatively, application installer programs may set TRUSTWORTHY ON and leave it on.  This provides an opportunity for misuse.\n\nWhen TRUSTWORTHY is ON, users of the database can take advantage of the database owner's privileges, by impersonating the owner.  This can have particularly serious consequences if the database owner is the [sa] login (which may have been renamed in accordance with SQL2-00-010200, and disabled in accordance with SQL2-00-017100, but nonetheless can be invoked in an EXECUTE AS USER = 'dbo' statement, or CREATE PROCEDURE ... WITH EXECUTE AS OWNER ...).   The [sa] login cannot be removed from the [sysadmin] role.  The user impersonating [sa] - or another [sysadmin] account - is then able to perform administrative actions across all databases under the instance, including making any himself or any other login a member of [sysadmin].\n\nMost of the other fixed server roles could be similarly abused.\n\nTherefore, TRUSTWORTHY must not be used on databases owned by logins that are members of the fixed server roles.  Further, if TRUSTWORTHY is to be used for any other database, the need must be documented and approved.\n\nThe system database [msdb] is an exception: it is required to be TRUSTWORTHY.",
        "solution": "Set the TRUSTWORTHY property OFF; or remove the database owner from the fixed server role(s); or change the database owner.\n\n\nTo set the TRUSTWORTHY property OFF:\nUSE [master];\nGO\nALTER DATABASESET TRUSTWORTHY OFF;\nGO\nVerify that this produced the intended result by re-running the query specified in the Check.\n\n\nTo determine the path or paths by which the database owner is assigned the fixed server role or roles, run this query:\n\nUSE;\nGO\nWITH C AS\n(\nSELECT\n\tP.name\t\tAS [Parent Server Role],\n\tCAST('Fixed' AS varchar(8))\n\t\t\t\tAS [Server Role Type],\n\tM.name\t\tAS [Member],\n\tM.type_desc\tAS [Member Type],\n\tP.name \t\tAS [Root],\n\t1\t\t\tAS [Level]\nFROM\n\t[sys].[server_role_members] X\n\tINNER JOIN [sys].[server_principals] P ON P.principal_id = X.role_principal_id\n\tINNER JOIN [sys].[server_principals] M ON M.principal_id = X.member_principal_id\nWHERE\n\tP.is_fixed_role = 1\nUNION ALL\nSELECT\n\tP.name\t\tAS [Parent Server Role],\n\tCASE WHEN M.is_fixed_role = 1 THEN CAST('Fixed' AS varchar(8)) ELSE CAST('Custom' AS varchar(8)) END\n\t\t\t\tAS [Server Role Type],\n\tM.name\t\tAS [Member],\n\tM.type_desc\tAS [Member Type],\n\tC.[Root]\tAS [Root],\n\tC.[Level] + 1\tAS [Level]\nFROM\n\t[sys].[server_role_members] X\n\tINNER JOIN [sys].[server_principals] P ON P.principal_id = X.role_principal_id\n\tINNER JOIN [sys].[server_principals] M ON M.principal_id = X.member_principal_id\n\tINNER JOIN C ON P.name = C.Member\n)\n,\nB AS\n(\nSELECT\n\tC.[Member] AS [Leaf],\n\tC.[Root],\n\tC.[Parent Server Role],\n\tC.[Server Role Type],\n\tC.[Member],\n\tC.[Member Type],\n\tC.[Level]\nFROM C\nWHERE\n\tC.[Member Type] NOT LIKE '%ROLE%'\nUNION ALL\nSELECT\n\tB.[Leaf],\n\tC.[Root],\n\tC.[Parent Server Role],\n\tC.[Server Role Type],\n\tC.[Member],\n\tC.[Member Type],\n\tC.[Level]\nFROM C\nINNER JOIN B\n\tON\tC.[Member] = B.[Parent Server Role]\n\tAND\tC.[Level] = B.[Level] - 1\n\tAND\tC.[Root] = B.[Root]\n)\nSELECT\n\tDB_NAME()\tAS [Database],\n\tB.[Leaf]\tAS [Owner Login],\n\tB.[Root]\tAS[Top-Level Server Role],\n\tB.[Parent Server Role],\n\tB.[Server Role Type],\n\tB.[Member],\n\tB.[Member Type],\n\tB.[Level]\nFROM B\nWHERE B.[Leaf] = (SELECT SUSER_SNAME(D.owner_sid) FROM sys.databases D WHERE D.Name = DB_NAME())\nORDER BY B.[Root], B.[Level], B.[Parent Server Role], B.[Member]\n;\nGO\n\nTo remove the database owner from a fixed server role or a custom server role:\nUSE [master];\nGO\nALTER SERVER ROLEDROP MEMBER;\nGO\nVerify that this produced the intended result by re-running the Check query.\n\n\nTo change the database owner:\nUSE [master];\nGO\nALTER AUTHORIZATION ON DATABASE::TO;\nGO\nVerify that this produced the intended result by re-running the Check query.",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-75233r1_rule,STIG-ID|SQL2-00-015610,Vuln-ID|V-60781",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "EXEC sp_MSforeachdb 'USE [?]; WITH FixedServerRoles(RoleName) AS(SELECT ''sysadmin'' UNION SELECT ''securityadmin'' UNION SELECT ''serveradmin'' UNION SELECT ''setupadmin'' UNION SELECT ''processadmin'' UNION SELECT ''diskadmin'' UNION SELECT ''dbcreator'' UNION SELECT ''bulkadmin'') SELECT DB_NAME() AS [Database], SUSER_SNAME(D.owner_sid) AS [Database Owner], F.RoleName AS [Fixed Server Role], CASE WHEN D.is_trustworthy_on = 1 THEN ''ON'' ELSE ''off'' END AS [Trustworthy] FROM FixedServerRoles F INNER JOIN sys.databases D ON D.Name = DB_NAME() WHERE IS_SRVROLEMEMBER(F.RoleName, SUSER_SNAME(D.owner_sid)) = 1 AND DB_NAME() <> ''msdb'' AND D.is_trustworthy_on = 1;'"
    },
    "custom_item_53": {
        "description": "SQL2-00-015620 - In a database owned by a login not having administrative privileges at the instance level, the database property TRUSTWORTHY must be OFF unless required and authorized.",
        "info": "SQL Server's fixed (built-in) server roles, especially [sysadmin], have powerful capabilities that could cause great harm if misused, so their use must be tightly controlled.\n\nThe SQL Server instance uses each database's TRUSTWORTHY property to guard against tampering that could enable unwarranted privilege escalation.  When TRUSTWORTHY is 0/False/Off, SQL Server prevents the database from accessing resources in other databases.  When TRUSTWORTHY is 1/True/On, SQL Server permits access to other databases (subject to other protections).  SQL Server sets TRUSTWORTHY OFF when it creates a new database.  SQL Server forces TRUSTWORTHY OFF, irrespective of its prior value, when an existing database is attached to it, to address the possibility that an adversary may have tampered with the database, introducing malicious code.  To set TRUSTWORTHY ON, an account with the [sysadmin] role must issue an ALTER DATABASE command.\n\nAlthough SQL Server itself treats this property conservatively, application installer programs may set TRUSTWORTHY ON and leave it on.  This provides an opportunity for misuse.\n\nWhen TRUSTWORTHY is ON, users of the database can take advantage of the database owner's privileges, by impersonating the owner.  This can have particularly serious consequences if the database owner is the [sa] login (which may have been renamed in accordance with SQL2-00-010200, and disabled in accordance with SQL2-00-017100, but nonetheless can be invoked in an EXECUTE AS USER = 'dbo' statement, or CREATE PROCEDURE ... WITH EXECUTE AS OWNER ...).   The [sa] login cannot be removed from the [sysadmin] role.  The user impersonating [sa] - or another [sysadmin] account - is then able to perform administrative actions across all databases under the instance, including making any himself or any other login a member of [sysadmin].\n\nMost of the other fixed server roles could be similarly abused.\n\nTherefore, TRUSTWORTHY must not be used on databases owned by logins that are members of the fixed server roles.  Further, if TRUSTWORTHY is to be used for any other database, the need must be documented and approved.\n\nThe system database [msdb] is an exception: it is required to be TRUSTWORTHY.",
        "solution": "USE [master];\nGO\nALTER DATABASESET TRUSTWORTHY OFF;\nGO",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|MS_SQL_Server_Database_2012,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-75113r1_rule,STIG-ID|SQL2-00-015620,Vuln-ID|V-60671",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MS_SQL_Server_2012_V1R20_STIG.zip",
        "sql_request": "EXEC sp_MSforeachdb 'USE [?]; SELECT DB_NAME() AS [Database], SUSER_SNAME(D.owner_sid) AS [Database Owner], CASE WHEN D.is_trustworthy_on = 1 THEN ''ON'' ELSE ''off'' END AS [Trustworthy] FROM sys.databases D WHERE D.[name] = DB_NAME() AND DB_NAME() <> ''msdb'' AND D.is_trustworthy_on = 1'"
    }
}