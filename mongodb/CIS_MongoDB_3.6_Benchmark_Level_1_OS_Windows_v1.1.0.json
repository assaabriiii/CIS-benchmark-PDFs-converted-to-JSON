{
    "custom_item_1": {
        "description": "Check for MongoDB 3.6",
        "value_data": "^3.6",
        "powershell_args": "Get-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*, HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Where-Object { $_.DisplayName -Clike 'Mongo*'} | Select-Object DisplayVersion"
    },
    "custom_item_2": {
        "description": "2.1 Ensure Authentication is configured",
        "info": "This setting ensures that all clients, users, servers are required to authenticate before being granted access to the MongoDB database.\n\nAuthentication is the process of verifying the identity of a client. When access control, i.e. authorization, is enabled, MongoDB requires all clients to authenticate themselves in order to determine their access.\n\nTo authenticate as a user, you must provide a username, password, and the authentication database associated with that user.\n\nRationale:\n\nFailure to authenticate clients, users, servers can enable unauthorized access to the MongoDB database and can prevent tracing actions back to their sources.",
        "solution": "The authentication mechanism should be implemented before anyone accesses the MongoDB Server.\nTo enable the authentication mechanism:\n\nStart the MongoDB instance without authentication.\n\nmongod --port 27017 --dbpath /data/db1\n\nOr\n\nmongod.exe --port 27017 --dbpath db1\n\nCreate the system user administrator, ensuring that its password meets organizationally-defined password complexity requirements.\n\nuse admin\ndb.createUser(\n  {\n    user: 'siteUserAdmin',\n    pwd: 'password',\n    roles: [ { role: 'userAdminAnyDatabase', db: 'admin' } ]\n  }\n)\n\nOpen mongod.conf and change for authorization value to enabled:\n\nsecurity:\n    authorization: 'enabled'\n\nRestart the MongoDB instance\n\nservice mongodb restart\n\nDefault Value:\n\nBy default, authorization is set to disable.",
        "reference": "800-171|3.5.2,800-171|3.5.3,800-53|IA-2(1),800-53|IA-2(2),800-53|IA-5(1),800-53r5|IA-2(1),800-53r5|IA-2(2),800-53r5|IA-5(1),CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.3,CSCv8|5.2,CSCv8|6.3,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|IA-2(2),ITSG-33|IA-5(1),LEVEL|1A,NESA|T5.2.3,NESA|T5.4.2,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,SWIFT-CSCv1|4.1,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "regex": "^[\\s]*authorization[\\s]*:",
        "expect": "^[\\s]*authorization[\\s]*:[\\s]*[Ee][Nn][Aa][Bb][Ll][Ee][Dd]"
    },
    "custom_item_3": {
        "description": "2.2 Ensure that MongoDB does not bypass authentication via the localhost exception",
        "info": "MongoDB should not be set to bypass authentication via the localhost exception. The localhost exception allows the user to enable authorization before creating the first user in the system. When active, the localhost exception allows all connections from the localhost interface to have full access to that instance. The exception applies only when there are no users created in the MongoDB instance.\n\nNote: This recommendation only applies when there are no users created in the MongoDB instance.\n\nRationale:\n\nDisabling this exception will prevent unauthorized local access to the MongoDB database. It will also ensure the traceability of each database activity to a specific user. Localhost Exception allows direct connect to Mongod's without any UN/PW.",
        "solution": "To disable local authentication on the MongoDB database.\nType OS Console Command\n\nmongod --setParameter enableLocalhostAuthBypass=0\n\nor\nTo manually configure use the setParameter option in the mongo configuration file to set it to false.\n\nsetParameter:\n  enableLocalhostAuthBypass: false\n\nDefault Value:\n\nBy default, localhost exception value (enableLocalhostAuthBypass) is true.",
        "reference": "800-171|3.5.3,800-53|IA-2(1),800-53|IA-2(2),800-53r5|IA-2(1),800-53r5|IA-2(2),CN-L3|7.1.2.7(b),CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSCv7|16.3,CSCv8|6.3,CSF|PR.AC-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2(1),ITSG-33|IA-2(2),LEVEL|1A,NESA|T5.4.2,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,NIAv2|AM36,NIAv2|VL3c,QCSC-v1|5.2.2,QCSC-v1|13.2,SWIFT-CSCv1|1.2,TBA-FIISB|35.1,TBA-FIISB|36.1",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "regex": "^[\\s]*enableLocalhostAuthBypass[\\s]*:",
        "expect": "^[\\s]*enableLocalhostAuthBypass[\\s]*:[\\s]*[Ff][Aa][Ll][Ss][Ee]"
    },
    "custom_item_4": {
        "description": "3.2 Ensure that MongoDB only listens for network connections on authorized interfaces",
        "info": "Ensuring that MongoDB runs in a trusted network environment involves limiting the network interfaces on which MongoDB instances listen for incoming connections. Any untrusted network connections should be dropped by MongoDB.\n\nFirewalls allow administrators to filter and control access to a system by providing granular control over network communications. For administrators of MongoDB, the following capabilities are important:\n\nLimiting incoming traffic on a specific port to specific systems\n\nLimiting incoming traffic from untrusted hosts.\n\nOn Linux systems, the iptables interface provides access to the underlying netfilter firewall. On Windows systems, netsh command line interface provides access to the underlying Windows Firewall.\n\nRationale:\n\nThis configuration blocks connections from untrusted networks, leaving only systems on authorized and trusted networks able to attempt to connect to the MongoDB. If not configured, this may lead to unauthorized connections from untrusted networks to MongoDB.",
        "solution": "Configure the MongoDB configuration file to limit its exposure to only the network interfaces on which MongoDB instances should listen for incoming connections.\n\nDefault Value:\n\nNot configured",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "regex": "^[\\s]*bindIp[\\s]*:",
        "expect": "^[\\s]*bindIp[\\s]*:[\\s]*.+"
    },
    "custom_item_5": {
        "description": "4.1 Ensure Encryption of Data in Transit TLS/SSL (Transport Encryption)",
        "info": "Use TLS or SSL to protect all incoming and outgoing connections. This should include using TLS or SSL to encrypt communication between the mongod and mongos components of a MongoDB client as well as between all applications and MongoDB.\n\nMongoDB supports TLS/SSL (Transport Layer Security/Secure Sockets Layer) to encrypt all of MongoDB's network traffic. TLS/SSL ensures that MongoDB network traffic is only readable by the intended client.\n\nRationale:\n\nThis prevents sniffing of cleartext traffic between MongoDB components or performing a man-in-the-middle attack for MongoDB.",
        "solution": "Configure MongoDB servers to require the use of SSL or TLS to encrypt all MongoDB network communications.\nTo implement SSL or TLS to encrypt all MongoDB network communication, perform the following steps:\nFor mongod ('Primary daemon process for the MongoDB system')\nIn the configuration file /etc/mongod.conf, set the PEMKeyFile option to the certificate file's path and then start the component with this command:\n\nssl:\n   mode: requireSSL\n   PEMKeyFile: /etc/ssl/mongodb.pem\n   CAFile: /etc/ssl/ca.pem\n\nAnd restart monogdb instance with\n\nmongod --config /etc/mongod.conf\n\nOr\n\nmongod --sslMode requireSSL --sslPEMKeyFile /etc/ssl/mongodb.pem --sslCAFile /etc/ssl/ca.pem\n\nDefault Value:\n\nNot configured",
        "reference": "800-171|3.1.13,800-171|3.5.2,800-171|3.13.8,800-53|AC-17(2),800-53|IA-5,800-53|IA-5(1),800-53|SC-8,800-53|SC-8(1),800-53r5|AC-17(2),800-53r5|IA-5,800-53r5|IA-5(1),800-53r5|SC-8,800-53r5|SC-8(1),CN-L3|7.1.2.7(g),CN-L3|7.1.3.1(d),CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.1(c),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSCv7|14.4,CSCv8|3.10,CSF|PR.AC-1,CSF|PR.AC-3,CSF|PR.DS-2,CSF|PR.DS-5,CSF|PR.PT-4,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ISO/IEC-27001|A.6.2.2,ISO/IEC-27001|A.10.1.1,ISO/IEC-27001|A.13.2.3,ITSG-33|AC-17(2),ITSG-33|IA-5,ITSG-33|IA-5(1),ITSG-33|SC-8,ITSG-33|SC-8a.,ITSG-33|SC-8(1),LEVEL|1A,NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T5.2.3,NESA|T5.4.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|AM37,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS5d,NIAv2|NS6b,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|3.2,QCSC-v1|5.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,QCSC-v1|13.2,SWIFT-CSCv1|2.1,SWIFT-CSCv1|2.6,SWIFT-CSCv1|4.1,TBA-FIISB|29.1",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "expect": "^[\\s]*mode[\\s]*:[\\s]*requireSSL"
    },
    "custom_item_6": {
        "description": "5.1 Ensure that system activity is audited",
        "info": "Track access and changes to database configurations and data. MongoDB Enterprise includes a system auditing facility that can record system events (e.g. user operations, connection events) on a MongoDB instance. These audit records permit forensic analysis and allow administrators to verify proper controls.\n\nRationale:\n\nSystem level logs can be handy while troubleshooting an operational problem or handling a security incident.",
        "solution": "Set the value of auditLog.destination to the appropriate value from the following options:\nSyslog\nTo enable auditing and print audit events to syslog\n\nmongod --dbpath data/db --auditDestination syslog\n\nConsole\nTo enable auditing and print audit events to standard output (i.e., stdout)\n\nmongod --dbpath data/db --auditDestination console\n\nJson File\nTo enable auditing and print audit events to a file in JSON format. Printing audit events to file in JSON format degrades server performance more than printing to a file in BSON format.\n\nmongod --dbpath data/db --auditDestination file --auditFormat JSON --auditPath data/db/auditLog.json\n\nBson File\nTo enable auditing and print audit events to a file in BSON binary format\n\nmongod --dbpath data/db --auditDestination file --auditFormat BSON --auditPath data/db/auditLog.bson\n\nDefault Value:\n\nBy default, Audit Logs are not configured.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-2,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-2,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.2,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-2,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|M1.2.2,NESA|M5.5.1,NESA|T3.6.2,NIAv2|AM7,NIAv2|AM11a,NIAv2|AM11b,NIAv2|AM11c,NIAv2|AM11d,NIAv2|AM11e,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|SS30,NIAv2|VL8,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "expect": "^[\\s]*destination[\\s]*:[\\s]*(syslog|console|file)"
    },
    "custom_item_7": {
        "description": "5.2 Ensure that audit filters are configured properly",
        "info": "MongoDB Enterprise supports auditing of various operations. When enabled, the audit facility, by default, records all auditable operations as detailed in Audit Event Actions, Details, and Results. To specify which events to record, the audit feature includes the --auditFilter option. This check is only for Enterprise editions.\n\nRationale:\n\nAll operations carried out on the database are logged. This helps in backtracking and tracing any incident that occurs.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Set the audit filters based on the organization's requirements.\n\nDefault Value:\n\nNot configured",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "expect": "^[\\s]*filter[\\s]*:[\\s]*.+"
    },
    "custom_item_8": {
        "description": "5.3 Ensure that logging captures as much information as possible",
        "info": "The SystemLog.quiet option stops logging of information such as:\n\nconnection events\n\nauthentication events\n\nreplication sync activities\n\nevidence of some potentially impactful commands being run (eg: drop, dropIndexes, validate)\n\nThis information should be logged whenever possible. This check is only for Enterprise editions.\n\nRationale:\n\nThe use of SystemLog.quiet makes troubleshooting problems and investigating possible security incidents much more difficult.",
        "solution": "Set SystemLog.quiet to false in the /etc/mongod.conf file to disable it.\n\nsystemLog:\n   quiet: false",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.6,800-53|AU-3,800-53|AU-3(1),800-53|AU-7,800-53|AU-12,800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-7,800-53r5|AU-12,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.2.3(c),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|8.1.4.3(b),CSCv7|6.2,CSCv7|6.3,CSCv8|8.5,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,CSF|RS.AN-3,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-7,ITSG-33|AU-12,LEVEL|1A,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|10.2.1,QCSC-v1|11.2,QCSC-v1|13.2,SWIFT-CSCv1|6.4",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "expect": "^[\\s]*quiet[\\s]*:[\\s]*false"
    },
    "custom_item_9": {
        "description": "5.4 Ensure that new entries are appended to the end of the log file",
        "info": "By default, new log entries will overwrite old entries after a restart of the mongod or mongos service. Enabling the systemLog.logAppend setting causes new entries to be appended to the end of the log file rather than overwriting the existing content of the log when the mongod or mongos instance restarts.\n\nRationale:\n\nAllowing old entries to be overwritten by new entries instead of appending new entries to the end of the log may destroy old log data that is needed for a variety of purposes.",
        "solution": "Set systemLog.logAppend to true in the /etc/mongod.conf file.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CSCv7|6.4,CSCv8|8.3,CSF|PR.DS-4,CSF|PR.PT-1,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,LEVEL|1A,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "@MONGOD_CONF_FULL_PATH@",
        "expect": "^[\\s]*logAppend[\\s]*:[\\s]*true"
    },
    "custom_item_10": {
        "description": "6.1 Ensure that MongoDB uses a non-default port",
        "info": "Changing the default port used by MongoDB makes it harder for attackers to find the database and target it.\n\nRationale:\n\nStandard ports are used in automated attacks and by attackers to verify which applications are running on a server.\n\nImpact:\n\nHackers frequently scan IP addresses for commonly used ports, so it's not uncommon to use a different port to 'fly under the radar'. This is just to avoid detection, other than that there is no added safety by using a different port.",
        "solution": "Change the port for MongoDB server to a number other than 27017.",
        "reference": "800-171|3.1.16,800-171|3.13.15,800-53|AC-18,800-53|SC-23,800-53r5|AC-18,800-53r5|SC-23,CSCv7|9.2,CSCv8|12.6,CSF|PR.PT-4,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-18,ITSG-33|SC-23,ITSG-33|SC-23a.,LEVEL|1A,NESA|T4.5.1,QCSC-v1|5.2.1,SWIFT-CSCv1|2.3",
        "see_also": "https://workbench.cisecurity.org/files/3560",
        "value_data": "^[\\s]*port[\\s]*:[\\s]*\\d+[\\s]*$",
        "powershell_args": "get-content @MONGOD_CONF_FULL_PATH@| select-string -pattern '^[\\s]*port' | where-object {$_ -notmatch '27017'}"
    }
}