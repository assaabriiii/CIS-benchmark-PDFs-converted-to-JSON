{
    "custom_item_1": {
        "description": "Check for MongoDB 4",
        "cmd": "mongo --version",
        "expect": "MongoDB shell version v@MONGODB_VERSION@"
    },
    "custom_item_2": {
        "description": "MD4X-00-000100 - MongoDB must provide audit record generation for DoD-defined auditable events within all DBMS/database components.",
        "info": "MongoDB must provide audit record generation capability for DoD-defined auditable events within all DBMS/database components.\n\nSatisfies: SRG-APP-000089-DB-000064, SRG-APP-000080-DB-000063, SRG-APP-000090-DB-000065, SRG-APP-000091-DB-000066, SRG-APP-000091-DB-000325, SRG-APP-000092-DB-000208, SRG-APP-000095-DB-000039, SRG-APP-000096-DB-000040, SRG-APP-000097-DB-000041, SRG-APP-000098-DB-000042, SRG-APP-000099-DB-000043, SRG-APP-000100-DB-000201, SRG-APP-000101-DB-000044, SRG-APP-000109-DB-000049, SRG-APP-000356-DB-000315, SRG-APP-000360-DB-000320, SRG-APP-000381-DB-000361, SRG-APP-000492-DB-000332, SRG-APP-000492-DB-000333, SRG-APP-000494-DB-000344, SRG-APP-000494-DB-000345, SRG-APP-000495-DB-000326, SRG-APP-000495-DB-000327, SRG-APP-000495-DB-000328, SRG-APP-000495-DB-000329, SRG-APP-000496-DB-000334, SRG-APP-000496-DB-000335, SRG-APP-000498-DB-000346, SRG-APP-000498-DB-000347, SRG-APP-000499-DB-000330, SRG-APP-000499-DB-000331, SRG-APP-000501-DB-000336, SRG-APP-000501-DB-000337, SRG-APP-000502-DB-000348, SRG-APP-000502-DB-000349, SRG-APP-000503-DB-000350, SRG-APP-000503-DB-000351, SRG-APP-000504-DB-000354, SRG-APP-000504-DB-000355, SRG-APP-000505-DB-000352, SRG-APP-000506-DB-000353, SRG-APP-000507-DB-000356, SRG-APP-000507-DB-000357, SRG-APP-000508-DB-000358, SRG-APP-000515-DB-000318",
        "solution": "If the auditLog setting was not present in the %MongoDB configuration file% (default location: /etc/mongod.conf) edit this file and add a configured auditLog setting:\n\nauditLog:\n   destination: file\n   format: BSON\n   path: /var/log/mongodb/audit/auditLog.bson\n\nNote: The '/var/log/mongodb/audit' directory will need to be created/present or the database will not start.\n\nAlternately, the audit logs can be written to syslog with the following setting:\nauditLog:\ndestination: syslog\n\nThis setting will record the following operations: schema (DDL),  replica set and sharded cluster and authentication and authorization.\n\nTo capture all operations in the audit, enable the audit system to log authorization successes by adding the following line to  the /etc/mongod.conf file:\n\nsetParameter:\n    auditAuthorizationSuccess: true\n\nStop/start (restart) the mongod or mongos instance using this configuration.\n\nIf the auditLog setting was present and contained a filter parameter, ensure the filter expression does not prevent the auditing of events that should be audited or remove the filter parameter to enable auditing all events.\n\nDocumentation on configuring filters can be found here:\n\nhttps://docs.mongodb.com/v4.4/tutorial/configure-audit-filters/",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-171|3.3.4,800-171|3.4.5,800-53|AU-3,800-53|AU-3(1),800-53|AU-3(2),800-53|AU-4(1),800-53|AU-5b.,800-53|AU-5(2),800-53|AU-10,800-53|AU-12b.,800-53|AU-12c.,800-53|AU-14(1),800-53|CM-5(1),800-53r5|AU-3,800-53r5|AU-3(1),800-53r5|AU-4(1),800-53r5|AU-5b.,800-53r5|AU-5(2),800-53r5|AU-10,800-53r5|AU-12b.,800-53r5|AU-12c.,800-53r5|AU-14(1),800-53r5|CM-5(1),800-53r5|PL-9,CAT|II,CCI|CCI-000130,CCI|CCI-000131,CCI|CCI-000132,CCI|CCI-000133,CCI|CCI-000134,CCI|CCI-000135,CCI|CCI-000140,CCI|CCI-000166,CCI|CCI-000171,CCI|CCI-000172,CCI|CCI-001464,CCI|CCI-001487,CCI|CCI-001814,CCI|CCI-001844,CCI|CCI-001851,CCI|CCI-001858,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|7.1.3.3(e),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CN-L3|8.1.4.3(b),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.DS-4,CSF|PR.IP-1,CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-3,ITSG-33|AU-3(1),ITSG-33|AU-3(2),ITSG-33|AU-4,ITSG-33|AU-5b.,ITSG-33|AU-5(2),ITSG-33|AU-10,ITSG-33|AU-12b.,ITSG-33|AU-12c.,ITSG-33|AU-14,ITSG-33|CM-5(1),NESA|T3.3.1,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NESA|T4.3.1,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.3.3,NESA|T7.5.3,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,NIAv2|GS7f,NIAv2|SM8,PCI-DSSv3.2.1|10.1,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|7.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252134r879559_rule,STIG-ID|MD4X-00-000100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-252134",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A4 '^auditLog:' | /bin/grep 'destination'",
        "expect": "^[\\\\s]*destination:[\\\\s]*[\"\\']*(syslog|console|file)[\"\\']*[\\\\s]*"
    },
    "custom_item_3": {
        "description": "Check if auditLog destination is set to 'file'",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A4 '^auditLog:' | /bin/grep 'destination:'",
        "expect": "^[\\\\s]*destination:[\\\\s]*[\"\\']*file[\"\\']*[\\\\s]*"
    },
    "custom_item_4": {
        "description": "Check if auditLog path is set",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A4 '^auditLog:' | /bin/grep 'path:'",
        "expect": "^[\\\\s]*path:[\\\\s]*.+"
    },
    "custom_item_5": {
        "description": "MD4X-00-000200 - The audit information produced by MongoDB must be protected from unauthorized access.",
        "info": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.\n\nThis requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location.\n\nAdditionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.\n\nSatisfies: SRG-APP-000118-DB-000059, SRG-APP-000119-DB-000060, SRG-APP-000120-DB-000061",
        "solution": "It is recommended to use the official installation packages provided by MongoDB. In the event the software was installed manually and permissions need to be restricted, consider a clean reinstallation.\n\nIf the key name auditLog.destination is set to either syslog or console, then this requirement is not applicable as there is no physical directory that MongoDB can secure. Site security requirements and operating system security requirements will need to be reviewed to ensure appropriate settings for syslog and console destinations.\n\nTo correct finding where a physical auditLog directory exists (where auditLog.destination is set to file), run these commands:\n\nchown mongod %MongoDB auditLog directory%\nchgrp mongod   %MongoDB auditLog directory%\nchmod 700         %MongoDB auditLog directory%\n\n(The path for the %MongoDB auditLog directory% will vary according to local circumstances.  The auditLog directory will be found in the %MongoDB configuration file% whose default location is /etc/mongod.conf.)\n\nTo find the auditLog directory name, view and search for the entry in the %MongoDB configuration file% for the auditLog.path:\n\nExample:\n\nauditLog:\n   destination: file\n   format: BSON\n   path: /var/log/mongodb/audit/auditLog.bson\n\nGiven the example above, the %MongoDB auditLog directory% is /var/log/mongodb/audit.",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-000162,CCI|CCI-000163,CCI|CCI-000164,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252135r879576_rule,STIG-ID|MD4X-00-000200,Vuln-ID|V-252135",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "file": "@AUDITLOG_PATH@",
        "owner": "mongod",
        "mask": "077",
        "group": "mongod"
    },
    "custom_item_6": {
        "description": "MD4X-00-000300 - MongoDB must protect its audit features from unauthorized access.",
        "info": "Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data.\n\nDepending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. It is, therefore, imperative that access to audit tools be controlled and protected from unauthorized access.\n\nApplications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the access to audit tools.\n\nAudit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records.\n\nIf an attacker were to gain access to audit tools, they could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.\n\nSatisfies: SRG-APP-000121-DB-000202, SRG-APP-000122-DB-000203, SRG-APP-000123-DB-000204",
        "solution": "Run these commands:\n\nchown mongod %MongoDB configuration file%\nchgrp mongod %MongoDB configuration file%\nchmod 660 %MongoDB configuration file%\n\n(The name and location for the %MongoDB configuration file% will vary according to local circumstances. The default name and location is /etc/mongod.conf.)\n\nUsing the default name and location the commands would be:\n\nchown mongod /etc/mongod.conf\nchgrp  mongod /etc/mongod.conf\nchmod 660 /etc/mongod.conf\n\nThe output of the command:\n\nstat /etc/mongod.conf\n\nshould look similar to the following for a correctly owned and permissioned %MongoDB configuration file% (default /etc/mongod.conf):\n\nstat /etc/mongod.conf\n  File:/etc/mongod.conf\n  Size: 1034              Blocks: 8          IO Block: 4096   regular file\nDevice: 802h/2050d        Inode: 16340       Links: 1\nAccess: (0660/-rw-rw----)  Uid: (  997/  mongod)   Gid: (  996/  mongod)\nContext: system_u:object_r:etc_t:s0\nAccess: 2020-03-16 14:15:17.777000000 -0400\nModify: 2020-03-16 12:50:45.567000000 -0400\nChange: 2020-03-16 14:27:32.451000000 -0400\n Birth: -",
        "reference": "800-171|3.3.8,800-53|AU-9,800-53r5|AU-9,CAT|II,CCI|CCI-001493,CCI|CCI-001494,CCI|CCI-001495,CN-L3|7.1.2.3(d),CN-L3|7.1.3.3(f),CN-L3|8.1.3.5(c),CN-L3|8.1.4.3(c),CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.2,ITSG-33|AU-9,NESA|M5.2.3,NESA|M5.5.2,NESA|T3.6.4,NESA|T8.2.9,NIAv2|SM5,NIAv2|SM6,PCI-DSSv3.2.1|10.5,PCI-DSSv3.2.1|10.5.2,PCI-DSSv4.0|10.3.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252136r879579_rule,STIG-ID|MD4X-00-000300,Vuln-ID|V-252136",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "file": "@MONGOD_CONF_FULL_PATH@",
        "owner": "mongod",
        "mask": "077",
        "group": "mongod"
    },
    "custom_item_7": {
        "description": "Check if net.http exists in /etc/mongod.conf",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A15 '^net:' | /bin/grep 'http:'",
        "expect": "^[\\\\s]*http:[\\\\s]*"
    },
    "custom_item_8": {
        "description": "MD4X-00-000400 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.\n\nDBMSs must adhere to the principles of least functionality by providing only essential capabilities.\n\nUnused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.",
        "solution": "MongoDB 3.6 removed the following deprecated HTTP interface and REST API to MongoDB.\n\nnet.http.enabled\nnet.http.JSONPEnabled\nnet.http.port\nnet.http.RESTInterfaceEnabled\n\nIn the MongoDB database configuration file (default location: /etc/mongod.conf), remove the entire http option (and any sub-options) under the net: settings from the configuration file.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-252137r879587_rule,STIG-ID|MD4X-00-000400,SWIFT-CSCv1|2.3,Vuln-ID|V-252137",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\\\s]*enabled:'",
        "expect": "^[\\\\s]*enabled:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_9": {
        "description": "MD4X-00-000500 - Unused database components that are integrated in MongoDB and cannot be uninstalled must be disabled.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives.\n\nDBMSs must adhere to the principles of least functionality by providing only essential capabilities.\n\nUnused, unnecessary DBMS components increase the attack vector for MongoDB by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS, and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/role permissions.",
        "solution": "MongoDB 3.6 removed the following deprecated HTTP interface and REST API to MongoDB and should not be used.\n\nnet.http.enabled\nnet.http.JSONPEnabled\nnet.http.port\nnet.http.RESTInterfaceEnabled\n\nIn the MongoDB database configuration file (default location: /etc/mongod.conf), remove all http: options underneath net: from the configuration file.",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7b.,800-53r5|CM-7b.,CAT|II,CCI|CCI-000382,CN-L3|7.1.3.5(c),CN-L3|7.1.3.7(d),CN-L3|8.1.4.4(b),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS13b,NIAv2|SS14a,NIAv2|SS14c,PCI-DSSv3.2.1|2.2.2,PCI-DSSv4.0|2.2.4,QCSC-v1|3.2,Rule-ID|SV-252138r879588_rule,STIG-ID|MD4X-00-000500,SWIFT-CSCv1|2.3,Vuln-ID|V-252138",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\\\s]*enabled:'",
        "expect": "^[\\\\s]*enabled:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_10": {
        "description": "mode",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'",
        "expect": "^[\\\\s]*mode:[\\\\s]*[\"\\']*requireTLS[\"\\']*[\\\\s]*"
    },
    "custom_item_11": {
        "description": "certificateKeyFile",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'certificateKeyFile:'",
        "expect": "^[\\\\s]*certificateKeyFile:[\\\\s]*[\"\\']*@CERTKEYFILE_PATH@[\"\\']*[\\\\s]*"
    },
    "custom_item_12": {
        "description": "CAFile",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'CAFile:'",
        "expect": "^[\\\\s]*CAFile:[\\\\s]*[\"\\']*@CAFILE_PATH@[\"\\']*[\\\\s]*"
    },
    "custom_item_13": {
        "description": "allowInvalidCertificates",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'allowInvalidCertificates:'",
        "expect": "^[\\\\s]*allowInvalidCertificates:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_14": {
        "description": "allowConnectionsWithoutCertificates",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'allowConnectionsWithoutCertificates:'",
        "expect": "^[\\\\s]*allowConnectionsWithoutCertificates:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_15": {
        "description": "MD4X-00-000800 - MongoDB must fail to a secure state if system initialization fails, shutdown fails, or aborts fail.",
        "info": "Failure to a known state can address safety or security in accordance with the mission/business needs of the organization.\n\nFailure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system.\n\nFailure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state data also facilitates system restart and return to the operational mode of the organization with less disruption of mission/business processes.\n\nDatabases must fail to a known consistent state. Transactions must be successfully completed or rolled back.\n\nIn general, security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, application security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means.\n\nAbort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations.\n\nSatisfies: SRG-APP-000225-DB-000153, SRG-APP-000226-DB-000147",
        "solution": "Modify the mongod startup command-line options by removing the --nojournal option.\n\nEdit the MongoDB database configuration file (default location: /etc/mongod.conf) to ensure the option storage.journal.enabled is present and set to true as show below:\n\n    storage:\n       journal:\n          enabled: true\n\nStop/start (restart) any or all mongod or mongos processes.",
        "reference": "800-53|SC-24,800-53r5|SC-24,CAT|II,CCI|CCI-001190,CCI|CCI-001665,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-24,ITSG-33|SC-24a.,QCSC-v1|5.2.1,Rule-ID|SV-252141r879640_rule,STIG-ID|MD4X-00-000800,Vuln-ID|V-252141",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^storage:' | /bin/grep -A2 'journal:' | /bin/grep 'enabled:'",
        "expect": "^[\\\\s]*enabled:[\\\\s]*[\"\\']*true[\"\\']*[\\\\s]*"
    },
    "custom_item_16": {
        "description": ".conf file",
        "file": "@MONGOD_CONF_FULL_PATH@",
        "owner": "mongod",
        "mask": "177",
        "group": "mongod"
    },
    "custom_item_17": {
        "description": "Data Dir",
        "file": "@MONGO_DATA_DIR_PATH@",
        "owner": "mongod",
        "mask": "022",
        "group": "mongod"
    },
    "custom_item_18": {
        "description": "MD4X-00-001000 - MongoDB and associated applications must reserve the use of dynamic code execution for situations that require it.",
        "info": "With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.\n\nThe principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be utilized otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, pre-compiled stored procedures and functions (and triggers).\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.\n\nSatisfies: SRG-APP-000251-DB-000391, SRG-APP-000251-DB-000392",
        "solution": "Disable the javascriptEnabled option.\n\nEdit the %MongoDB configuration file% (default location: /etc/mongod.conf) to include the following:\n\nsecurity:\n   javascriptEnabled: false",
        "reference": "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-252143r879652_rule,STIG-ID|MD4X-00-001000,Vuln-ID|V-252143",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'javascriptEnabled:'",
        "expect": "^[\\\\s]*javascriptEnabled:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_19": {
        "description": "MD4X-00-001300 - MongoDB must use NIST FIPS 140-2 or 140-3 validated cryptographic modules for cryptographic operations.",
        "info": "The use of weak or not validated cryptographic algorithms undermines the purposes of utilizing encryption and digital signatures to protect data.  Weak algorithms can be easily broken and not validated cryptographic modules may not implement algorithms correctly. Unapproved cryptographic modules or algorithms should not be relied on for authentication, confidentiality, or integrity. Weak cryptography could allow an attacker to gain access to and modify data stored in the database as well as the administration settings of MongoDB.\n\nApplications, including DBMSs, utilizing cryptography are required to use approved NIST FIPS 140-2 or 140-3 validated cryptographic modules that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.\n\nNSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based encryption modules.\n\nThe standard for validating cryptographic modules will transition to the NIST FIPS 140-3 publication.\n\nFIPS 140-2 modules can remain active for up to five years after validation or until September 21, 2026, when the FIPS 140-2 validations will be moved to the historical list. Even on the historical list, CMVP supports the purchase and use of these modules for existing systems. While Federal Agencies decide when they move to FIPS 140-3 only modules, purchasers are reminded that for several years there may be a limited selection of FIPS 140-3 modules from which to choose. CMVP recommends purchasers consider all modules that appear on the Validated Modules Search Page:\nhttps://csrc.nist.gov/projects/cryptographic-module-validation-program/validated-modules\n\nMore information on the FIPS 140-3 transition can be found here:\nhttps://csrc.nist.gov/Projects/fips-140-3-transition-effort/\n\nSatisfies: SRG-APP-000179-DB-000114, SRG-APP-000416-DB-000380, SRG-APP-000514-DB-000381, SRG-APP-000514-DB-000382, SRG-APP-000514-\nDB-000383",
        "solution": "Enable FIPS mode for MongoDB Enterprise.\n\nEdit the MongoDB database configuration file (default location: /etc/mongod.conf) to contain the following parameter setting:\n\nnet:\n   tls:\n      FIPSMode: true\n\nStop/start (restart) the mongod or mongos instance using this configuration and run the following command to verify the output is true:\n\ndb.getSiblingDB('admin').runCommand({getCmdLineOpts: 1}).parsed.net.tls.FIPSMode\ntrue\n\nAlternatively, run the following command to search the mongod logfile for FIPS 140-2 mode activated:\n\ngrep 'FIPS 140-2 mode activated' /var/log/mongodb/mongod.log\n\nFor the operating system finding, refer to the appropriate operating system documentation for the procedure to install, configure, and test FIPS mode.",
        "reference": "800-171|3.13.11,800-53|IA-7,800-53|SC-13,800-53r5|IA-7,800-53r5|SC-13,CAT|I,CCI|CCI-000803,CCI|CCI-002450,CSF|PR.DS-5,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(d),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|IA-7,ITSG-33|IA-7a.,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.1,NESA|M5.2.6,NESA|M5.3.1,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,QCSC-v1|13.2,Rule-ID|SV-252146r879616_rule,STIG-ID|MD4X-00-001300,Vuln-ID|V-252146",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^net:' | /bin/grep -A3 'tls:' | /bin/grep -A3 'FIPSMode:'",
        "expect": "^[\\\\s]*FIPSMode:[\\\\s]*[\"\\']*true[\"\\']*[\\\\s]*"
    },
    "custom_item_20": {
        "description": "MD4X-00-001550 - MongoDB must limit the total number of concurrent connections to the database.",
        "info": "MongoDB must limit the total number of concurrent connections to the database.",
        "solution": "MongoDB can limit the total number of connections served by mongod process by setting the following in the MongoDB configuration file (default location: /etc/mongod.conf)\n\nnet:\n  maxIncomingConnections:  %int%\n\nSee the following documentation:\nhttps://docs.mongodb.com/v4.4/reference/configuration-options/\n\nProducts outside of MongoDB can be used to monitor database sessions and limit the maximum number of connections that can be made.\n\nAlternatively most UNIX-like operating systems, including Linux and macOS, provide ways to limit and control the usage of system resources such as threads, files, and network connections on a per-process and per-user basis.\n\nThese ulimits prevent single users from using too many system resources.\n\nThe following is the MongoDB documentation regarding these user limits: https://docs.mongodb.com/v4.4/reference/ulimit/",
        "reference": "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-252148r879511_rule,STIG-ID|MD4X-00-001550,Vuln-ID|V-252148",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^net:' | /bin/grep -A3 'maxIncomingConnections:'",
        "expect": "^[\\\\s]*maxIncomingConnections:[\\\\s]*[1-9]*[\\\\s]*$"
    },
    "custom_item_21": {
        "description": "authorization",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'authorization:'",
        "expect": "^[\\\\s]*authorization:[\\\\s]*[\"\\']*enabled[\"\\']*[\\\\s]*"
    },
    "custom_item_22": {
        "description": "LDAP Server",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep -A3 'ldap:' | /bin/grep 'servers:'",
        "expect": "^[\\\\s]*servers:[\\\\s]*@LDAP_SERVERS@[\\\\s]*$"
    },
    "custom_item_23": {
        "description": "Check if net.http exists in /etc/mongod.conf",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A15 '^net:' | /bin/grep 'http:'",
        "expect": "^[\\\\s]*http:[\\\\s]*"
    },
    "custom_item_24": {
        "description": "enabled",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\\\s]*enabled:'",
        "expect": "^[\\\\s]*enabled:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_25": {
        "description": "JSONPEnabled",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\\\s]*JSONPEnabled:'",
        "expect": "^[\\\\s]*JSONPEnabled:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_26": {
        "description": "RESTInterfaceEnabled",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A5 '^http:' | /bin/grep '^[\\\\s]*RESTInterfaceEnabled:'",
        "expect": "^[\\\\s]*RESTInterfaceEnabled:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_27": {
        "description": "MD4X-00-002800 - MongoDB must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users).",
        "info": "To assure accountability and prevent unauthenticated access, organizational users must be identified and authenticated to prevent potential misuse and compromise of the system.\n\nOrganizational users include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors). Organizational users (and any processes acting on behalf of users) must be uniquely identified and authenticated for all accesses, except the following:\n\n(i) Accesses explicitly identified and documented by the organization. Organizations document specific user actions that can be performed on the information system without identification or authentication; and\n(ii) Accesses that occur through authorized use of group authenticators without individual authentication. Organizations may require unique identification of individuals using shared accounts, for detailed accountability of individual activity.",
        "solution": "For any user not a member of an appropriate organization and has access to a database in the system, run the following command:\n\n use database\n db.dropUser(%username%, {w: 'majority', wtimeout: 5000})\n\nIf the %MongoDB configuration file% (default location: /etc/mongod.conf) does not contain\n\nsecurity:\n  authorization: enabled\n\nEdit the %MongoDB configuration file%, add these parameters, stop/start (restart) any mongod or mongos process using this %MongoDB configuration file%.",
        "reference": "800-171|3.5.1,800-53|IA-2,800-53r5|IA-2,CAT|II,CCI|CCI-000764,CN-L3|7.1.3.1(a),CN-L3|7.1.3.1(e),CN-L3|8.1.4.1(a),CN-L3|8.1.4.2(a),CN-L3|8.5.4.1(a),CSF|PR.AC-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-2,ITSG-33|IA-2a.,NESA|T2.3.8,NESA|T5.3.1,NESA|T5.4.2,NESA|T5.5.1,NESA|T5.5.2,NESA|T5.5.3,NIAv2|AM2,NIAv2|AM8,NIAv2|AM14b,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-252157r879589_rule,STIG-ID|MD4X-00-002800,TBA-FIISB|35.1,TBA-FIISB|36.1,Vuln-ID|V-252157",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'authorization:'",
        "expect": "^[\\\\s]*authorization:[\\\\s]*[\"\\']*enabled[\"\\']*[\\\\s]*"
    },
    "custom_item_28": {
        "description": "PEMKeyFile",
        "file": "@PEMKEYFILE_PATH@",
        "owner": "mongod",
        "mask": "177",
        "group": "mongod"
    },
    "custom_item_29": {
        "description": "CAFile",
        "file": "@CAFILE_PATH@",
        "owner": "mongod",
        "mask": "177",
        "group": "mongod"
    },
    "custom_item_30": {
        "description": "MD4X-00-003700 - MongoDB must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values.",
        "info": "One class of man-in-the-middle, or session hijacking, attack involves the adversary guessing at valid session identifiers based on patterns in identifiers already known.\n\nThe preferred technique for thwarting guesses at Session IDs is the generation of unique session identifiers using a FIPS 140-2 or 140-3 approved random number generator.\n\nHowever, it is recognized that available DBMS products do not all implement the preferred technique yet may have other protections against session hijacking. Therefore, other techniques are acceptable, provided they are demonstrated to be effective.",
        "solution": "Edit the %MongoDB configuration file% to ensure the net.tls.mode option is included and set to the value requireTLS as shown below:\n\nnet:\n   tls:\n      mode: requireTLS\n\nStop/start (restart) and mongod or mongos using the %MongoDB configuration file%.\n\nFurther documentation is here:\nhttps://docs.mongodb.com/v4.4/tutorial/configure-ssl/.",
        "reference": "800-171|3.13.15,800-53|SC-23(3),800-53r5|SC-23(3),CAT|II,CCI|CCI-001188,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SC-23(3),NESA|T4.5.1,QCSC-v1|5.2.1,Rule-ID|SV-252164r879639_rule,STIG-ID|MD4X-00-003700,Vuln-ID|V-252164",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'",
        "expect": "^[\\\\s]*mode:[\\\\s]*[\"\\']*requireTLS[\"\\']*[\\\\s]*$"
    },
    "custom_item_31": {
        "description": "MD4X-00-003800 - MongoDB must protect the confidentiality and integrity of all information at rest.",
        "info": "This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use.\n\nUser data generated, as well as application-specific configuration data, needs to be protected. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate.\n\nIf the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification.",
        "solution": "Enable the Encrypted Storage Engine with KMIP as the key storage mechanism and AES256-GCM as the encryption mode.\n\nConsult MongoDB documentation for encryption setup instruction here:\n\nhttps://docs.mongodb.com/v4.4/tutorial/configure-encryption/",
        "reference": "800-171|3.13.16,800-53|SC-28,800-53r5|SC-28,CAT|I,CCI|CCI-001199,CN-L3|8.1.4.7(b),CN-L3|8.1.4.8(b),CSF|PR.DS-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ITSG-33|SC-28,ITSG-33|SC-28a.,PCI-DSSv3.2.1|3.4,PCI-DSSv4.0|3.3.2,PCI-DSSv4.0|3.5.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-252165r879642_rule,STIG-ID|MD4X-00-003800,Vuln-ID|V-252165",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'enableEncryption:'",
        "expect": "^[\\\\s]*enableEncryption:[\\\\s]*[\"\\']*true[\"\\']*[\\\\s]*"
    },
    "custom_item_32": {
        "description": "MD4X-00-004100 - MongoDB must check the validity of all data inputs except those specifically identified by the organization.",
        "info": "Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application.\n\nWith respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.\n\nEven when no such hijacking takes place, invalid input that gets recorded in the database, whether accidental or malicious, reduces the reliability and usability of the system. Available protections include data types, referential constraints, uniqueness constraints, range checking, and application-specific logic. Application-specific logic can be implemented within the database in stored procedures and triggers, where appropriate.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.",
        "solution": "Disable the javascriptEnabled option in the %MongoDB configuration file% (default location: /etc/mongod.conf) to include the following:\n\nsecurity:\n   javascriptEnabled: false\n\nIf document validation is needed, it should be configured according to the documentation page at:\nhttps://docs.mongodb.com/v4.4/core/schema-validation/",
        "reference": "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-252167r879652_rule,STIG-ID|MD4X-00-004100,Vuln-ID|V-252167",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'javascriptEnabled:'",
        "expect": "^[\\\\s]*javascriptEnabled:[\\\\s]*[\"\\']*false[\"\\']*[\\\\s]*"
    },
    "custom_item_33": {
        "description": "MD4X-00-004200 - MongoDB must provide non-privileged users with error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries.",
        "info": "Any DBMS or associated application providing too much information in error messages on the screen or printout risks compromising the data and security of the system. The structure and content of error messages need to be carefully considered by the organization and development team.\n\nDatabases can inadvertently provide a wealth of information to an attacker through improperly handled error messages. In addition to sensitive business or personal information, database errors can provide host names, IP addresses, user names, and other system information not required for troubleshooting but very useful to someone targeting the system.\n\nCarefully consider the structure/content of error messages. The extent to which information systems are able to identify and handle error conditions is guided by organizational policy and operational requirements. Information that could be exploited by adversaries includes, for example, logon attempts with passwords entered by mistake as the username, mission/business information that can be derived from (if not stated explicitly by) information recorded, and personal information, such as account numbers, social security numbers, and credit card numbers.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.",
        "solution": "Configure custom application code so as not to divulge sensitive information or information useful for system identification in custom application error messages.\n\nTo configure MongoDB to redact client information from its log file do the following:\n\nEdit the %MongoDB configuration file% (default location: /etc/mongod.conf)\n\nAdd the following option to the security section:\n\nsecurity:\n   redactClientLogData: true\n\nRestart the MongoDB server from the operating system:\n\n sudo service mongod restart",
        "reference": "800-53|SI-11a.,800-53r5|SI-11a.,CAT|II,CCI|CCI-001312,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11b.,Rule-ID|SV-252168r879655_rule,STIG-ID|MD4X-00-004200,Vuln-ID|V-252168",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'redactClientLogData:'",
        "expect": "^[\\\\s]*redactClientLogData:[\\\\s]*[\"\\']*true[\"\\']*[\\\\s]*"
    },
    "custom_item_34": {
        "description": "MD4X-00-004300 - MongoDB must reveal detailed error messages only to the ISSO, ISSM, SA, and DBA.",
        "info": "If MongoDB provides too much information in error logs and administrative messages to the screen, this could lead to compromise. The structure and content of error messages need to be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements.\n\nSome default DBMS error messages can contain information that could aid an attacker in, among other things, identifying the database type, host address, or state of the database. Custom errors may contain sensitive customer information.\n\nIt is important that detailed error messages be visible only to those who are authorized to view them; that general users receive only generalized acknowledgment that errors have occurred; and that these generalized messages appear only when relevant to the user's task. For example, a message along the lines of, 'An error has occurred. Unable to save your changes. If this problem persists, contact your help desk' would be relevant. A message such as 'Warning: your transaction generated a large number of page splits' would likely not be relevant.\n\nAdministrative users authorized to review detailed error messages typically are the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified according to organization-specific needs, with appropriate approval.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.",
        "solution": "Edit the %MongoDB configuration file% (default location: /etc/mongod.conf) and add the following parameter redactClientLogData in the security section of that file:\n\nsecurity:\n  redactClientLogData: true\n\nStop/start (restart) any mongod or mongos using the %MongoDB configuration file%.\n\nIdentify and remove any administrative roles and privileges from application users.",
        "reference": "800-53|SI-11b.,800-53r5|SI-11b.,CAT|II,CCI|CCI-001314,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-11c.,Rule-ID|SV-252169r879656_rule,STIG-ID|MD4X-00-004300,Vuln-ID|V-252169",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^security:' | /bin/grep 'redactClientLogData:'",
        "expect": "^[\\\\s]*redactClientLogData:[\\\\s]*[\"\\']*true[\"\\']*[\\\\s]*"
    },
    "custom_item_35": {
        "description": "MD4X-00-004800 - MongoDB must utilize centralized management of the content captured in audit records generated by all components of MongoDB.",
        "info": "Without the ability to centrally manage the content captured in the audit records, identification, troubleshooting, and correlation of suspicious behavior would be difficult and could lead to a delayed or incomplete analysis of an ongoing attack.\n\nThe content captured in audit records must be managed from a central location (necessitating automation). Centralized management of audit records and logs provides for efficiency in maintenance and management of records, as well as the backup and archiving of those records.\n\nMongoDB may write audit records to database tables, to files in the file system, to other kinds of local repository, or directly to a centralized log management system. Whatever the method used, it must be compatible with off-loading the records to the centralized system.",
        "solution": "If audit operations filters are not configured in the MongoDB configuration file (default location: /etc/mongod.conf), configure them according to application requirements, but at a minimum, ensure destination and filter are set in a mongod.conf YAML auditLog configuration setting.\n\nFor example, to audit all database operations involving creating or dropping a collection, the %MongoDB configuration file% (by default /etc/mongod.conf) auditLog section would read as follows:\n\nauditLog:\n   destination: file\n   format: BSON\n   path: /var/log/mongodb/audit/auditLog.bson\n   filter: '{ atype: { $in: [ 'createCollection', 'dropCollection' ] } }'\n\nSee mongodb documentation for details of audit operations and event configuration.\n\nhttps://docs.mongodb.com/v4.4/core/auditing/\nhttps://docs.mongodb.com/v4.4/tutorial/configure-audit-filters/\n\nConfigure and/or deploy software tools to ensure that DBMS audit records are written directly to or systematically transferred to a centralized log management system.",
        "reference": "800-171|3.3.1,800-53|AU-3(2),800-53r5|PL-9,CAT|II,CCI|CCI-001844,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3(2),NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252171r879729_rule,STIG-ID|MD4X-00-004800,SWIFT-CSCv1|6.4,Vuln-ID|V-252171",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^auditLog:' | /bin/grep 'destination:'",
        "expect": "^[\\\\s]*destination:[\\\\s]*[\"\\']*(file|syslog)[\"\\']*[\\\\s]*"
    },
    "custom_item_36": {
        "description": "MD4X-00-004900 - MongoDB must allocate audit record storage capacity in accordance with site audit record storage requirements.",
        "info": "In order to ensure sufficient storage capacity for the audit logs, MongoDB must be able to allocate audit record storage capacity. Although another requirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded to a centralized log management system, it remains necessary to provide space on the database server to serve as a buffer against outages and capacity limits of the off-loading mechanism.\n\nThe task of allocating audit record storage capacity is usually performed during initial installation of MongoDB and is closely associated with the DBA and system administrator roles. The DBA or system administrator will usually coordinate the allocation of physical drive space with the application owner/installer and the application will prompt the installer to provide the capacity information, the physical location of the disk, or both.\n\nIn determining the capacity requirements, consider such factors as: total number of users; expected number of concurrent users during busy periods; number and type of events being monitored; types and amounts of data being captured; the frequency/speed with which audit records are off-loaded to the central log management system; and any limitations that exist on MongoDB's ability to reuse the space formerly occupied by off-loaded records.",
        "solution": "If an auditLog has not been specified, or a centralized system log (which is recommended) has not been enabled, configure these in the mongod.conf configuration file:\n\nauditLog:\n   destination: syslog\n\nSee documentation for additional configuration: https://docs.mongodb.com/v4.4/tutorial/configure-auditing/\n\nAllocate sufficient space to the storage volume hosting the file identified in the MongoDB configuration 'auditLog.path' to support audit file peak demand.",
        "reference": "800-53|AU-4,800-53r5|AU-4,CAT|II,CCI|CCI-001849,CSF|PR.DS-4,CSF|PR.PT-1,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-4,NESA|T3.3.1,NESA|T3.6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-252172r879730_rule,STIG-ID|MD4X-00-004900,Vuln-ID|V-252172",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A10 '^auditLog:' | /bin/grep 'destination:'",
        "expect": "^[\\\\s]*destination:[\\\\s]*[\"\\']*(file|syslog)[\"\\']*[\\\\s]*"
    },
    "custom_item_37": {
        "description": "MD4X-00-006000 - MongoDB must maintain the confidentiality and integrity of information during preparation for transmission.",
        "info": "Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nUse of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.\n\nWhen transmitting data, MongoDB, associated applications, and infrastructure must leverage transmission protection mechanisms.",
        "solution": "Stop the MongoDB instance if it is running.\n\nObtain a certificate from a valid DoD certificate authority to be used for encrypted data transmission.\n\nModify the %MongoDB configuration file% with TLS configuration options such as:\n\nnet:\n  tls:\n    mode: requireTLS\n    certificateKeyFile: /etc/ssl/mongodb.pem\n    CAFile: /etc/ssl/caToValidateClientCertificates.pem\n    allowInvalidCertificates: false\n    allowConnectionsWithoutCertificates: false\n    FIPSMode: true\n\nSet net.tls.mode to the requireTLS.\nSet net.tls.certificateKeyFile to the full path of the certificate (.pem) file.\n\nStart/stop (restart) all mongod or mongos instances using the %MongoDB configuration file% (default location: /etc/mongod.conf).",
        "reference": "800-171|3.13.8,800-53|SC-8(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-002420,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-252179r879812_rule,STIG-ID|MD4X-00-006000,SWIFT-CSCv1|2.1,Vuln-ID|V-252179",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'",
        "expect": "^[\\\\s]*mode:[\\\\s]*[\"\\']*requireTLS[\"\\']*[\\\\s]*"
    },
    "custom_item_38": {
        "description": "MD4X-00-006100 - MongoDB must maintain the confidentiality and integrity of information during reception.",
        "info": "Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nThis requirement applies only to those applications that are either distributed or can allow access to data nonlocally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.\n\nWhen receiving data, MongoDB, associated applications, and infrastructure must leverage protection mechanisms.",
        "solution": "Obtain a certificate from a valid DoD certificate authority to be used for encrypted data transmission.\n\nModify the %MongoDB configuration file% with TLS configuration options such as:\n\nnet:\n  tls:\n    mode: requireTLS\n    certificateKeyFile: /etc/ssl/mongodb.pem\n    CAFile: /etc/ssl/caToValidateClientCertificates.pem\n    allowInvalidCertificates: false\n    allowConnectionsWithoutCertificates: false\n    FIPSMode: true\n\nEnsue net.tls.mode is set to requireTLS.\n\nStart/stop (restart) all mongod or mongos instances using the %MongoDB configuration file% (default location: /etc/mongod.conf).",
        "reference": "800-171|3.13.8,800-53|SC-8(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-002422,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-252180r879813_rule,STIG-ID|MD4X-00-006100,SWIFT-CSCv1|2.1,Vuln-ID|V-252180",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "cmd": "/bin/cat @MONGOD_CONF_FULL_PATH@ | /bin/grep -A14 '^net:' | /bin/grep -A16 'tls:' | /bin/grep 'mode:'",
        "expect": "^[\\\\s]*mode:[\\\\s]*[\"\\']*requireTLS[\"\\']*[\\\\s]*"
    },
    "custom_item_39": {
        "description": "MD4X-00-006300 - When updates are applied to MongoDB software, any software components that have been replaced or made unnecessary must be removed.",
        "info": "Previous versions of DBMS components that are not removed from the information system after updates have been installed may be exploited by adversaries.\n\nSome DBMSs' installation tools may remove older versions of software automatically from the information system. In other cases, manual review and removal will be required. In planning installations and upgrades, organizations must include steps (automated, manual, or both) to identify and remove the outdated modules.\n\nA transition period may be necessary when both the old and the new software are required. This should be taken into account in the planning.",
        "solution": "If there is a finding, then MongoDB has not been installed via a package manager and may have been installed manually or not at all.\n\nIf MongoDB has not been installed via a package manager, verify that an organizational or site-specific document outlining the installation and upgrade procedures for software exists. Review this organizational or site-specific document to determine how and where MongoDB is to be installed on the system. Using this documentation, verify that MongoDB has been installed on the system prior to upgrading.\n\nTo verify the version of MongoDB Enterprise Server, run the following command in the directory where the MongoDB executable binary has been placed according to the organizational or site-specific documentation.\n\n cd %mongod binary directory%\n ./mongod --version\n\nThe output will show the version and architecture of the MongoDB Server binary similar to the following:\n\n./mongod --version\ndb version v4.4.8\nBuild Info: {\n    'version': '4.4.8',\n    'gitVersion': '83b8bb8b6b325d8d8d3dfd2ad9f744bdad7d6ca0',\n    'openSSLVersion': 'OpenSSL 1.0.1e-fips 11 Feb 2013',\n    'modules': [\n        'enterprise'\n    ],\n    'allocator': 'tcmalloc',\n    'environment': {\n        'distmod': 'rhel70',\n        'distarch': 'x86_64',\n        'target_arch': 'x86_64'\n    }\n}\n\nVerify that the version desired (what the upgraded version should be) matches what is shown the in output.\n\nFor example, if updated from MongoDB Enterprise Server v4.4.8 to v4.4.9, the output after the update would be similar to the above but the db version would reflect v4.4.9.\n\nIf the version is not what is expected, then remove the mongod binary from the system to prevent it from being used and consult the organizational or site-specific documents for further guidance.\n\nRun the following commands as an operating system administrator to remove the MongoDB Enterprise Server binary from the system:\n\n cd mongod binary directory\n rm ./mongod",
        "reference": "800-171|3.14.1,800-53|SI-2(6),800-53r5|SI-2(6),CAT|II,CCI|CCI-002617,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,DISA_Benchmark|MongoDB_Enterprise_Advanced_4-x_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|PR9,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-252182r879825_rule,STIG-ID|MD4X-00-006300,SWIFT-CSCv1|2.2,Vuln-ID|V-252182",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_MDB_Enterprise_Advanced_4-x_V1R3_STIG.zip",
        "rpm": "mongodb-enterprise-server.-0.0.0-0",
        "operator": "gte"
    }
}