{
    "custom_item_1": {
        "description": "EPAS-00-000100 - The EDB Postgres Advanced Server must limit the number of concurrent sessions to an organization-defined number per user for all accounts and/or account types.",
        "info": "Database management includes the ability to control the number of users and user sessions utilizing a DBMS. Unlimited concurrent connections to the DBMS could allow a successful Denial of Service (DoS) attack by exhausting connection resources; and a system can also fail or be degraded by an overload of legitimate users. Limiting the number of concurrent sessions per user is helpful in reducing these risks.\n\nThis requirement addresses concurrent session control for a single account. It does not address concurrent sessions by a single user via multiple system accounts; and it does not deal with the total number of sessions across all accounts.\n\nThe capability to limit the number of concurrent sessions per user must be configured in or added to the DBMS (for example, by use of a logon trigger), when this is technically feasible. Note that it is not sufficient to limit sessions via a web server or application server alone, because legitimate users and adversaries can potentially connect to the DBMS by other means.\n\nThe organization will need to define the maximum number of concurrent sessions by account type, by account, or a combination thereof. In deciding on the appropriate number, it is important to consider the work requirements of the various types of users. For example, 2 might be an acceptable limit for general users accessing the database via an application; but 10 might be too few for a database administrator using a database management GUI tool, where each query tab and navigation pane may count as a separate session.\n\n(Sessions may also be referred to as connections or logons, which for the purposes of this requirement are synonyms.)",
        "solution": "For any roles where rolconnlimit is -1 or larger than the system documentation limits, execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER USERWITH CONNECTION LIMIT'",
        "reference": "800-53|AC-10,800-53r5|AC-10,CAT|II,CCI|CCI-000054,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|AC-10,NESA|T5.5.1,QCSC-v1|5.2.1,QCSC-v1|5.2.2,Rule-ID|SV-259210r938683_rule,STIG-ID|EPAS-00-000100,Vuln-ID|V-259210",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT rolname, rolconnlimit FROM pg_roles where rolname not like 'pg_%' and rolname not like 'aq_%' AND (rolconnlimit = -1 OR rolconnlimit > @ADMIN_CONN_LIMIT@);"
    },
    "custom_item_2": {
        "description": "EPAS-00-000900 - The EDB Postgres Advanced Server must protect against a user falsely repudiating having performed organization-defined actions.",
        "info": "Nonrepudiation of actions taken is required in order to maintain data integrity. Examples of particular actions taken by individuals include creating information, sending a message, approving information (e.g., indicating concurrence or signing a contract), and receiving a message.\n\nNonrepudiation protects against later claims by a user of not having created, modified, or deleted a particular data item or collection of data in the database.\n\nIn designing a database, the organization must define the types of data and the user actions that must be protected from repudiation. The implementation must then include building audit features into the application data tables, and configuring the DBMS' audit tools to capture the necessary audit trail. Design and implementation also must ensure that applications pass individual user identification to the DBMS, even where the application connects to the DBMS with a standard, group account.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit = csv'\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit = xml'\n> psql edb -c 'SELECT pg_reload_conf()'",
        "reference": "800-53|AU-10,800-53r5|AU-10,CAT|II,CCI|CCI-000166,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-10,NESA|T4.3.1,NESA|T7.3.3,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259213r938692_rule,STIG-ID|EPAS-00-000900,Vuln-ID|V-259213",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit;",
        "sql_expect": "^(csv|xml)$"
    },
    "custom_item_3": {
        "description": "EPAS-00-001000 - The EDB Postgres Advanced Server must provide audit record generation capability for DOD-defined auditable events within all EDB Postgres Advanced Server/database components.",
        "info": "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nAudit records can be generated from various components within the DBMS (e.g., process, module). Certain specific application functionalities may be audited as well. The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.\n\nDOD has defined the list of events for which the DBMS will provide an audit record generation capability as the following:\n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities, or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.\n\nOrganizations may define additional events requiring continuous or ad hoc auditing.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit = csv'\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit = xml'\n> psql edb -c 'SELECT pg_reload_conf()'",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12a.,800-53r5|AU-12a.,CAT|II,CCI|CCI-000169,CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-12a.,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259214r938695_rule,STIG-ID|EPAS-00-001000,SWIFT-CSCv1|6.4,Vuln-ID|V-259214",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit;",
        "sql_expect": "^(csv|xml)$"
    },
    "custom_item_4": {
        "description": "EPAS-00-001200 - The EDB Postgres Advanced Server must generate audit records when privileges/permissions are retrieved.",
        "info": "Under some circumstances, it may be useful to monitor who/what is reading privilege/permission/role information. Therefore, it must be possible to configure auditing to do this. DBMSs typically make such information available through views or functions.\n\nThis requirement addresses explicit requests for privilege/permission/role membership information. It does not refer to the implicit retrieval of privileges/permissions/role memberships that the DBMS continually performs to determine if any and every action on the database is permitted.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259216r938701_rule,STIG-ID|EPAS-00-001200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259216",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_5": {
        "description": "EPAS-00-001300 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to retrieve privileges/permissions occur.",
        "info": "Under some circumstances, it may be useful to monitor who/what is reading privilege/permission/role information. Therefore, it must be possible to configure auditing to do this. DBMSs typically make such information available through views or functions.\n\nThis requirement addresses explicit requests for privilege/permission/role membership information. It does not refer to the implicit retrieval of privileges/permissions/role memberships that the DBMS continually performs to determine if any and every action on the database is permitted.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\npsql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\npsql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259217r938704_rule,STIG-ID|EPAS-00-001300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259217",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_6": {
        "description": "EPAS-00-001400 - The EDB Postgres Advanced Server must initiate support of session auditing upon startup.",
        "info": "Session auditing is for use when a user's activities are under investigation.\n\nTypically, this DBMS capability would be used in conjunction with comparable monitoring of a user's online session, involving other software components such as operating systems, web servers, and front-end user applications. The current requirement, however, deals specifically with the DBMS.\n\nTo be sure of capturing all activity during those periods when session auditing is in use, database auditing needs to be in operation for the whole time the DBMS is running.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\npsql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\npsql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-53|AU-14(1),800-53r5|AU-14(1),CAT|II,CCI|CCI-001464,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-14,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259218r938707_rule,STIG-ID|EPAS-00-001400,SWIFT-CSCv1|6.4,Vuln-ID|V-259218",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_7": {
        "description": "EPAS-00-001600 - The EDB Postgres Advanced Server must produce audit records containing sufficient information to establish what type of events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Without establishing what type of event occurred, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nAudit record content that may be necessary to satisfy the requirement of this policy includes, for example, time stamps, user/process identifiers, event descriptions, success/fail indications, filenames involved, and access control or flow control rules invoked.\n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application.\n\nDatabase software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly what actions were performed. This requires specific information regarding the event type an audit record is referring to. If event type information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000130,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259219r938710_rule,STIG-ID|EPAS-00-001600,SWIFT-CSCv1|6.4,Vuln-ID|V-259219",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_8": {
        "description": "EPAS-00-001700 - The EDB Postgres Advanced Server must produce audit records containing time stamps to establish when the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Without establishing when events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident.\n\nIn order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know the date and time when events occurred.\n\nAssociating the date and time with detected events in the application and audit logs provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application.\n\nDatabase software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly when specific actions were performed. This requires the date and time an audit record is referring to. If date and time information is not recorded and stored with the audit record, the record itself is of very limited use.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000131,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259220r938713_rule,STIG-ID|EPAS-00-001700,SWIFT-CSCv1|6.4,Vuln-ID|V-259220",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_9": {
        "description": "EPAS-00-001800 - The EDB Postgres Advanced Server must produce audit records containing sufficient information to establish where the events occurred.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident.\n\nIn order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as application components, modules, session identifiers, filenames, host names, and functionality.\n\nAssociating information about where the event occurred within the application provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000132,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259221r938716_rule,STIG-ID|EPAS-00-001800,SWIFT-CSCv1|6.4,Vuln-ID|V-259221",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_10": {
        "description": "EPAS-00-001900 - The EDB Postgres Advanced Server must produce audit records containing sufficient information to establish the sources (origins) of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events relating to an incident.\n\nIn order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as application components, modules, session identifiers, filenames, host names, and functionality.\n\nIn addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event.\n\nAssociating information about the source of the event within the application provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000133,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259222r938719_rule,STIG-ID|EPAS-00-001900,SWIFT-CSCv1|6.4,Vuln-ID|V-259222",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_11": {
        "description": "EPAS-00-002000 - The EDB Postgres Advanced Server must produce audit records containing sufficient information to establish the outcome (success or failure) of the events.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Without information about the outcome of events, security personnel cannot make an accurate assessment as to whether an attack was successful or if changes were made to the security state of the system.\n\nEvent outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-000134,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259223r938722_rule,STIG-ID|EPAS-00-002000,SWIFT-CSCv1|6.4,Vuln-ID|V-259223",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_12": {
        "description": "EPAS-00-002100 - The EDB Postgres Advanced Server must produce audit records containing sufficient information to establish the identity of any user/subject or process associated with the event.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Without information that establishes the identity of the subjects (i.e., users or processes acting on behalf of users) associated with the events, security personnel cannot determine responsibility for the potentially harmful event.\n\nIdentifiers (if authenticated or otherwise known) include, but are not limited to, user database tables, primary key values, user names, or process identifiers.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3,800-53r5|AU-3,CAT|II,CCI|CCI-001487,CN-L3|7.1.2.3(a),CN-L3|7.1.2.3(b),CN-L3|7.1.3.3(a),CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3,NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259224r938725_rule,STIG-ID|EPAS-00-002100,SWIFT-CSCv1|6.4,Vuln-ID|V-259224",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_13": {
        "description": "EPAS-00-002200 - The EDB Postgres Advanced Server must include additional, more detailed, organization-defined information in the audit records for audit events identified by type, location, or subject.",
        "info": "Information system auditing capability is critical for accurate forensic analysis. Reconstruction of harmful events or forensic analysis is not possible if audit records do not contain enough information. To support analysis, some types of events will need information to be logged that exceeds the basic requirements of event type, time stamps, location, source, outcome, and user identity. If additional information is not available, it could negatively impact forensic investigations into user actions or other malicious events.\n\nThe organization must determine what additional information is required for complete analysis of the audited events. The additional information required is dependent on the type of information (e.g., sensitivity of the data and the environment within which it resides). At a minimum, the organization must employ either full-text recording of privileged commands or the individual identities of group users, or both. The organization must maintain audit trails in sufficient detail to reconstruct events to determine the cause and impact of compromise.\n\nExamples of detailed information the organization may require in audit records are full-text recording of privileged commands or the individual identities of group account users.\n\nIn EnterpriseDB Postgres Advanced Server, the edb_audit_tag can be used to record additional information. This tag can be set to different values by different sessions (connections), and can be set to new values any number of times. How to recognize the conditions for producing such audit data has to be determined and coded for as part of application and database design.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Execute the following SQL to set additional detailed information for the audit records in the session:\n\nset edb_audit_tag = '';\n\nReplacewith a character string holding the additional data that must be captured.\n\nTo set this in a trigger, an example is included below. Keep in mind that the edb_audit_tag is set for the life of the session, not just the life of the insert command:\n\nCREATE OR REPLACE FUNCTION add_audit_info()\n  RETURNS trigger AS\n$BODY\n$BEGIN\n  SET edb_audit_tag = '';\n  RETURN NEW;\nEND;\n$BODY\n$LANGUAGE plpgsql;\n\nCREATE TRIGGER add_audit_info_trigger\n  BEFORE INSERT\n  ONFOR EACH ROW\n  EXECUTE PROCEDURE add_audit_info();",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-3(1),800-53r5|AU-3(1),CAT|II,CCI|CCI-000135,CN-L3|7.1.3.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-3(1),NESA|T3.6.2,NIAv2|AM34a,NIAv2|AM34b,NIAv2|AM34c,NIAv2|AM34d,NIAv2|AM34e,NIAv2|AM34f,NIAv2|AM34g,PCI-DSSv3.2.1|10.3,PCI-DSSv3.2.1|10.3.1,PCI-DSSv3.2.1|10.3.2,PCI-DSSv3.2.1|10.3.3,PCI-DSSv3.2.1|10.3.4,PCI-DSSv3.2.1|10.3.5,PCI-DSSv3.2.1|10.3.6,PCI-DSSv4.0|10.2.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259225r938728_rule,STIG-ID|EPAS-00-002200,SWIFT-CSCv1|6.4,Vuln-ID|V-259225",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_tag;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_14": {
        "description": "EPAS-00-003210 - EDB Postgres Advanced Server software modules, to include stored procedures, functions, and triggers must be monitored to discover unauthorized changes.",
        "info": "If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.\n\nAccordingly, only qualified and authorized individuals must be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications. Monitoring is required for assurance that the protections are effective.\n\nUnmanaged changes that occur to the logic modules within the database can lead to unauthorized or compromised installations.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Configure an EDB Postgres timed job that automatically checks all system and user-defined procedures, functions, and triggers for being modified, and in the event of such changes informs the proper personnel for evaluation and possible action. Refer to the EDB documentation for further information on how to configure a job using the DBMS_JOB package: https://www.enterprisedb.com/docs/epas/latest/reference/oracle_compatibility_reference/epas_compat_bip_guide/03_built-in_packages/05_dbms_job/\n\nAlternatively, the EDB audit utility can capture these changes by enabling as follows: Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-259235r938758_rule,STIG-ID|EPAS-00-003210,Vuln-ID|V-259235",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "select job, what from ALL_JOBS;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_15": {
        "description": "EPAS-00-003500 - Database objects must be owned by database/EDB Postgres Advanced Server principals authorized for ownership.",
        "info": "Database objects include but are not limited to tables, indexes, storage, stored procedures, functions, triggers, and links to software external to the EDB Postgres Advanced Server, etc.\n\nWithin the database, object ownership implies full privileges to the owned object, including the privilege to assign access to the owned objects to other subjects. Database functions and procedures can be coded using definer's rights. This allows anyone who utilizes the object to perform the actions as if they were the owner. If not properly managed, this can lead to privileged actions being taken by unauthorized individuals.\n\nConversely, if critical tables or other objects rely on unauthorized owner accounts, these objects may be lost when an account is removed.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Assign ownership of authorized objects to authorized object owner accounts by running the following SQL command for each object to be changed:\n\nALTEROWNER TO;\n\nFor example: ALTER TABLE my_table OWNER TO APP_USER;",
        "reference": "800-171|3.4.5,800-53|CM-5(6),800-53r5|CM-5(6),CAT|II,CCI|CCI-001499,CSF|PR.IP-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(6),NESA|T3.2.3,NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.1,NESA|T7.5.3,NESA|T7.6.3,QCSC-v1|7.2,Rule-ID|SV-259238r938767_rule,STIG-ID|EPAS-00-003500,Vuln-ID|V-259238",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "select owner, schema_name, object_name from sys.all_objects where not lower(owner) = lower('@PG_OWNER@');"
    },
    "custom_item_16": {
        "description": "EPAS-00-003700 - Default, demonstration and sample databases, database objects, and applications must be removed.",
        "info": "Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).\n\nIt is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality, not required for every mission, that cannot be disabled.\n\nDBMSs must adhere to the principles of least functionality by providing only essential capabilities.\n\nDemonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Remove any unused databases from the DBMS.\n\nTo remove a database, execute the follow SQL as the enterprised user:\n\n> psql edb -c 'DROP DATABASE'\n\nor\n\n> dropdb",
        "reference": "800-171|3.4.6,800-171|3.4.7,800-53|CM-7a.,800-53r5|CM-7a.,CAT|II,CCI|CCI-000381,CN-L3|7.1.3.5(c),CN-L3|8.1.4.4(a),CSF|PR.IP-1,CSF|PR.PT-3,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-7a.,NIAv2|SS15a,PCI-DSSv3.2.1|2.2.1,PCI-DSSv4.0|2.2.3,QCSC-v1|3.2,Rule-ID|SV-259240r938773_rule,STIG-ID|EPAS-00-003700,SWIFT-CSCv1|2.3,Vuln-ID|V-259240",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT datname FROM pg_database WHERE datistemplate = false;"
    },
    "custom_item_17": {
        "description": "port",
        "sql_request": "SHOW port;",
        "sql_expect": "^(@PG_PORTS@)$"
    },
    "custom_item_18": {
        "description": "address",
        "sql_request": "SHOW listen_addresses;",
        "sql_expect": "^(([1-9][0-9]{1,2}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|localhost|::1|[0-9A-Fa-f:]{4,128}),?)+$"
    },
    "custom_item_19": {
        "description": "EPAS-00-004250 - If DBMS authentication, using passwords, is employed, EDB Postgres Advanced Server must enforce the DOD standards for password complexity and lifetime.",
        "info": "OS/enterprise authentication and identification must be used (SRG-APP-000023-DB-000001). Native DBMS authentication may be used only when circumstances make it unavoidable; and must be documented and AO-approved.\n\nThe DOD standard for authentication is DOD-approved PKI certificates. Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.\n\nIn such cases, the DOD standards for password complexity and lifetime must be implemented. DBMS products that can inherit the rules for these from the operating system or access control program (e.g., Microsoft Active Directory) must be configured to do so. For other DBMSs, the rules must be enforced using available configuration parameters or custom code.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "After creating a password verification function, configure the default profile to use it and the other required password related settings.\n\nTo facilitate checking that a new password is sufficiently different from a previously used one, the dod_verify_password function uses the Levenshtein function, which is available as part of the PostgreSQL fuzzystrmatch extension.\n\nBefore creating the password verification function, check whether the fuzzystrmatch extension is installed by executing the following SQL query as enterprisedb:\n\n SELECT extname FROM pg_extension;\n\nIf 'fuzzystrmatch' is not listed, execute the following SQL to install the extension as enterprisedb:\n\n CREATE EXTENSION fuzzystrmatch;\n\nWith the fuzzystrmatch extension installed, execute the following SQL statements as enterprisedb:\n\n CREATE OR REPLACE FUNCTION sys.dod_verify_password(user_name varchar2, new_password varchar2, old_password varchar2)\n RETURN boolean IMMUTABLE\n IS\n pwd_length integer := NVL( length(new_password), 0 );\n\n min_length integer := 15;\n min_lower integer := 1;\n min_upper integer := 1;\n min_numeric integer := 1;\n min_special integer := 1;\n min_diff integer := ceil(min_length::numeric / 2);\n\n cnt_lower integer := 0;\n cnt_upper integer := 0;\n cnt_numeric integer := 0;\n cnt_special integer := 0;\n\n cnt_diff integer := 0;\n\n i integer ;\n curr_char CHAR(1);\n\n BEGIN\n\n --\n -- Check Length of new password\n --\n IF ( pwd_length < min_length )\n THEN\n raise_application_error(-20001, 'Password is too short. Password must be at least '||min_length||' characters long.');\n END IF;\n\n --\n -- Get count of each character type in new password.\n --\n FOR i in 1..pwd_length LOOP\n curr_char := substr(new_password, i, 1);\n\n IF ( curr_char SIMILAR TO '[a-z]' ) THEN\n cnt_lower := cnt_lower + 1;\n ELSIF ( curr_char SIMILAR TO '[A-Z]' ) THEN\n cnt_upper := cnt_upper + 1;\n ELSIF ( curr_char SIMILAR TO '[0-9]' ) THEN\n cnt_numeric := cnt_numeric + 1;\n ELSE\n cnt_special := cnt_special + 1;\n END IF;\n END LOOP;\n\n --\n -- Calculate Levenshtein difference between old and new password\n --\n cnt_diff := levenshtein( old_password, new_password );\n\n -- Check if new password has minimum number of lowercase characters\n IF cnt_lower < min_lower THEN\n raise_application_error(-20004, 'Password must contain at least '||min_lower||' lowercase character(s)');\n END IF;\n\n -- Check if new password has minimum number of uppercase characters\n IF cnt_upper < min_upper THEN\n raise_application_error(-20003, 'Password must contain at least '||min_upper||' uppercase character(s)');\n END IF;\n\n -- Check if new password has minimum number of numeric characters\n IF cnt_numeric < min_numeric THEN\n raise_application_error(-20005, 'Password must contain at least '||min_numeric||' numeric character(s)');\n END IF;\n\n -- Check if new password has minimum number of special characters\n IF cnt_special < min_special THEN\n raise_application_error(-20006, 'Password must contain at least '||min_special||' special character(s)');\n END IF;\n\n -- Check if new password differs from old password by minimum number of required characters\n IF cnt_diff < min_diff THEN\n raise_application_error(-20007, 'Password must differ from old password by at least '||min_diff||' character(s)');\n END IF;\n\n\n RETURN true;\n END;\n\n ALTER FUNCTION sys.dod_verify_password(varchar2, varchar2, varchar2) OWNER TO enterprisedb;\n\nNext, execute the following statement (or a variant of this) to set the default profile for DOD standards:\n\n ALTER PROFILE DEFAULT LIMIT\n FAILED_LOGIN_ATTEMPTS 3\n PASSWORD_LOCK_TIME 1\n PASSWORD_LIFE_TIME 60\n PASSWORD_GRACE_TIME 3\n PASSWORD_REUSE_TIME 180\n PASSWORD_REUSE_MAX 5\n PASSWORD_VERIFY_FUNCTION dod_verify_password;\n\nNote that the above statement assumes that the password verification function is named 'dod_verify_password'. If the function was created with a different name, update the ALTER PROFILE statement above as appropriate.",
        "reference": "800-171|3.5.7,800-53|IA-5(1)(a),800-53r5|IA-5(1)(a),CAT|I,CCI|CCI-000192,CN-L3|7.1.2.7(e),CN-L3|7.1.3.1(b),CSF|PR.AC-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ISO/IEC-27001|A.9.4.3,ITSG-33|IA-5(1)(a),NESA|T5.2.3,NIAv2|AM19a,NIAv2|AM19b,NIAv2|AM19c,NIAv2|AM19d,NIAv2|AM22a,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-259246r938791_rule,STIG-ID|EPAS-00-004250,SWIFT-CSCv1|4.1,TBA-FIISB|26.2.1,TBA-FIISB|26.2.4,Vuln-ID|V-259246",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "select * from dba_profiles;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_20": {
        "description": "EPAS-00-004300 - If passwords are used for authentication, the EDB Postgres Advanced Server must store only hashed, salted representations of passwords.",
        "info": "The DOD standard for authentication is DOD-approved PKI certificates.\n\nAuthentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.\n\nIn such cases, database passwords stored in clear text, using reversible encryption, or using unsalted hashes would be vulnerable to unauthorized disclosure. Database passwords must always be in the form of one-way, salted hashes when stored internally or externally to the DBMS.",
        "solution": "Execute the following SQL as the 'enterprisedb' user:\n\nALTER SYSTEM SET password_encryption = 'scram-sha-256';\nSELECT pg_reload_conf();",
        "reference": "800-171|3.5.10,800-53|IA-5(1)(c),800-53r5|IA-5(1)(c),CAT|I,CCI|CCI-000196,CSF|PR.AC-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(i),HIPAA|164.312(d),ITSG-33|IA-5(1)(c),NESA|T5.2.3,NIAv2|CY6,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-259247r938794_rule,STIG-ID|EPAS-00-004300,SWIFT-CSCv1|4.1,TBA-FIISB|26.1,Vuln-ID|V-259247",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW password_encryption;",
        "sql_expect": "scram-sha-256"
    },
    "custom_item_21": {
        "description": "tcp_keepalives_idle",
        "sql_request": "SHOW tcp_keepalives_idle;"
    },
    "custom_item_22": {
        "description": "tcp_keepalives_interval",
        "sql_request": "SHOW tcp_keepalives_interval;"
    },
    "custom_item_23": {
        "description": "tcp_keepalives_count",
        "sql_request": "SHOW tcp_keepalives_count;"
    },
    "custom_item_24": {
        "description": "statement_timeout",
        "sql_request": "SHOW statement_timeout;"
    },
    "custom_item_25": {
        "description": "Check if sqlprotect.list_protected_users table exists",
        "sql_request": "SELECT table_schema, table_name FROM information_schema.tables WHERE lower(table_schema) = 'sqlprotect' and lower(table_name) = 'list_protected_users';",
        "sql_expect": "sqlprotect"
    },
    "custom_item_26": {
        "description": "EPAS-00-006200 - The EDB Postgres Advanced Server must check the validity of all data inputs except those specifically identified by the organization.",
        "info": "Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application.\n\nWith respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.\n\nEven when no such hijacking takes place, invalid input that gets recorded in the database, whether accidental or malicious, reduces the reliability and usability of the system. Available protections include data types, referential constraints, uniqueness constraints, range checking, and application-specific logic. Application-specific logic can be implemented within the database in stored procedures and triggers, where appropriate.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Modify database code to properly validate data before it is put into the database or acted upon by the database.\n\nModify the database to contain column/field definitions for each column/field in the database.\n\nModify the database to contain constraints and validity checking on database columns and tables that require them for data integrity.\n\nUse prepared statements for user supplied inputs.\n\nDo not allow general users direct console access to the EDB Postgres Advanced Server database.\n\nIf EDB SQL/Protect is being used to monitor and protect the EDB Postgres Advanced Server database from possible SQL injection attacks, install and configure SQL/Protect as documented here: https://www.enterprisedb.com/docs/epas/latest/epas_security_guide/02_protecting_against_sql_injection_attacks/02_configuring_sql_protect/\n\nAlternatively, implement, document, and maintain another method of checking for the validity of inputs.",
        "reference": "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-259263r938842_rule,STIG-ID|EPAS-00-006200,Vuln-ID|V-259263",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT * FROM sqlprotect.list_protected_users;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_27": {
        "description": "Check if sqlprotect.list_protected_users table exists",
        "sql_request": "SELECT table_schema, table_name FROM information_schema.tables WHERE lower(table_schema) = 'sqlprotect' and lower(table_name) = 'list_protected_users';",
        "sql_expect": "sqlprotect"
    },
    "custom_item_28": {
        "description": "EPAS-00-006300 - The EDB Postgres Advanced Server and associated applications must reserve the use of dynamic code execution for situations that require it.",
        "info": "With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.\n\nThe principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be utilized otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, precompiled stored procedures, functions, and triggers.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Install and configure SQL/Protect as documented here for the specific version being used: https://www.enterprisedb.com/docs/epas/latest/epas_security_guide/02_protecting_against_sql_injection_attacks/02_configuring_sql_protect/\n\nAlternatively, implement, document, and maintain another method of checking for the validity of inputs.",
        "reference": "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-259264r938845_rule,STIG-ID|EPAS-00-006300,Vuln-ID|V-259264",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT * FROM sqlprotect.list_protected_users;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_29": {
        "description": "Check if sqlprotect.list_protected_users table exists",
        "sql_request": "SELECT table_schema, table_name FROM information_schema.tables WHERE lower(table_schema) = 'sqlprotect' and lower(table_name) = 'list_protected_users';",
        "sql_expect": "sqlprotect"
    },
    "custom_item_30": {
        "description": "EPAS-00-006400 - The EDB Postgres Advanced Server and associated applications, when making use of dynamic code execution, must scan input data for invalid values that may indicate a code injection attack.",
        "info": "With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.\n\nThe principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be utilized otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, precompiled stored procedures, functions, and triggers.\n\nWhen dynamic execution is necessary, ways to mitigate the risk include the following, which should be implemented both in the on-screen application and at the database level in the stored procedures:\n-- Allow strings as input only when necessary.\n-- Rely on data typing to validate numbers, dates, etc. Do not accept invalid values. If substituting other values for them, think carefully about whether this could be subverted.\n-- Limit the size of input strings to what is truly necessary.\n-- If single quotes/apostrophes, double quotes, semicolons, equals signs, angle brackets, or square brackets will never be valid as input, reject them.\n-- If comment markers will never be valid as input, reject them. In SQL, these are -- or /* */\n-- If HTML and XML tags, entities, comments, etc. will never be valid, reject them.\n-- If wildcards are present, reject them unless truly necessary. In SQL, these are the underscore and the percentage sign, and the word ESCAPE is also a clue that wildcards are in use.\n-- If SQL key words such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER, DROP, ESCAPE, UNION, GRANT, or REVOKE will never be valid, reject them. Use case-insensitive comparisons when searching for these. Bear in mind that some of these words, particularly Grant (as a person's name), could also be valid input.\n-- If there are range limits on the values that may be entered, enforce those limits.\n-- Institute procedures for inspection of programs for correct use of dynamic coding, by a party other than the developer.\n-- Conduct rigorous testing of program modules that use dynamic coding, searching for ways to subvert the intended use.\n-- Record the inspection and testing in the system documentation.\n-- Bear in mind that all this applies not only to screen input, but also to the values in an incoming message to a web service or to a stored procedure called by a software component that has not itself been hardened in these ways. Not only can the caller be subject to such vulnerabilities; it may itself be the attacker.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Install and configure SQL/Protect as documented here for the specific version being used: https://www.enterprisedb.com/docs/epas/latest/epas_security_guide/02_protecting_against_sql_injection_attacks/02_configuring_sql_protect/\n\nAlternatively, implement, document, and maintain another method of checking for the validity of inputs.",
        "reference": "800-53|SI-10,800-53r5|SI-10,CAT|II,CCI|CCI-001310,CN-L3|8.1.4.4(d),DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NESA|T7.3.2,NIAv2|SS6e,Rule-ID|SV-259265r938848_rule,STIG-ID|EPAS-00-006400,Vuln-ID|V-259265",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT * FROM sqlprotect.list_protected_users;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_31": {
        "description": "client_min_messages",
        "sql_request": "SHOW client_min_messages;",
        "sql_expect": "error"
    },
    "custom_item_32": {
        "description": "client_min_messages",
        "sql_request": "show log_file_mode",
        "sql_expect": "0600"
    },
    "custom_item_33": {
        "description": "Check if security labeling is required",
        "sql_request": "SELECT lower('@LABELING_REQUIRED@') as answer;",
        "sql_expect": "yes"
    },
    "custom_item_34": {
        "description": "EPAS-00-006900 - The EDB Postgres Advanced Server must associate organization-defined types of security labels having organization-defined security label values with information in storage.",
        "info": "Without the association of security labels to information, there is no basis for the to make security-related access-control decisions.\n\nSecurity labels are abstractions representing the basic properties or characteristics of an entity (e.g., subjects and objects) with respect to safeguarding information.\n\nThese labels are typically associated with internal data structures (e.g., tables, rows) within the database and are used to enable the implementation of access control and flow control policies, reflect special dissemination, handling or distribution instructions, or support other aspects of the information security policy.\n\nOne example includes marking data as classified or CUI. These security labels may be assigned manually or during data processing; either way, it is imperative these assignments are maintained while the data is in storage. If the security labels are lost when the data is stored, there is the risk of a data compromise.\n\nThe mechanism used to support security labeling may be a feature of the DBMS product, a third-party product, or custom application code.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "For information on creating row-level policies for all required tables with the DBMS_RLS package, refer to the documentation: https://www.enterprisedb.com/docs/epas/latest/reference/oracle_compatibility_reference/epas_compat_bip_guide/03_built-in_packages/14_dbms_rls/",
        "reference": "800-53|AC-16a.,800-53r5|AC-16a.,CAT|II,CCI|CCI-002262,CSF|PR.AC-4,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16a.,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-259269r938860_rule,STIG-ID|EPAS-00-006900,Vuln-ID|V-259269",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT object_owner, schema_name, object_name, policy_group, policy_name from ALL_POLICIES;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_35": {
        "description": "Check if security labeling is required",
        "sql_request": "SELECT lower('@LABELING_REQUIRED@') as answer;",
        "sql_expect": "yes"
    },
    "custom_item_36": {
        "description": "EPAS-00-007000 - The EDB Postgres Advanced Server must associate organization-defined types of security labels having organization-defined security label values with information in process.",
        "info": "Without the association of security labels to information, there is no basis for the DBMS to make security-related access-control decisions.\n\nSecurity labels are abstractions representing the basic properties or characteristics of an entity (e.g., subjects and objects) with respect to safeguarding information.\n\nThese labels are typically associated with internal data structures (e.g., tables, rows) within the database and are used to enable the implementation of access control and flow control policies, reflect special dissemination, handling or distribution instructions, or support other aspects of the information security policy.\n\nOne example includes marking data as classified or CUI. These security labels may be assigned manually or during data processing; either way, it is imperative these assignments are maintained while the data is in storage. If the security labels are lost when the data is stored, there is the risk of a data compromise.\n\nThe mechanism used to support security labeling may be a feature of the DBMS product, a third-party product, or custom application code.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "For more information on creating row-level policies for all required tables with the DBMS_RLS package, refer to the documentation: https://www.enterprisedb.com/docs/epas/latest/reference/oracle_compatibility_reference/epas_compat_bip_guide/03_built-in_packages/14_dbms_rls/",
        "reference": "800-53|AC-16a.,800-53r5|AC-16a.,CAT|II,CCI|CCI-002263,CSF|PR.AC-4,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16a.,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-259270r938863_rule,STIG-ID|EPAS-00-007000,Vuln-ID|V-259270",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT object_owner, schema_name, object_name, policy_group, policy_name from ALL_POLICIES;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_37": {
        "description": "Check if security labeling is required",
        "sql_request": "SELECT lower('@LABELING_REQUIRED@') as answer;",
        "sql_expect": "yes"
    },
    "custom_item_38": {
        "description": "EPAS-00-007100 - The EDB Postgres Advanced Server must associate organization-defined types of security labels having organization-defined security label values with information in transmission.",
        "info": "Without the association of security labels to information, there is no basis for the DBMS to make security-related access-control decisions.\n\nSecurity labels are abstractions representing the basic properties or characteristics of an entity (e.g., subjects and objects) with respect to safeguarding information.\n\nThese labels are typically associated with internal data structures (e.g., tables, rows) within the database and are used to enable the implementation of access control and flow control policies, reflect special dissemination, handling or distribution instructions, or support other aspects of the information security policy.\n\nOne example includes marking data as classified or CUI. These security labels may be assigned manually or during data processing, but, either way, it is imperative these assignments are maintained while the data is in storage. If the security labels are lost when the data is stored, there is the risk of a data compromise.\n\nThe mechanism used to support security labeling may be a feature of the DBMS product, a third-party product, or custom application code.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "For more information on creating row-level policies for all required tables with the DBMS_RLS package, refer to the documentation: https://www.enterprisedb.com/docs/epas/latest/reference/oracle_compatibility_reference/epas_compat_bip_guide/03_built-in_packages/14_dbms_rls/",
        "reference": "800-53|AC-16a.,800-53r5|AC-16a.,CAT|II,CCI|CCI-002264,CSF|PR.AC-4,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ISO/IEC-27001|A.8.2.1,ISO/IEC-27001|A.8.2.2,ITSG-33|AC-16a.,NESA|T1.3.2,NESA|T1.3.3,NIAv2|SS28,QCSC-v1|5.2.2,QCSC-v1|13.2,Rule-ID|SV-259271r938866_rule,STIG-ID|EPAS-00-007100,Vuln-ID|V-259271",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT object_owner, schema_name, object_name, policy_group, policy_name from ALL_POLICIES;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_39": {
        "description": "EPAS-00-007500 - Execution of software modules (to include stored procedures, functions, and triggers) with elevated privileges must be restricted to necessary cases only.",
        "info": "In certain situations, to provide required functionality, a DBMS needs to execute internal logic (stored procedures, functions, triggers, etc.) and/or external code modules with elevated privileges. However, if the privileges required for execution are at a higher level than the privileges assigned to organizational users invoking the functionality applications/programs, those users are indirectly provided with greater privileges than assigned by organizations.\n\nPrivilege elevation must be utilized only where necessary and protected from misuse.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Determine where, when, how, and by what principals/subjects elevated privilege is needed.\n\nModify the system and the application(s) using the database to ensure privilege elevation is used only as required.\n\nTo alter a function to use SECURITY INVOKER instead of SECURITY DEFINER, execute the following SQL as the 'enterprisedb' user:\n\nALTER FUNCTIONSECURITY INVOKER;",
        "reference": "800-171|3.1.5,800-53|AC-6(8),800-53r5|AC-6(8),CAT|II,CCI|CCI-002233,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-259274r938875_rule,STIG-ID|EPAS-00-007500,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-259274",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "select proname from pg_proc where prosecdef = true;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_40": {
        "description": "EPAS-00-007510 - Execution of software modules (to include stored procedures, functions, and triggers) with elevated privileges must be restricted to necessary cases only.",
        "info": "In certain situations, to provide required functionality, a DBMS needs to execute internal logic (stored procedures, functions, triggers, etc.) and/or external code modules with elevated privileges. However, if the privileges required for execution are at a higher level than the privileges assigned to organizational users invoking the functionality applications/programs, those users are indirectly provided with greater privileges than assigned by organizations.\n\nPrivilege elevation must be utilized only where necessary and protected from misuse.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Determine where, when, how, and by what principals/subjects elevated privilege is needed.\n\nModify the system and the application(s) using the database to ensure privilege elevation is used only as required.\n\nTo alter a user to not allow bypassing RLS, execute the following SQL:\n\nALTER USERNOBYPASSRLS;",
        "reference": "800-171|3.1.5,800-53|AC-6(8),800-53r5|AC-6(8),CAT|II,CCI|CCI-002233,CN-L3|7.1.3.2(b),CN-L3|7.1.3.2(g),CN-L3|8.1.4.2(d),CN-L3|8.1.10.6(a),CSF|PR.AC-4,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(1),ITSG-33|AC-6,NESA|T5.1.1,NESA|T5.2.2,NESA|T5.4.1,NESA|T5.4.4,NESA|T5.4.5,NESA|T5.5.4,NESA|T5.6.1,NESA|T7.5.3,NIAv2|AM1,NIAv2|AM23f,NIAv2|SS13c,NIAv2|SS15c,PCI-DSSv3.2.1|7.1.2,PCI-DSSv4.0|7.2.1,PCI-DSSv4.0|7.2.2,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-259275r938878_rule,STIG-ID|EPAS-00-007510,SWIFT-CSCv1|5.1,TBA-FIISB|31.4.2,TBA-FIISB|31.4.3,Vuln-ID|V-259275",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "select rolname from pg_roles where rolbypassrls = true;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_41": {
        "description": "EPAS-00-008200 - The EDB Postgres Advanced Server must record time stamps in audit records and application data that can be mapped to Coordinated Universal Time (UTC, formerly GMT).",
        "info": "If time stamps are not consistently applied and there is no common time reference, it is difficult to perform forensic analysis.\n\nTime stamps generated by the DBMS must include date and time. Time is commonly expressed in Coordinated Universal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or local time with an offset from UTC.",
        "solution": "As the 'enterprisedb' operating system user, run the following to set the log_timezone parameter:\n\n> psql edb -c 'ALTER SYSTEM SET log_timezone = 'UTC''\n\nNext, reload the parameter file:\n\npsql edb -c 'SELECT pg_reload_conf()'\n\nConfirm the new value:\n\npsql edb -c 'SHOW log_timezone'",
        "reference": "800-171|3.3.7,800-53|AU-8b.,800-53r5|AU-8b.,CAT|II,CCI|CCI-001890,CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,NESA|T3.6.7,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259281r938896_rule,STIG-ID|EPAS-00-008200,TBA-FIISB|37.4,Vuln-ID|V-259281",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW log_timezone;",
        "sql_expect": "UTC"
    },
    "custom_item_42": {
        "description": "EPAS-00-008300 - The EDB Postgres Advanced Server must generate time stamps for audit records and application data, with a minimum granularity of one second.",
        "info": "Without sufficient granularity of time stamps, it is not possible to adequately determine the chronological order of records.\n\nTime stamps generated by the DBMS must include date and time. Granularity of time measurements refers to the precision available in time stamp values. Granularity coarser than one second is not sufficient for audit trail purposes. Time stamp values are typically presented with three or more decimal places of seconds; however, the actual granularity may be coarser than the apparent precision.\n\nSome DBMS products offer a data type called TIMESTAMP that is not a representation of date and time. Rather, it is a database state counter and does not correspond to calendar and clock time. This requirement does not refer to that meaning of TIMESTAMP.",
        "solution": "As the 'enterprisedb' operating system user, run the following to set the log_line_prefix parameter to '%m' (Timestamps in milliseconds)\n\n> psql edb -c 'ALTER SYSTEM SET log_line_prefix = '%m''\n\nNext, reload the parameter file:\n\n> psql edb -c 'SELECT pg_reload_conf()'\n\nConfirm the new value:\n\n> psql edb -c 'SHOW log_line_prefix'",
        "reference": "800-171|3.3.7,800-53|AU-8b.,800-53r5|AU-8b.,CAT|II,CCI|CCI-001889,CN-L3|8.1.4.3(b),CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ITSG-33|AU-8,NESA|T3.6.7,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259282r938899_rule,STIG-ID|EPAS-00-008300,TBA-FIISB|37.4,Vuln-ID|V-259282",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW log_line_prefix;",
        "sql_expect": "%m"
    },
    "custom_item_43": {
        "description": "EPAS-00-008600 - The EDB Postgres Advanced Server must produce audit records of its enforcement of access restrictions associated with changes to the configuration of the EDB Postgres Advanced Server or database(s).",
        "info": "Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions.\n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.",
        "solution": "Execute the following SQL as 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.4.5,800-53|CM-5(1),800-53r5|CM-5(1),CAT|II,CCI|CCI-001814,CSF|PR.IP-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|CM-5(1),NESA|T5.1.1,NESA|T5.6.1,NESA|T7.5.3,QCSC-v1|7.2,Rule-ID|SV-259285r938908_rule,STIG-ID|EPAS-00-008600,Vuln-ID|V-259285",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_44": {
        "description": "EPAS-00-009000 - The DBMS must use NSA-approved cryptography to protect classified information in accordance with the requirements of the data owner.",
        "info": "Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.\n\nIt is the responsibility of the data owner to assess the cryptography requirements in light of applicable federal laws, Executive Orders, directives, policies, regulations, and standards.\n\nNSA-approved cryptography for classified networks is hardware based. This requirement addresses the compatibility of a DBMS with the encryption devices.",
        "solution": "As the 'enterprisedb' operating system user, run the following to set the ssl parameter to 'on':\n\n> psql edb -c 'ALTER SYSTEM SET ssl = 'on''\n\nNext, reload the parameter file:\n\npsql edb -c 'SELECT pg_reload_conf()'\n\nNow confirm the new value:\n\npsql edb -c 'SHOW ssl'",
        "reference": "800-171|3.13.11,800-53|SC-13,800-53r5|SC-13,CAT|II,CCI|CCI-002450,CSF|PR.DS-5,DISA_Benchmark|EPAS_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(a)(2)(iv),HIPAA|164.312(e)(2)(ii),ISO/IEC-27001|A.10.1.1,ITSG-33|SC-13,ITSG-33|SC-13a.,NESA|M5.2.6,NESA|T7.4.1,NIAv2|CY3,NIAv2|CY4,NIAv2|CY5b,NIAv2|CY5c,NIAv2|CY5d,NIAv2|CY7,NIAv2|NS5e,QCSC-v1|6.2,Rule-ID|SV-259288r938917_rule,STIG-ID|EPAS-00-009000,Vuln-ID|V-259288",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW ssl;",
        "sql_expect": "on"
    },
    "custom_item_45": {
        "description": "EPAS-00-009600 - The EDB Postgres Advanced Server must maintain the confidentiality and integrity of information during reception.",
        "info": "Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nThis requirement applies only to those applications that are either distributed or can allow access to data nonlocally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process.\n\nWhen receiving data, the DBMS, associated applications, and infrastructure must leverage protection mechanisms.\n\nEDB Postgres Advanced Server provides native support for using SSL connections to encrypt client/server communications. To enable the use of SSL, the postgres 'ssl' configuration parameter must be set to 'on', and the database instance needs to be configured to use a valid server certificate and private key installed on the server. With SSL enabled, connections made to the database server will default to being encrypted. However, it is possible for clients to override the default and attempt to establish an unencrypted connection. To prevent connections made from nonlocal hosts from being unencrypted, the postgres host-based authentication settings should be configured to only allow hostssl (i.e., encrypted) connections. The hostssl connections can be further configured to require that the client present a valid (trusted) SSL certificate for a connection.",
        "solution": "To configure EDB Postgres Advanced Server to use SSL, open the 'postgresql.conf' file in an editor. The default location for the postgresql.conf file is in the postgresql data directory (PGDATA). The location of the postgresql.conf for a running EDB Postgres instance can be found using the following command run from a command prompt:\n\n> psql -d-U-c 'SHOW config_file'\n\nWhereis any database in the EDB postgres instance andis a database superuser. By default, a database named 'edb' and a superuser named 'enterprisedb' are installed\nwith EDB Postgres Advanced Server (EPAS).\n\nIn the postgresql.conf file, set the 'ssl' parameter as follows:\n\nssl = on\n\nEnsure the parameter is uncommented.\n\nIn order to start an EDB Postgres Advanced Server instance in SSL mode, files containing the server certificate and private key must exist. By default, these files are expected to exist in the Postgres data directory and are expected to be named server.crt and server.key, respectively. Update the ssl_cert_file and ssl_cert_key parameters in the postgresql.conf file if the files are placed in a different location or are named differently.\n\nNote that changes to the SSL parameter setting and any of the other SSL- related parameters require a database server restart to be put the changes into effect.\n\nTo restart the database on a systemd server, issue the following command as the root user or a user with sudo access:\n\n> systemctl restart edb-as-Whereis the major version of the EDB Postgres Advanced Server instance (e.g., 15).\n\nTo restart the database, issue the following command as the root user or a user with sudo access:\n\n> systemctl restart edb-as-Whereis the major version of the EDB Postgres Advanced Server instance (e.g., 14).\n\nAfter verifying that SSL is enabled for the database, open the pg_hba.conf file in an editor to configure the host-based authentication settings. Note that the default location for the pg_hba.conf file is in the postgresql data directory (PGDATA). The location of the pg_hba.conf file for a running EDB postgres instance can be found using the following command run from a command prompt:\n\n> psql -d-U-c 'SHOW hba_file'\n\nWhereis any database in the EDB postgres instance andis a database superuser. By default, a database named 'edb' and a superuser named 'enterprisedb' are installed with EDB Postgres Advanced Server (EPAS).\n\nObtain approval and document any uncommented entries with corresponding justification that are not of type hostssl and do not include the 'clientcert=1' option.\n\nFor any entries that are not of type hostssl authentication with the 'clientcert=1' option and not documented and approved, change the 'TYPE' column to 'hostssl' and add the 'clientcert=1' authentication method option.\n\nNote that changes to the host-based authentication settings require a database reload in order to apply the updated settings.",
        "reference": "800-171|3.13.8,800-53|SC-8(2),800-53r5|SC-8(2),CAT|II,CCI|CCI-002422,CN-L3|8.1.2.2(a),CN-L3|8.1.2.2(b),CN-L3|8.1.4.7(a),CN-L3|8.1.4.8(a),CN-L3|8.2.4.5(c),CN-L3|8.2.4.5(d),CN-L3|8.5.2.2,CSF|PR.DS-2,CSF|PR.DS-5,DISA_Benchmark|EPAS_STIG,GDPR|32.1.a,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(e)(1),HIPAA|164.312(e)(2)(i),ITSG-33|SC-8(2),ITSG-33|SC-9(2),NESA|T4.3.1,NESA|T4.3.2,NESA|T4.5.1,NESA|T4.5.2,NESA|T7.3.3,NESA|T7.4.1,NIAv2|IE8,NIAv2|IE9,NIAv2|IE12,NIAv2|NS29,NIAv2|SS24,PCI-DSSv3.2.1|2.3,PCI-DSSv3.2.1|4.1,PCI-DSSv4.0|2.2.7,PCI-DSSv4.0|4.2.1,QCSC-v1|5.2.2,QCSC-v1|6.2,Rule-ID|SV-259293r938932_rule,STIG-ID|EPAS-00-009600,SWIFT-CSCv1|2.1,Vuln-ID|V-259293",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW ssl;",
        "sql_expect": "on"
    },
    "custom_item_46": {
        "description": "Check if sqlprotect.list_protected_users table exists",
        "sql_request": "SELECT table_schema, table_name FROM information_schema.tables WHERE lower(table_schema) = 'sqlprotect' and lower(table_name) = 'list_protected_users';",
        "sql_expect": "sqlprotect"
    },
    "custom_item_47": {
        "description": "EPAS-00-009700 - When invalid inputs are received, the EDB Postgres Advanced Server must behave in a predictable and documented manner that reflects organizational and system objectives.",
        "info": "A common vulnerability is unplanned behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state.\n\nThe behavior will be derived from the organizational and system requirements and includes, but is not limited to, notification of the appropriate personnel, creating an audit record, and rejecting invalid input.\n\nThis calls for inspection of application source code, which will require collaboration with the application developers. It is recognized that in many cases, the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue has been addressed, and must document what has been discovered.\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Install and configure SQL/Protect as documented here for the specific version being used: https://www.enterprisedb.com/docs/epas/latest/epas_security_guide/02_protecting_against_sql_injection_attacks/02_configuring_sql_protect/\n\nAlternatively, implement, document, and maintain another method of checking for the validity of inputs.",
        "reference": "800-53|SI-10(3),800-53r5|SI-10(3),CAT|II,CCI|CCI-002754,CN-L3|8.1.4.4(d),DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-10,ITSG-33|SI-10a.,NESA|T7.3.1,NIAv2|SS6e,Rule-ID|SV-259294r938935_rule,STIG-ID|EPAS-00-009700,Vuln-ID|V-259294",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SELECT * FROM sqlprotect.list_protected_users;",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_48": {
        "description": "EPAS-00-009900 - Security-relevant software updates to the EDB Postgres Advanced Server must be installed within the time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).",
        "info": "Security flaws with software applications, including database management systems, are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.\n\nOrganization-defined time periods for updating security-relevant software may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw).\n\nThis requirement will apply to software patch management solutions that are used to install patches across the enclave and also to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality, will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period utilized must be a configurable parameter. Timeframes for application of security-relevant software updates may be dependent upon the Information Assurance Vulnerability Management (IAVM) process.\n\nThe application will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. The specific time period will be defined by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).\n\nNOTE: Nessus has provided the target output to assist in reviewing the benchmark to ensure target compliance.",
        "solution": "Institute and adhere to policies and procedures to ensure that patches are consistently obtained from EnterpriseDB and applied to the DBMS within the time allowed.\n\nEnsure that a monitored email address is registered as a user on the EDB support portal and is receiving technical alerts.",
        "reference": "800-171|3.14.1,800-53|SI-2c.,800-53r5|SI-2c.,CAT|II,CCI|CCI-002605,CN-L3|8.1.4.4(e),CN-L3|8.1.10.5(a),CN-L3|8.1.10.5(b),CN-L3|8.5.4.1(b),CN-L3|8.5.4.1(d),CN-L3|8.5.4.1(e),CSF|ID.RA-1,CSF|PR.IP-12,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),ITSG-33|SI-2,NESA|T7.6.2,NESA|T7.7.1,NIAv2|AM38,NIAv2|AM39,NIAv2|SS14b,PCI-DSSv3.2.1|6.2,PCI-DSSv4.0|6.3,PCI-DSSv4.0|6.3.3,QCSC-v1|11.2,Rule-ID|SV-259295r938938_rule,STIG-ID|EPAS-00-009900,SWIFT-CSCv1|2.2,Vuln-ID|V-259295",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "select version();",
        "sql_expect": "^Manual Review Required$"
    },
    "custom_item_49": {
        "description": "EPAS-00-010000 - The EDB Postgres Advanced Server must generate audit records when security objects are accessed.",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via specialized security functionality.\n\nIn an SQL environment, types of access include, but are not necessarily limited to:\n\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259296r938941_rule,STIG-ID|EPAS-00-010000,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259296",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_50": {
        "description": "EPAS-00-010100 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to access security objects occur.",
        "info": "Changes to the security configuration must be tracked.\n\nThis requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via specialized security functionality.\n\nIn an SQL environment, types of access include, but are not necessarily limited to:\n\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259297r938944_rule,STIG-ID|EPAS-00-010100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259297",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_51": {
        "description": "EPAS-00-010200 - The EDB Postgres Advanced Server must generate audit records when categories of information (e.g., classification levels/security levels) are accessed.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259298r938947_rule,STIG-ID|EPAS-00-010200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259298",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_52": {
        "description": "EPAS-00-010300 - Audit records must be generated when unsuccessful attempts to access categorized information (e.g., classification levels/security levels) occur.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259299r938950_rule,STIG-ID|EPAS-00-010300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259299",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_53": {
        "description": "EPAS-00-010400 - The EDB Postgres Advanced Server must generate audit records when privileges/permissions are added.",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of individuals' and groups' privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn an SQL environment, adding permissions is typically done via the GRANT command, or, in the negative, the REVOKE command.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259300r938953_rule,STIG-ID|EPAS-00-010400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259300",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_54": {
        "description": "EPAS-00-010500 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to add privileges/permissions occur.",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict individuals' and groups' privileges could go undetected.\n\nIn an SQL environment, adding permissions is typically done via the GRANT command, or, in the negative, the REVOKE command.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259301r938956_rule,STIG-ID|EPAS-00-010500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259301",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_55": {
        "description": "EPAS-00-010600 - The EDB Postgres Advanced Server must generate audit records when privileges/permissions are modified.",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of individuals' and groups' privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn an SQL environment, modifying permissions is typically done via the GRANT and REVOKE commands.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259302r938959_rule,STIG-ID|EPAS-00-010600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259302",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_56": {
        "description": "EPAS-00-010700 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to modify privileges/permissions occur.",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict individuals' and groups' privileges could go undetected.\n\nIn an SQL environment, modifying permissions is typically done via the GRANT and REVOKE commands.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259303r938962_rule,STIG-ID|EPAS-00-010700,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259303",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_57": {
        "description": "EPAS-00-010800 - The EDB Postgres Advanced Server must generate audit records when security objects are modified.",
        "info": "Changes in the database objects (tables, views, procedures, and functions) that record and control permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized changes to the security subsystem could go undetected. The database could be severely compromised or rendered inoperative.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259304r938965_rule,STIG-ID|EPAS-00-010800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259304",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_58": {
        "description": "EPAS-00-010900 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to modify security objects occur.",
        "info": "Changes in the database objects (tables, views, procedures, functions) that record and control permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized changes to the security subsystem could go undetected. The database could be severely compromised or rendered inoperative.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259305r938968_rule,STIG-ID|EPAS-00-010900,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259305",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_59": {
        "description": "EPAS-00-011000 - Audit records must be generated when categorized information (e.g., classification levels/security levels) is created.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259306r938971_rule,STIG-ID|EPAS-00-011000,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259306",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_60": {
        "description": "EPAS-00-011050 - Audit records must be generated when categorized information (e.g., classification levels/security levels) is modified.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259307r938974_rule,STIG-ID|EPAS-00-011050,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259307",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_61": {
        "description": "EPAS-00-011100 - Audit records must be generated when unsuccessful attempts to create categorized information (e.g., classification levels/security levels) occur.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259308r938977_rule,STIG-ID|EPAS-00-011100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259308",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_62": {
        "description": "EPAS-00-011150 - Audit records must be generated when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259309r938980_rule,STIG-ID|EPAS-00-011150,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259309",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_63": {
        "description": "EPAS-00-011200 - The EDB Postgres Advanced Server must generate audit records when privileges/permissions are deleted.",
        "info": "Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of individuals' and groups' privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.\n\nIn an SQL environment, deleting permissions is typically done via the REVOKE command.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259310r938983_rule,STIG-ID|EPAS-00-011200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259310",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_64": {
        "description": "EPAS-00-011300 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to delete privileges/permissions occur.",
        "info": "Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict individuals' and groups' privileges could go undetected.\n\nIn an SQL environment, deleting permissions is typically done via the REVOKE command.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259311r938986_rule,STIG-ID|EPAS-00-011300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259311",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_65": {
        "description": "EPAS-00-011400 - The EDB Postgres Advanced Server must generate audit records when security objects are deleted.",
        "info": "The removal of security objects from the database/DBMS would seriously degrade a system's information assurance posture. If such an event occurs, it must be logged.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259312r938989_rule,STIG-ID|EPAS-00-011400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259312",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_66": {
        "description": "EPAS-00-011500 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to delete security objects occur.",
        "info": "The removal of security objects from the database/DBMS would seriously degrade a system's information assurance posture. If such an action is attempted, it must be logged.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259313r938992_rule,STIG-ID|EPAS-00-011500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259313",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_67": {
        "description": "EPAS-00-011600 - Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259314r938995_rule,STIG-ID|EPAS-00-011600,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259314",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_68": {
        "description": "EPAS-00-011700 - Audit records must be generated when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur.",
        "info": "Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.\n\nFor detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259315r938998_rule,STIG-ID|EPAS-00-011700,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259315",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_69": {
        "description": "EPAS-00-011800 - The EDB Postgres Advanced Server must generate audit records when successful logons or connections occur.",
        "info": "For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to the DBMS.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_connect = 'all''\n> psql edb -c 'ALTER SYSTEM SET edb_audit_disconnect = 'all''\n>psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259316r939001_rule,STIG-ID|EPAS-00-011800,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259316",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_connect;",
        "sql_expect": "all"
    },
    "custom_item_70": {
        "description": "EPAS-00-011900 - The EDB Postgres Advanced Server must generate audit records when unsuccessful logons or connection attempts occur.",
        "info": "For completeness of forensic analysis, it is necessary to track failed attempts to log on to the DBMS. While positive identification may not be possible in a case of failed authentication, as much information as possible about the incident must be captured.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_connect = 'all''\n> psql edb -c 'ALTER SYSTEM SET edb_audit_disconnect = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259317r939004_rule,STIG-ID|EPAS-00-011900,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259317",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_connect;",
        "sql_expect": "all"
    },
    "custom_item_71": {
        "description": "EPAS-00-012000 - The EDB Postgres Advanced Server must generate audit records for all privileged activities or other system-level access.",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. In an SQL environment, it encompasses, but is not necessarily limited to:\n\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\n\nThere may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:\n\nTRUNCATE TABLE;\nDELETE, or\nDELETE affecting more than n rows, for some n, or\nDELETE without a WHERE clause;\n\nUPDATE or\nUPDATE affecting more than n rows, for some n, or\nUPDATE without a WHERE clause;\n\nany SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.\n\nDepending on the capabilities of the DBMS and the design of the database and associated applications, audit logging may be achieved by means of DBMS auditing features, database triggers, other mechanisms, or a combination of these.\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259318r939007_rule,STIG-ID|EPAS-00-012000,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259318",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_72": {
        "description": "EPAS-00-012100 - The EDB Postgres Advanced Server must generate audit records when unsuccessful attempts to execute privileged activities or other system-level access occur.",
        "info": "Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nSystem documentation should include a definition of the functionality considered privileged.\n\nA privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. In an SQL environment, it encompasses, but is not necessarily limited to:\nCREATE\nALTER\nDROP\nGRANT\nREVOKE\n\nNote that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259319r939010_rule,STIG-ID|EPAS-00-012100,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259319",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_73": {
        "description": "EPAS-00-012200 - The EDB Postgres Advanced Server must generate audit records showing starting and ending time for user access to the database(s).",
        "info": "For completeness of forensic analysis, it is necessary to know how long a user's (or other principal's) connection to the DBMS lasts. This can be achieved by recording disconnections, in addition to logons/connections, in the audit logs.\n\nDisconnection may be initiated by the user or forced by the system (as in a timeout) or result from a system or network failure. To the greatest extent possible, all disconnections must be logged.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_connect = 'all''\n> psql edb -c 'ALTER SYSTEM SET edb_audit_disconnect = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259320r939013_rule,STIG-ID|EPAS-00-012200,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259320",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_connect;",
        "sql_expect": "all"
    },
    "custom_item_74": {
        "description": "EPAS-00-012300 - The EDB Postgres Advanced Server must generate audit records when concurrent logons/connections by the same user from different workstations occur.",
        "info": "For completeness of forensic analysis, it is necessary to track who logs on to the DBMS.\n\nConcurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.\n\nIf multiple concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_connect = 'all''\n> psql edb -c 'ALTER SYSTEM SET edb_audit_disconnect = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259321r939016_rule,STIG-ID|EPAS-00-012300,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259321",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_connect;",
        "sql_expect": "all"
    },
    "custom_item_75": {
        "description": "EPAS-00-012400 - The EDB Postgres Advanced Server must be able to generate audit records when successful accesses to objects occur.",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one.\n\nIn an SQL environment, types of access include, but are not necessarily limited to:\n\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259322r939019_rule,STIG-ID|EPAS-00-012400,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259322",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_76": {
        "description": "EPAS-00-012500 - The EDB Postgres Advanced Server must generate audit records when unsuccessful accesses to objects occur.",
        "info": "Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.\n\nIn an SQL environment, types of access include, but are not necessarily limited to:\n\nSELECT\nINSERT\nUPDATE\nDELETE\nEXECUTE\n\nTo aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.",
        "solution": "Execute the following SQL as the 'enterprisedb' operating system user:\n\n> psql edb -c 'ALTER SYSTEM SET edb_audit_statement = 'all''\n> psql edb -c 'SELECT pg_reload_conf()'\n\nor\n\nUpdate the system documentation to note the organizationally approved setting and corresponding justification of the setting for this requirement.",
        "reference": "800-171|3.3.1,800-171|3.3.2,800-53|AU-12c.,800-53r5|AU-12c.,CAT|II,CCI|CCI-000172,CN-L3|7.1.3.3(a),CN-L3|7.1.3.3(b),CN-L3|7.1.3.3(c),CN-L3|8.1.3.5(a),CN-L3|8.1.3.5(b),CN-L3|8.1.4.3(a),CSF|DE.CM-1,CSF|DE.CM-3,CSF|DE.CM-7,CSF|PR.PT-1,DISA_Benchmark|EPAS_STIG,GDPR|32.1.b,HIPAA|164.306(a)(1),HIPAA|164.312(b),ISO/IEC-27001|A.12.4.1,ITSG-33|AU-12c.,NESA|T3.6.2,NESA|T3.6.5,NESA|T3.6.6,NIAv2|SM8,PCI-DSSv3.2.1|10.1,QCSC-v1|3.2,QCSC-v1|6.2,QCSC-v1|8.2.1,QCSC-v1|13.2,Rule-ID|SV-259323r939022_rule,STIG-ID|EPAS-00-012500,SWIFT-CSCv1|6.4,TBA-FIISB|45.1.1,Vuln-ID|V-259323",
        "see_also": "https://dl.dod.cyber.mil/wp-content/uploads/stigs/zip/U_EPAS_V1R1_STIG.zip",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_77": {
        "description": "edb_audit_statement",
        "sql_request": "SHOW edb_audit_statement;",
        "sql_expect": "all"
    },
    "custom_item_78": {
        "description": "edb_audit_connect",
        "sql_request": "SHOW edb_audit_connect;",
        "sql_expect": "all"
    },
    "custom_item_79": {
        "description": "edb_audit_disconnect",
        "sql_request": "SHOW edb_audit_disconnect;",
        "sql_expect": "all"
    }
}